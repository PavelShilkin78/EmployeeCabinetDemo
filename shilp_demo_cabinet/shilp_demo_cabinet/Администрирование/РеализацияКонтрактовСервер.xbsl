импорт ВладельцыКабинетов
импорт Криптография
импорт ЛичныеКабинетыПользователей
импорт ОбщиеСтандартные
импорт Уведомления
импорт ФизическиеЛица

// Контракт НастройкиЭПОбработчикСобытий

@ВПроекте
@Реализация
метод СохранениеНастроекЭП()
    ЗапланироватьУведомленияОбОтсутствииЭлектроннойПодписи()
;

// Конец НастройкиЭПОбработчикСобытий

метод ЗапланироватьУведомленияОбОтсутствииЭлектроннойПодписи()
    пер Настройки = Криптография.НастройкиЭлектронныхПодписей()
    если не Настройки.НапоминатьОбОтсутствииПодписи 
        или Настройки.ПериодичностьНапоминанияОбОтсутствииПодписи == 0
        возврат
    ;
    пер ПериодВыполнения = Длительность.ИзДней(Настройки.ПериодичностьНапоминанияОбОтсутствииПодписи)
    пер ВремяНачала: Момент = МенеджерДат.КонецДня(Момент.Сейчас())
    ВремяНачала = МенеджерДат.ДобавитьМинуты(ВремяНачала, 300)
    пер Расписание = [Расписание.Периодическое(ПериодВыполнения, Ложь, ВремяНачала)]
    пер КлючЗадания = "УведомленияОбОтсутствииЭлектроннойПодписи"
    МенеджерЗаданий.ПроверитьАвтозапускЗапланированныхЗаданийВключен()
    если ЗапланированныеЗадания.ПолучитьПоКлючу(КлючЗадания) == Неопределено
        ЗапланированныеЗадания.Создать(&ОтправитьУведомленияОбОтсутствииЭлектроннойПодписи)
            .Настроить(Ключ = КлючЗадания, Расписание= Расписание)
            .Запланировать()
    иначе
        ЗапланированныеЗадания.Изменить(КлючЗадания)
            ?.Настроить(Расписание = Расписание)
            .Запланировать()
    ;
;

метод ОтправитьУведомленияОбОтсутствииЭлектроннойПодписи()
    пер Настройки = Криптография.НастройкиЭлектронныхПодписей()
    если не Настройки.НапоминатьОбОтсутствииПодписи
        возврат
    ;
    
    пер ТекущаяДата = МенеджерДат.НачалоДня(Момент.Сейчас())
    знч Запрос = Запрос{
        Выбрать 
            ЛичныеКабинеты.ФизическоеЛицо Как ФизическоеЛицо,
            ИнформацияОСертификатах.ДатаНачалаДействия.ЗаменитьNull(Неопределено) Как ДатаНачала,
            ИнформацияОСертификатах.ДатаОкончанияДействия.ЗаменитьNull(Неопределено) Как ДатаОкончания
        Из 
            ЛичныеКабинеты Как ЛичныеКабинеты
            Левое Соединение ИнформацияОСертификатах Как ИнформацияОСертификатах
            По ЛичныеКабинеты.ФизическоеЛицо == ИнформацияОСертификатах.Владелец
            И ИнформацияОСертификатах.Текущий
            И ИнформацияОСертификатах.МоментОтзываСертификата == Неопределено
        Где
            ЛичныеКабинеты.Состояние == СостоянияЛичногоКабинета.Активирован}
    
    исп РезультатЗапроса = Запрос.Выполнить() 
    для РезультатЗапросаСтрока из РезультатЗапроса
        если РезультатЗапросаСтрока.ДатаОкончания != Неопределено и РезультатЗапросаСтрока.ДатаОкончания >= ТекущаяДата
            продолжить
        ;
        если не ВладельцыКабинетов.ФизическоеЛицоИспользуетКэдо(РезультатЗапросаСтрока.ФизическоеЛицо)
            продолжить    
        ;
        пер Тема: Строка
        пер ТекстСообщения: Строка
        если РезультатЗапросаСтрока.ДатаОкончания == Неопределено
            Тема = "Отсутствует действующая электронная подпись в кабинете сотрудника"
            ТекстСообщения = "Отсутствует действующая электронная подпись в кабинете сотрудника. Создать электронную подпись можно в разделе Профиль личного кабинета."
        иначе
            Тема = "Закончился срок действия электронной подписи в кабинете сотрудника"
            ТекстСообщения = "Закончился срок действия электронной подписи в кабинете сотрудника. Создать электронную подпись можно в разделе Профиль личного кабинета."
        ;
        пер ДанныеУведомления = новый УведомленияСервер.ДанныеУведомления(Уведомления.ВидыУведомлений.ПерсональнаяИнформация, РезультатЗапросаСтрока.ФизическоеЛицо) 
        ДанныеУведомления.КомандаНавигации = "НавигацияНастройки"
        пер ТекстыУведомлений = новый УведомленияСервер.ТекстыСообщений(Тема, ТекстСообщения, ТекстСообщения, ТекстСообщения)
        УведомленияСервер.ОтправитьУведомление(РезультатЗапросаСтрока.ФизическоеЛицо, ТекстыУведомлений, ДанныеУведомления)
    ;
;


//Контракт ЛичныеКабинетыОбработчикСобытий

@ВПроекте
@Реализация
метод ПослеАктивацииЛичногоКабинета(ФизическоеЛицо: ФизическиеЛица.Ссылка)
;

@ВПроекте
@Реализация
метод ПослеСозданияЛичногоКабинетаАдминистратора(ДанныеСоздания: ЛичныеКабинетыПользователей.ДанныеСозданияЛичногоКабинета)
    ЛичныеКабинетыПользователей.ОтправитьУведомлениеОПодключенииКСервису(ДанныеСоздания.ДанныеФизическогоЛица, ДанныеСоздания.ЛогинПользователя)
;

//Конец ЛичныеКабинетыОбработчикСобытий