импорт ВладельцыКабинетов
импорт ОбщиеСтандартные
импорт Приложение
импорт ПриложениеНастройки
импорт СтандартноеПриложение
импорт Уведомления
импорт ФизическиеЛица

@Обработчик
метод ПослеСоздания()
    ЗаполнитьДанныеКомпонента()
    ПроверкаПройдена = ПроверитьЗаполнение()
;
    
метод ГруппаНастроекПриложенияОриентация(): ОриентацияСодержимого 
    возврат КлиентскоеУстройство.ВидИнтерфейса == ВидИнтерфейса.Компьютер 
        ? ОриентацияСодержимого.Горизонтальная : ОриентацияСодержимого.Вертикальная
;

метод ГруппаНастроекПриложенияВидимость(): Булево
    возврат СтандартноеПриложение.ПараметрыСеанса().ТекущийПользовательИмеетПолныеПрава
        и ДанныеКомпонента.РежимРаботы == РежимыРаботы.Локальный
;

метод ПодтверждениеКастомизацииВидимость(): Булево
    возврат ДанныеКомпонента.СтатусКастомизации == СтатусыКастомизации.Отключена
        и КонтактныеДанныеОтветственногоЗаполнены() 
;    

метод ДанныеДляКастомизацииВидимость(): Булево
    возврат ДанныеКомпонента.СтатусКастомизации == СтатусыКастомизации.Отключена
;    

метод ГруппаВозможностьДоработкиВидимость(): Булево
    возврат СтандартноеПриложение.ПараметрыСеанса().ТекущийПользовательИмеетПолныеПрава
        или ВладельцыКабинетов.ПараметрыСеанса().ТекущийПользовательАдминистраторАбонента
;

метод НастройкиПриложенияПриНажатии(Источник: Кнопка, Событие: СобытиеПриНажатии)
    знч Форма = новый ФормаНастроекЛокальногоПриложения()
    Форма.ОткрытьВМодальномОкне(Истина)
;

метод ФайлНастроекПодключенияПриНажатии(Источник: Кнопка, Событие: СобытиеПриНажатии)
    ВыгрузкаФайлов.НачатьВыгрузку(ДанныеФайлаНастроек(), "Настройки подключения кадровой системы.json")
;

метод ТекущийСтатус(): Строка
    выбор ДанныеКомпонента.СтатусКастомизации
    когда Отключена
        знч ТекстПроОбновление = ДанныеКомпонента.РежимРаботы == РежимыРаботы.Облачный ? "Приложение автоматически обновляется оператором сервиса" 
            : "Приложение может автоматически обновляться из поставки вендора"
        возврат "Для вашего приложения не включена возможность доработки, оно соответствует проекту, выпущенному поставщиком (${Проект.Представление}, версия ${Проект.Версия}). %ТекстПроОбновление."
    когда Включена
        знч ТекстПроОбновление = ДанныеКомпонента.РежимРаботы == РежимыРаботы.Облачный ? "Приложение не может автоматически обновляться оператором сервиса" : ""
        возврат "Ваше приложение может дорабатываться вашей организацией или сторонними организациями, его проект может не соответствовать проекту поставщика. %ТекстПроОбновление. Вы можете самостоятельно выполнять обновление версий приложения."
    когда ОтправленЗапрос
        возврат "Отправлен запрос на включение возможности доработки, после его обработки на адрес ${ДанныеКомпонента.ЭлектроннаяПочтаОтветственного} придет письмо с данными для подключения к кастомизации и инструкцией о дальнейших действиях."
    иначе
        возврат ""
    ;
;

метод Предупреждение(): Строка
    знч ТекстПроОбновление = ДанныеКомпонента.РежимРаботы == РежимыРаботы.Облачный 
        ?  "оператор сервиса ${Проект.Представление} прекращает обновление приложения. Вам потребуется самостоятельно выполнять объединение своих доработок с изменениями, содержащимися в очередной версии проекта ${Проект.Представление} от вендора и обновлять своё приложение."
        : "вам потребуется самостоятельно выполнять объединение своих доработок с изменениями, содержащимися в очередной версии проекта ${Проект.Представление} от вендора и обновлять своё приложение."
    возврат 
        "Перед включением возможности доработки приложения следует учитывать, что после выполнения этого действия %ТекстПроОбновление"
;

метод ПодтверждениеКастомизацииЗаголовок(): Строка
    возврат 
        "Я подтверждаю свой отказ от автоматических обновлений версии проекта приложения"    
;

метод Информация(): Строка
    если не (КонтактныеДанныеОтветственногоЗаполнены() или ПроверкаПройдена)
        возврат "Вы не можете отправить запрос на кастомизацию, так как у вас не указаны все необходимые данные."
    иначе
        возврат
            "После запроса возможности доработки через какое-то время вам будет направлено письмо на адрес ${ДанныеКомпонента.ЭлектроннаяПочтаОтветственного} с данными для подключения к кастомизации и инструкцией о дальнейших действиях."
    ;
;

метод ЦветЗначкаИнформации(): Цвет
    возврат КонтактныеДанныеОтветственногоЗаполнены() ? Цвета.Синий : Цвета.Красный
;

метод ОтправитьЗапросДоступность(): Булево
    возврат Компоненты.ПодтверждениеКастомизации.Значение 
        и КонтактныеДанныеОтветственногоЗаполнены() и ПроверкаПройдена
;

метод ОтправитьЗапросПриНажатии(Источник: Кнопка, Событие: СобытиеПриНажатии)
    ОтправитьЗапросНаКастомизацию(ДанныеКомпонента)
    ЗаполнитьДанныеКомпонента()
;

метод ПроверитьЗаполнение(): Булево
    пер РезультатПроверки = Истина
    РезультатПроверки = ПроверитьЗаполнениеНаименованиеАбонента()
    РезультатПроверки = ПроверитьЗаполнениеТелефон() и РезультатПроверки
    РезультатПроверки = ПроверитьЗаполнениеЭлектроннаяПочта() и РезультатПроверки
    РезультатПроверки = ПроверитьЗаполнениеФиоОтвественного() и РезультатПроверки
    возврат РезультатПроверки
;

метод ПроверитьЗаполнениеНаименованиеАбонента(): Булево
    пер РезультатПроверки = Истина
    если ДанныеКомпонента.НаименованиеАбонента.Пусто()
        РезультатПроверки = Ложь
        Компоненты.НаименованиеАбонента.РезультатПроверкиДанных = РезультатПроверкиДанных.Отсутствует
    иначе
        Компоненты.НаименованиеАбонента.РезультатПроверкиДанных = РезультатПроверкиДанных.Успех
    ;
    возврат РезультатПроверки
;

метод ПроверитьЗаполнениеТелефон(): Булево
    пер РезультатПроверки = Истина
    если ДанныеКомпонента.ТелефонОтветственного.Пусто()
        РезультатПроверки = Ложь
        СообщениеОшибкаТелефон = "Не заполнен номер телефона ответственного"
        Компоненты.ТелефонОтветственного.РезультатПроверкиДанных = РезультатПроверкиДанных.Отсутствует
    иначе
        попытка
            ДанныеКомпонента.ТелефонОтветственного = МенеджерСтрок.КанонизированныйНомерТелефона(ДанныеКомпонента.ТелефонОтветственного)
        поймать Ошибка: МенеджерСтрок.ИсключениеНедопустимыеСимволыНомераТелефона
            Компоненты.ТелефонОтветственного.РезультатПроверкиДанных = РезультатПроверкиДанных.Ошибка
            СообщениеОшибкаТелефон = Ошибка.Описание
            возврат Ложь
        поймать Ошибка: МенеджерСтрок.ИсключениеНеверныйФорматНомераТелефона
            Компоненты.ТелефонОтветственного.РезультатПроверкиДанных = РезультатПроверкиДанных.Ошибка
            СообщениеОшибкаТелефон = Ошибка.Описание
            возврат Ложь
        ;
        Компоненты.ТелефонОтветственного.РезультатПроверкиДанных = РезультатПроверкиДанных.Успех
    ;
    возврат РезультатПроверки
;

метод ПроверитьЗаполнениеЭлектроннаяПочта(): Булево
    пер РезультатПроверки = Истина
    если ДанныеКомпонента.ЭлектроннаяПочтаОтветственного.Пусто()
        РезультатПроверки = Ложь
        Компоненты.ЭлектроннаяПочтаОтветственного.РезультатПроверкиДанных = РезультатПроверкиДанных.Отсутствует
    иначе
        если ФорматЭлектронногоАдресаВерный(ДанныеКомпонента.ЭлектроннаяПочтаОтветственного) 
            Компоненты.ЭлектроннаяПочтаОтветственного.РезультатПроверкиДанных = РезультатПроверкиДанных.Успех
        иначе
            Компоненты.ЭлектроннаяПочтаОтветственного.РезультатПроверкиДанных = РезультатПроверкиДанных.Ошибка
        ;
        
    ;
    возврат РезультатПроверки
;

метод ПроверитьЗаполнениеФиоОтвественного(): Булево
    пер РезультатПроверки = Истина
    если ДанныеКомпонента.ФиоОтветственного.Пусто()
        РезультатПроверки = Ложь
        Компоненты.ФиоОтветственного.РезультатПроверкиДанных = РезультатПроверкиДанных.Отсутствует
    иначе если не (ДанныеКомпонента.ФиоОтветственного.Заменить(" ", "")).ТолькоБуквы()
        РезультатПроверки = Ложь
        Компоненты.ФиоОтветственного.РезультатПроверкиДанных = РезультатПроверкиДанных.Ошибка
    иначе 
        Компоненты.ФиоОтветственного.РезультатПроверкиДанных = РезультатПроверкиДанных.Успех
    ;
    возврат РезультатПроверки
;

метод ДанныеДляКастомизацииПриИзменении(Источник: ПолеВвода<Строка>, Событие: СобытиеПриИзменении<Строка>)
    ПроверкаПройдена = ПроверитьЗаполнение()    
;

метод КонтактныеДанныеОтветственногоЗаполнены(): Булево
    возврат не ДанныеКомпонента.ЭлектроннаяПочтаОтветственного.Пусто()
        и не ДанныеКомпонента.ТелефонОтветственного.Пусто()
        и не ДанныеКомпонента.НаименованиеАбонента.Пусто()
        и не ДанныеКомпонента.ФиоОтветственного.Пусто()   
;

@ВПодсистеме
@НаСервере @НаКлиенте
структура ДанныеКомпонента
    пер АдресПриложения: Строка
    пер КодПриложения: Строка
    пер АдресТехподдержки: Строка
    пер СтатусКастомизации: СтатусыКастомизации
    пер ЭлектроннаяПочтаОтветственного: Строка?
    пер ТелефонОтветственного: Строка?
    пер ФиоОтветственного: Строка
    пер НаименованиеАбонента: Строка
    пер РежимРаботы: РежимыРаботы
;

метод ЗаполнитьДанныеКомпонента()

    ДанныеКомпонента = ПолучитьДанные()
    ДанныеКомпонента.АдресТехподдержки = "support@1c-cabinet.ru"
    ДанныеКомпонента.ЭлектроннаяПочтаОтветственного = ДанныеКомпонента.ЭлектроннаяПочтаОтветственного.Пусто() 
        ? ВладельцыКабинетов.ПараметрыСеанса().ЭлектроннаяПочта : ДанныеКомпонента.ЭлектроннаяПочтаОтветственного
    ДанныеКомпонента.ТелефонОтветственного = ДанныеКомпонента.ТелефонОтветственного.Пусто() 
        ? ВладельцыКабинетов.ПараметрыСеанса().МобильныйТелефон : ДанныеКомпонента.ТелефонОтветственного
    ДанныеКомпонента.ФиоОтветственного = ДанныеКомпонента.ФиоОтветственного.Пусто() 
        ? ВладельцыКабинетов.ПараметрыСеанса().ФИО.ПредставлениеИмени(ФизЛица.ВариантПредставленияИмени.ФамилияИмяОтчество) 
        : ДанныеКомпонента.ФиоОтветственного
    ДанныеКомпонента.АдресПриложения = СтандартноеПриложение.ПараметрыСеанса().АдресПриложения
    ДанныеКомпонента.РежимРаботы = Приложение.ПараметрыСеанса().РежимРаботы
        
;

@НаСервере @ДоступноСКлиента
статический метод ПолучитьДанные(): ДанныеКомпонента
    знч ДанныеКомпонента: ДанныеКомпонента
    знч ОбщедоступныеНастройки = МенеджерНастроекПриложения.ОбщедоступныеНастройкиПриложения()
    знч СохраненныеДанныеДляКастомизации = ДанныеДляКастомизации.ДанныеДляКастомизации()
    ДанныеКомпонента.КодПриложения = ОбщедоступныеНастройки.ИдПриложения
    ДанныеКомпонента.СтатусКастомизации = ОбщедоступныеНастройки.СтатусКастомизации
    ДанныеКомпонента.ЭлектроннаяПочтаОтветственного = СохраненныеДанныеДляКастомизации.ЭлектроннаяПочтаОтветственного
    ДанныеКомпонента.ФиоОтветственного = СохраненныеДанныеДляКастомизации.ФиоОтветственного
    ДанныеКомпонента.НаименованиеАбонента = СохраненныеДанныеДляКастомизации.НаименованиеАбонента
    ДанныеКомпонента.ТелефонОтветственного = СохраненныеДанныеДляКастомизации.ТелефонОтветственного
    возврат ДанныеКомпонента
;

@НаСервере @ДоступноСКлиента
статический метод ДанныеФайлаНастроек(): ДвоичныйОбъект.Ссылка
    возврат МенеджерНастроекПриложения.ДанныеФайлаНастроек()
;

@НаСервере @ДоступноСКлиента
статический метод ОтправитьЗапросНаКастомизацию(Данные: ДанныеКомпонента)
    знч ТекстПисьма = 
        "Ответственный: ${Данные.ФиоОтветственного}
        Мобильный телефон ответственного: ${Данные.ТелефонОтветственного}
        Электронная почта ответственного: ${Данные.ЭлектроннаяПочтаОтветственного}
        Режим работы приложения: ${Данные.РежимРаботы}
        Адрес приложения: ${Данные.АдресПриложения}
        Наименование абонента: ${Данные.НаименованиеАбонента}"
    знч ТемаПисьма = "Запрос на кастомизацию от ${Данные.КодПриложения}"
    знч ДанныеКастомизации = новый ДанныеДляКастомизации.ДанныеДляКастомизации(
        Данные.НаименованиеАбонента, 
        Данные.ФиоОтветственного,
        Данные.ЭлектроннаяПочтаОтветственного,
        Данные.ТелефонОтветственного)
    знч Результат = Уведомления.ОтправитьEMail(Данные.АдресТехподдержки, Данные.АдресТехподдержки, ТемаПисьма, ТекстПисьма)
    если Результат.Статус == Уведомления.СтатусыОтправкиСообщений.ОшибкаОтправки
        Журналирование.ЗарегистрироватьОшибку("ОшибкаОтправкиУведомления", Результат.ПредставлениеРезультата, Неопределено, ВажностьСобытияЖурналаСобытий.Высокая)
    иначе
        МенеджерНастроекПриложения.ИзменитьСтатусКастомизации(СтатусыКастомизации.ОтправленЗапрос)
        ДанныеДляКастомизации.СохранитьДанныеДляКастомизации(ДанныеКастомизации)
    ;
;

@НаСервере @ДоступноСКлиента
статический метод ФорматЭлектронногоАдресаВерный(ЭлектронныйАдрес: Строка): Булево
    попытка 
        знч Адрес = новый АдресПочты(ЭлектронныйАдрес)
        если (Адрес.ОтображаемоеИмя).Длина() > 254 или не (Адрес.ОтображаемоеИмя).Содержит(".")
            возврат Ложь
        ;
    поймать Ошибка: ИсключениеАдресаПочты
       возврат Ложь
    ;
    
    возврат Истина
;