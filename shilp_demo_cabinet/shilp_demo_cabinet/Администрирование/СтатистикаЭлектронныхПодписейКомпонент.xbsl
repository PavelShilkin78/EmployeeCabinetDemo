импорт КлиентСервисаПодписания
импорт Компания
импорт ОбщиеСтандартные
импорт ИнтерфейсныеКомпонентыСтандартные
импорт Криптография
импорт ЛичныеКабинетыПользователей
импорт УниверсальныеМеханизмы

@НаСервере @НаКлиенте
структура ИспользованиеСертификатов
    пер Действующие: Число
    пер Госключ: Число
    пер АстралПлатформаУнэп: Число
    пер Просроченные: Число
    пер Несозданные: Число
;

@Обработчик
метод ПослеСоздания()
    ТекущаяДата = МенеджерДат.НачалоДня(Момент.Сейчас())
    УстановитьФильтрСписка()
;

метод УстановитьФильтрСписка()
    пер ИсточникДанныхФильтр = ИнформацияОСертификатахИсточник().Фильтр
    пер ЭлементФильтра: ЭлементФильтра = ИсточникДанныхФильтр.Элементы[1] как ЭлементФильтра
    ЭлементФильтра.Использовать = ВариантОтображения == СостоянияЭлектроннойПодписи.Действует
    
    ЭлементФильтра = ИсточникДанныхФильтр.Элементы[2] как ЭлементФильтра
    ЭлементФильтра.Использовать = ВариантОтображения == СостоянияЭлектроннойПодписи.Отсутствует
;

метод ИнформацияОСертификатахИсточник(): ДинамическийСписок
    возврат Компоненты.ИнформацияОСертификатах.Источник
;

метод ВсеПриНажатии(Команда: ОбычнаяКоманда)
    ВариантОтображения = Неопределено
    УстановитьФильтрСписка()
;

метод ВсеВажность(): ВажностьКоманды
    возврат ВариантОтображения == Неопределено ? ВажностьКоманды.Высокая : ВажностьКоманды.Обычная
;

метод ССертификатамиПриНажатии(Команда: ОбычнаяКоманда)
    ВариантОтображения = СостоянияЭлектроннойПодписи.Действует
    УстановитьФильтрСписка()
;

метод ССертификатамиВажность(): ВажностьКоманды
    возврат ВариантОтображения == СостоянияЭлектроннойПодписи.Действует ? ВажностьКоманды.Высокая : ВажностьКоманды.Обычная
;

метод БезСертификатовПриНажатии(Команда: ОбычнаяКоманда)
    ВариантОтображения = СостоянияЭлектроннойПодписи.Отсутствует
    УстановитьФильтрСписка()
;

метод БезСертификатовВажность(): ВажностьКоманды
    возврат ВариантОтображения == СостоянияЭлектроннойПодписи.Отсутствует ? ВажностьКоманды.Высокая : ВажностьКоманды.Обычная
;

метод ИконкаСостоянияЦвет(ДанныеЭлемента: СтрокаДинамическогоСписка): Цвет
    пер ИконкаСостоянияЦвет: Цвет
    выбор ДанныеЭлемента.Данные["ВидЭлектроннойПодписи"]
        когда ВидыЭлектронныхПодписей.УНЭПИнформационнойСистемы
            если ДанныеЭлемента.Данные["ДатаОкончанияДействия"] == Null
                    или ДанныеЭлемента.Данные["ДатаОкончанияДействия"] == Неопределено
                    или (ДанныеЭлемента.Данные["ДатаОкончанияДействия"] как Момент) < ТекущаяДата
                    или ДанныеЭлемента.Данные["МоментОтзываСертификата"] != Неопределено
                    
                ИконкаСостоянияЦвет = Администрирование.ИконкаЦвет(СостоянияСертификата.Просроченный)
            иначе
                ИконкаСостоянияЦвет = Администрирование.ИконкаЦвет(СостоянияСертификата.Действительный)
            ;
        когда ВидыЭлектронныхПодписей.Госключ
            ИконкаСостоянияЦвет = Администрирование.ИконкаЦвет(СостоянияСертификата.Действительный)
        когда ВидыЭлектронныхПодписей.УнэпАстралПлатформа
            если КлиентСервисаПодписания.ЕстьДействующийСертификат(
                ДанныеЭлемента.Данные["ФизическоеЛицо"] как ВладелецСертификатовСервисаПодписания.Ссылка,
                ДанныеЭлемента.Данные["ВидЭлектроннойПодписи"] как ВидыЭлектронныхПодписей) 
            
                ИконкаСостоянияЦвет = Администрирование.ИконкаЦвет(СостоянияСертификата.Действительный)
            иначе
                ИконкаСостоянияЦвет = Администрирование.ИконкаЦвет(СостоянияСертификата.Просроченный)
            ;
    ;
    возврат ИконкаСостоянияЦвет
;

метод ПериодДействияЗаголовок(ДанныеЭлемента: СтрокаДинамическогоСписка): Строка
    пер Результат: Строка
    выбор ДанныеЭлемента.Данные["ВидЭлектроннойПодписи"]
        когда ВидыЭлектронныхПодписей.УНЭПИнформационнойСистемы
            если ДанныеЭлемента.Данные["ДатаНачалаДействия"] == Null
                или ДанныеЭлемента.Данные["ДатаНачалаДействия"] == Неопределено
                или ДанныеЭлемента.Данные["ДатаОкончанияДействия"] == Null
                или ДанныеЭлемента.Данные["ДатаОкончанияДействия"] == Неопределено
                Результат = ""
            иначе
                пер ДатаНачала = МенеджерДат.ФорматМомента(ДанныеЭлемента.Данные["ДатаНачалаДействия"] как Момент?, "дд.ММ.гггг")
                пер ДатаОкончания = МенеджерДат.ФорматМомента(ДанныеЭлемента.Данные["ДатаОкончанияДействия"] как Момент?, "дд.ММ.гггг")

                Результат = "%ДатаНачала - %ДатаОкончания"
            ;
        когда ВидыЭлектронныхПодписей.Госключ
            Результат = "Сертификат Госключ"
        когда ВидыЭлектронныхПодписей.УнэпАстралПлатформа
            знч ДанныеСертификата = КлиентСервисаПодписания.ДанныеСертификата(
                ДанныеЭлемента.Данные["ФизическоеЛицо"] как ВладелецСертификатовСервисаПодписания.Ссылка,
                ДанныеЭлемента.Данные["ВидЭлектроннойПодписи"] как ВидыЭлектронныхПодписей)
            если ДанныеСертификата == Неопределено
                Результат = "(не зарегистрирован) Астрал.Платформа"
            иначе
                пер ДатаНачала = МенеджерДат.ФорматДаты(ДанныеСертификата.ДатаНачала, "дд.ММ.гггг")
                пер ДатаОкончания = МенеджерДат.ФорматДаты(ДанныеСертификата.ДатаОкончания, "дд.ММ.гггг")
                Результат = "%ДатаНачала - %ДатаОкончания (Астрал.Платформа)"
            ;
    ;
    возврат Результат
;

метод СтатистикаЗначения(): Множество<КольцеваяДиаграмма.ЗначениеДиаграммы>
    знч СтатистикаЗначения = новый Множество<КольцеваяДиаграмма.ЗначениеДиаграммы>()
    знч Статистика = Статистика()
    если Статистика.Действующие != 0
        СтатистикаЗначения.Добавить(новый КольцеваяДиаграмма.ЗначениеДиаграммы(Статистика.Действующие, "Действующие"))
    ;
    если Статистика.Госключ != 0
        СтатистикаЗначения.Добавить(новый КольцеваяДиаграмма.ЗначениеДиаграммы(Статистика.Госключ, "Госключ"))
    ;
    если Статистика.АстралПлатформаУнэп != 0
        СтатистикаЗначения.Добавить(новый КольцеваяДиаграмма.ЗначениеДиаграммы(Статистика.АстралПлатформаУнэп, "Астрал.Платформа"))
    ;
    если Статистика.Просроченные != 0
        СтатистикаЗначения.Добавить(новый КольцеваяДиаграмма.ЗначениеДиаграммы(Статистика.Просроченные, "Просроченные"))
    ;
    если Статистика.Несозданные != 0
        СтатистикаЗначения.Добавить(новый КольцеваяДиаграмма.ЗначениеДиаграммы(Статистика.Несозданные, "Не созданы"))
    ;
    возврат СтатистикаЗначения
;

метод ВыгрузитьОтчетОбработчик(Команда: ОбычнаяКоманда)
    знч ДанныеФайла = ДанныеФайлаСертификаты()
    ВыгрузкаФайлов.НачатьВыгрузку(ДанныеФайла, "Сертификаты.csv")
;

@НаСервере @ДоступноСКлиента
статический метод Статистика(): ИспользованиеСертификатов
    знч Статистика: ИспользованиеСертификатов
    пер ТекущаяДата = МенеджерДат.НачалоДня(Момент.Сейчас())
    исп ОбластьВидимостиВременныхТаблиц.Открыть(Ложь)
    ОрганизационнаяСтруктура.ВТФизическиеЛицаСотрудников()
    пер Запрос = новый ПроизвольныйЗапрос() // текст запроса использует временные таблицы
    Запрос.Текст =
        "Выбрать 
            Сумма(
                Выбор 
                    Когда ПравилаЭлектронныхПодписей.ВидЭлектроннойПодписи.ЗаменитьNull(ВидыЭлектронныхПодписей.УНЭПИнформационнойСистемы) == ВидыЭлектронныхПодписей.УНЭПИнформационнойСистемы
                Тогда 1 
                Иначе 0 
                Конец).ЗаменитьNull(0) Как КоличествоСотрудников,
            Сумма(
                Выбор 
                    Когда ПравилаЭлектронныхПодписей.ВидЭлектроннойПодписи.ЗаменитьNull(ВидыЭлектронныхПодписей.УНЭПИнформационнойСистемы) == ВидыЭлектронныхПодписей.УНЭПИнформационнойСистемы
                        И ИнформацияОСертификатах.Ссылка.ЗаменитьNull(Неопределено) != Неопределено
                Тогда 1 
                Иначе 0 
                Конец).ЗаменитьNull(0) Как КоличествоСертификатов,
            Сумма(
                Выбор 
                    Когда ПравилаЭлектронныхПодписей.ВидЭлектроннойПодписи.ЗаменитьNull(ВидыЭлектронныхПодписей.УНЭПИнформационнойСистемы) == ВидыЭлектронныхПодписей.УНЭПИнформационнойСистемы
                        И ИнформацияОСертификатах.Ссылка.ЗаменитьNull(Неопределено) != Неопределено
                        И ИнформацияОСертификатах.ДатаОкончанияДействия >=| &ТекущаяДата
                        И ИнформацияОСертификатах.ДатаНачалаДействия <=| &ТекущаяДата 
                Тогда 1 
                Иначе 0 
                Конец).ЗаменитьNull(0) Как КоличествоДействующихСертификатов,
            Сумма(
                Выбор 
                    Когда ПравилаЭлектронныхПодписей.ВидЭлектроннойПодписи.ЗаменитьNull(Неопределено) == ВидыЭлектронныхПодписей.Госключ 
                Тогда 1 
                Иначе 0 
                Конец).ЗаменитьNull(0) Как КоличествоГосключ,
            Сумма(
                Выбор 
                    Когда ПравилаЭлектронныхПодписей.ВидЭлектроннойПодписи.ЗаменитьNull(Неопределено) == ВидыЭлектронныхПодписей.УнэпАстралПлатформа 
                Тогда 1 
                Иначе 0 
                Конец).ЗаменитьNull(0) Как КоличествоАстралПлатформаУнэп
         Из 
            ОрганизационнаяСтруктура.ВТФизическиеЛицаСотрудников Как ФизическиеЛицаСотрудников
                Левое Соединение ИнформацияОСертификатах Как ИнформацияОСертификатах
                По ФизическиеЛицаСотрудников.ФизическоеЛицо == ИнформацияОСертификатах.Владелец
                    И ИнформацияОСертификатах.Текущий
                    и ИнформацияОСертификатах.МоментОтзываСертификата == Неопределено
                Левое Соединение ПравилаЭлектронныхПодписей Как ПравилаЭлектронныхПодписей
                По ФизическиеЛицаСотрудников.ФизическоеЛицо == ПравилаЭлектронныхПодписей.Владелец
                    И ПравилаЭлектронныхПодписей.ВариантИспользованияЭлектроннойПодписи == ВариантыИспользованияЭлектроннойПодписи.ПоСотруднику
            "
    Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата)
    исп РезультатЗапроса = Запрос.Выполнить()
    знч РезультатЗапросаСтрока = новый ЧитаемыйМассив(РезультатЗапроса)[0]
    Статистика.Действующие = РезультатЗапросаСтрока.КоличествоДействующихСертификатов
    Статистика.Госключ = РезультатЗапросаСтрока.КоличествоГосключ
    Статистика.АстралПлатформаУнэп = РезультатЗапросаСтрока.КоличествоАстралПлатформаУнэп
    Статистика.Просроченные = РезультатЗапросаСтрока.КоличествоСертификатов - РезультатЗапросаСтрока.КоличествоДействующихСертификатов
    Статистика.Несозданные = РезультатЗапросаСтрока.КоличествоСотрудников - РезультатЗапросаСтрока.КоличествоСертификатов
    
    возврат Статистика
;

@НаСервере @ДоступноСКлиента
статический метод ДанныеФайлаСертификаты() : ДвоичныйОбъект.Ссылка
    знч ВыгружаемыеПоляИИхЗаголовки = {
            "ФизическоеЛицо": "Сотрудник",
            "Подразделение": Авто,
            "Должность": Авто,
            "ЛичныйКабинет": "Личный кабинет",
            "ДействующийСертификат": "Действующий сертификат",
            "СрокДействия": "Срок действия"}
    знч ТекущийМомент = Момент.Сейчас()
    знч Запрос = Запрос{
        Выбрать 
            ПодразделенияИСотрудники.ФизическоеЛицо.Представление Как ФизическоеЛицо,
            ПодразделенияИСотрудники.Подразделение.Представление.ЗаменитьNull("") Как Подразделение,
            ПодразделенияИСотрудники.Должность.Представление.ЗаменитьNull("") Как Должность,
            Выбор
                Когда ЛичныеКабинеты.Состояние.ЗаменитьNull(СостоянияЛичногоКабинета.НеСоздан) == СостоянияЛичногоКабинета.Активирован
                    Тогда "Да"
                Иначе "Нет"
            Конец Как ЛичныйКабинет,
            Выбор
                Когда ИнформацияОСертификатах.ДатаОкончанияДействия Есть Null
                    Или ВЫРАЗИТЬ(ИнформацияОСертификатах.ДатаОкончанияДействия Как Момент) < %{ТекущийМомент}
                    Или ИнформацияОСертификатах.МоментОтзываСертификата != Неопределено
                    Тогда "Нет"
                Иначе "Да"
            Конец Как ДействующийСертификат,
            Выбор
                Когда ИнформацияОСертификатах.ДатаОкончанияДействия Есть Null
                    Или ВЫРАЗИТЬ(ИнформацияОСертификатах.ДатаОкончанияДействия Как Момент) < %{ТекущийМомент}
                    Или ИнформацияОСертификатах.МоментОтзываСертификата != Неопределено
                    Тогда ""
                Иначе ИнформацияОСертификатах.ДатаОкончанияДействия
            Конец Как СрокДействия
        Из 
            ПодразделенияИСотрудники Как ПодразделенияИСотрудники
                Левое Соединение ИнформацияОСертификатах Как ИнформацияОСертификатах
                    По ПодразделенияИСотрудники.ФизическоеЛицо == ИнформацияОСертификатах.Владелец
                    И ПодразделенияИСотрудники.ОсновноеМестоРаботы
                    И ИнформацияОСертификатах.Текущий
                Левое Соединение ЛичныеКабинеты Как ЛичныеКабинеты
                    По ПодразделенияИСотрудники.ФизическоеЛицо == ЛичныеКабинеты.ФизическоеЛицо
        Где 
            ПодразделенияИСотрудники.ОсновноеМестоРаботы}
    
    возврат МенеджерЗапросов.РезультатЗапросаВCsv(
            Запрос = Запрос, 
            ВыгружаемыеПоляИИхЗаголовки = ВыгружаемыеПоляИИхЗаголовки)
;