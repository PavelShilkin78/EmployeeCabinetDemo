импорт ИнтерфейсныеКомпонентыСтандартные
импорт КонтрольДоступаСтандартные
импорт Криптография
импорт КриптографияСтандартные
импорт СтандартноеПриложение
импорт ЛичныеКабинетыПользователей
импорт ОбщиеСтандартные
импорт КлиентСервисаПодписания
импорт ФизическиеЛица

@Обработчик
метод ПослеСоздания()
    ПрочитатьДанныеЭлектронныхПодписей()
    МенеджерГлобальныхКлиентскихСобытий.ПодключитьОбработчик(метод (Источник, Параметры) ->
        если Источник != ФизЛица.ТРЕБУЕТСЯ_ОБНОВЛЕНИЕ_ДАННЫХ_ФИЗИЧЕСКОГО_ЛИЦА
            возврат
        ;
        ПрочитатьДанныеЭлектронныхПодписей()
    ;)
;

метод ИспользованиеКЭДОЗаголовок(): Строка
    возврат КлиентскоеУстройство.ВидИнтерфейса == ВидИнтерфейса.Телефон ? "" : "Использование КЭДО"
;

метод ИспользованиеКЭДОПриИзмененииЗначения(Источник: ФлажокРасширенный, Событие: СобытиеПриИзменении<Булево?>)
    СохранитьНастройкиЭлектронныхПодписей()
    ПрочитатьДанныеЭлектронныхПодписей()
;

метод НапоминатьОбОтсутствииПодписиПриИзмененииЗначения(Источник: ФлажокРасширенный, Событие: СобытиеПриИзменении<Булево?>)
    СохранитьНастройкиЭлектронныхПодписей()
;

метод СрокДействияСертификатаСотрудникаПриИзменении(Источник: ПолеВвода<Число>, Событие: СобытиеПриИзменении<Число>)
    если СрокДействияСертификатаСотрудника < 1
        СрокДействияСертификатаСотрудника = 1
    ;
    если СрокДействияСертификатаСотрудника > 2
        СрокДействияСертификатаСотрудника = 2
    ;
    СохранитьСрокиДействияСертификатовСервер(СрокДействияСертификатаСотрудника)
;

метод ПериодичностьНапоминанияОбОтсутствииПодписиПриИзменении(Источник: ПолеВвода<Число>, Событие: СобытиеПриИзменении<Число>)
    СохранитьНастройкиЭлектронныхПодписей()
;

метод ВключатьПерсональныеДанныеВСертификатСотрудникаПриИзмененииЗначения(Источник: ФлажокРасширенный, Событие: СобытиеПриИзменении<Булево?>)
    СохранитьНастройкиЭлектронныхПодписей()
;

метод СкрыватьПерсональныеДанныеСотрудникаВПодписиПриИзмененииЗначения(Источник: ФлажокРасширенный, Событие: СобытиеПриИзменении<Булево?>)
    СохранитьНастройкиЭлектронныхПодписей()
;

метод СохранитьНастройкиЭлектронныхПодписей()
    пер Данные: Администрирование.НастройкиКЭДО = новый Администрирование.НастройкиКЭДО(
        ИспользованиеКЭДО = ИспользованиеКЭДО,
        НапоминатьОбОтсутствииПодписи = НапоминатьОбОтсутствииПодписи,
        ПериодичностьНапоминанияОбОтсутствииПодписи = ПериодичностьНапоминанияОбОтсутствииПодписи,
        ВключатьПерсональныеДанныеВСертификатСотрудника = ВключатьПерсональныеДанныеВСертификатСотрудника,
        СкрыватьПерсональныеДанныеСотрудникаВПодписи = СкрыватьПерсональныеДанныеСотрудникаВПодписи,
        ИспользованиеУнэпИнформационнойСистемы = ИспользованиеУнэпИнформационнойСистемы)
    СкачатьСертификатДоступность = Ложь
    Криптография.ПараметрыСеанса().ИспользованиеКЭДО = Данные.ИспользованиеКЭДО
    если не Данные.ИспользованиеКЭДО
        НапоминатьОбОтсутствииПодписи = Ложь
    ;
    если не Данные.НапоминатьОбОтсутствииПодписи
        Данные.ПериодичностьНапоминанияОбОтсутствииПодписи = 0
    ;
    если Данные.НапоминатьОбОтсутствииПодписи и Данные.ПериодичностьНапоминанияОбОтсутствииПодписи == 0
        Данные.ПериодичностьНапоминанияОбОтсутствииПодписи = 1
    ;
    СохранитьНастройкиЭлектронныхПодписейСервер(Данные, СтандартноеПриложение.ПараметрыСеанса().НазваниеПриложения)
    СкачатьСертификатДоступность = ИспользованиеКЭДО
;

метод ПрочитатьДанныеЭлектронныхПодписей()
    знч ДанныеПодписей = ДанныеЭлектронныхПодписей()
    ИспользованиеКЭДО = ДанныеПодписей.ИспользованиеКЭДО
    НапоминатьОбОтсутствииПодписи = ДанныеПодписей.НапоминатьОбОтсутствииПодписи
    ПериодичностьНапоминанияОбОтсутствииПодписи = ДанныеПодписей.ПериодичностьНапоминанияОбОтсутствииПодписи
    ВключатьПерсональныеДанныеВСертификатСотрудника = ДанныеПодписей.ВключатьПерсональныеДанныеВСертификатСотрудника
    СкрыватьПерсональныеДанныеСотрудникаВПодписи = ДанныеПодписей.СкрыватьПерсональныеДанныеСотрудникаВПодписи
    СрокДействияСертификатаСотрудника = ДанныеПодписей.СрокДействияСертификатаСотрудника
    ОкончаниеДействияКорневогоСертификата = ДанныеПодписей.ОкончаниеДействияКорневогоСертификата
    СкачатьСертификатДоступность = ИспользованиеКЭДО
    ИспользованиеУнэпИнформационнойСистемы = ДанныеПодписей.ИспользованиеУнэпИнформационнойСистемы
    
    знч НастройкиСервисаПодписания = КлиентСервисаПодписания.НастройкиСервиса()
    знч ДоступноПодписаниеВСервисеПодписаний = КлиентСервисаПодписания.НастройкиЗаданы(НастройкиСервисаПодписания)
    ИспользованиеУнэпГосключ = ДоступноПодписаниеВСервисеПодписаний и НастройкиСервисаПодписания.ИспользоватьГосключ
    ИспользованиеУнэпАстралПлатформа = ДоступноПодписаниеВСервисеПодписаний и НастройкиСервисаПодписания.ИспользоватьУнэпАстралПлатформа
    если не ИспользованиеУнэпИнформационнойСистемы
        и (не ДоступноПодписаниеВСервисеПодписаний
            или не ИспользованиеУнэпГосключ и не ИспользованиеУнэпАстралПлатформа)
        
        ИспользованиеУнэпИнформационнойСистемы = Истина
    ;
;

метод НапоминатьОбОтсутствииПодписиТолькоЧтение(): Булево
    возврат не ИспользованиеКЭДО
;

метод ПериодичностьНапоминанияОбОтсутствииПодписиТолькоЧтение(): Булево
    возврат не НапоминатьОбОтсутствииПодписи
;

метод ВключатьПерсональныеДанныеВСертификатСотрудникаТолькоЧтение(): Булево
    возврат не ИспользованиеКЭДО
;

метод СкрыватьПерсональныеДанныеСотрудникаВПодписиТолькоЧтение(): Булево
    возврат не ИспользованиеКЭДО
;

метод СрокДействияСертификатаСотрудникаТолькоЧтение(): Булево
    возврат не ИспользованиеКЭДО
;

метод СкачатьСертификатПриНажатии(Источник: Кнопка, Событие: СобытиеПриНажатии)
    знч Файл = СкачатьСертификаты()
    если Файл == Неопределено
        возврат
    ;
    знч ФайлПервый = Файл.ПервыйИлиУмолчание()
    ВыгрузкаФайлов.НачатьВыгрузку(ФайлПервый.Значение, ФайлПервый.Ключ)
;

метод ДействиеКорневогоСертификатаЗаголовок(): Строка
    если не ИспользованиеКЭДО или ОкончаниеДействияКорневогоСертификата == Неопределено
        возврат "Не используется"
    ;
    возврат "Действует до " + МенеджерДат.ФорматМомента(ОкончаниеДействияКорневогоСертификата, "д ММММ гггг")
;

метод ОбновитьКорневойСертификатДоступность(): Булево
    возврат ИспользованиеКЭДО
;

метод ОбновитьКорневойСертификатПриНажатии(Источник: Кнопка, Событие: СобытиеПриНажатии)
    ПеревыпускКорневогоСертификата.ОткрытьВМодальномОкне()
    ПрочитатьДанныеЭлектронныхПодписей()
;

метод СмЗдесьСсылка(): Строка
    возврат "https://welcome.1c-cabinet.ru/app/signatures-using"
;

метод ПравилаЭлектронныхПодписейВидимость(): Булево
    возврат ИспользованиеУнэпГосключ или ИспользованиеУнэпАстралПлатформа
;

метод ПодсказкаУНЭПИнформационнойСистемыВидимость(): Булево
    возврат ИспользованиеКЭДО
;

метод ТекстИнформацииОПодписанииВГосключ(): Строка
    возврат КлиентСервисаПодписания.HtmlТекстОбщейИнформацииОПодписанииСИспользованиемГосключ()
;

@НаСервере @ДоступноСКлиента
статический метод ДанныеЭлектронныхПодписей(): Администрирование.НастройкиКЭДО
    пер Настройки = Криптография.НастройкиЭлектронныхПодписей()
    пер СрокиДействия = Криптография.СрокиДействияСертификатов()
    пер ДействителенПо: Момент?
    если Настройки.ИспользованиеКЭДО
        пер КорневойСертификат = РаботаСПодписями.СертификатУдостоверяющегоЦентра()
        ДействителенПо = КорневойСертификат.ДействителенПо
    ;
    
    возврат новый Администрирование.НастройкиКЭДО(
        ИспользованиеКЭДО = Настройки.ИспользованиеКЭДО,
        НапоминатьОбОтсутствииПодписи = Настройки.НапоминатьОбОтсутствииПодписи,
        ПериодичностьНапоминанияОбОтсутствииПодписи = Настройки.ПериодичностьНапоминанияОбОтсутствииПодписи,
        ВключатьПерсональныеДанныеВСертификатСотрудника = Настройки.ВключатьПерсональныеДанныеВСертификатСотрудника,
        СкрыватьПерсональныеДанныеСотрудникаВПодписи = Настройки.СкрыватьПерсональныеДанныеСотрудникаВПодписи,
        ИспользованиеУнэпИнформационнойСистемы = Настройки.ИспользованиеУнэпИнформационнойСистемы,
        СрокДействияКорневогоСертификата = СрокиДействия.КорневойСертификат,
        СрокДействияСертификатаСотрудника = СрокиДействия.СертификатСотрудника,
        ОкончаниеДействияКорневогоСертификата = ДействителенПо)
;

@НаСервере @ДоступноСКлиента
статический метод СохранитьНастройкиЭлектронныхПодписейСервер(Данные: Администрирование.НастройкиКЭДО, НазваниеПриложения: Строка)
    пер Настройки: Криптография.НастройкиПодписей
    Настройки.ИспользованиеКЭДО = Данные.ИспользованиеКЭДО
    Настройки.НапоминатьОбОтсутствииПодписи = Данные.НапоминатьОбОтсутствииПодписи
    Настройки.ПериодичностьНапоминанияОбОтсутствииПодписи = Данные.ПериодичностьНапоминанияОбОтсутствииПодписи
    Настройки.ВключатьПерсональныеДанныеВСертификатСотрудника = Данные.ВключатьПерсональныеДанныеВСертификатСотрудника
    Настройки.СкрыватьПерсональныеДанныеСотрудникаВПодписи = Данные.СкрыватьПерсональныеДанныеСотрудникаВПодписи
    Настройки.ИспользованиеУнэпИнформационнойСистемы = Данные.ИспользованиеУнэпИнформационнойСистемы
    
    исп Транзакции.Начать()
    знч ТекущиеДанные: Администрирование.НастройкиКЭДО = ДанныеЭлектронныхПодписей()
    если ТекущиеДанные.ИспользованиеКЭДО != Данные.ИспользованиеКЭДО 
        или ТекущиеДанные.НапоминатьОбОтсутствииПодписи != Данные.НапоминатьОбОтсутствииПодписи
        или ТекущиеДанные.ПериодичностьНапоминанияОбОтсутствииПодписи != Данные.ПериодичностьНапоминанияОбОтсутствииПодписи
        или ТекущиеДанные.ВключатьПерсональныеДанныеВСертификатСотрудника != Данные.ВключатьПерсональныеДанныеВСертификатСотрудника
        или ТекущиеДанные.СкрыватьПерсональныеДанныеСотрудникаВПодписи != Данные.СкрыватьПерсональныеДанныеСотрудникаВПодписи
        или ТекущиеДанные.ИспользованиеУнэпИнформационнойСистемы != Данные.ИспользованиеУнэпИнформационнойСистемы
        Криптография.СохранитьНастройкиЭлектронныхПодписей(Настройки)
        если не ТекущиеДанные.ИспользованиеКЭДО и Данные.ИспользованиеКЭДО
            МенеджерПравДоступа.ПроверитьПраваАдминистратора()
            исп ПривилегированныйРежим: КонтекстДоступа = КонтекстДоступа.Привилегированный()
            пер СрокиДействия = новый Криптография.ДействиеСертификатов(ТекущиеДанные.СрокДействияКорневогоСертификата, ТекущиеДанные.СрокДействияСертификатаСотрудника)
            Криптография.СохранитьСрокиДействияСертификатов(СрокиДействия)
            знч НастройкиКабинетов: ЛичныеКабинетыПользователей.НастройкиЛичныхКабинетов = ЛичныеКабинетыПользователей.ТекущиеНастройкиСозданияУчетныхЗаписей()
            РаботаСПодписями.СоздатьЦифровойСертификатУдостоверяющегоЦентра(НастройкиКабинетов.АдресСервиса)
            ПривилегированныйРежим.Закрыть()
        ;
    ;

;

@НаСервере @ДоступноСКлиента
статический метод СохранитьСрокиДействияСертификатовСервер(СертификатСотрудника: Число)
    исп ПривилегированныйРежим: КонтекстДоступа = КонтекстДоступа.Привилегированный()
    пер СрокиДействия = Криптография.СрокиДействияСертификатов()
    СрокиДействия.СертификатСотрудника = СертификатСотрудника
    Криптография.СохранитьСрокиДействияСертификатов(СрокиДействия)
    ПривилегированныйРежим.Закрыть()
;

@НаСервере @ДоступноСКлиента
статический метод ОбновитьКорневойСертификатСервер()
    исп ПривилегированныйРежим: КонтекстДоступа = КонтекстДоступа.Привилегированный()
    знч НастройкиКабинетов: ЛичныеКабинетыПользователей.НастройкиЛичныхКабинетов = ЛичныеКабинетыПользователей.ТекущиеНастройкиСозданияУчетныхЗаписей()
    РаботаСПодписями.СоздатьЦифровойСертификатУдостоверяющегоЦентра(НастройкиКабинетов.АдресСервиса)
    ПривилегированныйРежим.Закрыть()
;

@НаСервере @ДоступноСКлиента
статический метод СкачатьСертификаты(): ЧитаемоеСоответствие<Строка, ДвоичныйОбъект.Ссылка>?
    знч ЦифровыеСертификаты = РаботаСПодписями.СертификатыУдостоверяющегоЦентра()
    
    если ЦифровыеСертификаты.Пусто()
        возврат Неопределено
    иначе если ЦифровыеСертификаты.Размер() == 1
        знч Элемент = ЦифровыеСертификаты.ЕдинственныйИлиУмолчание()
        возврат {Элемент.СерийныйНомер + ".cer": ОбъектноеХранилище.ЗагрузитьИзБайт(Элемент.Сертификат.ВБайты()).Ссылка}    
    иначе 
        возврат {"root certificates.zip": ОбъектноеХранилище.ЗагрузитьИзБайт(ЦифровыеСертификатыВАрхив(ЦифровыеСертификаты)).Ссылка}
    ;
;

@НаСервере
статический метод ЦифровыеСертификатыВАрхив(ЦифровыеСертификаты: ЧитаемыйМассив<МенеджерКриптографии.ЦифровойСертификатНумерованный>): Байты
    знч ВременныйФайл = Файлы.СоздатьВременныйФайл(УдалитьПослеОкончанияРаботы = Истина)
    исп ПотокЗаписи = ВременныйФайл.ОткрытьПотокЗаписи()
    знч ЗаписьАрхива = новый ЗаписьZip(ПотокЗаписи)

    для ТекущийЭлемент из ЦифровыеСертификаты
        исп ПотокЧтенияФайла = ПотокЧтения.ИзБайтов(ТекущийЭлемент.Сертификат.ВБайты())
        ЗаписьАрхива.Добавить(
                ПотокЧтенияФайла,
                ТекущийЭлемент.СерийныйНомер + ".cer",
                УровеньСжатияZip.Максимальный
            )
    ;
    ЗаписьАрхива.Записать()
    
    возврат ВременныйФайл.ОткрытьПотокЧтения().ПрочитатьКакБайты()

;

метод ТекстИнформацииОПодписанииВАстралПлатформа(): Строка
    возврат КлиентСервисаПодписания.HtmlТекстОбщейИнформацииОПодписанииСИспользованиемАстралПлатформа()
;