импорт ФизическиеЛица
импорт КонтрольДоступаСтандартные
импорт СтандартноеПриложение

@ВПроекте
конст ИД_ПОДСИСТЕМЫ = "КонтрольДоступа"

@ВПодсистеме конст ГРУППА_РЕСУРСОВ_КОНТРОЛЬ_ДОСТУПА = "КонтрольДоступа"

@ВПодсистеме
конст ИМЯ_ПОДСИСТЕМЫ = "Контроль доступа"

@ВПодсистеме
конст КЛЮЧ_ПАРАМЕТРОВ_СЕАНСА: Строка = "КонтрольДоступаПараметрыСеанса" 

конст ТИП_АТРИБУТА_КОНТРОЛЯ_ДОСТУПА_ФИЗИЧЕСКИЕ_ЛИЦА = "ФизическиеЛица"

@ВПроекте
структура ПараметрыСеанса
    пер ФизлицоТекущегоПользователя: ФизическиеЛица.Ссылка?
    пер МиниатюраТекущегоПользователя: ДвоичныйОбъект.Ссылка?
;

@ВПроекте
@НаКлиенте
метод ПараметрыСеанса(): ПараметрыСеанса
    возврат ПараметрыСеансаСервис.ПолучитьСервис().ПараметрПоКлючу(КЛЮЧ_ПАРАМЕТРОВ_СЕАНСА) как ПараметрыСеанса
;

@ВПроекте
структура СтроковыеИдентификаторыПользователя
    пер Логин: Строка
    пер Телефон: Строка
    пер ЭлектроннаяПочта: Строка
;

@ВПроекте
структура СвойстваПользователя
    пер ФизическоеЛицо: ФизическиеЛица.Ссылка?
    пер ЛогинПользователя: Строка
    пер Ссылка: Пользователи.Ссылка?
    пер Представление: Строка
    пер ИдПользователя: ИдПользователя?
    пер РолиДоступа: Массив<РолиДоступа>
    пер Администратор: Булево
    пер ЭтоРуководитель: Булево
    пер Телефон: Строка?
    пер ЭлектроннаяПочта: Строка?
    пер ТокеныДоступа: Множество<МенеджерПравДоступа.ТокенДоступаПользователя>
    пер Утверждения: ЧитаемоеСоответствие<Строка, Строка>?
;

конст ПОЛНОМОЧИЕ_ПРОСМОТР_ЛИЧНЫХ_ДАННЫХ = "ПолномочиеПросмотрЛичныхДанных"
конст ПОЛНОМОЧИЕ_ЧТЕНИЕ_И_РЕДАКТИРОВАНИЕ_НАСТРОЕК_ПОЛЬЗОВАТЕЛЕЙ = "ПолномочиеЧтениеИРедактированиеНастроекПользователей"

@ВПроекте
@НаСервере
метод ДобавитьПолномочия()
    ДобавитьПолномочиеПросмотрЛичныхДанных()
    ДобавитьПолномочиеЧтениеИРедактированиеНастроекПользователей()
;

@ВПодсистеме
@НаСервере
метод ДобавитьПолномочиеЧтениеИРедактированиеНастроекПользователей(): Полномочия.Ссылка
    возврат КонтрольДоступа.ДобавитьПолномочие(
        "Чтение и редактирование настроек пользователей",
        ПОЛНОМОЧИЕ_ЧТЕНИЕ_И_РЕДАКТИРОВАНИЕ_НАСТРОЕК_ПОЛЬЗОВАТЕЛЕЙ,
        "Позволяет управлять пользователями и группами доступа пользователей."
    )
;

@ВПроекте
@НаСервере
метод ПолномочиеЧтениеИРедактированиеНастроекПользователей(): Полномочия.Ссылка
    возврат КонтрольДоступа.Полномочие(ПОЛНОМОЧИЕ_ЧТЕНИЕ_И_РЕДАКТИРОВАНИЕ_НАСТРОЕК_ПОЛЬЗОВАТЕЛЕЙ)
;


@НаСервере
метод ДобавитьПолномочиеПросмотрЛичныхДанных()
    КонтрольДоступа.ДобавитьПолномочие(
        "Просмотр личных данных",
        ПОЛНОМОЧИЕ_ПРОСМОТР_ЛИЧНЫХ_ДАННЫХ,
        "",
        КонтрольДоступа.ТипАтрибутаДоступаФизическиеЛица())
;

@ВПроекте
@НаСервере
метод ПолномочиеПросмотрЛичныхДанных(): Полномочия.Ссылка
    возврат КонтрольДоступа.Полномочие(ПОЛНОМОЧИЕ_ПРОСМОТР_ЛИЧНЫХ_ДАННЫХ)
;

@ВПроекте
@НаСервере
метод СоздатьГруппыДоступаПоРолям(Роли: ЧитаемаяКоллекция<Роли.Ссылка>? = Неопределено)
    ГруппыДоступа.СоздатьГруппыДоступаПоРолям(Роли)
;

@ВПроекте
@НаСервере
метод ГруппыДоступаПоРоли(Роль: Роли.Ссылка): ЧитаемыйМассив<ГруппыДоступа.Ссылка>
    возврат ГруппыДоступа.ГруппыДоступаПоРоли(Роль)
;

@ВПроекте
@НаСервере
метод ВключитьПользователяВГруппу(ГруппаДоступа: ГруппыДоступа.Ссылка, Пользователь: Пользователи.Ссылка)
    ГруппыДоступа.ВключитьПользователяВГруппу(ГруппаДоступа, Пользователь)
;

@ВПроекте
@НаСервере
метод ПользовательСуществует(Пользователь: Пользователи.Ссылка): Булево
    знч Запрос = Запрос{
        Выбрать 
            Ссылка
        Из 
            Пользователи
        Где 
            Ссылка == %Пользователь}
    исп РезультатЗапроса = Запрос.Выполнить()
    возврат не РезультатЗапроса.Пусто()
;

@ВПроекте
@НаСервере
метод БылУспешныйВход(Пользователь: Пользователи.Ссылка?): Булево
    если Пользователь == Неопределено
        возврат Ложь
    ;  
    знч Запрос = Запрос{
        Выбрать
            БылУспешныйВход
        Из 
            Пользователи
        Где
            Ссылка == %Пользователь}
    исп КонтекстДоступа.Привилегированный()
    исп РезультатЗапроса = Запрос.Выполнить()
    возврат РезультатЗапроса.ЕдинственныйИлиУмолчание()?.БылУспешныйВход ?? Ложь
;

/**
Описание:
 Предназначено для параметризации @ВПроекте
методов, формирующих РазрешенияДоступа доступа объектов.
Замечания: для объектов, которые в сервисе в принципе не редактируются (например, Справка 2-НДФЛ) - используется ТолькоЧтение,
 для объектов, для которых в сервисе предусмотрено редактирование - ЧтениеИРедактирование.
*/
@ВПроекте
@НаСервере
перечисление ВидыОграничений
    Чтение,
    Редактирование,
    ЧтениеИРедактирование,
    РедактированиеИУдаление,
    БезОграничений
;

/**
Описание: Формирует РазрешенияДоступа для таблицы в целом (ВычислитьРазрешенияДоступа).
Сервисные данные - настройки, установки и пр, изменяющиеся в приложении администратором абонента, не устанавливаемые через API.
Например, настройки создания кабинетов, учетные записи отправки SMS, группы доступа к данным физически лиц и др.
Возвращает: РазрешенияДоступа доступа.
Замечания:
 для администратора абонента - все права,
 для админстратора системы и менеджера сервиса - все права.
*/
@ВПроекте
@НаСервере
метод РазрешенияДоступаТаблицыСервисныхДанныхАбонента(): Массив<РазрешениеДоступа>
    возврат [
        РазрешениеДоступаПолныйДоступРолям([РолиДоступа.АдминистраторАбонента]),
        РазрешениеДоступаПолныйДоступРолям([РолиДоступа.АдминистраторСервиса, РолиДоступа.МенеджерСервиса])
    ]
;

/**
Описание: Формирует РазрешенияДоступа для таблицы в целом (ВычислитьРазрешенияДоступа).
Сервисные данные доступные на чтение всем это данные, изменяющиеся в приложении администратором абонента, 
не устанавливаемые через API, но при этом доступные на чтение всем аутентифицированным
Например, константы
Возвращает: РазрешенияДоступа доступа.
Замечания:
 для администратора абонента - все права,
 для админстратора системы и менеджера сервиса - все права.
*/
@ВПроекте
@НаСервере
метод РазрешенияДоступаТаблицыСервисныхДанныхАбонентаЧтениеВсем(): Массив<РазрешениеДоступа>
    возврат [
        РазрешениеДоступаПолныйДоступРолям([РолиДоступа.АдминистраторАбонента]),
        РазрешениеДоступаПолныйДоступРолям([РолиДоступа.АдминистраторСервиса, РолиДоступа.МенеджерСервиса]),
        РазрешениеДоступаТолькоЧтениеВсемАутентифицированным()
    ]
;

/**
Описание: Формирует РазрешенияДоступа для таблицы в целом (ВычислитьРазрешенияДоступа).
Контент - данные, поставляемые из информационной системы и преимущественно не изменяющийся в приложении.
Например, соответствие идентификаторов, информационные системы физических лиц и пр.
Возвращает: РазрешенияДоступа доступа.
Замечания:
 для информационной системы - все права,
 для администратора системы и менеджера сервиса - все права.
*/
@ВПроекте
@НаСервере
метод РазрешенияДоступаТаблицыКонтентДанныхАбонентаБезЧтения(): Массив<РазрешениеДоступа>
    возврат [
        РазрешениеДоступаПолныйДоступРолям([РолиДоступа.ИнформационнаяСистема, РолиДоступа.АдминистраторСервиса, РолиДоступа.МенеджерСервиса])
    ]
;

@ВПроекте
@НаСервере
метод РазрешенияДоступаРегистраКонтентДанныхАбонентаБезЧтения(): Массив<РазрешениеДоступа>
    возврат [новый РазрешениеДоступа(
        КлючиПоРолям([РолиДоступа.ИнформационнаяСистема, РолиДоступа.АдминистраторСервиса, РолиДоступа.МенеджерСервиса]),
        МенеджерПравДоступа.ПолныеПраваНаРегистрСведений())
    ]
;

@ВПроекте
@НаСервере
метод КлючиДляТаблицыКонтентДанныхАбонента(): Массив<КлючПоРоли.Объект>
    возврат КлючиПоРолям(
        [РолиДоступа.ИнформационнаяСистема,
        РолиДоступа.АдминистраторСервиса,
        РолиДоступа.МенеджерСервиса])
;

/**
Описание: Формирует РазрешенияДоступа для таблицы в целом (ВычислитьРазрешенияДоступа).
Контент - данные, поставляемые из информационной системы и преимущественно не изменяющийся в приложении.
Например, Организации, Должности, Подразделения и т.д.
Возвращает: РазрешенияДоступа доступа.
Замечания:
 для всех аутентифицированных пользователей доступ на чтение, 
 для информационной системы - все права,
 для админстратора системы и менеджера сервиса - все права.
*/
@ВПроекте
@НаСервере
метод РазрешенияДоступаТаблицыКонтентДанныхАбонентаЧтениеВсем(): Массив<РазрешениеДоступа>
    знч РазрешенияДоступа: Массив<РазрешениеДоступа>
    РазрешенияДоступа.ДобавитьВсе(РазрешенияДоступаТаблицыКонтентДанныхАбонентаБезЧтения())
    РазрешенияДоступа.Добавить(РазрешениеДоступаТолькоЧтениеВсемАутентифицированным())
    возврат РазрешенияДоступа
;

/**
Описание: Формирует РазрешенияДоступа для таблицы в целом (ВычислитьРазрешенияДоступа).
Контент - данные, поставляемые из информационной системы и преимущественно не изменяющийся в приложении.
Например, этот набор дескрипторов для Рабочих контактов физических лиц, необходимых администратору абонента для рассылки приглашений.
Возвращает: РазрешенияДоступа доступа.
Замечания:
 для информационной системы - все права,
 для админстратора системы и менеджера сервиса - все права,
 для администратора абонента - все права. 
*/
@ВПроекте
@НаСервере
метод РазрешенияДоступаТаблицыКонтентДанныхАбонентаСДоступомАдминистратору(): Массив<РазрешениеДоступа>
    знч РазрешенияДоступа: Массив<РазрешениеДоступа>
    РазрешенияДоступа.ДобавитьВсе(РазрешенияДоступаТаблицыКонтентДанныхАбонентаБезЧтения())
    РазрешенияДоступа.Добавить(РазрешениеДоступаПолныйДоступРолям([РолиДоступа.АдминистраторАбонента]))
    возврат РазрешенияДоступа
;

/**
Описание: Формирует РазрешенияДоступа для таблицы в целом (ВычислитьРазрешенияДоступа).
Возвращает: РазрешенияДоступа доступа.
Например, Информационные системы, Доступность приложения.
Замечания:
 для администратора сервиса и управляющего приложения - все права.
*/
@ВПроекте
@НаСервере
метод РазрешенияДоступаТаблицыНастроекПриложения(): Массив<РазрешениеДоступа>
    возврат [
        РазрешениеДоступаТолькоЧтениеРолям([РолиДоступа.АдминистраторСервиса])
    ]
;

/**
Описание: Формирует РазрешенияДоступа для регистра сведений с настройками, которые могут редактироваться только администатором приложения.
Возвращает: РазрешенияДоступа доступа.
*/
@ВПроекте
@НаСервере
метод РегистрСведенийРедактированиеАдминистратору(): Массив<РазрешениеДоступа>
    возврат [новый РазрешениеДоступа(КлючиПоРолям([РолиДоступа.АдминистраторАбонента]), [Сущность.Право.Изменение])]
;

/**
Описание: Формирует РазрешенияДоступа для регистра сведений с настройками, которые могут редактироваться администатором приложения и информационной системой.
Возвращает: РазрешенияДоступа доступа.
*/
@ВПроекте
@НаСервере
метод РегистрСведенийРедактированиеАдминистраторуЗагружаемый(): Массив<РазрешениеДоступа>
    возврат [новый РазрешениеДоступа(КлючиПоРолям([РолиДоступа.АдминистраторАбонента, РолиДоступа.ИнформационнаяСистема]), [Сущность.Право.Изменение])]
;

/**
Описание: Формирует РазрешенияДоступа для регистра сведений который может загружаться информационной системой
Возвращает: РазрешенияДоступа доступа.
*/
@ВПроекте
@НаСервере
метод РегистрСведенийЗагружаемый(): Массив<РазрешениеДоступа>
    возврат [новый РазрешениеДоступа(КлючиПоРолям([РолиДоступа.ИнформационнаяСистема]), [Сущность.Право.Чтение, Сущность.Право.Изменение])]
;

/**
Описание: Формирует РазрешенияДоступа для таблицы в целом (ВычислитьРазрешенияДоступа).
Возвращает: РазрешенияДоступа доступа.
Например, Информационные системы, Доступность приложения.
Замечания:
 для всех аутентифицированных пользователей доступ на чтение, 
 для администратора сервиса и управляющего приложения - все права.
*/
@ВПроекте
@НаСервере
метод РазрешенияДоступаТаблицыСервисныхДанныхПриложения(): Массив<РазрешениеДоступа>
    возврат [
        РазрешениеДоступаТолькоЧтениеВсемАутентифицированным(),
        РазрешениеДоступаПолныйДоступРолям([РолиДоступа.МенеджерСервиса, РолиДоступа.АдминистраторСервиса])
    ]
;

/**
Описание: Формирует РазрешенияДоступа для HTTP-сервисов, предназначенных для управляющего приложения.
Например, создание информационных систем, управление доступностью приложения.
Возвращает: РазрешенияДоступа доступа.
Замечания:
 для менеджера сервиса - право на вызов.
*/
@ВПроекте
@НаСервере
метод РазрешенияДоступаHttpВызоваСервисныхДанныхПриложения(): Массив<РазрешениеДоступа>
    возврат [
        РазрешениеДоступаHttpВызовРолям([РолиДоступа.МенеджерСервиса])
    ]
;

/**
Описание: Формирует РазрешенияДоступа для HTTP-сервисов, предназначенных для информационной системы донор-приложения.
Например, загрузка физических лиц, получение заявлений и справок.
Возвращает: РазрешенияДоступа доступа.
Замечания:
 для информационной системы - право на вызов.
*/
@ВПроекте
@НаСервере
метод РазрешенияДоступаHttpВызоваКонтентДанныхПриложения(): Массив<РазрешениеДоступа>
    возврат [
        РазрешениеДоступаHttpВызовРолям([РолиДоступа.ИнформационнаяСистема])
    ]
;

/**
Описание: Формирует РазрешенияДоступа для таблиц справочников, 
 имеющих ограничения на уровне записей  
 и доступ к которым ограничивается по физическому лицу. 
Возвращает: РазрешенияДоступа доступа.
Замечания:
 для всех аутентифицированных пользователей все права (кроме удаления), 
 для информационной системы - все права.
*/
@ВПроекте
@НаСервере
метод РазрешенияДоступаТаблицыБезПраваУдаления(): Массив<РазрешениеДоступа>

    знч РазрешенияДоступа: Массив<РазрешениеДоступа>
    РазрешенияДоступа.Добавить(РазрешениеДоступаПолныйДоступВсемАутентифицированнымКромеУдаления())
    РазрешенияДоступа.ДобавитьВсе(РазрешенияДоступаТаблицыКонтентДанныхАбонентаБезЧтения())
    возврат РазрешенияДоступа

;

/**
Описание: Формирует РазрешенияДоступа для таблиц регистров сведений, 
 имеющих ограничения на уровне записей,
 при этом аутентифицированные пользователи имеют полные права на доступные объекты.
Возвращает: РазрешенияДоступа доступа.
Замечания:
 для всех аутентифицированных пользователей - все права.
*/
@ВПроекте
@НаСервере
метод РазрешенияДоступаТаблицыРегистраСведений(): Массив<РазрешениеДоступа>
    возврат [РазрешениеДоступаПолныйДоступКРегиструСведенийВсемАутентифицированным()]
;


/**
Описание: Формирует РазрешенияДоступа для таблиц регистров сведений, 
 имеющих ограничения на уровне записей ,
 при этом аутентифицированные пользователи имеют полные права на доступные объекты.
Возвращает: РазрешенияДоступа доступа.
Замечания:
 для всех аутентифицированных пользователей - все права.
*/
@ВПроекте
@НаСервере
метод РазрешенияДоступаТаблицыСФизическимЛицомСПравомУдаления(): Массив<РазрешениеДоступа>
    возврат [РазрешениеДоступаПолныйДоступВсемАутентифицированным()]
;

@ВПроекте
@НаСервере
метод РазрешенияДоступаОбъекта(Объект: Объект): ЧитаемыйМассив<РазрешениеДоступа>
    пер Разрешения = Стд::КонтрольДоступа::КонтрольДоступа.ПолучитьРазрешенияДоступа(Объект)
    если Разрешения.Пусто()
        Разрешения = Стд::КонтрольДоступа::КонтрольДоступа.ПолучитьРазрешенияДоступа(Объект.ПолучитьТип())
    ;
    
    возврат Разрешения
;

@ВПроекте
@НаСервере
метод КопироватьРазрешенияДоступаОбъектаДляРегистра(Объект: Объект): ЧитаемыйМассив<РазрешениеДоступа>
    возврат РазрешенияДоступаОбъекта(Объект)
        .Преобразовать(Р -> новый РазрешениеДоступа(
            Разрешения = Р.Разрешения,
            Права = Р.Права.Фильтровать(П -> П == Сущность.Право.Чтение или П == Сущность.Право.Изменение)
        ))
;

@ВПроекте
@НаСервере
метод ЧтениеРедактированиеУдалениеДанныхСправочниковПерсонально(ВладельцыКлючей: ЧитаемаяКоллекция<ВладельцыКлючейДоступа.Ссылка|ФизическиеЛица.Ссылка|?>): Массив<РазрешениеДоступа>
    знч Разрешения: Массив<РазрешениеДоступа>
    
    Разрешения.ДобавитьВсе(РедактированиеУдалениеДанныхСправочниковПерсонально(ВладельцыКлючей))
    Разрешения.ДобавитьВсе(ЧтениеДанныхСправочниковПерсонально(ВладельцыКлючей))
    возврат Разрешения    
;

@ВПроекте
@НаСервере
метод ЧтениеРедактированиеДанныхСправочниковПерсонально(ВладельцыКлючей: ЧитаемаяКоллекция<ВладельцыКлючейДоступа.Ссылка|ФизическиеЛица.Ссылка|?>): Массив<РазрешениеДоступа>
    знч Разрешения: Массив<РазрешениеДоступа>
    
    Разрешения.ДобавитьВсе(РедактированиеДанныхСправочниковПерсонально(ВладельцыКлючей))
    Разрешения.ДобавитьВсе(ЧтениеДанныхСправочниковПерсонально(ВладельцыКлючей))
    возврат Разрешения    
;

@ВПроекте
@НаСервере
метод РедактированиеУдалениеДанныхСправочниковПерсонально(ВладельцыКлючей: ЧитаемаяКоллекция<ВладельцыКлючейДоступа.Ссылка|ФизическиеЛица.Ссылка|?>): Массив<РазрешениеДоступа>
    знч Разрешения: Массив<РазрешениеДоступа>
    знч Ключи = КлючиПоВладельцам(ВладельцыКлючей)
    если не Ключи.Пусто()
        Разрешения.Добавить(новый РазрешениеДоступа(Ключи,
            МенеджерПравДоступа.ВсеИзмененияСправочника()))
    ;
    возврат Разрешения    
;

@ВПроекте
@НаСервере
метод РедактированиеДанныхСправочниковПерсонально(ВладельцыКлючей: ЧитаемаяКоллекция<ВладельцыКлючейДоступа.Ссылка|ФизическиеЛица.Ссылка|?>): Массив<РазрешениеДоступа>
    знч Разрешения: Массив<РазрешениеДоступа>
    знч Ключи = КлючиПоВладельцам(ВладельцыКлючей)
    если не Ключи.Пусто()
        Разрешения.Добавить(новый РазрешениеДоступа(Ключи,
            МенеджерПравДоступа.ПраваНаСправочникТолькоРедактирование()))
    ;
    возврат Разрешения    
;

@ВПроекте
@НаСервере
метод ЧтениеДанныхСправочниковПерсонально(ВладельцыКлючей: ЧитаемаяКоллекция<ВладельцыКлючейДоступа.Ссылка|ФизическиеЛица.Ссылка|?>): Массив<РазрешениеДоступа>
    знч Разрешения: Массив<РазрешениеДоступа>
    знч Ключи = КлючиПоВладельцам(ВладельцыКлючей)
    если не Ключи.Пусто()
        Разрешения.Добавить(новый РазрешениеДоступа(Ключи,
            [Сущность.Право.Чтение]))
    ;
    возврат Разрешения    
;

@ВПроекте
@НаСервере
метод ЧтениеРедактированиеДанныхРегистровПерсонально(ВладельцыКлючей: ЧитаемаяКоллекция<ВладельцыКлючейДоступа.Ссылка|ФизическиеЛица.Ссылка|?>): Массив<РазрешениеДоступа>
    знч Разрешения: Массив<РазрешениеДоступа>
    
    Разрешения.ДобавитьВсе(РедактированиеДанныхРегистровПерсонально(ВладельцыКлючей))
    Разрешения.ДобавитьВсе(ЧтениеДанныхРегистровПерсонально(ВладельцыКлючей))
    возврат Разрешения    
;

@ВПроекте
@НаСервере
метод РедактированиеДанныхРегистровПерсонально(ВладельцыКлючей: ЧитаемаяКоллекция<ВладельцыКлючейДоступа.Ссылка|ФизическиеЛица.Ссылка|?>): Массив<РазрешениеДоступа>
    знч Разрешения: Массив<РазрешениеДоступа>
    знч Ключи = КлючиПоВладельцам(ВладельцыКлючей)
    если не Ключи.Пусто()
        Разрешения.Добавить(новый РазрешениеДоступа(Ключи,
            МенеджерПравДоступа.ПраваНаРегистрТолькоРедактирование()))
    ;
    возврат Разрешения    
;

@ВПроекте
@НаСервере
метод ЧтениеДанныхРегистровПерсонально(ВладельцыКлючей: ЧитаемаяКоллекция<ВладельцыКлючейДоступа.Ссылка|ФизическиеЛица.Ссылка|?>): Массив<РазрешениеДоступа>
    знч Разрешения: Массив<РазрешениеДоступа>
    знч Ключи = КлючиПоВладельцам(ВладельцыКлючей)
    если не Ключи.Пусто()
        Разрешения.Добавить(новый РазрешениеДоступа(Ключи,
            [Сущность.Право.Чтение]))
    ;
    возврат Разрешения    
;

@ВПроекте
@НаСервере
метод ЧтениеИРедактированиеДанныхСправочниковПоПолномочиям(ПолномочияЧтения: ЧитаемаяКоллекция<Полномочия.Ссылка>,
    ПолномочияРедактирования: ЧитаемаяКоллекция<Полномочия.Ссылка>,
    ЗначенияОграничений: ЧитаемаяКоллекция<ЗначенияОграничений.Ссылка|ФизическиеЛица.Ссылка|Неопределено>): Массив<РазрешениеДоступа>

    знч Разрешения: Массив<РазрешениеДоступа>
    для ЗначениеОграничения из ЗначенияОграничений
        Разрешения.ДобавитьВсе(ЧтениеИРедактированиеДанныхСправочниковПоПолномочиям(
            ПолномочияЧтения,
            ПолномочияРедактирования,
            ЗначениеОграничения
        ))
    ;
    
    возврат Разрешения
;

@ВПроекте
@НаСервере
метод ЧтениеИРедактированиеДанныхСправочниковПоПолномочиям(ПолномочияЧтения: ЧитаемаяКоллекция<Полномочия.Ссылка>,
    ПолномочияРедактирования: ЧитаемаяКоллекция<Полномочия.Ссылка>,
    ЗначениеОграничения: ЗначенияОграничений.Ссылка|ФизическиеЛица.Ссылка|Неопределено = Неопределено): Массив<РазрешениеДоступа>

    знч Разрешения: Массив<РазрешениеДоступа>
    Разрешения.ДобавитьВсе(ЧтениеДанныхСправочниковПоПолномочиям(ПолномочияЧтения, ЗначениеОграничения))
    Разрешения.ДобавитьВсе(РедактированиеДанныхСправочниковПоПолномочию(ПолномочияРедактирования, ЗначениеОграничения))
    
    возврат Разрешения
;

@ВПроекте
@НаСервере
метод ЧтениеРедактированиеУдалениеДанныхСправочниковПоПолномочиям(ПолномочияЧтения: ЧитаемаяКоллекция<Полномочия.Ссылка>,
    ПолномочияРедактирования: ЧитаемаяКоллекция<Полномочия.Ссылка>,
    ЗначенияОграничений: ЧитаемаяКоллекция<ЗначенияОграничений.Ссылка|ФизическиеЛица.Ссылка|Неопределено>): Массив<РазрешениеДоступа>

    знч Разрешения: Массив<РазрешениеДоступа>
    для ЗначениеОграничения из ЗначенияОграничений
        Разрешения.ДобавитьВсе(ЧтениеРедактированиеУдалениеДанныхСправочниковПоПолномочиям(
            ПолномочияЧтения, ПолномочияРедактирования, ЗначениеОграничения))
    ;
    
    возврат Разрешения
;

@ВПроекте
@НаСервере
метод ЧтениеРедактированиеУдалениеДанныхСправочниковПоПолномочиям(ПолномочияЧтения: ЧитаемаяКоллекция<Полномочия.Ссылка>,
    ПолномочияРедактирования: ЧитаемаяКоллекция<Полномочия.Ссылка>,
    ЗначениеОграничения: ЗначенияОграничений.Ссылка|ФизическиеЛица.Ссылка|Неопределено = Неопределено): Массив<РазрешениеДоступа>

    знч Разрешения: Массив<РазрешениеДоступа>
    Разрешения.ДобавитьВсе(ЧтениеДанныхСправочниковПоПолномочиям(ПолномочияЧтения, ЗначениеОграничения))
    Разрешения.ДобавитьВсе(РедактированиеИУдалениеДанныхСправочниковПоПолномочию(ПолномочияРедактирования, ЗначениеОграничения))
    
    возврат Разрешения
;

@ВПроекте
@НаСервере
метод ЧтениеРедактированиеУдалениеДанныхСправочниковПоПолномочиям(ПолномочияЧтения: ЧитаемаяКоллекция<Полномочия.Ссылка>,
    ПолномочияРедактирования: ЧитаемаяКоллекция<Полномочия.Ссылка>,
    ПолномочияУдаления: ЧитаемаяКоллекция<Полномочия.Ссылка>,
    ЗначениеОграничения: ЗначенияОграничений.Ссылка|ФизическиеЛица.Ссылка|Неопределено = Неопределено): Массив<РазрешениеДоступа>

    знч Разрешения: Массив<РазрешениеДоступа>
    Разрешения.ДобавитьВсе(ЧтениеДанныхСправочниковПоПолномочиям(ПолномочияЧтения, ЗначениеОграничения))
    Разрешения.ДобавитьВсе(РедактированиеДанныхСправочниковПоПолномочию(ПолномочияРедактирования, ЗначениеОграничения))
    Разрешения.ДобавитьВсе(РедактированиеИУдалениеДанныхСправочниковПоПолномочию(ПолномочияУдаления, ЗначениеОграничения))
    
    возврат Разрешения
;

@ВПроекте
@НаСервере
метод ЧтениеИРедактированиеДанныхРегистровПоПолномочиям(ПолномочияЧтения: ЧитаемаяКоллекция<Полномочия.Ссылка>,
    ПолномочияРедактирования: ЧитаемаяКоллекция<Полномочия.Ссылка>,
    ЗначенияОграничений: ЧитаемаяКоллекция<ЗначенияОграничений.Ссылка|ФизическиеЛица.Ссылка|Неопределено>): Массив<РазрешениеДоступа>

    знч Разрешения: Массив<РазрешениеДоступа>
    для ЗначениеОграничения из ЗначенияОграничений
        Разрешения.ДобавитьВсе(ЧтениеИРедактированиеДанныхРегистровПоПолномочиям(
            ПолномочияЧтения, ПолномочияРедактирования, ЗначениеОграничения))
    ;
    
    возврат Разрешения
;

@ВПроекте
@НаСервере
метод ЧтениеИРедактированиеДанныхРегистровПоПолномочиям(ПолномочияЧтения: ЧитаемаяКоллекция<Полномочия.Ссылка>,
    ПолномочияРедактирования: ЧитаемаяКоллекция<Полномочия.Ссылка>,
    ЗначениеОграничения: ЗначенияОграничений.Ссылка|ФизическиеЛица.Ссылка|Неопределено = Неопределено): Массив<РазрешениеДоступа>

    знч Разрешения: Массив<РазрешениеДоступа>
    Разрешения.ДобавитьВсе(ЧтениеДанныхРегистровПоПолномочиям(ПолномочияЧтения, ЗначениеОграничения))
    Разрешения.ДобавитьВсе(РедактированиеДанныхРегистровПоПолномочию(ПолномочияРедактирования, ЗначениеОграничения))
    
    возврат Разрешения
;

@ВПроекте
@НаСервере
метод ЧтениеДанныхСправочниковПоПолномочиям(Полномочия: ЧитаемаяКоллекция<Полномочия.Ссылка>,
    ЗначенияОграничений: ЧитаемаяКоллекция<ЗначенияОграничений.Ссылка|ФизическиеЛица.Ссылка|Неопределено>): Массив<РазрешениеДоступа>
    
    знч Разрешения: Массив<РазрешениеДоступа>
    для ЗначениеОграничения из ЗначенияОграничений
        Разрешения.ДобавитьВсе(ЧтениеДанныхСправочниковПоПолномочиям(
            Полномочия,
            ЗначениеОграничения
        ))
    ;
    
    возврат Разрешения
;

@ВПроекте
@НаСервере
метод ЧтениеДанныхСправочниковПоПолномочиям(Полномочия: ЧитаемаяКоллекция<Полномочия.Ссылка>,
    ЗначениеОграничения: ЗначенияОграничений.Ссылка|ФизическиеЛица.Ссылка|Неопределено): Массив<РазрешениеДоступа>
    
    возврат [новый РазрешениеДоступа(КлючиПоПолномочиям(Полномочия, ЗначениеОграничения), [Сущность.Право.Чтение])]
;

@ВПроекте
@НаСервере
метод РедактированиеДанныхСправочниковПоПолномочию(Полномочия: ЧитаемаяКоллекция<Полномочия.Ссылка>,
    ЗначениеОграничения: ЗначенияОграничений.Ссылка|ФизическиеЛица.Ссылка|Неопределено): Массив<РазрешениеДоступа>
    
    возврат [новый РазрешениеДоступа(КлючиПоПолномочиям(Полномочия, ЗначениеОграничения), МенеджерПравДоступа.ПраваНаСправочникКромеУдаления())]
;

@ВПроекте
@НаСервере
метод РедактированиеИУдалениеДанныхСправочниковПоПолномочию(Полномочия: ЧитаемаяКоллекция<Полномочия.Ссылка>,
    ЗначениеОграничения: ЗначенияОграничений.Ссылка|ФизическиеЛица.Ссылка|Неопределено): Массив<РазрешениеДоступа>
    
    возврат [новый РазрешениеДоступа(КлючиПоПолномочиям(Полномочия, ЗначениеОграничения), МенеджерПравДоступа.ПолныеПраваНаСправочник())]
;

@ВПроекте
@НаСервере
метод ЧтениеДанныхРегистровПоПолномочиям(Полномочия: ЧитаемаяКоллекция<Полномочия.Ссылка>,
    ЗначенияОграничений: ЧитаемаяКоллекция<ЗначенияОграничений.Ссылка|ФизическиеЛица.Ссылка|Неопределено>): Массив<РазрешениеДоступа>
    
    знч Разрешения: Массив<РазрешениеДоступа>
    для ЗначениеОграничения из ЗначенияОграничений
        Разрешения.ДобавитьВсе(ЧтениеДанныхРегистровПоПолномочиям(
            Полномочия,
            ЗначениеОграничения
        ))
    ;
    
    возврат Разрешения
;

@ВПроекте
@НаСервере
метод ЧтениеДанныхРегистровПоПолномочиям(Полномочия: ЧитаемаяКоллекция<Полномочия.Ссылка>,
    ЗначениеОграничения: ЗначенияОграничений.Ссылка|ФизическиеЛица.Ссылка|Неопределено): Массив<РазрешениеДоступа>
    
    возврат [новый РазрешениеДоступа(КлючиПоПолномочиям(Полномочия, ЗначениеОграничения), [Сущность.Право.Чтение])]
;

@ВПроекте
@НаСервере
метод РедактированиеДанныхРегистровПоПолномочию(Полномочия: ЧитаемаяКоллекция<Полномочия.Ссылка>,
    ЗначениеОграничения: ЗначенияОграничений.Ссылка|ФизическиеЛица.Ссылка|Неопределено): Массив<РазрешениеДоступа>
    
    возврат [новый РазрешениеДоступа(КлючиПоПолномочиям(Полномочия, ЗначениеОграничения), МенеджерПравДоступа.ПраваНаРегистрТолькоРедактирование())]
;

@ВПроекте
@НаСервере
метод ЕстьПравоНаПолномочие(Полномочие: Полномочия.Ссылка, ЗначениеОграничения: ЗначенияОграничений.Ссылка|ФизическиеЛица.Ссылка|? = Неопределено): Булево
    если МенеджерПравДоступа.ЭтоАдминистраторПриложения()
        возврат Истина
    ;

	знч Ключ = новый КлючКПолномочию.Объект(Полномочие, ЗначениеОграничения)
    знч Пользователь = Пользователи.ТекущийПользователь
    возврат Пользователи.ПолучитьКлючиДоступа(Пользователь).Содержит(Ключ)
;

@ВПроекте
@НаСервере
метод ФизическиеЛицаПоПолномочию(Полномочие: Полномочия.Ссылка): ЧитаемаяКоллекция<ФизическиеЛица.Ссылка>
    исп КонтекстДоступа.Привилегированный()
    знч ФизическиеЛица = новый Множество<ФизическиеЛица.Ссылка>()
    знч Запрос = Запрос{
        выбрать
            Полномочия.Владелец как Ссылка
        поместить РолиПолномочия
        Из
            Роли.Полномочия как Полномочия
        где
            Полномочия.Элемент == %Полномочие
        ;
        выбрать
            ПользователиВладельцевКабинетов.ФизическоеЛицо как ФизическоеЛицо   
        из 
            ГруппыДоступа.Пользователи как Пользователи
            внутреннее соединение ПользователиВладельцевКабинетов как ПользователиВладельцевКабинетов
                по
                    Пользователи.Владелец.Роль в(
                        выбрать
                            РолиПолномочия.Ссылка
                        из РолиПолномочия как РолиПолномочия
                    )
                и Пользователи.Элемент == ПользователиВладельцевКабинетов.Пользователь
    }
    для Элемент из Запрос.Выполнить()
        ФизическиеЛица.Добавить(Элемент.ФизическоеЛицо)    
    ;
    возврат ФизическиеЛица 
;

@ВПроекте
@НаСервере
метод ЕстьПравоНаСоздание(Менеджер: Тип<Справочник|Документ|ПланОбмена>): Булево
    возврат Стд::КонтрольДоступа::КонтрольДоступа.ЕстьПраво(Менеджер, Сущность.Право.Создание)    
;

@ВПроекте
@НаСервере
метод ЕстьПравоНаЧтение(Ссылка: Сущность.Ключ): Булево
    возврат Стд::КонтрольДоступа::КонтрольДоступа.ЕстьПраво(Ссылка, Сущность.Право.Чтение)    
;

@ВПроекте
@НаСервере
метод ЕстьПравоНаИзменение(Ссылка: Сущность.Ключ): Булево
    возврат Стд::КонтрольДоступа::КонтрольДоступа.ЕстьПраво(Ссылка, Сущность.Право.Изменение)    
;

@ВПроекте
@НаСервере
метод ЕстьПравоНаУдаление(Ссылка: Сущность.Ключ): Булево
    возврат Стд::КонтрольДоступа::КонтрольДоступа.ЕстьПраво(Ссылка, Сущность.Право.Удаление)    
;

@ВПроекте
@НаСервере
метод УдалитьГруппуДоступаПоКлючу(Ключ: Строка)
    ГруппыДоступа.УдалитьГруппуДоступаПоКлючу(Ключ)
;

@ВПроекте
@НаСервере
метод ОбновитьГруппуДоступа(Ключ: Строка, Наименование: Строка, Роль: Роли.Ссылка,
    ЗначенияОграничений: ЧитаемаяКоллекция<ЗначенияОграниченийГруппДоступа>, Пользователи: ЧитаемаяКоллекция<Пользователи.Ссылка>,
    ВидГруппыДоступа: ВидыГруппыДоступа): ГруппыДоступа.Ссылка
    
    возврат ГруппыДоступа.ОбновитьГруппуДоступа(Ключ, Наименование, Роль, ЗначенияОграничений, Пользователи, ВидГруппыДоступа)
;

@ВПроекте
@НаСервере
метод ДобавитьПолномочие(Наименование: Строка, ИмяПредопределенныхДанных: Строка, Описание: Строка, ТипАтрибута: ТипыАтрибутов.Ссылка? = Неопределено): Полномочия.Ссылка
    возврат Полномочия.ДобавитьПолномочие(Наименование, ИмяПредопределенныхДанных, Описание, ТипАтрибута)
;

@ВПроекте
@НаСервере
метод Полномочие(ИмяПредопределенныхДанных: Строка): Полномочия.Ссылка
    знч Полномочие = Полномочия.Полномочие(ИмяПредопределенныхДанных)
    если Полномочие == Неопределено
        выбросить новый ИсключениеВыполнения("Полномочие %ИмяПредопределенныхДанных еще не создано")
    ;
    возврат Полномочие
;

@ВПроекте
@НаСервере
метод ДобавитьТипАтрибута(Наименование: Строка, ИмяПредопределенныхДанных: Строка): ТипыАтрибутов.Ссылка
    возврат ТипыАтрибутов.ДобавитьТипАтрибута(Наименование, ИмяПредопределенныхДанных)
;

@ВПроекте
@НаСервере
метод ТипАтрибута(ИмяПредопределенныхДанных: Строка): ТипыАтрибутов.Ссылка?
    возврат ТипыАтрибутов.ТипАтрибута(ИмяПредопределенныхДанных)
;

@ВПроекте
@НаСервере
метод ДобавитьРоль(Наименование: Строка, ИмяПредопределенныхДанных: Строка, Полномочия: ЧитаемыйМассив<Полномочия.Ссылка>): Роли.Ссылка
    возврат Роли.ДобавитьРоль(Наименование, ИмяПредопределенныхДанных, Полномочия, Описание = "")
;

@ВПроекте
@НаСервере
метод ДобавитьРоль(Наименование: Строка, ИмяПредопределенныхДанных: Строка, Полномочия: ЧитаемыйМассив<Полномочия.Ссылка>, Описание: Строка): Роли.Ссылка
    возврат Роли.ДобавитьРоль(Наименование, ИмяПредопределенныхДанных, Полномочия, Описание)
;

@ВПроекте
@НаСервере
метод Роль(ИмяПредопределенныхДанных: Строка): Роли.Ссылка?
    возврат Роли.Роль(ИмяПредопределенныхДанных)
;

@ВПодсистеме
@НаСервере
метод ТипыАтрибутовРолей(): ЧитаемоеСоответствие<Роли.Ссылка, ЧитаемыйМассив<ТипыАтрибутов.Ссылка>>
    знч ТипыАтрибутовРолей: Соответствие<Роли.Ссылка, Массив<ТипыАтрибутов.Ссылка>>
    знч Запрос = Запрос{
        Выбрать Различные
            Владелец как Ссылка,
            Элемент.ТипАтрибута как ТипАтрибута
        Из
            Роли.Полномочия
        }
    исп Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        если СтрокаРезультата.ТипАтрибута != Неопределено
            знч ТипыАтрибутовГруппы = ТипыАтрибутовРолей.ВставитьЕслиОтсутствует(СтрокаРезультата.Ссылка, [])
            ТипыАтрибутовГруппы.Добавить(СтрокаРезультата.ТипАтрибута как ТипыАтрибутов.Ссылка)
        ;
    ;
    
    возврат ТипыАтрибутовРолей
;

@ВПодсистеме
@НаСервере
метод ТипыАтрибутовПолномочий(Полномочия: ЧитаемоеМножество<Полномочия.Ссылка>): ЧитаемоеСоответствие<Полномочия.Ссылка, ТипыАтрибутов.Ссылка?>
    знч ТипыАтрибутовПолномочий: Соответствие<Полномочия.Ссылка, ТипыАтрибутов.Ссылка?>
    
    знч Запрос = Запрос{
        Выбрать
            Ссылка как Полномочие,
            ТипАтрибута как ТипАтрибута
        Из
            Полномочия
        Где
            Ссылка в (%{Полномочия})
    }
    
    исп Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        ТипыАтрибутовПолномочий.Вставить(СтрокаРезультата.Полномочие, СтрокаРезультата.ТипАтрибута)
    ;
    
    возврат ТипыАтрибутовПолномочий
;

@ВПроекте
@НаСервере
метод ЗаписатьНаборОграниченийДоступа(ТипАтрибута: ТипыАтрибутов.Ссылка, ПараметрФильтра: ПараметрыФильтровОграниченийДоступа.Ссылка, Наименование: Строка,
    ЗначенияОграничений: ЧитаемыйМассив<ЗначенияОграничений.Ссылка|ФизическиеЛица.Ссылка>)
    
    НаборыОграниченийДоступа.ЗаписатьНаборОграниченийДоступа(ТипАтрибута, ПараметрФильтра, Наименование, ЗначенияОграничений) 
;
    
@ВПроекте
@НаСервере
метод ОбновитьЗначенияОграничений(НаборОграничений: НаборыОграниченийДоступа.Ссылка, ЗначенияОграничений: ЧитаемыйМассив<ЗначенияОграничений.Ссылка|ФизическиеЛица.Ссылка>)
    НаборыОграниченийДоступа.ОбновитьЗначенияОграничений(НаборОграничений, ЗначенияОграничений)
;

@ВПроекте
@НаСервере
метод НаборОграниченийДоступаПоПараметру(ТипАтрибута: ТипыАтрибутов.Ссылка, ПараметрФильтра: ПараметрыФильтровОграниченийДоступа.Ссылка): НаборыОграниченийДоступа.Ссылка?
    возврат НаборыОграниченийДоступа.НаборОграниченийДоступаПоПараметру(ТипАтрибута, ПараметрФильтра)
;

@ВПроекте
@НаСервере
метод НаборыОграниченийДоступаПоПараметрам(ТипАтрибута: ТипыАтрибутов.Ссылка, ПараметрыФильтра: ЧитаемыйМассив<ПараметрыФильтровОграниченийДоступа.Ссылка>):
    ЧитаемоеСоответствие<ПараметрыФильтровОграниченийДоступа.Ссылка, НаборыОграниченийДоступа.Ссылка>
    
    возврат НаборыОграниченийДоступа.НаборыОграниченийДоступаПоПараметрам(ТипАтрибута, ПараметрыФильтра)
;

@ВПодсистеме
@НаСервере
метод ДобавитьТипАтрибутаДоступаФизическиеЛица()
    ДобавитьТипАтрибута(
        "Физические лица",
        ТИП_АТРИБУТА_КОНТРОЛЯ_ДОСТУПА_ФИЗИЧЕСКИЕ_ЛИЦА
    )
;

@ВПроекте
@НаСервере
метод ТипАтрибутаДоступаФизическиеЛица(): ТипыАтрибутов.Ссылка?
    возврат ТипАтрибута(ТИП_АТРИБУТА_КОНТРОЛЯ_ДОСТУПА_ФИЗИЧЕСКИЕ_ЛИЦА)
;

//КонецОбласти

//Область СлужебныеПроцедурыИФункции

@ВПроекте
@НаСервере
метод РазрешениеДоступаПолныйДоступВсемАутентифицированным(): РазрешениеДоступа
    возврат новый РазрешениеДоступа([новый КлючДоступаДляАутентифицированных.Объект()], МенеджерПравДоступа.ПолныеПраваНаСправочник())
;

@ВПроекте
@НаСервере
метод РазрешениеДоступаПолныйДоступКРегиструСведенийВсемАутентифицированным(): РазрешениеДоступа
    возврат новый РазрешениеДоступа([новый КлючДоступаДляАутентифицированных.Объект()], МенеджерПравДоступа.ПолныеПраваНаРегистрСведений())
;

@НаСервере
метод РазрешениеДоступаПолныйДоступВсемАутентифицированнымКромеУдаления(): РазрешениеДоступа
    возврат новый РазрешениеДоступа([новый КлючДоступаДляАутентифицированных.Объект()], МенеджерПравДоступа.ПраваНаСправочникКромеУдаления())
;

@ВПроекте
@НаСервере
метод РазрешениеДоступаТолькоЧтениеВсемАутентифицированным(): РазрешениеДоступа
    возврат новый РазрешениеДоступа([новый КлючДоступаДляАутентифицированных.Объект()], [Сущность.Право.Чтение])
;

@НаСервере
метод РазрешениеДоступаПолныйДоступРолям(Роли: Массив<РолиДоступа>): РазрешениеДоступа
    возврат новый РазрешениеДоступа(КлючиПоРолям(Роли), МенеджерПравДоступа.ПолныеПраваНаСправочник())
;

@НаСервере
метод РазрешениеДоступаТолькоЧтениеРолям(Роли: Массив<РолиДоступа>): РазрешениеДоступа
    возврат новый РазрешениеДоступа(КлючиПоРолям(Роли), [Сущность.Право.Чтение])
;

@НаСервере
метод РазрешениеДоступаHttpВызовРолям(Роли: Массив<РолиДоступа>): РазрешениеДоступа
    возврат новый РазрешениеДоступа(КлючиПоРолям(Роли), [HttpСервисПраво.Вызов])
;

@НаСервере
метод КлючиПоРолям(Роли: ЧитаемаяКоллекция<РолиДоступа>): Массив<КлючПоРоли.Объект>
    знч Ключи: Массив<КлючПоРоли.Объект>
    для Роль из Роли
        Ключи.Добавить(новый КлючПоРоли.Объект(Роль))
    ;
    
    возврат Ключи
;

@ВПроекте
@НаСервере
метод КлючиПоВладельцам(ВладельцыКлючей: ЧитаемаяКоллекция<ВладельцыКлючейДоступа.Ссылка|ФизическиеЛица.Ссылка|?>): Массив<КлючПоВладельцу.Объект>
    знч Ключи: Массив<КлючПоВладельцу.Объект>
    для ВладелецКлюча из ВладельцыКлючей
        если ВладелецКлюча == Неопределено
            продолжить
        ;
        Ключи.Добавить(новый КлючПоВладельцу.Объект(ВладелецКлюча))
    ;
    возврат Ключи    
;

@ВПроекте
@НаСервере
метод КлючиПоПолномочиям(Полномочия: ЧитаемаяКоллекция<Полномочия.Ссылка>,
    ЗначениеОграничения: ЗначенияОграничений.Ссылка|ФизическиеЛица.Ссылка|Неопределено = Неопределено): Массив<КлючКПолномочию.Объект>
    
    знч Ключи: Массив<КлючКПолномочию.Объект>
    для Полномочие из Полномочия
        Ключи.Добавить(новый КлючКПолномочию.Объект(Полномочие, Неопределено))
        если ЗначениеОграничения != Неопределено
            Ключи.Добавить(новый КлючКПолномочию.Объект(Полномочие, ЗначениеОграничения))
        ;
    ;
    
    возврат Ключи
;

@ВПроекте
@НаСервере
метод ИдентификаторыПользователейПоФизлицам(): ЧитаемоеСоответствие<ФизическиеЛица.Ссылка, ИдПользователя>
    пер ИдентификаторыПользователейПоФизлицам: Соответствие<ФизическиеЛица.Ссылка, ИдПользователя>
    знч Запрос = Запрос{
        Выбрать
            ПользователиВладельцевКабинетов.ФизическоеЛицо Как ФизическоеЛицо,
            Сведения.Ид,
            Сведения.ИдСписка
        Из ПользователиВладельцевКабинетов Как ПользователиВладельцевКабинетов
        Внутреннее соединение СведенияПользователей Как Сведения
        По ПользователиВладельцевКабинетов.Пользователь == Сведения.Пользователь}
    исп Результат = Запрос.Выполнить()
    для РезультатСтрока из Результат
        пер ФизлицоСсылка: ФизическиеЛица.Ссылка = РезультатСтрока.ФизическоеЛицо
        пер Идентификатор: Ууид = РезультатСтрока.Ид
        пер ИдентификаторСписка: Ууид = РезультатСтрока.ИдСписка
        ИдентификаторыПользователейПоФизлицам[ФизлицоСсылка] = новый ИдПользователя(Идентификатор, ИдентификаторСписка)     
    ;
    возврат ИдентификаторыПользователейПоФизлицам
;

@ВПроекте
@НаСервере
метод ФизическиеЛицаАдминистраторыАбонента(): Множество<ФизическиеЛица.Ссылка>
    пер ФизическиеЛица: Множество<ФизическиеЛица.Ссылка>
    знч АдминистраторАбонента = РолиДоступа.АдминистраторАбонента
    знч Запрос = Запрос{
        Выбрать
            ПользователиВладельцевКабинетов.ФизическоеЛицо Как ФизическоеЛицо
        Из 
            ПользователиВладельцевКабинетов Как ПользователиВладельцевКабинетов
            Внутреннее соединение СведенияПользователей.РолиДоступа Как РолиДоступа
            По ПользователиВладельцевКабинетов.Пользователь == РолиДоступа.Владелец.Пользователь
                И РолиДоступа.Элемент == %АдминистраторАбонента}
    исп Результат = Запрос.Выполнить()
    для РезультатСтрока из Результат
        ФизическиеЛица.Добавить(РезультатСтрока.ФизическоеЛицо)    
    ;
    возврат ФизическиеЛица
;

@ВПроекте
@НаСервере
метод РегистрСведенийЧтениеВсемРедактированиеАдминистратору(): Массив<РазрешениеДоступа>
    знч Разрешения: Массив<РазрешениеДоступа>
    Разрешения.Добавить(новый РазрешениеДоступа([новый КлючДоступаДляАутентифицированных.Объект()], [Сущность.Право.Чтение]))
    Разрешения.Добавить(новый РазрешениеДоступа(КлючиПоРолям([РолиДоступа.АдминистраторАбонента]), [Сущность.Право.Изменение]))
    возврат Разрешения
;

@ВПроекте
@НаСервере
метод РегистрСведенийРедактированиеВсем(): Массив<РазрешениеДоступа>
    знч Разрешения: Массив<РазрешениеДоступа>
    Разрешения.Добавить(новый РазрешениеДоступа([новый КлючДоступаДляАутентифицированных.Объект()], [Сущность.Право.Изменение]))
    возврат Разрешения
;

@ВПроекте
@НаСервере
метод СправочникРедактированиеАдминистратору(): Массив<РазрешениеДоступа>
    знч Разрешения: Массив<РазрешениеДоступа>
    Разрешения.Добавить(новый РазрешениеДоступа(КлючиПоРолям([РолиДоступа.АдминистраторАбонента]), [Сущность.Право.Изменение, Сущность.Право.Создание, Сущность.Право.Удаление]))
    возврат Разрешения
;

@ВПроекте
@НаСервере
метод СправочникРедактированиеАутентифицированным(): Массив<РазрешениеДоступа>
    знч Разрешения: Массив<РазрешениеДоступа>
    Разрешения.Добавить(новый РазрешениеДоступа([новый КлючДоступаДляАутентифицированных.Объект()], [Сущность.Право.Изменение, Сущность.Право.Создание, Сущность.Право.Удаление]))
    возврат Разрешения
;

@ВПроекте
@НаСервере
метод СправочникВсеИзмененияВсем(): РазрешениеДоступа
    возврат новый РазрешениеДоступа([новый КлючДоступаДляАутентифицированных.Объект()], МенеджерПравДоступа.ВсеИзмененияСправочника())
;

@ВПроекте
@НаСервере
метод СправочникОграничениеРолям(ВидОграничения: ВидыОграничений, Роли: Массив<РолиДоступа>): РазрешениеДоступа
    возврат новый РазрешениеДоступа(КлючиПоРолям(Роли), СправочникПраваПоВидуОграничений(ВидОграничения))
;

@ВПроекте
@НаСервере
метод ДокументОграничениеРолям(ВидОграничения: ВидыОграничений, Роли: Массив<РолиДоступа>): РазрешениеДоступа
    возврат новый РазрешениеДоступа(КлючиПоРолям(Роли), ДокументПраваПоВидуОграничений(ВидОграничения))
;

@ВПроекте
@НаСервере
метод РегистрСведенийОграничениеРолям(ВидОграничения: ВидыОграничений, Роли: Массив<РолиДоступа>): РазрешениеДоступа
    возврат новый РазрешениеДоступа(КлючиПоРолям(Роли), РегистрСведенийПраваПоВидуОграничений(ВидОграничения))
;

@НаСервере
метод СправочникПраваПоВидуОграничений(ВидОграничения: ВидыОграничений): ЧитаемыйМассив<Сущность.Право>
    выбор ВидОграничения
    когда Чтение
        возврат [Сущность.Право.Чтение]
    когда Редактирование
        возврат [Сущность.Право.Изменение, Сущность.Право.Создание]
    когда РедактированиеИУдаление
        возврат [Сущность.Право.Изменение, Сущность.Право.Создание, Сущность.Право.Удаление]
    когда ЧтениеИРедактирование
        возврат [Сущность.Право.Чтение, Сущность.Право.Изменение, Сущность.Право.Создание]
    когда БезОграничений
        возврат [Сущность.Право.Чтение, Сущность.Право.Изменение, Сущность.Право.Создание, Сущность.Право.Удаление]
    иначе
        возврат []
    ;
;

@НаСервере
метод ДокументПраваПоВидуОграничений(ВидОграничения: ВидыОграничений): ЧитаемыйМассив<Сущность.Право>
    выбор ВидОграничения
    когда Чтение
        возврат [Сущность.Право.Чтение]
    когда Редактирование
        возврат [Сущность.Право.Изменение, Сущность.Право.Создание]
    когда РедактированиеИУдаление
        возврат [Сущность.Право.Изменение, Сущность.Право.Создание, Сущность.Право.Удаление]
    когда ЧтениеИРедактирование
        возврат [Сущность.Право.Чтение, Сущность.Право.Изменение, Сущность.Право.Создание]
    когда БезОграничений
        возврат МенеджерПравДоступа.ПолныеПраваНаСправочник()
    иначе
        возврат []
    ;
;

@НаСервере
метод РегистрСведенийПраваПоВидуОграничений(ВидОграничения: ВидыОграничений): ЧитаемыйМассив<Сущность.Право>
    выбор ВидОграничения
    когда Чтение
        возврат [Сущность.Право.Чтение]
    когда Редактирование
        возврат [Сущность.Право.Изменение]
    когда РедактированиеИУдаление
        возврат [Сущность.Право.Изменение]
    когда ЧтениеИРедактирование
        возврат [Сущность.Право.Чтение, Сущность.Право.Изменение]
    когда БезОграничений
        возврат [Сущность.Право.Чтение, Сущность.Право.Изменение]
    иначе
        возврат []
    ;
;

@ВПроекте
@НаСервере
метод РегистрСведенийЧтениеВсемЗагружаемый(): Массив<РазрешениеДоступа>
    знч Разрешения: Массив<РазрешениеДоступа>
    Разрешения.Добавить(новый РазрешениеДоступа([новый КлючДоступаДляАутентифицированных.Объект()], [Сущность.Право.Чтение]))
    Разрешения.Добавить(новый РазрешениеДоступа(КлючиПоРолям([РолиДоступа.ИнформационнаяСистема]), [Сущность.Право.Изменение]))
    возврат Разрешения
;

@НаСервере
метод ПраваДоступаПоВидуОграничений(ВидОграничения: ВидыОграничений): Массив<ПраваДоступа>
    выбор ВидОграничения
    когда Чтение
        возврат [ПраваДоступа.Чтение]
    когда Редактирование, РедактированиеИУдаление
        возврат [ПраваДоступа.Изменение]
    когда ЧтениеИРедактирование, БезОграничений
        возврат [ПраваДоступа.Чтение, ПраваДоступа.Изменение]
    иначе
        возврат []
    ;
;

/**
Описание: Находит пользователей для переданных физических лиц. 
Параметры: ФизическиеЛицаМассив - физические лица.
Возвращает:
 Соответствие, в котором ключом является физическое лицо, а значением - ссылка на пользователя.
*/
@ВПроекте
@НаСервере
метод ПользователиВладельцевКабинетов(ФизическиеЛицаМассив: ЧитаемоеМножество<ФизическиеЛица.Ссылка>): ЧитаемоеСоответствие<ФизическиеЛица.Ссылка, Пользователи.Ссылка>
    пер ПользователиСоответствие: Соответствие<ФизическиеЛица.Ссылка, Пользователи.Ссылка>
    знч Запрос = Запрос{
        Выбрать 
            ФизическоеЛицо Как ФизическоеЛицо,
            Пользователь Как Пользователь
        Из
            ПользователиВладельцевКабинетов
        Где
            ФизическоеЛицо В (%ФизическиеЛицаМассив)
            И Пользователь != Неопределено}
    исп РезультатЗапроса = Запрос.Выполнить() 
    для РезультатЗапросаСтрока из РезультатЗапроса
        ПользователиСоответствие.Вставить(РезультатЗапросаСтрока.ФизическоеЛицо, РезультатЗапросаСтрока.Пользователь)
    ;
    возврат ПользователиСоответствие
;

//РАЗРЕШЕНИЯ ДОСТУПА

@ВПроекте
@НаСервере
метод ОбъединитьРазрешения(Разрешения: ЧитаемаяКоллекция<ЧитаемыйМассив<РазрешениеДоступа>|РазрешениеДоступа>): Массив<РазрешениеДоступа>
    знч ОбъединенныеРазрешения = новый Массив<РазрешениеДоступа>()
    для Разрешение из Разрешения
        выбор Разрешение
        когда это ЧитаемыйМассив<РазрешениеДоступа>
            ОбъединенныеРазрешения.ДобавитьВсе(Разрешение как ЧитаемыйМассив<РазрешениеДоступа>)    
        когда это РазрешениеДоступа
            ОбъединенныеРазрешения.Добавить(Разрешение как РазрешениеДоступа)    
        ;
    ;
    возврат ОбъединенныеРазрешения    
;

@ВПроекте
@НаСервере
метод ОбъединитьРазрешения(Разрешения: ЧитаемаяКоллекция<ЧитаемоеСоответствие<Объект, ЧитаемыйМассив<РазрешениеДоступа>>>): ЧитаемоеСоответствие<Объект, ЧитаемыйМассив<РазрешениеДоступа>>
    знч ОбъединенныеРазрешения = новый Соответствие<Объект, Массив<РазрешениеДоступа>>()
    для ЧастьРазрешений из Разрешения
        для КлючЗначение из ЧастьРазрешений
            знч РазрешенияОбъекта = ОбъединенныеРазрешения.ВставитьЕслиОтсутствует(КлючЗначение.Ключ, новый Массив<РазрешениеДоступа>())
            РазрешенияОбъекта.ДобавитьВсе(КлючЗначение.Значение)
        ;
    ;
    для КлючЗначение из ОбъединенныеРазрешения
        знч УникальныеРазрешения = новый Массив(новый Множество(КлючЗначение.Значение))
        КлючЗначение.Значение.Очистить()
        КлючЗначение.Значение.ДобавитьВсе(УникальныеРазрешения) 
    ;
    возврат ОбъединенныеРазрешения
;

@ВПроекте
@НаСервере
метод ПолныйДоступАутентифицированным(МенеджерТипа: Справочник|Документ|РегистрСведений): РазрешениеДоступа
    возврат РазрешениеАутентифицированным(МенеджерТипа, ВидыОграничений.БезОграничений)
;

@ВПроекте
@НаСервере
метод ЧтениеАутентифицированным(МенеджерТипа: Справочник|Документ|РегистрСведений): РазрешениеДоступа
    возврат РазрешениеАутентифицированным(МенеджерТипа, ВидыОграничений.Чтение)
;

@ВПроекте
@НаСервере
метод ЧтениеИРедактированиеАутентифицированным(МенеджерТипа: Справочник|Документ): РазрешениеДоступа
    возврат РазрешениеАутентифицированным(МенеджерТипа, ВидыОграничений.ЧтениеИРедактирование)
;

@ВПроекте
@НаСервере
метод РедактированиеИУдалениеАутентифицированным(МенеджерТипа: Справочник|Документ): РазрешениеДоступа
    возврат РазрешениеАутентифицированным(МенеджерТипа, ВидыОграничений.РедактированиеИУдаление)
;

@НаСервере
метод РазрешениеАутентифицированным(МенеджерТипа: Справочник|Документ|РегистрСведений, ВидОграничения: ВидыОграничений): РазрешениеДоступа
    выбор МенеджерТипа
    когда это Справочник
        возврат новый РазрешениеДоступа([новый КлючДоступаДляАутентифицированных.Объект()], СправочникПраваПоВидуОграничений(ВидОграничения))
    когда это Документ
        возврат новый РазрешениеДоступа([новый КлючДоступаДляАутентифицированных.Объект()], ДокументПраваПоВидуОграничений(ВидОграничения))
    когда это РегистрСведений
        возврат новый РазрешениеДоступа([новый КлючДоступаДляАутентифицированных.Объект()], РегистрСведенийПраваПоВидуОграничений(ВидОграничения))
    ;    
;

@ВПроекте
@НаСервере
метод ПолныйДоступАдминистраторуАбонента(МенеджерТипа: Справочник|Документ|РегистрСведений): РазрешениеДоступа   
    возврат ПолныйДоступРолям(МенеджерТипа, [РолиДоступа.АдминистраторАбонента])
;

@ВПроекте
@НаСервере
метод ПолныйДоступИнформационнойСистеме(МенеджерТипа: Справочник|Документ|РегистрСведений): РазрешениеДоступа  
    возврат ПолныйДоступРолям(МенеджерТипа, [РолиДоступа.ИнформационнаяСистема])
;

@ВПроекте
@НаСервере
метод ПолныйДоступМенеджеруСервиса(МенеджерТипа: Справочник|Документ|РегистрСведений): РазрешениеДоступа    
    возврат ПолныйДоступРолям(МенеджерТипа, [РолиДоступа.МенеджерСервиса])
;

@НаСервере
метод ПолныйДоступРолям(МенеджерТипа: Справочник|Документ|РегистрСведений, Роли: Массив<РолиДоступа>): РазрешениеДоступа
    возврат РазрешениеРолям(МенеджерТипа, Роли, ВидыОграничений.БезОграничений)
;

@ВПроекте
@НаСервере
метод ЧтениеАдминистраторуАбонента(МенеджерТипа: Справочник|Документ|РегистрСведений): РазрешениеДоступа  
    возврат ЧтениеРолям(МенеджерТипа, [РолиДоступа.АдминистраторАбонента])
;

@ВПроекте
@НаСервере
метод ЧтениеИнформационнойСистеме(МенеджерТипа: Справочник|Документ|РегистрСведений): РазрешениеДоступа  
    возврат ЧтениеРолям(МенеджерТипа, [РолиДоступа.ИнформационнаяСистема])
;

@ВПроекте
@НаСервере
метод ЧтениеМенеджеруСервиса(МенеджерТипа: Справочник|Документ|РегистрСведений): РазрешениеДоступа  
    возврат ЧтениеРолям(МенеджерТипа, [РолиДоступа.МенеджерСервиса])
;

@НаСервере
метод ЧтениеРолям(МенеджерТипа: Справочник|Документ|РегистрСведений, Роли: Массив<РолиДоступа>): РазрешениеДоступа
    возврат РазрешениеРолям(МенеджерТипа, Роли, ВидыОграничений.Чтение)    
;

@НаСервере
метод РазрешениеРолям(МенеджерТипа: Справочник|Документ|РегистрСведений, Роли: Массив<РолиДоступа>, ВидОграничения: ВидыОграничений): РазрешениеДоступа
    выбор МенеджерТипа
    когда это Справочник
        возврат СправочникОграничениеРолям(ВидОграничения, Роли)
    когда это Документ
        возврат ДокументОграничениеРолям(ВидОграничения, Роли)
    когда это РегистрСведений
        возврат РегистрСведенийОграничениеРолям(ВидОграничения, Роли)
    ;    
;

@ВПроекте
@НаСервере
метод ПолныйДоступАдминистраторуАбонента(Элементы: ЧитаемаяКоллекция<Справочник.Объект>): ЧитаемоеСоответствие<Справочник.Объект, ЧитаемыйМассив<РазрешениеДоступа>>
    возврат РазрешенияАдминистраторуАбонента(Элементы, ВидыОграничений.БезОграничений)   
;

@ВПроекте
@НаСервере
метод ЧтениеАдминистраторуАбонента(Элементы: ЧитаемаяКоллекция<Справочник.Объект>): ЧитаемоеСоответствие<Справочник.Объект, ЧитаемыйМассив<РазрешениеДоступа>>
    возврат РазрешенияАдминистраторуАбонента(Элементы, ВидыОграничений.Чтение)   
;

@НаСервере
метод РазрешенияАдминистраторуАбонента(Элементы: ЧитаемаяКоллекция<Справочник.Объект>, ВидОграничения: ВидыОграничений): ЧитаемоеСоответствие<Справочник.Объект, ЧитаемыйМассив<РазрешениеДоступа>>
    возврат РазрешенияРолям(Элементы, ВидОграничения, [РолиДоступа.АдминистраторАбонента])   
;

@ВПроекте
@НаСервере
метод ПолныйДоступИнформационнойСистеме(Элементы: ЧитаемаяКоллекция<Справочник.Объект>): ЧитаемоеСоответствие<Справочник.Объект, ЧитаемыйМассив<РазрешениеДоступа>>
    возврат РазрешенияИнформационнойСистеме(Элементы, ВидыОграничений.БезОграничений)   
;

@ВПроекте
@НаСервере
метод ЧтениеИнформационнойСистеме(Элементы: ЧитаемаяКоллекция<Справочник.Объект>): ЧитаемоеСоответствие<Справочник.Объект, ЧитаемыйМассив<РазрешениеДоступа>>
    возврат РазрешенияИнформационнойСистеме(Элементы, ВидыОграничений.Чтение)   
;

@НаСервере
метод РазрешенияИнформационнойСистеме(Элементы: ЧитаемаяКоллекция<Справочник.Объект>, ВидОграничения: ВидыОграничений): ЧитаемоеСоответствие<Справочник.Объект, ЧитаемыйМассив<РазрешениеДоступа>>
    возврат РазрешенияРолям(Элементы, ВидОграничения, [РолиДоступа.ИнформационнаяСистема])   
;

@ВПроекте
@НаСервере
метод ПолныйДоступМенеджеруСервиса(Элементы: ЧитаемаяКоллекция<Справочник.Объект>): ЧитаемоеСоответствие<Справочник.Объект, ЧитаемыйМассив<РазрешениеДоступа>>
    возврат РазрешенияМенеджеруСервиса(Элементы, ВидыОграничений.БезОграничений)   
;

@ВПроекте
@НаСервере
метод ЧтениеМенеджеруСервиса(Элементы: ЧитаемаяКоллекция<Справочник.Объект>): ЧитаемоеСоответствие<Справочник.Объект, ЧитаемыйМассив<РазрешениеДоступа>>
    возврат РазрешенияМенеджеруСервиса(Элементы, ВидыОграничений.Чтение)   
;

@НаСервере
метод РазрешенияМенеджеруСервиса(Элементы: ЧитаемаяКоллекция<Справочник.Объект>, ВидОграничения: ВидыОграничений): ЧитаемоеСоответствие<Справочник.Объект, ЧитаемыйМассив<РазрешениеДоступа>>
    возврат РазрешенияРолям(Элементы, ВидОграничения, [РолиДоступа.МенеджерСервиса])   
;

@НаСервере
метод РазрешенияРолям(Элементы: ЧитаемаяКоллекция<Справочник.Объект>, ВидОграничения: ВидыОграничений, Роли: Массив<РолиДоступа>): ЧитаемоеСоответствие<Справочник.Объект, ЧитаемыйМассив<РазрешениеДоступа>>
    знч Разрешения = новый Соответствие<Справочник.Объект, Массив<РазрешениеДоступа>>()
    для Элемент из Элементы
        Разрешения.Вставить(Элемент, [СправочникОграничениеРолям(ВидОграничения, Роли)])
    ;
    возврат Разрешения   
;

@НаСервере
метод РазрешенияРолям(Элементы: ЧитаемаяКоллекция<Документ.Объект>, ВидОграничения: ВидыОграничений, Роли: Массив<РолиДоступа>): ЧитаемоеСоответствие<Документ.Объект, ЧитаемыйМассив<РазрешениеДоступа>>
    знч Разрешения = новый Соответствие<Документ.Объект, Массив<РазрешениеДоступа>>()
    для Элемент из Элементы
        Разрешения.Вставить(Элемент, [ДокументОграничениеРолям(ВидОграничения, Роли)])
    ;
    возврат Разрешения    
;