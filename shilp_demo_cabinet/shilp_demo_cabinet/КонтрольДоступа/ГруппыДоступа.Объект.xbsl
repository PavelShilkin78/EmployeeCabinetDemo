@Обработчик
@ВыполнятьПриЗагрузкеДанных
метод ПослеЗаписи(До: ГруппыДоступа.Данные, ПараметрыЗаписи: ГруппыДоступа.ПараметрыЗаписи)
    исп КонтекстДоступа.Привилегированный()
    ПересчетКлючейДоступа(До)
;

@Обработчик
@ВыполнятьПриЗагрузкеДанных
метод ПослеУдаления(ПараметрыУдаления: ГруппыДоступа.ПараметрыУдаления)
    исп КонтекстДоступа.Привилегированный()
    ПересчетКлючейДоступаПослеУдаления()   
;

метод ПересчетКлючейДоступа(ПредыдущееЗначение: ГруппыДоступа.Данные)
    ЗапланированныеЗадания.Создать(&ГруппыДоступа.ПересчетКлючейДоступа,
        Ссылка, ЭтоНовый(),
        новый ЧитаемоеМножество<Пользователи.Ссылка>(ПредыдущееЗначение.Пользователи),
        ПредыдущееЗначение.Роль,
        ГруппыДоступа.ПолныеЗначенияОграничений(ПредыдущееЗначение.ЗначенияОграничений))
		.ЗапланироватьВТранзакции()
;

метод ПересчетКлючейДоступаПослеУдаления()
    знч Полномочия = Роли.ПолномочияРоли(Роль)
    знч ПолныеЗначенияОграничений = ГруппыДоступа.ПолныеЗначенияОграничений(ЗначенияОграничений)
    знч ТипыАтрибутовПолномочий = КонтрольДоступа.ТипыАтрибутовПолномочий(Полномочия)
    знч ТипыАтрибутовПоТипамЗначений = ТипыАтрибутов.ТипыАтрибутовПоТипамЗначений()
    знч ПользователиПересчет: Массив<Пользователи.Объект>
    для Пользователь из Пользователи
        знч ПользовательОбъект = Пользователь.ЗагрузитьОбъект()
        если ПользовательОбъект == Неопределено
            продолжить
        ;
        ПользователиПересчет.Добавить(ПользовательОбъект)
    ;
    
    для Полномочие из Полномочия
        знч ТипАтрибута = ТипыАтрибутовПолномочий.ПолучитьИлиУмолчание(Полномочие)
        если ТипАтрибута == Неопределено
            новый КлючКПолномочию.Объект(Полномочие, Неопределено).Пересчитать(ПользователиПересчет)    
        иначе
            для ЗначениеОграничения из ПолныеЗначенияОграничений
                если ЗначениеОграничения != Неопределено
                    знч ТипЗначения = (ЗначениеОграничения как неизвестно).ПолучитьТип()
                    если ТипАтрибута != ТипыАтрибутовПоТипамЗначений.ПолучитьИлиУмолчание(ТипЗначения)
                        продолжить
                    ;
                ;
                новый КлючКПолномочию.Объект(Полномочие, ЗначениеОграничения).Пересчитать(ПользователиПересчет)
            ;
        ;    
    ;
;