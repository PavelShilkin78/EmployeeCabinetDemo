импорт ФизическиеЛица

@Обработчик
метод ПроверитьНаличиеКлючейДоступа(Ключи: ЧитаемыйМассив<КлючПоВладельцу.Объект>, Пользователи: ЧитаемыйМассив<Пользователи.Объект>): ЧитаемоеСоответствие<КлючПоВладельцу.Объект, ЧитаемаяКоллекция<Пользователи.Объект|Пользователи.Ссылка>>
    знч КлючиПользователей: Соответствие<КлючПоВладельцу.Объект, Коллекция<Пользователи.Объект|Пользователи.Ссылка>>
    для Ключ из Ключи
        КлючиПользователей.Вставить(Ключ, [])
    ;
    
    знч ПользователиСсылка: Множество<Пользователи.Ссылка>
    для Пользователь из Пользователи
        ПользователиСсылка.Добавить(Пользователь.Ссылка)
    ;
    
    знч ВладельцыКлючейПользователей: Соответствие<Пользователи.Ссылка, Массив<ВладельцыКлючейДоступа.Ссылка|ФизическиеЛица.Ссылка>>
    для Сервис из КонтрольДоступаПоВладельцуСервис.ПолучитьСервисы()
        для КлючИЗначение из Сервис.ВладельцыКлючейПользователей(ПользователиСсылка)
            знч Значение = ВладельцыКлючейПользователей.ВставитьЕслиОтсутствует(КлючИЗначение.Ключ, [])
            Значение.ДобавитьВсе(КлючИЗначение.Значение)
        ;
    ;
    
    если Ключи.Размер() < ПользователиСсылка.Размер()
        ЗаполнитьКлючиПользователейПоКлючам(КлючиПользователей, ВладельцыКлючейПользователей)    
    иначе
        ЗаполнитьКлючПользователейПоПользователям(КлючиПользователей, ПользователиСсылка, ВладельцыКлючейПользователей)
    ;
    
    возврат КлючиПользователей
;

метод ЗаполнитьКлючиПользователейПоКлючам(КлючиПользователей: Соответствие<КлючПоВладельцу.Объект, Коллекция<Пользователи.Объект|Пользователи.Ссылка>>,
    ВладельцыКлючейПользователей: ЧитаемоеСоответствие<Пользователи.Ссылка, ЧитаемыйМассив<ВладельцыКлючейДоступа.Ссылка|ФизическиеЛица.Ссылка>>)
    
    знч ПользователиВладельцевКлючей = ПользователиВладельцевКлючей(ВладельцыКлючейПользователей)
    для КлючИЗначение из КлючиПользователей
        знч Ключ = КлючИЗначение.Ключ
        если Ключ.ВладелецКлюча == Неопределено
            продолжить
        ;
        знч ПользовательКлюча = ПользователиВладельцевКлючей.ПолучитьИлиУмолчание(Ключ.ВладелецКлюча!)
        если ПользовательКлюча == Неопределено
            продолжить
        ;
        КлючИЗначение.Значение.Добавить(ПользовательКлюча)
    ;
;

метод ЗаполнитьКлючПользователейПоПользователям(КлючиПользователей: Соответствие<КлючПоВладельцу.Объект, Коллекция<Пользователи.Объект|Пользователи.Ссылка>>,
    ПользователиСсылка: ЧитаемоеМножество<Пользователи.Ссылка>,
    ВладельцыКлючейПользователей: ЧитаемоеСоответствие<Пользователи.Ссылка, ЧитаемыйМассив<ВладельцыКлючейДоступа.Ссылка|ФизическиеЛица.Ссылка>>)

    для Пользователь из ПользователиСсылка
        знч ВладельцыКлюча = ВладельцыКлючейПользователей.ПолучитьИлиУмолчание(Пользователь)
        если ВладельцыКлюча == Неопределено
            продолжить
        ;
        
        для ВладелецКлюча из ВладельцыКлюча
            знч КлючВладельца = новый КлючПоВладельцу.Объект(ВладелецКлюча)
            знч ПользователиКлюча = КлючиПользователей.ПолучитьИлиУмолчание(КлючВладельца)
            если ПользователиКлюча == Неопределено
                продолжить
            ;
            
            ПользователиКлюча!.Добавить(Пользователь)
        ;
    ;
;

метод ПользователиВладельцевКлючей(ВладельцыКлючейПользователей: ЧитаемоеСоответствие<Пользователи.Ссылка,
    ЧитаемыйМассив<ВладельцыКлючейДоступа.Ссылка|ФизическиеЛица.Ссылка>>):
    ЧитаемоеСоответствие<ВладельцыКлючейДоступа.Ссылка|ФизическиеЛица.Ссылка, Пользователи.Ссылка>
    
    знч ПользователиВладельцевКлючей: Соответствие<ВладельцыКлючейДоступа.Ссылка|ФизическиеЛица.Ссылка, Пользователи.Ссылка>
    для КлючИЗначение из ВладельцыКлючейПользователей
        для Значение из КлючИЗначение.Значение
            ПользователиВладельцевКлючей.Вставить(Значение, КлючИЗначение.Ключ)
        ;
    ;
    возврат ПользователиВладельцевКлючей
;