@ВПодсистеме
метод ДействующийСертификатИздателя(): ХранилищеСертификатов.Ссылка?
    знч Запрос = Запрос{
        Выбрать
            Ссылка
        Из ХранилищеСертификатов
        Где
            Текущий}
            
    исп Результат = Запрос.Выполнить()
    возврат Результат.ПервыйИлиУмолчание()?.Ссылка
;

@ВПодсистеме
метод ХранилищеКлючейPkcs12(): ХранилищеPkcs12
    пер ХранилищеКлючей: ХранилищеPkcs12
    знч Запрос = Запрос{
        Выбрать
            ХранилищеPkcs12
        Из ХранилищеСертификатов
        Где
            Текущий}
    исп Результат = Запрос.Выполнить()
    знч РезультатСтроки = новый ЧитаемыйМассив(Результат)
    если (не РезультатСтроки.Пусто())
        пер ДанныеСсылка: ДвоичныйОбъект.Ссылка = РезультатСтроки[0].ХранилищеPkcs12
        пер Данные: ДвоичныйОбъект = ДанныеСсылка.Загрузить()
        ХранилищеКлючей = новый ХранилищеPkcs12(Данные.ПолучитьБайты())
    ;
    возврат ХранилищеКлючей
;

@ВПодсистеме
метод ХранилищеКлючейPkcs12(Ссылка: ХранилищеСертификатов.Ссылка): ХранилищеPkcs12
    пер ХранилищеКлючей: ХранилищеPkcs12
    знч Запрос = Запрос{
        Выбрать
            ХранилищеPkcs12
        Из ХранилищеСертификатов
        Где
            Ссылка == %Ссылка}
    исп Результат = Запрос.Выполнить()
    знч РезультатСтроки = новый ЧитаемыйМассив(Результат)
    если (не РезультатСтроки.Пусто())
        пер ДанныеСсылка: ДвоичныйОбъект.Ссылка = РезультатСтроки[0].ХранилищеPkcs12
        пер Данные: ДвоичныйОбъект = ДанныеСсылка.Загрузить()
        ХранилищеКлючей = новый ХранилищеPkcs12(Данные.ПолучитьБайты())
    ;
    возврат ХранилищеКлючей
;

@ВПодсистеме
метод ДобавитьСертификатИздателя(СертификатИздателя: ЦифровойСертификат, ПсевдонимСертификата: Строка, ПарольЗакрытогоКлюча: Строка, ХранилищеКлючей: ХранилищеPkcs12,
    СписокОтозванныхСертификатов: СписокОтозванныхСертификатов, Ид: Ууид)
    
    знч Запрос = Запрос{
        Выбрать
            Ссылка
        Из ХранилищеСертификатов
        Где
            Текущий}
    исп Транзакции.Начать()
    исп Результат = Запрос.Выполнить()
    знч РезультатСтроки = новый ЧитаемыйМассив(Результат)
    знч ТекущийСертификат = РезультатСтроки.ПервыйИлиУмолчание()?.Ссылка
    если ТекущийСертификат != Неопределено
        знч ТекущийСертификатОбъект = ТекущийСертификат.ЗагрузитьОбъект(Истина)
        ТекущийСертификатОбъект.Текущий = Ложь
        ТекущийСертификатОбъект.МоментОтзываСертификата = Момент.Сейчас()
        ТекущийСертификатОбъект.ПричинаОтзываСертификата = ПричиныОтзываСертификата.Заменен
        ТекущийСертификатОбъект.Записать()
    ;
    
    знч НовыйСертификат = новый ХранилищеСертификатов.Объект(Ид)
    НовыйСертификат.Текущий = Истина
    НовыйСертификат.ПсевдонимСертификата = ПсевдонимСертификата
    НовыйСертификат.ПарольЗакрытогоКлюча = ПарольЗакрытогоКлюча
    НовыйСертификат.СерийныйНомер = СертификатИздателя.СерийныйНомер.ВСтроку()
    НовыйСертификат.ДатаНачалаДействия = СертификатИздателя.ДействителенС
    НовыйСертификат.ДатаОкончанияДействия = СертификатИздателя.ДействителенПо
    НовыйСертификат.ХранилищеPkcs12 = ОбъектноеХранилище.ЗагрузитьИзБайт(ХранилищеКлючей.ВБайты()).Ссылка
    НовыйСертификат.СписокОтозванныхСертификатов = ОбъектноеХранилище.ЗагрузитьИзБайт(СписокОтозванныхСертификатов.ВБайты()).Ссылка
    НовыйСертификат.Записать()
;

@ВПодсистеме
метод ОбновитьСписокОтозванныхСертификатов(Ссылка: ХранилищеСертификатов.Ссылка, СписокОтозванныхСертификатов: ДвоичныйОбъект.Ссылка?)
    знч Запрос = Запрос{
        Выбрать
            Ссылка
        Из ХранилищеСертификатов
        Где
            Ссылка == %Ссылка}
    исп Транзакции.Начать()
    исп Результат = Запрос.Выполнить()
    знч РезультатСтроки = новый ЧитаемыйМассив(Результат)
    знч ХранилищеСертификатов = РезультатСтроки.ПервыйИлиУмолчание()?.Ссылка
    если ХранилищеСертификатов == Неопределено
        возврат
    ;
    
    знч ХранилищеСертификатовОбъект = ХранилищеСертификатов.ЗагрузитьОбъект(Истина)
    ХранилищеСертификатовОбъект.СписокОтозванныхСертификатов = СписокОтозванныхСертификатов
    ХранилищеСертификатовОбъект.Записать()
;

@ВПодсистеме
метод СписокОтозванныхСертификатов(Ссылка: ХранилищеСертификатов.Ссылка? = Неопределено): СписокОтозванныхСертификатов?
    пер СписокОтозванныхСертификатов: СписокОтозванныхСертификатов?
    знч Запрос = Запрос{
        Выбрать
            СписокОтозванныхСертификатов
        Из ХранилищеСертификатов
        Где
            Ссылка == %Ссылка
            или (%Ссылка == Неопределено и Текущий)}
    исп ПривилегированныйРежим: КонтекстДоступа = КонтекстДоступа.Привилегированный()
    исп Результат = Запрос.Выполнить()
    ПривилегированныйРежим.Закрыть()
    знч РезультатСтроки = новый ЧитаемыйМассив(Результат)
    если (не РезультатСтроки.Пусто())
        пер ДанныеСсылка: ДвоичныйОбъект.Ссылка? = РезультатСтроки[0].СписокОтозванныхСертификатов
        если ДанныеСсылка != Неопределено
            пер Данные: ДвоичныйОбъект = ДанныеСсылка.Загрузить()
            СписокОтозванныхСертификатов = новый СписокОтозванныхСертификатов(Данные.ПолучитьБайты())
        ;
    ;
    возврат СписокОтозванныхСертификатов
;

@ВПодсистеме
метод ОбновитьИнфомрациюКорневогоСертификата(ПсевдонимСертификата: Строка, ПарольЗакрытогоКлюча: Строка): ХранилищеСертификатов.Ссылка?
    знч Запрос = Запрос{
        Выбрать Первые 1
            Ссылка
        Из ХранилищеСертификатов
        Где
            СерийныйНомер == ""}
            
    исп Транзакции.Начать()
    исп Результат = Запрос.Выполнить()
    знч РезультатСтроки = новый ЧитаемыйМассив(Результат)
    если РезультатСтроки.Пусто()
        возврат Неопределено
    ;
    
    пер Ссылка: ХранилищеСертификатов.Ссылка = РезультатСтроки[0].Ссылка
    знч Хранилище = ХранилищеКлючейPkcs12(Ссылка)
    знч ЦифровойСертификат = Хранилище.НайтиСертификат(ПсевдонимСертификата)
    знч ХранилищеСертификатов = Ссылка.ЗагрузитьОбъект(Истина)
    ХранилищеСертификатов.ПсевдонимСертификата = ПсевдонимСертификата
    ХранилищеСертификатов.ПарольЗакрытогоКлюча = ПарольЗакрытогоКлюча
    ХранилищеСертификатов.Текущий = Истина
    ХранилищеСертификатов.ДатаНачалаДействия = ЦифровойСертификат.ДействителенС
    ХранилищеСертификатов.ДатаОкончанияДействия = ЦифровойСертификат.ДействителенПо
    ХранилищеСертификатов.СерийныйНомер = ЦифровойСертификат.СерийныйНомер.ВСтроку()
    ХранилищеСертификатов.Записать()
    
    возврат ХранилищеСертификатов.Ссылка
;

@ВПодсистеме
метод ЗаполнитьПричиныОтзыва()
    исп Транзакции.Начать()
    знч Запрос = Запрос{
        Выбрать Ссылка
        Из ХранилищеСертификатов
        Где МоментОтзываСертификата != Неопределено
    }
    исп РезультатЗапроса = Запрос.Выполнить()
    для РезультатСтрока из РезультатЗапроса
        знч Объект = РезультатСтрока.Ссылка.ЗагрузитьОбъект(Истина)
        Объект.ПричинаОтзываСертификата = ПричиныОтзываСертификата.Заменен
    ;
;