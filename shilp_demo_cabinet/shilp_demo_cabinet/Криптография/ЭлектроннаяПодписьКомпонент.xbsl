импорт Криптография
импорт КриптографияСтандартные
импорт ОбщиеСтандартные
импорт ФизическиеЛица
импорт УниверсальныеМеханизмы
импорт ИнтерфейсныеКомпонентыСтандартные

@Обработчик
метод ПослеСоздания()
    Инициализировать()
    МенеджерГлобальныхКлиентскихСобытий.ПодключитьОбработчик(метод (Источник, Параметры) ->
        выбор Источник
        когда Криптография.ОБНОВЛЕНА_ЭЛЕКТРОННАЯ_ПОДПИСЬ
            Инициализировать()
        ;  
    ;)

;

@Реализация
@ВПроекте
метод Инициализировать()
    если ФизическоеЛицо == Неопределено
        возврат
    ;
    ДоступныеВидыЭлектронныхПодписей = Криптография.ДоступныеВидыЭлектронныхПодписей()
    ВидЭлектроннойПодписи = Криптография.ПараметрыСеанса().ВидЭлектроннойПодписи
    ИнформацияОСертификате = ИнформацияОСертификате(ФизическоеЛицо)
    СертификатСоздан = ИнформацияОСертификате != Неопределено
    КорневойСертификатДействет = Криптография.КорневойСертификатДействет(ФизическоеЛицо)
    ИнтерфейсныеКомпоненты.ИнициализироватьПодчиненныеКомпоненты(Компоненты)
;

метод СоздатьСертификатЗаголовок(): Строка
    возврат СертификатСоздан ? "Обновить сертификат подписи" : "Создать сертификат подписи"
;

метод СоздатьСертификатПриНажатии(Источник: Кнопка, Событие: СобытиеПриНажатии)
    СозданиеЦифровогоСертификата.ОткрытьВМодальномОкне(ФизическоеЛицо = ФизическоеЛицо)
;

метод УдалитьСертификатВидимость(): Булево
    возврат (СертификатСоздан и ВидимостьКнопкиУдалить)   
;

метод УдалитьСертификатПриНажатии(Источник: Кнопка, Событие: СобытиеПриНажатии)
    УдалитьСертификат(ФизическоеЛицо)
    Инициализировать()    
;

@НаСервере @ДоступноСКлиента
статический метод ИнформацияОСертификате(ФизическоеЛицо: ФизическиеЛица.Ссылка): ОбъектыКриптографии.ИнформацияОСертификате?
    исп КонтекстДоступа.Привилегированный()
    знч Сертификат = ИнформацияОСертификатах.ДействующийСертификат(ФизическоеЛицо)
    если Сертификат == Неопределено
        возврат Неопределено
    ;
    возврат МенеджерКриптографии.ИнформацияОСертификате(Сертификат)
;

@НаСервере @ДоступноСКлиента
статический метод УдалитьСертификат(ФизическоеЛицо: ФизическиеЛица.Ссылка)
    знч Запрос = Запрос{
        Выбрать
            Ссылка
        Из
            ИнформацияОСертификатах
        Где
            Владелец == %ФизическоеЛицо    
    }
    
    исп Результат = Запрос.Выполнить() 
    для СтрокаРезультата из Результат
        пер ИнфоОСертификате = СтрокаРезультата.Ссылка.ЗагрузитьОбъект()
        ИнфоОСертификате.Удалить()
    ;       
;

метод СоздатьСертификатВидимость(): Булево
    возврат ИспользуетсяУнэпИнформационнойСистемы()
;

метод ЭлектроннаяПодписьВидимость(): Булево
    возврат ИспользуетсяУнэпИнформационнойСистемы()
;

метод ИспользуетсяУнэпИнформационнойСистемы(): Булево
    возврат ДоступныеВидыЭлектронныхПодписей.Содержит(ВидыЭлектронныхПодписей.УНЭПИнформационнойСистемы)
;

метод ЭлектроннаяПодписьСервисаПодписанияКлиентВидимость(): Булево
    возврат ДоступныеВидыЭлектронныхПодписей.Содержит(ВидыЭлектронныхПодписей.Госключ)
            или ДоступныеВидыЭлектронныхПодписей.Содержит(ВидыЭлектронныхПодписей.УнэпАстралПлатформа)
;

метод ВидЭлектроннойПодписиВидимость(): Булево
    возврат ИспользуетсяУнэпИнформационнойСистемы() и ЭлектроннаяПодписьСервисаПодписанияКлиентВидимость()
;

метод ВидЭлектроннойПодписиПриИзменении(Источник: РадиоКнопка, Событие: СобытиеПриИзменении<ВидыЭлектронныхПодписей>)
    СохранитьВидЭлектроннойПодписи(ФизическоеЛицо, Событие.НовоеЗначение)
;

метод ЭлектроннаяПодписьСервисаПодписанияКлиентПриИзмененииВидаПодписи(Источник: КлиентСервисаПодписания::ЭлектроннаяПодписьКомпонент, Событие: СобытиеПриИзменении<ВидыЭлектронныхПодписей>)
    СохранитьВидЭлектроннойПодписи(ФизическоеЛицо, Событие.НовоеЗначение)
;

@НаСервере @ДоступноСКлиента
статический метод СохранитьВидЭлектроннойПодписи(ФизическоеЛицо: ФизическиеЛица.Ссылка, ВидЭлектроннойПодписи: ВидыЭлектронныхПодписей)
    ПравилаЭлектронныхПодписей.ЗаписатьПравило(ФизическоеЛицо, ВидЭлектроннойПодписи,
        ВариантыИспользованияЭлектроннойПодписи.ПоСотруднику)
;

метод КорневойСертификатПодписиОтозванВидимость(): Булево
    возврат СертификатСоздан и не КорневойСертификатДействет
;