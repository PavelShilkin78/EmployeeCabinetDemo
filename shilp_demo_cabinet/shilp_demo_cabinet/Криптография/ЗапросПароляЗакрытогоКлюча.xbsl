импорт ОбщиеСтандартные
импорт СтандартноеПриложение
импорт ИнтерфейсныеКомпонентыСтандартные

@Обработчик
метод ПослеСоздания()
    если КлиентскоеУстройство.ВидИнтерфейса == ВидИнтерфейса.Телефон
        НеЗапрашиватьПарольЭлектроннойПодписи = Истина
        ДействиеПароляЗакрытогоКлюча = ДействиеПароляЗакрытогоКлюча.ДоКонцаСеанса
    иначе
        НеЗапрашиватьПарольЭлектроннойПодписи = Ложь
        ДействиеПароляЗакрытогоКлюча = ДействиеПароляЗакрытогоКлюча.ПятнадцатьМинут
    ;
;

метод ПанельОсновнаяЗаписатьИЗакрыть(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    если не ПроверитьЗаполнение()
        возврат
    ;
    пер ПараметрыСеанса: Криптография.ПараметрыСеанса = Криптография.ПараметрыСеанса()
    ПараметрыСеанса.ПарольЗакрытогоКлючаПользователя = Пароль
    пер СрокДействия: Момент?
    если НеЗапрашиватьПарольЭлектроннойПодписи 
        если ДействиеПароляЗакрытогоКлюча == ДействиеПароляЗакрытогоКлюча.ВТечениеДня
            СрокДействия = МенеджерДат.КонецДня(Момент.Сейчас())
        иначе если ДействиеПароляЗакрытогоКлюча == ДействиеПароляЗакрытогоКлюча.ПятнадцатьМинут
            СрокДействия = МенеджерДат.ДобавитьМинуты(Момент.Сейчас(), 15)
        ;
    иначе
        СрокДействия = МенеджерДат.ДобавитьСекунды(Момент.Сейчас(), 3)
    ;
    ПараметрыСеанса.СрокДействияЗакрытогоКлючаПользователя = СрокДействия
    Закрыть(Истина)
;

метод ПанельОсновнаяСохранитьЧерновик(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    Закрыть(Ложь)
;

метод ПарольРезультатПроверкиДанных(): РезультатПроверкиДанных
    возврат ПарольСообщениеОбОшибкеВвода.Пусто() ? РезультатПроверкиДанных.Отсутствует : РезультатПроверкиДанных.Ошибка    
;

метод ПроверитьЗаполнение(): Булево
    пер РезультатПроверки = Истина
    ПарольСообщениеОбОшибкеВвода = ""
    если Пароль.Пусто()
        РезультатПроверки = Ложь
        ПарольСообщениеОбОшибкеВвода = "Не указан пароль"
    ;
    
    если ЕстьЗапрещенныеСимволы(Пароль)
        РезультатПроверки = Ложь
        ПарольСообщениеОбОшибкеВвода = "Содержит запрещенные символы"
    ;
    возврат РезультатПроверки
;

метод ЕстьЗапрещенныеСимволы(Пароль: Строка): Булево
    для СимволПароля из Пароль
        знч КодСимвола = Символы.ПолучитьКод(СимволПароля)
        если КодСимвола < 33 или КодСимвола > 126
            возврат Истина
        ;
    ;
    
    возврат Ложь
;

метод ФормаДокументаВысота(): Число
    возврат ОсновнойИнтерфейс.ВысотаФормыДокумента(35)
;

метод ДействиеПароляЗакрытогоКлючаТолькоЧтение(): Булево
    возврат не НеЗапрашиватьПарольЭлектроннойПодписи 
;