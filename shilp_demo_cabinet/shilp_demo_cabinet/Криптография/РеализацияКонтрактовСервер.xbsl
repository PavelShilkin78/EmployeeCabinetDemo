импорт КонтрольДоступа
импорт СтандартноеПриложение
импорт ФизическиеЛица
импорт ВебApi
импорт УниверсальныеМеханизмы
импорт КриптографияСтандартные

// Контракт ПараметрыСеансаПоставщик
@ВПроекте
@Реализация
метод КоллекцияПараметровСеанса(МобильныйИнтерфейс: Булево): Соответствие<Строка, Объект>
    пер ПараметрыСеанса = новый Криптография.ПараметрыСеанса()
    ПараметрыСеанса.ИспользованиеКЭДО = Криптография.НастройкиЭлектронныхПодписей().ИспользованиеКЭДО
    пер ФизическоеЛицо: ФизическиеЛица.Ссылка? = ПользователиСистемы.ТекущееФизическоеЛицо()
    ПараметрыСеанса.ВидЭлектроннойПодписи = РаботаСПодписями.ВидЭлектроннойПодписи(ФизическоеЛицо)
    если ФизическоеЛицо != Неопределено
        ПараметрыСеанса.ПользовательИмеетСертификатЭП = ИнформацияОСертификатах.ЕстьДействующийСертификат(ФизическоеЛицо)
    ;
    возврат {Криптография.КЛЮЧ_ПАРАМЕТРОВ_СЕАНСА: ПараметрыСеанса}
;
// Конец ПараметрыСеансаПоставщик

// Контракт ПодсистемаПриложения

@ВПроекте
@Реализация
метод ОписаниеПодсистемы(): СтандартноеПриложение.ОписаниеПодсистемы
    возврат новый СтандартноеПриложение.ОписаниеПодсистемы(
        Криптография.ИД_ПОДСИСТЕМЫ,
        {
            КонтрольДоступа.ИД_ПОДСИСТЕМЫ, 
            ФизЛица.ИД_ПОДСИСТЕМЫ,
            УниверсальныеМеханизмы.ИД_ПОДСИСТЕМЫ
        }
    )
;

// Конец ПодсистемаПриложения

// Контракт ОбновляемаяПодсистема

@ВПроекте
@Реализация
метод ОбработчикиЗаполнения(): Массив<СтандартноеПриложение.ОписаниеОбработчикаЗаполнения>
    возврат [новый СтандартноеПриложение.ОписаниеОбработчикаЗаполнения(
                    Криптография.ИД_ПОДСИСТЕМЫ, 
                    "КриптографияЗаписатьНастройкиУЦ", 
                    &Криптография.ЗаписатьНастройкиУЦ()
                )
            ]
;

@ВПроекте
@Реализация
метод ОбработчикиОбновления(): Массив<СтандартноеПриложение.ОписаниеОбработчикаОбновления>
    пер Обработчики: Массив<СтандартноеПриложение.ОписаниеОбработчикаОбновления>
    пер Сервис = КриптографияПоставщикВерсииПриложения.ПолучитьСервис()
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
                Криптография.ИД_ПОДСИСТЕМЫ, 
                "РаботаСПодписямиОбновитьСписокОтозванныхСертификатов", 
                &РаботаСПодписями.ОбновитьСписокОтозванныхСертификатов(),
                Сервис.РаботаСПодписямиОбновитьСписокОтозванныхСертификатов()))
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
        Криптография.ИД_ПОДСИСТЕМЫ, 
        "ИнформацияОСертификатахПрекратитьСертификатыПросроченныхКорневых", 
        &ИнформацияОСертификатах.ПрекратитьСертификатыПросроченныхКорневых(),
        Сервис.ИнформацияОСертификатахПрекратитьСертификатыПросроченныхКорневых()))
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
        Криптография.ИД_ПОДСИСТЕМЫ, 
        "ЗапланироватьПроверкуКорневогоСертификата", 
        &ЗапланироватьПроверкуКорневогоСертификата(),
        Сервис.ЗапланироватьПроверкуКорневогоСертификата()))
    возврат Обработчики
;

// Конец ОбновляемаяПодсистема

//Контракт ДанныеApi
@ВПроекте
@Реализация
метод МассивТипов(Получатель: ВидПриложения?, ВерсияФорматаОбмена: Версия?): Массив<Тип>
    пер Типы: Массив<Тип>
    возврат Типы
;

@ВПроекте
@Реализация
метод ТипДанныхJson(ТипОбъекта: Тип, ВерсияФорматаОбмена: Версия?): Массив<Тип>
    пер Типы: Массив<Тип>
    выбор ТипОбъекта
    когда Тип<МашиночитаемыеДоверенности.Ссылка>
        Типы.Добавить(МашиночитаемыеДоверенности.ТипДанныхJson(ВерсияФорматаОбмена))
    ;
    возврат Типы
;

@ВПроекте
@Реализация
метод ТипКоллекцииДанныхJson(ТипОбъекта: Тип, ВерсияФорматаОбмена: Версия?): Массив<Тип>
    пер Типы: Массив<Тип>
    выбор ТипОбъекта
    когда Тип<МашиночитаемыеДоверенности.Ссылка>
        Типы.Добавить(МашиночитаемыеДоверенности.ТипКоллекцииДанныхJson(ВерсияФорматаОбмена))
    ;
    возврат Типы
;

@ВПроекте
@Реализация
метод ИнструментыМенеджераОбъекта(ТипОбъекта: Тип): Массив<ВебApiСервер.ИнструментыМенеджераОбъекта>
    пер НаборИнструментыМенеджераОбъекта: Массив<ВебApiСервер.ИнструментыМенеджераОбъекта>
    пер ИнструментыМенеджераОбъекта: ВебApiСервер.ИнструментыМенеджераОбъекта
    выбор ТипОбъекта
    когда Тип<МашиночитаемыеДоверенности.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как МашиночитаемыеДоверенности.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    ;
    возврат НаборИнструментыМенеджераОбъекта
;

@ВПроекте
@Реализация
метод ПолучитьДанныеJson(ТипОбъекта: Тип, Ссылка: ВходящиеДанные.Ссылка|ИсходящиеДанные.Ссылка, Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?): Массив<Объект?>
    пер ДанныеJson: Массив<Объект?>
    возврат ДанныеJson
;

@ВПроекте
@Реализация
метод МассивСсылокПоФильтру(ТипОбъекта: Тип, Фильтр: () -> ЧитаемыйМассив<Справочник.Ссылка>): Массив<ЧитаемыйМассив<Справочник.Ссылка>>
    пер МассивСсылок: Массив<ЧитаемыйМассив<Справочник.Ссылка>>
    возврат МассивСсылок
;

@ВПроекте
@Реализация
метод УдалитьОбъекты(ТипОбъекта: Тип, ПараметрыЗапроса: ЧитаемоеСоответствие<Строка, Число|Булево|Ууид|Строка>, Сервисы: ВебApiСервер.СервисыУдаленияОбъектов)
;

@ВПроекте
@Реализация
метод ТипОбъектаJson(ТипОбъекта: Тип): Массив<Строка>
    пер ТипОбъектаJson: Массив<Строка>
    выбор ТипОбъекта
    когда Тип<МашиночитаемыеДоверенности.Ссылка>
        ТипОбъектаJson.Добавить(МашиночитаемыеДоверенности.ТипОбъектаJson())
    ;
    возврат ТипОбъектаJson
;

@ВПроекте
@Реализация
метод ЗагрузитьОбъектИзJson(ТипОбъекта: Тип, ТипДанных: Тип, ДанныеJson: Объект?, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    выбор ТипОбъекта
    когда Тип<МашиночитаемыеДоверенности.Ссылка>
        выбор ТипДанных
        когда Тип<МашиночитаемыеДоверенности.ДанныеJson>
            МашиночитаемыеДоверенности.ЗагрузитьОбъектИзJson(ДанныеJson как МашиночитаемыеДоверенности.ДанныеJson, Сервисы)
        когда Тип<МашиночитаемыеДоверенности.ДанныеJson_V3_0>
            МашиночитаемыеДоверенности.ЗагрузитьОбъектИзJson(ДанныеJson как МашиночитаемыеДоверенности.ДанныеJson_V3_0, Сервисы)
        ;
    ;
;

@ВПроекте
@Реализация
метод ПослеЗаписиГруппыОбъектов(ТипОбъекта: Тип, МассивОбъектовОтложенногоОбновления: Массив<ВебApiСервер.ОбъектОтложенногоОбновления>)
;

@ВПроекте
@Реализация
метод ИзменитьОбъектИзJson(ТипОбъекта: Тип, ДанныеJson: Объект, Сервисы: ВебApiСервер.СервисыЗагрузкиJson, ЗаданиеМодификации: ВебApiСервер.ЗаданиеМодификации)
;

@ВПроекте
@Реализация
метод ЗавершитьИзменениеОбъектИзJson(ТипОбъекта: Тип, МассивСсылок: ЧитаемыйМассив<ВходящиеДанные.Ссылка>, ЗаданиеМодификации: ВебApiСервер.ЗаданиеМодификации)
;

@ВПроекте
@Реализация
метод ГруппаИзмененийВJson(ТипОбъекта: Тип, Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>,
    Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?): Массив<ЧитаемоеСоответствие<Строка, Массив<Объект?>>>
    
    пер ДанныеJson: Массив<ЧитаемоеСоответствие<Строка, Массив<Объект?>>>
    возврат ДанныеJson
;

//Конец ДанныеApi

// Контракт СтатистикаПоставщик

@ВПроекте
@Реализация
метод СтатистикаСправочников(): Массив<СтатистикаДанных.Справочник>
    знч СправочникиСтатистика: Массив<СтатистикаДанных.Справочник>
    СправочникиСтатистика.Добавить(СтатистикаДанных.СтатистикаПоСправочнику(Тип<ИнформацияОСертификатах.Ссылка>))
    возврат СправочникиСтатистика
;

@ВПроекте
@Реализация
метод СтатистикаДокументов(): Массив<СтатистикаДанных.Документ>
    возврат []
;

// Конец СтатистикаПоставщик

// Контракт ОтзывСертификатов

@ВПроекте
@Реализация
метод ОтозватьСертификатыХранилищаКорневогоСертификата(ХранилищеКорневогоСертификата: ХранилищеСертификатов.Ссылка)
    ИнформацияОСертификатах.ОтозватьСертификатыХранилищаКорневогоСертификата(ХранилищеКорневогоСертификата)
;

// Конец ОтзывСертификатов

// Контракт ВторичныеДанные

@ВПроекте
@Реализация
метод Пересчитать()
    ЗапланироватьПроверкуКорневогоСертификата() 
;

// Конец ВторичныеДанные

@ВПроекте
метод ЗапланироватьПроверкуКорневогоСертификата()
    если Криптография.ДоступныеВидыЭлектронныхПодписей().Содержит(ВидыЭлектронныхПодписей.УНЭПИнформационнойСистемы)
        Криптография.ЗапланироватьПроверкуКорневогоСертификата()
    иначе
        Криптография.ОстановитьПроверкуКорневогоСертификата()
    ;
;