// Контракт ОсновнойИнтерфейсПоставщик
@ВПроекте
@Реализация
метод РазделыПриложения(): ЧитаемаяКоллекция<ОсновнойИнтерфейс.ОписаниеРаздела>
    знч Разделы: Массив<ОсновнойИнтерфейс.ОписаниеРаздела>
    Разделы.Добавить(ОписаниеРазделаГлавное())
    если СтандартноеПриложение.ПараметрыСеанса().ТекущийПользовательИмеетПолныеПрава
        Разделы.Добавить(ОписаниеРазделаВсеФункции())
    ;
    пер ПанельНастроекДоступна: Булево
    знч Сервисы = НастраиваемаяПодсистема.ПолучитьСервисы()
    для Сервис из Сервисы
        ПанельНастроекДоступна = ПанельНастроекДоступна или Сервис.ЕстьДоступныеПанелиНастроек()
    ;
    если ПанельНастроекДоступна
        Разделы.Добавить(ОписаниеРазделаНастройки())
    ;
    возврат Разделы
;

@ВПроекте
@Реализация
метод Виджеты(): ЧитаемаяКоллекция<ОсновнойИнтерфейс.ОписаниеВиджета>
    возврат []
;

@ВПроекте
@Реализация
метод КомандыВсеФункции(): ЧитаемаяКоллекция<ОсновнойИнтерфейс.ОписательКомандыВсеФункции>
    знч Группа = ОсновнойИнтерфейс.ГруппаКомандАдминистрирование()
    возврат [
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа,
            Представление = "Журнал событий",
            Команда = EventLogForm.ОткрытьФорму
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Команда = QueryConsoleForm.ОткрытьФорму, 
            Представление = "Консоль запросов"),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа,
            Представление = "Задания",
            Команда = JobsForm.ОткрытьФорму
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа,
            Представление = "Список пользователей",
            Команда = СписокПользователей.ОткрытьФорму
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Представление = "Настройки стандартного приложения",
            СоздательФормыСписка = метод()-> возврат новый НастройкиСтандартногоПриложения.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый НастройкиСтандартногоПриложения.АвтоматическаяФормаОбъекта();
            )]
;

@ВПроекте
@Реализация
метод ДополнительныеКоманды(): ЧитаемыйМассив<Команда>
    возврат [ДействиеВыход]
;

@ВПроекте
@Реализация
метод КомандыПанелиДействий(): ЧитаемыйМассив<Команда>
    возврат []
;

@ВПроекте
@Реализация
метод ДополнительныеКомандыПанелиГлавное(): ЧитаемыйМассив<Команда>
    возврат []
;
// Конец ОсновнойИнтерфейсПоставщик

// Контракт ПараметрыСеансаСервис
@ВПроекте
@Реализация
метод ПараметрПоКлючу(Ключ: Строка): Объект
    если не ХранилищеПараметровСеанса().СодержитКлюч(Ключ)
        выбросить новый ПараметрыСеанса.ИсключениеПараметрыСеансаНеУстановлены("Параметры сеанса с ключом %Ключ не установлены", Ключ)
    ;
    возврат ХранилищеПараметровСеанса()[Ключ]
;

@ВПроекте
@Реализация
метод Установить(Ключ: Строка, Параметр: Объект)
    если ХранилищеПараметровСеанса().СодержитКлюч(Ключ)
        выбросить новый ПараметрыСеанса.ИсключениеПараметрыСеансаУжеУстановлены("Параметры сеанса с ключом %Ключ были установлены ранее", Ключ)
    ;   
    ХранилищеПараметровСеанса().Вставить(Ключ, Параметр)
;

// Конец ПараметрыСеансаСервис

метод ХранилищеПараметровСеанса(): Соответствие<Строка, Объект>
    возврат (КлиентскоеПриложение как ОсновноеПриложение).ХранилищеПараметровСеанса
;

метод ОписаниеРазделаВсеФункции(): ОсновнойИнтерфейс.ОписаниеРаздела
    возврат новый ОсновнойИнтерфейс.ОписаниеРаздела(
        Ид = ОсновнойИнтерфейс.ИД_РАЗДЕЛА_ВСЕ_ФУНКЦИИ,
        Имя = "Все функции",
        Пиктограмма = НавигацияВсеФункции.Изображение,
        ЦветПиктограммы = Неопределено,
        НавигационнаяКомандаРаздела = НавигацияВсеФункции,
        ШиринаДляПанелиНавигации = 175)
;

метод ОписаниеРазделаГлавное(): ОсновнойИнтерфейс.ОписаниеРаздела
    возврат  новый ОсновнойИнтерфейс.ОписаниеРаздела(
        Ид = ОсновнойИнтерфейс.ИД_РАЗДЕЛА_ГЛАВНОЕ,
        Имя = "Главное",
        Пиктограмма = НавигацияГлавное.Изображение,
        ЦветПиктограммы = Неопределено,
        НавигационнаяКомандаРаздела = НавигацияГлавное,
        ШиринаДляПанелиНавигации = 144)
;

метод ОписаниеРазделаНастройки(): ОсновнойИнтерфейс.ОписаниеРаздела
    возврат  новый ОсновнойИнтерфейс.ОписаниеРаздела(
        Ид = ОсновнойИнтерфейс.ИД_РАЗДЕЛА_НАСТРОЙКИ,
        Имя = "Настройки",
        Пиктограмма = НавигацияНастройки.Изображение,
        ЦветПиктограммы = Неопределено,
        НавигационнаяКомандаРаздела = НавигацияНастройки,
        ШиринаДляПанелиНавигации = 144)
;