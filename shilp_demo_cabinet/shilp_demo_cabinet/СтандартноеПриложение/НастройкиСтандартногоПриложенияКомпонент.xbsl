// Блок инициализации
импорт ИнтерфейсныеКомпонентыСтандартные

@Обработчик
метод ПослеСоздания()
    Заполнить(НастройкиСтандартногоПриложения())
;

метод ОчиститьДанныеПроексиСервера()
    этот.ДанныеНастроек.ПроксиПорт = 0
    этот.ДанныеНастроек.ПроксиСервер = ""
;

метод ОчиститьДанныеАунтификации()
    этот.ДанныеНастроек.ПроксиАутентификацияПароль = ""
    этот.ДанныеНастроек.ПроксиАутентификацияПользователь = ""
    этот.ДанныеНастроек.ИспользоватьПроксиАутентификацию = Ложь
;

// Конец инициализации

// Блок программного интерфейса

@ВПроекте
метод Записать(): Булево
    возврат ЗаписатьСПроверкой()
;

@ВПроекте
метод Заполнить(ДанныеНастроек: СтандартноеПриложение.НастройкиПриложения)
    этот.ДанныеНастроек = ДанныеНастроек
    ИспользоватьПроксиСервер = не ДанныеНастроек.ПроксиСервер.Пусто()
;

// Конец программного интерфейса 

// Блок обработки событий клиента

метод СохранениеНастроекПриНажатии(Источник: Кнопка, Событие: СобытиеПриНажатии)
    ЗаписатьСПроверкой()
;

// Конец обработки событий клиента

// Блок проверки данных
метод ПроверкаЗаполнения(): Булево
    пер РезультатПроверки = [
        СтандартныеФормы.ПроверкаЗаполенияПоляСтрока(Компоненты.АдресПриложения, НастройкаАдресаПриложения),
        СтандартныеФормы.ПроверкаЗаполенияПоляСтрока(Компоненты.ИмяПроксиСервера, ИспользоватьПроксиСервер),
        СтандартныеФормы.ПроверкаЗаполенияПоляЧисло(Компоненты.ПортПроксиСервера, ИспользоватьПроксиСервер),
        СтандартныеФормы.ПроверкаЗаполенияПоляСтрока(Компоненты.ПроксиПользователь, ДанныеНастроек.ИспользоватьПроксиАутентификацию),
        СтандартныеФормы.ПроверкаЗаполенияПоляСтрока(Компоненты.ПроксиАутентификацияПароль, ДанныеНастроек.ИспользоватьПроксиАутентификацию)
    ]
    возврат РезультатПроверки.Найти(Ложь) == Неопределено
;

// Конец проверки данных

// Блок чтения и записи данных

метод ЗаписатьСПроверкой(): Булево
    если не ИспользоватьПроксиСервер
        ОчиститьДанныеПроексиСервера()
        ОчиститьДанныеАунтификации()
    иначе если не ДанныеНастроек.ИспользоватьПроксиАутентификацию
        ОчиститьДанныеАунтификации()
    ;
    пер ПоляКарточкиЗаполнены = ПроверкаЗаполнения()
    если ПоляКарточкиЗаполнены
        ЗаписатьНастройкиСтандартногоПриложения(ДанныеНастроек)
    ;
    возврат ПоляКарточкиЗаполнены
;

@НаСервере @ДоступноСКлиента
статический метод НастройкиСтандартногоПриложения(): СтандартноеПриложение.НастройкиПриложения
    возврат СтандартноеПриложение.НастройкиПриложения()
;

@НаСервере @ДоступноСКлиента
статический метод ЗаписатьНастройкиСтандартногоПриложения(ДанныеНастроек: СтандартноеПриложение.НастройкиПриложения)
    СтандартноеПриложение.ЗаписатьНастройкиПриложения(ДанныеНастроек)
;

// Конец чтения и записи данных