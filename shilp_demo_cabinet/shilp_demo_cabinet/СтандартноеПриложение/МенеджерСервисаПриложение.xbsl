
@ВПроекте
метод ПолучитьИнформациюОПриложении(): ПредоставляемаяСервисомИнформацияОПриложении
    возврат НастраиваемоеСервисомПриложение.ПолучитьСервис().ИнформацияОПриложении()!   
;

@ВПроекте
метод УстановитьНастройкиПриложения(Настройки: ОпределяемыеСервисомНастройкиПриложения)
        
    знч Сервис = НастраиваемоеСервисомПриложение.ПолучитьСервис()
    если Настройки.applicationUrl == Неопределено
        выбросить новый ИсключениеНедопустимыйФормат("Не заполнен обязательный атрибут applicationUrl")
    ;
    
    ЗаписатьНастройкиПриложения(Настройки.applicationUrl!)
    если Настройки.mode != Неопределено
        Сервис.УстановитьНастройкиПриложения(Настройки)    
        если Настройки.mode == ОпределяемыеСервисомНастройкиПриложения.РежимыРаботы.cloud
            Сервис.УстановитьНастройкиДляОблачногоРежимаРаботы(Настройки)
        ;
    ;   
;

@ВПроекте
метод ОбновитьНастройкиПриложения(Настройки: ОпределяемыеСервисомНастройкиПриложения, Ключи: ЧитаемаяКоллекция<Строка>)
    знч Сервис = НастраиваемоеСервисомПриложение.ПолучитьСервис()

    если Настройки.applicationUrl != Неопределено
        ЗаписатьНастройкиПриложения(Настройки.applicationUrl!)
    ;
    
    Сервис.УстановитьНастройкиПриложения(Настройки, Ключи)    
    Сервис.УстановитьНастройкиДляОблачногоРежимаРаботы(Настройки, Ключи)
;

метод ЗаписатьНастройкиПриложения(АдресПриложения: Строка)
    исп КонтекстДоступа.Привилегированный()
    СтандартноеПриложение.ЗаписатьНастройкиПриложения(новый СтандартноеПриложение.НастройкиПриложения(АдресПриложения))
;

@ВПроекте
метод УстановитьДоступностьПриложения(Доступность: ОпределяемаяСервисомДоступностьПриложения)
    знч Сервис = НастраиваемоеСервисомПриложение.ПолучитьСервис()
    Сервис.УстановитьДоступностьПриложения(Доступность)    
;

@ВПроекте
метод ПолучитьДоступностьПриложения(): ОпределяемаяСервисомДоступностьПриложения
    возврат НастраиваемоеСервисомПриложение.ПолучитьСервис().ИнформацияОДоступностиПриложения()!
;
