импорт Компания
импорт Документы
импорт ФизическиеЛица
импорт Компания::Согласования
импорт ЛичныеКабинетыПользователей
импорт УниверсальныеМеханизмы

@Обработчик
метод ПослеСоздания()
    Инициализировать()
;

метод Инициализировать()
    пер УстановленноеФизическоеЛицо: ФизическиеЛица.Ссылка? = ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо
    если УстановленноеФизическоеЛицо == Неопределено
        возврат
    ;
    ПрочитатьНеподписанныеДокументы()
;

метод ПрочитатьНеподписанныеДокументы() 
    КоличествоСотрудников = КоличествоСотрудниковНеПодписавшихДокументы(
        ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо, Компания.ПараметрыСеанса().ПодразделенияРуководителя)
;

метод КоличествоСотрудниковВидимость(): Булево
    возврат КоличествоСотрудников != 0
;

метод НеподписанныеДокументыЗаголовок(): Строка
    если КоличествоСотрудников == 0
        возврат "Нет задач, которые требуют вашего участия."
    ;
    если КоличествоСотрудников == 1
        возврат "Один из сотрудников еще не подписал направленные ему расчетные листы или другие документы."
    ;
    возврат "Есть сотрудники, которые не подписали направленные им расчетные листы или другие документы."
;

@НаСервере @ДоступноСКлиента
статический метод КоличествоСотрудниковНеПодписавшихДокументы(Руководитель: ФизическиеЛица.Ссылка?, Подразделения: ЧитаемыйМассив<СтруктураПредприятия.Ссылка>): Число
    
    знч ПодчиненныеРуководителя = ОрганизационнаяСтруктура.ПодчиненныеРуководителя(Руководитель, Подразделения)
    
    пер ГруппаФильтр: ГруппаЭлементовФильтра
    пер ФильтрПодчиненныхРуководителя: ЭлементФильтра
    пер ФильтрАктивированныхЛичныхКабинетов: ЭлементФильтра
    ГруппаФильтр.Использовать = Истина
    ГруппаФильтр.ВидГруппы = ВидГруппыЭлементовФильтра.ГруппаИ
    ФильтрПодчиненныхРуководителя.Использовать = Истина
    ФильтрПодчиненныхРуководителя.Поле = "ФизическиеЛица.Ссылка"
    ФильтрПодчиненныхРуководителя.ВидСравнения = ВидСравнения.ВСписке
    ФильтрПодчиненныхРуководителя.Значение = ПодчиненныеРуководителя
    ГруппаФильтр.Элементы.Добавить(ФильтрПодчиненныхРуководителя)
    ФильтрАктивированныхЛичныхКабинетов.Использовать = Истина
    ФильтрАктивированныхЛичныхКабинетов.Поле = "ЛичныеКабинеты.Доступность"
    ФильтрАктивированныхЛичныхКабинетов.ВидСравнения = ВидСравнения.Равно
    ФильтрАктивированныхЛичныхКабинетов.Значение = ДоступностьЛичногоКабинета.Включен
    ГруппаФильтр.Элементы.Добавить(ФильтрАктивированныхЛичныхКабинетов)
    
    исп ПривилегированныйРежим = КонтекстДоступа.Привилегированный()
    пер СписокФизическихЛиц = ЛичныеКабинетыПользователей.ОтображаемыеФизическиеЛица(ГруппаФильтр)
    ПривилегированныйРежим.Закрыть()
    
    пер КоличествоСотрудников = 0
    пер Период = ПолученныеДокументы.ПериодНаОзнакомлениеСПолученнымиДокументами()
    пер ДатаПубликации = Дата.Сейчас().ДобавитьДни(-Период)
    
    знч Запрос = Запрос{
        Выбрать 
            Количество(Различные ДокументыНаПодписьФизическиеЛица.ФизическоеЛицо) Как КоличествоСотрудников
        Из 
            ДокументыНаПодписьФизическиеЛица Как ДокументыНаПодписьФизическиеЛица
                Внутреннее Соединение ДокументыНаПодпись Как ДокументыНаПодпись
                    По ДокументыНаПодписьФизическиеЛица.Документ == ДокументыНаПодпись.Ссылка
                    И (ДокументыНаПодпись.ВариантПодписания == ВариантыПодписанияДокументов.Требуется)
                    И (ДокументыНаПодпись.Видимость != ВидимостьДокументаНаПодпись.ПослеПодписания)
                Левое Соединение СогласованияДокументов Как Подписи
                    По ДокументыНаПодписьФизическиеЛица.Документ == Подписи.Документ
                    И ДокументыНаПодписьФизическиеЛица.ФизическоеЛицо == Подписи.УчастникСогласования
        Где 
            ДокументыНаПодписьФизическиеЛица.Документ.Дата <=| %ДатаПубликации
            И ДокументыНаПодписьФизическиеЛица.ФизическоеЛицо В(%СписокФизическихЛиц)
            И (Подписи.Документ Есть Null)}
    
    
    исп Результат = Запрос.Выполнить() 
    знч РезультатСтроки = новый ЧитаемыйМассив(Результат)
    если (не РезультатСтроки.Пусто())
        КоличествоСотрудников = РезультатСтроки[0].КоличествоСотрудников
    ;
    
    возврат КоличествоСотрудников
    
;