импорт ВладельцыКабинетов
импорт КонтрольДоступа
импорт СтандартноеПриложение
импорт ЛичныеКабинетыПользователей
импорт ФизическиеЛица
импорт Компания::Согласования
импорт Криптография
импорт ИнтерфейсныеКомпонентыСтандартные
импорт Отсутствия
импорт Отпуск
импорт ОбщиеСтандартные
импорт УниверсальныеМеханизмы

// Контракт ИнициализируемыйКомпонент

@ВПроекте
@Реализация
метод Инициализировать()
    ИнтерфейсныеКомпоненты.ИнициализироватьТаблицу(Таблица = Компоненты.ДокументыНаСогласование)
    МенеджерГлобальныхКлиентскихСобытий.ПодключитьОбработчик(метод (Источник, Параметры) ->
        выбор Источник 
        когда ФизЛица.ТРЕБУЕТСЯ_ОБНОВЛЕНИЕ_ДАННЫХ_ФИЗИЧЕСКОГО_ЛИЦА, Согласования.ДОКУМЕНТ_СОГЛАСОВАН, Согласования.ДОКУМЕНТ_ОТКЛОНЕН, Согласования.СОГЛАСОВАНИЕ_ОТМЕНЕНО
            ПрочитатьДокументыНаСогласование()
        ;
        возврат
    ;)

    МенеджерГлобальныхКлиентскихСобытий.ПодключитьОбработчик(метод (Источник, Параметры) ->
        выбор Источник
        когда Криптография.ОБНОВЛЕНА_ЭЛЕКТРОННАЯ_ПОДПИСЬ
            ОписаниеОшибки = ""
        ;
        возврат
    ;)   
    ПрочитатьДокументыНаСогласование()    
;

// Конец ИнициализируемыйКомпонент

метод ПанельМинимальнаяШирина(): Число
    возврат ОсновнойИнтерфейс.МинимальнаяШиринаПанелейПодразделов()
;

метод ПанельМаксимальнаяШирина(): Число
    возврат ОсновнойИнтерфейс.МаксимальнаяШиринаПанелейПодразделов()
;

метод ПрочитатьДокументыНаСогласование()
    
    пер КоллекцияДанныхКомпонента = ДокументыНаСогласование()
    пер ЗаглушкаАрхив: ДокументСПредставлением
    ЗаглушкаАрхив.ДанныеДляПредставления.Представление = "Мной уже согласовано"
    ЗаглушкаАрхив.ДанныеДляПредставления.ЭтоГруппа = Истина
    
    пер ПрочитаннаяКоллекцияДанных: Массив<ДокументСПредставлением>
    если ВладельцыКабинетов.ПараметрыСеанса().ДнейДоОтключенияКабинета == Неопределено
        ПрочитаннаяКоллекцияДанных = ДокументыНаСогласование(Истина, ТолькоПодчиненные)
    ;
    пер СогласованныеДокументы = ДокументыНаСогласование(Ложь, ТолькоПодчиненные) 
    если не СогласованныеДокументы.Пусто()
        ПрочитаннаяКоллекцияДанных.Добавить(ЗаглушкаАрхив)
        ПрочитаннаяКоллекцияДанных.ДобавитьВсе(СогласованныеДокументы)
    ;
        
    для ЭлементКоллекции из ПрочитаннаяКоллекцияДанных
        если ЭлементКоллекции.ДанныеДляПредставления.Изображение == Неопределено
            ЭлементКоллекции.ДанныеДляПредставления.Изображение = СтандартноеПриложение.ПараметрыСеанса().АватарПоУмолчанию
        ;
    ;
    КоллекцияДанныхКомпонента.Очистить()
    КоллекцияДанныхКомпонента.ДобавитьВсе(ПрочитаннаяКоллекцияДанных)
    Пусто = КоллекцияДанныхКомпонента.Пусто()
;

метод ДокументыНаСогласование(): Массив<ДокументСПредставлением>
    возврат Компоненты.ДокументыНаСогласование.Источник.Данные
;

метод ДокументыНаСогласованиеПриНажатииСтроки(Источник: Список<ИсточникДанныхМассив<ДокументСПредставлением>>, Событие: СобытиеСДанными<СтрокаСписка<ДокументСПредставлением>>)
     пер ЗаявлениеИзменилось: Булево = (ТекущееЗаявление != Событие.Данные.ДанныеСтроки.Документ)
    ТекущееЗаявление = Событие.Данные.ДанныеСтроки.Документ как Отсутствие.Ссылка|ОснованиеОтпуска.Ссылка|ДокументыСотрудников.Ссылка|?
    если ТолькоСписок()
        ОткрытьФормуЗаявления()
    иначе если ЗаявлениеИзменилось
        УстановитьТекущееЗаявление()
    ;
;

метод ТолькоСписок(): Булево
    возврат ОсновнойИнтерфейс.РаботаНаУзкомУстройстве() или ТолькоСписок
;

метод УстановитьТекущееЗаявление()
    если ТекущееЗаявление это Отсутствие.Ссылка
        Компоненты.ЗаявлениеОбОтсутствии.УстановитьТекущееЗаявление(МенеджерСущности.ОбъектПоСсылке(ТекущееЗаявление))
    иначе если ТекущееЗаявление это ОснованиеОтпуска.Ссылка
        Компоненты.ЗаявлениеНаОтпуск.УстановитьТекущееЗаявление(МенеджерСущности.ОбъектПоСсылке(ТекущееЗаявление))
    иначе если ТекущееЗаявление это ДокументыСотрудников.Ссылка
        Компоненты.ДокументыСотрудников.УстановитьТекущееЗаявление(МенеджерСущности.ОбъектПоСсылке(ТекущееЗаявление))
    ;
;

метод ОткрытьФормуЗаявления(): Булево
    пер Действие: СтандартныеФормы.ДействиеВФорме?
    если ТекущееЗаявление это Отсутствие.Ссылка
        знч Зявление = ТекущееЗаявление как Отсутствие.Ссылка
        Действие = ОтсутствиеФормаДокумента.ОткрытьВМодальномОкне(КлючОбъекта = Зявление)
    иначе если ТекущееЗаявление это ЗаявлениеНаОтпуск.Ссылка
        знч Зявление = ТекущееЗаявление как ЗаявлениеНаОтпуск.Ссылка
        Действие = ЗаявлениеНаОтпускФормаДокумента.ОткрытьВМодальномОкне(КлючОбъекта = Зявление)
    иначе если ТекущееЗаявление это ЗаявлениеНаПереносОтпуска.Ссылка
        знч Зявление = ТекущееЗаявление как ЗаявлениеНаПереносОтпуска.Ссылка
        Действие = ЗаявлениеНаПереносОтпускаФормаДокумента.ОткрытьВМодальномОкне(КлючОбъекта = Зявление)
    иначе если ТекущееЗаявление это ДокументыСотрудников.Ссылка
        знч Зявление = ТекущееЗаявление как ДокументыСотрудников.Ссылка
        Действие = ДокументыСотрудниковФормаДокумента.ОткрытьВМодальномОкне(КлючОбъекта = Зявление)
    ;
    если Действие == СтандартныеФормы.ДействиеВФорме.Удален
        ТекущееЗаявление = Неопределено
    ;
    возврат (Действие == СтандартныеФормы.ДействиеВФорме.Изменен)
;

метод ЗаявлениеЗаглушкаВидимость(): Булево
    возврат ТекущееЗаявление == Неопределено
;

метод ЗаявлениеИКнопкаВидимость(): Булево
    возврат не ЗаявлениеЗаглушкаВидимость()
;

метод ЗаявлениеОбОтсутствииВидимость(): Булево
    возврат ТекущееЗаявление это Отсутствие.Ссылка
        и Компоненты.ЗаявлениеОбОтсутствии.Объект != Неопределено
;

метод ЗаявлениеНаОтпускВидимость(): Булево
    возврат ТекущееЗаявление это ОснованиеОтпуска.Ссылка 
        и Компоненты.ЗаявлениеНаОтпуск.Объект != Неопределено 
;

метод ДокументыСотрудниковВидимость(): Булево
    возврат ТекущееЗаявление это ДокументыСотрудников.Ссылка
        и Компоненты.ДокументыСотрудников.Объект != Неопределено 
;

метод ПросмотрЗаявленияВидимость(): Булево
    возврат не ТолькоСписок()
;

метод СтрокаСпискаСМиниатюройКомпонентДанных(ДанныеЭлемента: ДокументСПредставлением): СтрокаСпискаСМиниатюройКомпонентДанных
    возврат ДанныеЭлемента.ДанныеДляПредставления
;

метод НесогласованныеДокументы(): Множество<ПодписываемыйДокумент.Ссылка>
    знч НесогласованныеДокументы: Множество<ПодписываемыйДокумент.Ссылка>
    для Документ из ДокументыНаСогласование()
        знч ДокументНаСогласование = Документ
        если ДокументНаСогласование.ДанныеДляПредставления.ЭтоГруппа
            продолжить
        ;
        если ДокументНаСогласование.НаСогласовании
            НесогласованныеДокументы.Добавить(ДокументНаСогласование.Документ)    
        ;
    ;
    возврат НесогласованныеДокументы
;

метод СогласоватьВсеВидимость(): Булево
    возврат НесогласованныеДокументы().Размер() > 0
;

метод ОтклонитьВсеВидимость(): Булево
    возврат НесогласованныеДокументы().Размер() > 0
;

метод СогласоватьВсеПриНажатии(Источник: Кнопка, Событие: СобытиеПриНажатии)
    попытка
        ВыполнитьДействие([Компоненты.СогласоватьВсе, Компоненты.ОтклонитьВсе], метод() ->
            знч НесогласованныеДокументы = НесогласованныеДокументы()
            знч Согласующий = ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо
            Согласования.СогласоватьДокументы(НесогласованныеДокументы, Согласующий)
        ;)
        ПрочитатьДокументыНаСогласование()
    поймать Ошибка: Криптография.ИсключениеЭлектроннаяПодписьОтсутствует
        ОписаниеОшибки = "Отсутствует электронная подпись. Создайте электронную подпись в разделе Профиль."
    поймать Ошибка: Криптография.КорневойСертификатОтозван
        ОписаниеОшибки = "Корневой сертификат подписи отозван. Обновите электронную подпись в разделе Профиль."
    ;
;

метод ОтклонитьВсеПриНажатии(Источник: Кнопка, Событие: СобытиеПриНажатии)
    ВыполнитьДействие([Компоненты.СогласоватьВсе, Компоненты.ОтклонитьВсе], метод() ->
        знч НесогласованныеДокументы = НесогласованныеДокументы()
        знч Согласующий = ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо
        Согласования.ОтклонитьДокументы(НесогласованныеДокументы, Согласующий)
    ;)
;

метод ВыполнитьДействие(КомпонентыСОтключаемойДоступностью: Обходимое<Компонент>, Действие: () -> ничто)
    для Компонент из КомпонентыСОтключаемойДоступностью
        Компонент.Доступность = Ложь    
    ;    
    попытка
        Действие()
    вконце
        для Компонент из КомпонентыСОтключаемойДоступностью
            Компонент.Доступность = Истина
        ;
    ;
;

метод ОткрытьПриНажатии(Источник: Кнопка, Событие: СобытиеПриНажатии)
    если ОткрытьФормуЗаявления()
        УстановитьТекущееЗаявление()
    ;
;

@ВПодсистеме
@НаСервере @НаКлиенте
структура ДокументСПредставлением
    пер Документ: ПодписываемыйДокумент.Ссылка?
    пер ДанныеДляПредставления: СтрокаСпискаСМиниатюройКомпонентДанных
    пер НаСогласовании: Булево    
;

@НаСервере @ДоступноСКлиента
статический метод ДокументыНаСогласование(НаСогласовании: Булево, ТолькоПодчиненные: Булево): Массив<ДокументСПредставлением>
    исп КонтекстДоступа.Привилегированный()
    знч Согласующий = ПользователиСистемы.ТекущееФизическоеЛицо()
    знч ДокументыНаСогласование: Массив<ДокументСПредставлением>
    знч Документы: Массив<ПодписываемыйДокумент.Ссылка>
    если НаСогласовании
        Документы.ДобавитьВсе(Согласования.ДокументыНаСогласовании(Согласующий))
    иначе
        Документы.ДобавитьВсе(Согласования.ДокументыСогласованные(Согласующий))
    ;
    
    
    для Сервис из ДокументыСервисы.ПолучитьСервисы()
        для КлючИЗначение из Сервис.СтрокиДокументовНаСогласовании(Документы)
            ДокументыНаСогласование.Добавить(
                новый ДокументСПредставлением(
                    Документ = КлючИЗначение.Ключ,
                    ДанныеДляПредставления = КлючИЗначение.Значение,
                    НаСогласовании = НаСогласовании
                )
            )
        ;
    ;
    возврат ДокументыНаСогласование
;