импорт Приложение
импорт СтандартноеПриложение
импорт ИнтерфейсныеКомпонентыСтандартные
импорт Криптография
импорт ОбщегоНазначения
импорт ОбщиеСтандартные
импорт ФизическиеЛица
импорт ВладельцыКабинетов
импорт Компания::Согласования
импорт УниверсальныеМеханизмы
импорт ЛичныеКабинетыПользователей

// Обработчики формы документа

@Обработчик
метод ПослеЧтения()
    ИнтерфейсныеКомпоненты.ИнициализироватьПодчиненныеКомпоненты(Компоненты)
    Компоненты.ГлавнаяГруппа.ЧтениеДанныхЗавершено = Истина
;

@НаСервере @НаКлиенте
структура ТабличныеЧасти
    пер ТаблицаФайлы: ПрисоединенныеФайлы?
;

метод ФормаДокументаЗаголовок(): Строка
    возврат Компоненты.Содержимое.ЗаголовокФормы()
;

метод ФормаДокументаВысота(): Число
    возврат ОсновнойИнтерфейс.ВысотаФормыДокумента(100)
;

// Конец Обработчики формы документа

метод ЗаголовокКнопкиЗаписатьИЗакрыть(): Строка
    пер ЗаголовокКнопки = "Не принят"
    если не ЕстьЗамечания
        ЗаголовокКнопки = "Подписать"
    ;
        
    если Объект.ВариантПодписания == ВариантыПодписанияДокументов.Требуется
        и (Криптография.ПараметрыСеанса().ПользовательИмеетСертификатЭП
            или Криптография.ПараметрыСеанса().ВидЭлектроннойПодписи != ВидыЭлектронныхПодписей.УНЭПИнформационнойСистемы)
        
        возврат ОбщегоНазначения.ЗаголовокКнопкиЗаписатьИЗакрыть(
            Ложь,
            не Компоненты.Содержимое.ТребуетОзнакомления,
            Ложь,
            ЗаголовокКнопки)
    ;
    возврат ВладельцыКабинетов.ПараметрыСеанса().Пол == ПолФизическогоЛица.Мужской ? "Ознакомился" : "Ознакомилась"
;

метод ИспользованиеЗаписатьИЗакрыть(): Булево
    возврат не Компоненты.Содержимое.ТолькоЧтение
;

метод ЗаголовокКнопкиСохранитьЧерновик(): Строка
    возврат "Посмотрю потом"
;

метод ИспользованиеКнопкиСохранитьЧерновик(): Булево
    возврат Компоненты.Содержимое.ТребуетОзнакомления и не ТолькоЧтение
;

метод ЗамечаниеГруппаВидимость(): Булево
    возврат Приложение.ПараметрыСеанса().ФункциональныеОпции.ИспользоватьОтказПодписывать
                и Компоненты.Содержимое.ТребуетОзнакомления и не ТолькоЧтение
;

метод ПанельОсновнаяЗаписатьИЗакрыть(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    если ЕстьЗамечания и ТекстЗамечания.Пусто()
        ОшибкаСообщение = "Вам необходимо заполнить Комментарий"
        возврат
    ;
    ЗакрытьФорму(Истина)
;

метод ПанельОсновнаяСохранитьЧерновик(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    ЗакрытьФорму(Ложь)
;

// Конец Область обработчиков ПанельОсновная

// Конец Область обработчиков ГлавнаяГруппа

метод ОчиститьПолеЗамечание(Источник: ФлажокРасширенный, Событие: СобытиеПриИзменении<Булево?>)
    знч ОтказОтПодписанияВыключен = не Событие.НовоеЗначение!
    если ОтказОтПодписанияВыключен и не ТекстЗамечания.Пусто()
        ТекстЗамечания = ""
    ;
;

метод СодержимоеЗавершеноЧтениеДанных(Источник: ДокументыНаПодписьКомпонент, Событие: СобытиеКомпонента)
    Компоненты.ГлавнаяГруппа.ЧтениеДанныхЗавершено = Истина
;

метод ЗакрытьФорму(Ознакомиться: Булево)
    если не Ознакомиться или не Компоненты.Содержимое.ТребуетОзнакомления
        Закрыть(СтандартныеФормы.ДействиеВФорме.НеИзменен)
        возврат
    ;
   
    если Объект.ВариантПодписания == ВариантыПодписанияДокументов.Требуется
        если не ЕстьЗамечания
            если не Криптография.ВвестиПарольЗакрытогоКлюча(ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо, Объект.Ссылка)
                возврат
            ;
        ;
        знч ТекущееФизическоеЛицо = ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо
        знч ПарольЗакрытогоКлючаПользователя = Криптография.ПараметрыСеанса().ПарольЗакрытогоКлючаПользователя
        УстановитьСостояниеОзнакомлен(Объект.Ссылка, Объект.Файл, ТекущееФизическоеЛицо, ПарольЗакрытогоКлючаПользователя, ТекстЗамечания)
        если ТекстЗамечания.Пусто()
            если Криптография.УстановитьПодписьВСервисеПодписания(Объект.Ссылка, ТекущееФизическоеЛицо, Согласования.РольПодписантаСотрудник()) == Ложь
                Прочитать(Объект.Ссылка)
                возврат
            ;
        ;
    ;
    
    ПолученныеДокументы.ЗарегистрироватьОзнакомлениесОбъектом(
        Объект.Ссылка, ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо)

    МенеджерГлобальныхКлиентскихСобытий.Оповестить(Согласования.ДОКУМЕНТ_СОГЛАСОВАН, Объект.Ссылка)
    Закрыть(СтандартныеФормы.ДействиеВФорме.Изменен)
;

метод УстановитьДоступностьКоманд(Доступность: Булево)
    пер ГлавнаяГруппа: КорневойКомпонентМодальнойФормы = Компоненты.ГлавнаяГруппа
    для КоманднаяПанель из ГлавнаяГруппа.КомандныеПанели
         КоманднаяПанель.Доступность = Доступность
    ;
;

метод СодержимоеИзменениеСостоянияЗагрузкиФайлов(ЗагрузкаВыполняется: Булево)
    УстановитьДоступностьКоманд(не ЗагрузкаВыполняется)
;

метод ОшибкаПриВыполненииКоманды(Источник: КоманднаяПанельФорм, Событие: СобытиеСДанными<Исключение>)
    Криптография.СброситьПарольЗакрытогоКлючаПриОшибкеВводаПароля(Событие.Данные)
    Компоненты.ГлавнаяГруппа.ПоказатьОшибку(ОбщегоНазначения.ОписаниеОшибкиПриДействииСДокументом(Событие.Данные))
;

@НаСервере @ДоступноСКлиента
статический метод УстановитьСостояниеОзнакомлен(
        Ссылка: ДокументыНаПодпись.Ссылка, 
        Файл: Файлы.Ссылка,
        ФизическоеЛицо: ФизическиеЛица.Ссылка, 
        ПарольЗакрытогоКлюча: Строка, 
        ТекстЗамечания: Строка)
    
    знч ДанныеСогласующего = новый Согласования.ДанныеСогласующего(ФизическоеЛицо, Согласования.РольПодписантаСотрудник())
    если не ТекстЗамечания.Пусто()
        СогласованияДокументов.ЗарегистрироватьОтказПростойПодписью(Ссылка, ДанныеСогласующего, ТекстЗамечания)
        возврат
    ;
    
    если не Согласования.ПроверитьНастройкиИПодписатьФайлДокумента(Ссылка, Файл, ДанныеСогласующего, ПарольЗакрытогоКлюча)
        СогласованияДокументов.ЗарегистрироватьСогласованиеПростойПодписью(Ссылка, ДанныеСогласующего)
    ;
;

метод ПанельОсновнаяТребуетсяСобственноручнаяПодпись(): Булево
    возврат Объект.ВариантПодписания == ВариантыПодписанияДокументов.НеобходимаСобственноручнаяПодпись
;

метод ПанельОсновнаяНеТребуетсяПодписывать(): Булево
    возврат Объект.ВариантПодписания == ВариантыПодписанияДокументов.НеТребуется
;
