импорт ИнтерфейсныеКомпонентыСтандартные
импорт Компания::Согласования
импорт ЛичныеКабинетыПользователей
импорт ОбменДанными
импорт ОбщегоНазначения
импорт ОбщиеСтандартные
импорт УниверсальныеМеханизмы
импорт УниверсальныеМеханизмы::ШаблоныДокументов
импорт ФизическиеЛица
импорт КонтрольДоступа

метод ДокументыСотрудниковКомпонентЗаголовок(): Строка
   пер ЗаголовокДокумента: Строка
    если РежимПросмотра
        ЗаголовокДокумента = ЗаголовокФормы()
    ;
    возврат ЗаголовокДокумента
;

@ВПодсистеме
метод ЗаголовокФормы(): Строка
    возврат Объект?.ШаблонДокумента?.Представление() ?? ""
;

метод ДокументыСотрудниковКомпонентОтступПоВертикали(): РазмерОтступа | Авто
    возврат РежимПросмотра ? РазмерОтступа.Двойной : РазмерОтступа.Отсутствует
;

метод РежимПросмотра(): Булево
    возврат РежимПросмотра или не ВозможноРедактирование()
;

@ВПодсистеме
метод ВозможноРедактирование(): Булево
    возврат СостояниеЗапроса == СостоянияДокумента.Черновик 
            или СостояниеЗапроса == СостоянияДокумента.ОжидаетЗаполнения
            или СостояниеЗапроса == Неопределено
;

// Контракт ВладелецСостояниеДокументовКомпонент

@ВПроекте
@Реализация
метод ПредставленияДокументов(): ЧитаемаяКоллекция<СостояниеДокументаКомпонентДанных>
    возврат ПолученныеДокументы.ПредставленияДокументовСотрудников(ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо)
;

@ВПроекте
@Реализация
метод ПриНажатии(Документ: ДокументИмеющийСостояние.Ссылка, ИдКомпонента: Строка = "")
    знч ДокументСсылка = Документ как ДокументыСотрудников.Ссылка
    ДокументыСотрудниковФормаДокумента.ОткрытьВМодальномОкне(КлючОбъекта = ДокументСсылка) 
;

@ВПроекте
@Реализация
метод ТипыОтображаемыхДокументов(): Массив<Тип>
    возврат [Тип<ДокументыСотрудников.Ссылка>]
;

// Конец ВладелецСостояниеДокументовКомпонент

// Контракт ДокументСотрудникаКомпонент

@ВПроекте
@Реализация
метод УстановитьТекущееЗаявление(Заявление: Объект)
    если Заявление это ДокументыСотрудников.Объект
        Объект = Заявление как ДокументыСотрудников.Объект
        ПрочитатьОбъект()
    ;
;

// Конец ДокументСотрудникаКомпонент

// Контракт ВладелецПрисоединенныеФайлыКомпонент

@Реализация
@ВПроекте
метод ПрисоединенныеФайлыНачатаЗагрузкаФайлов(Источник: ПрисоединенныеФайлыКомпонент, Событие: неизвестно, ИдКомпонента: Строка = "")
    ИзменениеСостоянияЗагрузкиФайлов(новый СобытиеСДанными(Истина))
;

@Реализация
@ВПроекте
метод ПрисоединенныеФайлыЗавершенаЗагрузкаФайлов(Источник: ПрисоединенныеФайлыКомпонент, Событие: неизвестно, ИдКомпонента: Строка = "")
    ИзменениеСостоянияЗагрузкиФайлов(новый СобытиеСДанными(Ложь))
;

// Конец ВладелецПрисоединенныеФайлыКомпонент

@НаСервере @ДоступноСКлиента
статический метод Прочитать(Документ: ДокументыСотрудников.Ссылка): ДокументыСотрудников.Объект
    возврат Документ.ЗагрузитьОбъект()
;

@ВПодсистеме
@НаСервере @НаКлиенте
структура ТабличныеЧасти
    пер ТаблицаФайлы: ПрисоединенныеФайлы?
    пер ТаблицаСогласующие: Согласующие?
    пер ДополнительныеРеквизиты: РеквизитыШаблона?
;

@ВПодсистеме
метод МодифицированныеТабличныеЧасти(): ТабличныеЧасти
    пер ТабличныеЧасти: ТабличныеЧасти
    если Компоненты.ПрисоединенныеФайлы.СобственнаяМодифицированность
        ОбщегоНазначения.ОчиститьКлиентскиеДанные(ТаблицаФайлы)    
        ТабличныеЧасти.ТаблицаФайлы = ТаблицаФайлы
    ;

    ТабличныеЧасти.ДополнительныеРеквизиты = ДополнительныеРеквизиты

    возврат ТабличныеЧасти
;

@ВПодсистеме 
метод СброситьМодифицированностьТабличныхЧастей()
    Компоненты.ПрисоединенныеФайлы.СобственнаяМодифицированность = Ложь
    Компоненты.ДополнительныеРеквизиты.СобственнаяМодифицированность = Ложь
;

@НаСервере @ДоступноСКлиента
статический метод ДанныеТабличныхЧастей(ЭтоНовый: Булево, Владелец: ДокументыСотрудников.Ссылка, ШаблонДокумента: ШаблоныДокументов.Ссылка): ТабличныеЧасти
    
    пер ДанныеТабличныхЧастей: ТабличныеЧасти
    если ЭтоНовый
        ДанныеТабличныхЧастей.ДополнительныеРеквизиты = ШаблоныДокументовМенеджер.РеквизитыШаблона(
            Неопределено, УниверсальныеМеханизмы.Ид(ШаблоныДокументов.ИД_ПОДСИСТЕМЫ, ШаблонДокумента.Ид.ВСтроку()))
        ДанныеТабличныхЧастей.ДополнительныеРеквизиты.Владелец = Владелец
    иначе
        ДанныеТабличныхЧастей.ТаблицаФайлы = ПрисоединенныеФайлыМенеджер.ПрисоединенныеФайлы(Владелец)
        ДанныеТабличныхЧастей.ТаблицаСогласующие = Согласования.Согласующие(Владелец)
        ДанныеТабличныхЧастей.ДополнительныеРеквизиты = ШаблоныДокументовМенеджер.РеквизитыШаблона(
            Владелец, УниверсальныеМеханизмы.Ид(ШаблоныДокументов.ИД_ПОДСИСТЕМЫ, ШаблонДокумента.Ид.ВСтроку()))
    ;
    возврат ДанныеТабличныхЧастей
;

метод ПрочитатьОбъект()
    если Объект.ЭтоНовый()
        Объект.ШаблонДокумента = ШаблонДокумента
    иначе
        ШаблонДокумента = Объект.ШаблонДокумента
    ;    
    пер ДанныеСостояния = СостДокументов.ДанныеСостоянияДокумента(Объект.Ссылка)
    СостояниеЗапроса = ДанныеСостояния.Состояние
    ДатаСостояния = ДанныеСостояния.Дата
    знч ДополнительныеДанные = ДополнительныеДанные(Объект.ЭтоНовый(), Объект.Ссылка, Объект.ФизическоеЛицо, ШаблонДокумента)
    знч ТабличныеЧасти = ДополнительныеДанные.ТабличныеЧасти
    НеобходимоСогласование = ДополнительныеДанные.НеобходимоСогласование
    НеобходимоПодписание = ДополнительныеДанные.НеобходимоПодписание
    НеобходимоНаличиеВложений = ДополнительныеДанные.НеобходимоНаличиеВложений
    если Объект.ЭтоНовый()
        ТаблицаФайлы.Владелец = Объект.Ссылка
    иначе
        Отправлен = ЭтоОтправляемыйДокумент(Объект.Ссылка)
        ТаблицаФайлы = ТабличныеЧасти.ТаблицаФайлы
        ТаблицаСогласующие = ТабличныеЧасти.ТаблицаСогласующие
        ОтслеживатьИзменениеДанных(Компоненты.ПрисоединенныеФайлы, Истина)
    ;
    ДополнительныеРеквизиты = ТабличныеЧасти.ДополнительныеРеквизиты
    ОтслеживатьИзменениеДанных(Компоненты.ДополнительныеРеквизиты, Истина)
    СброситьМодифицированностьТабличныхЧастей()
    если Объект.ЭтоНовый()
        Компоненты.ДополнительныеРеквизиты.СобственнаяМодифицированность = не ДополнительныеРеквизиты.Реквизиты.Пусто()
    ;
    
    ДанныеСогласующего = ДополнительныеДанные.ДанныеСогласующего
    
    РежимСогласования = Согласования.ЭтоРежимСогласования(
        ДополнительныеДанные.Состояние, ДополнительныеДанные.Отправлен, ПодписанТекущимФизическимЛицом, 
        Объект.ФизическоеЛицо, 
        ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо,
        ДанныеСогласующего)
    
    СобственнаяМодифицированность = Ложь
    ИнтерфейсныеКомпоненты.ИнициализироватьПодчиненныеКомпоненты(Компоненты)
    ЗавершеноЧтениеДанных(новый СобытиеКомпонента())   
;

@НаСервере @НаКлиенте
структура ДополнительныеДанныеДокумента
    пер Состояние: СостоянияДокумента?
    пер ДатаСостояния: Момент?
    пер НеобходимоСогласование: Булево
    пер НеобходимоПодписание: Булево
    пер ТабличныеЧасти: ТабличныеЧасти
    пер Отправлен: Булево
    пер ДанныеСогласующего: Согласования.ДанныеСогласующего?
    пер НеобходимоНаличиеВложений: Булево
;

@НаСервере @ДоступноСКлиента
статический метод ДополнительныеДанные(
        ЭтоНовый: Булево, 
        Ссылка: ДокументыСотрудников.Ссылка?, 
        ФизическоеЛицо: ФизическиеЛица.Ссылка,
        ШаблонДокумента: ШаблоныДокументов.Ссылка): ДополнительныеДанныеДокумента
    
    знч РеквизитыШаблона = МенеджерСущности.ЗначенияРеквизитовОбъекта(ШаблонДокумента , ["НеобходимоСогласование", "НеобходимоПодписание", "НеобходимоНаличиеВложений"])
    пер ДанныеДокумента = новый ДополнительныеДанныеДокумента(
        НеобходимоСогласование = РеквизитыШаблона.ПолучитьИлиУмолчание("НеобходимоСогласование", Ложь),
        НеобходимоПодписание = РеквизитыШаблона.ПолучитьИлиУмолчание("НеобходимоПодписание", Ложь),
        НеобходимоНаличиеВложений = РеквизитыШаблона.ПолучитьИлиУмолчание("НеобходимоНаличиеВложений", Ложь),
        ТабличныеЧасти = ДанныеТабличныхЧастей(ЭтоНовый, Ссылка, ШаблонДокумента))
    если не ЭтоНовый
        ДанныеДокумента.Отправлен = ЭтоОтправляемыйДокумент(Ссылка)
        знч Согласовавшие: Массив<ФизическиеЛица.Ссылка>
        пер НомерШагаСогласования = 1
        для Согласующий из ДанныеДокумента.ТабличныеЧасти.ТаблицаСогласующие.Согласующие
            если Согласующий.УчастникСогласования != Неопределено
                Согласовавшие.Добавить(Согласующий.УчастникСогласования)
            ;
            НомерШагаСогласования = Макс(НомерШагаСогласования, Согласующий.НомерШагаСогласования)
        ;
        ДанныеДокумента.ДанныеСогласующего = Согласования.ДанныеСогласующего(
            ПользователиСистемы.ТекущееФизическоеЛицо(),
            ПолученныеДокументы.ВидСогласуемогоДокументаСотрудника(ШаблонДокумента),
            ФизическоеЛицо,
            НомерШагаСогласования,
            Согласовавшие
        )
    ;
    пер ДанныеСостояния = СостДокументов.ДанныеСостоянияДокумента(Ссылка)
    ДанныеДокумента.Состояние = ДанныеСостояния.Состояние
    ДанныеДокумента.ДатаСостояния = ДанныеСостояния.Дата
    возврат ДанныеДокумента
;

@НаСервере @ДоступноСКлиента
статический метод ЭтоОтправляемыйДокумент(Ссылка: ДокументыСотрудников.Ссылка): Булево
    возврат ОбменДанными.ЭтоОтправляемыйДокумент(Ссылка)
;

@ВПодсистеме
метод ПроверкаЗаполнения(): Булево
    пер Результат = Компоненты.ДополнительныеРеквизиты.ПроверкаЗаполнения()
    если НеобходимоНаличиеВложений
        если ТаблицаФайлы.Файлы.Пусто() и Объект.Комментарий.Пусто()
            выбросить новый ОбщегоНазначения.ОшибкаПроверкиЗаполненияФормы("Приложите копии документов или опишите в поле Комментарий причину обращения.")
        ;
    ;
    возврат Результат
;