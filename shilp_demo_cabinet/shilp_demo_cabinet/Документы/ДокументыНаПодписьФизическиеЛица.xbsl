импорт ФизическиеЛица
импорт ВебApi
импорт КонтрольДоступа

//Область РазрешенияДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): Массив<РазрешениеДоступа>
    возврат [КонтрольДоступа.ЧтениеИРедактированиеАутентифицированным(этот),
            КонтрольДоступа.ПолныйДоступИнформационнойСистеме(этот)]    
;

@Обработчик
метод ВычислитьРазрешенияДоступаДляОбъектов(Элементы: ЧитаемыйМассив<ДокументыНаПодписьФизическиеЛица.ДанныеРасчетаРазрешений>)
    : ЧитаемоеСоответствие<ДокументыНаПодписьФизическиеЛица.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    
    знч Разрешения: Соответствие<ДокументыНаПодписьФизическиеЛица.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    для Элемент из Элементы
        знч РазрешенияЭлемента: Множество<РазрешениеДоступа>
        РазрешенияЭлемента.Добавить(КонтрольДоступа.ПолныйДоступИнформационнойСистеме(этот))
        РазрешенияЭлемента.ДобавитьВсе(КонтрольДоступа.ЧтениеДанныхСправочниковПоПолномочиям(
            [КонтрольДоступа.ПолномочиеПросмотрЛичныхДанных()],
            Элемент.ФизическоеЛицо
        ))
        РазрешенияЭлемента.ДобавитьВсе(КонтрольДоступа.ЧтениеДанныхСправочниковПерсонально([Элемент.ФизическоеЛицо]))
        Разрешения.Вставить(Элемент, РазрешенияЭлемента)
    ;
    возврат Разрешения
;

//КонецОбласти

//Область СлужебныйПрограммныйИнтерфейс

@ВПодсистеме
метод ТипОбъектаJson(): Строка
    возврат "documentToBeSigned"
;

@ВПодсистеме
метод ЗагрузитьОбъектИзJson(ДанныеJson: ДокументыНаПодпись.ДокументНаПодпись, Сервисы: ВебApiСервер.СервисыЗагрузкиJson,
    Документ: ДокументыНаПодпись.Ссылка)

    исп Транзакции.Начать() 
    знч ФизическиеЛицаДокумента: Массив<ДокументыНаПодписьФизическиеЛица.Объект>
    знч Ключ = {"Документ": Документ}
    если ДанныеJson.Сотрудники != Неопределено
        ЗаполнениеФизическихЛицДокумента(ДанныеJson.Сотрудники, Сервисы, Документ, ФизическиеЛицаДокумента, ДанныеJson.Наименование)
    ;
    Сервисы.ЗаписатьКоллекцию(ФизическиеЛицаДокумента, Ключ, Тип<ДокументыНаПодписьФизическиеЛица.Ссылка>, новый ВебApiСервер.ИнструментыМенеджераОбъекта(
        (Объект: Сущность.Объект) -> (Объект как ДокументыНаПодписьФизическиеЛица.Объект).Записать()
    ))
;

@ВПодсистеме
метод ЗагрузитьОбъектИзJson(ДанныеJson: ДокументыНаПодпись.ДокументНаПодпись_1_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson,
    Документ: ДокументыНаПодпись.Ссылка)

    исп Транзакции.Начать() 
    знч ФизическиеЛицаДокумента: Массив<ДокументыНаПодписьФизическиеЛица.Объект>
    знч Ключ = {"Документ": Документ}
    если ДанныеJson.Сотрудники != Неопределено
        ЗаполнениеФизическихЛицДокумента(ДанныеJson.Сотрудники, Сервисы, Документ, ФизическиеЛицаДокумента, ДанныеJson.Наименование)
    ;
    Сервисы.ЗаписатьКоллекцию(ФизическиеЛицаДокумента, Ключ, Тип<ДокументыНаПодписьФизическиеЛица.Ссылка>, новый ВебApiСервер.ИнструментыМенеджераОбъекта(
        (Объект: Сущность.Объект) -> (Объект как ДокументыНаПодписьФизическиеЛица.Объект).Записать()
    ))
;

@ВПодсистеме
метод ЗагрузитьОбъектИзJson(ДанныеJson: ДокументыНаПодпись.ДокументНаПодпись_2_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson,
    Документ: ДокументыНаПодпись.Ссылка)

    исп Транзакции.Начать() 
    знч ФизическиеЛицаДокумента: Массив<ДокументыНаПодписьФизическиеЛица.Объект>
    знч Ключ = {"Документ": Документ}
    если ДанныеJson.Сотрудники != Неопределено
        ЗаполнениеФизическихЛицДокумента(ДанныеJson.Сотрудники, Сервисы, Документ, ФизическиеЛицаДокумента, ДанныеJson.Наименование)
    ;
    Сервисы.ЗаписатьКоллекцию(ФизическиеЛицаДокумента, Ключ, Тип<ДокументыНаПодписьФизическиеЛица.Ссылка>, новый ВебApiСервер.ИнструментыМенеджераОбъекта(
        (Объект: Сущность.Объект) -> (Объект как ДокументыНаПодписьФизическиеЛица.Объект).Записать()
    ))
;

@ВПодсистеме
метод ЗагрузитьОбъектИзJson(ДанныеJson: ДокументыНаПодпись.ДокументНаПодпись_2_1, Сервисы: ВебApiСервер.СервисыЗагрузкиJson,
    Документ: ДокументыНаПодпись.Ссылка)

    исп Транзакции.Начать() 
    знч ФизическиеЛицаДокумента: Массив<ДокументыНаПодписьФизическиеЛица.Объект>
    знч Ключ = {"Документ": Документ}
    если ДанныеJson.Сотрудники != Неопределено
        ЗаполнениеФизическихЛицДокумента(ДанныеJson.Сотрудники, Сервисы, Документ, ФизическиеЛицаДокумента, ДанныеJson.Наименование)
    ;
    Сервисы.ЗаписатьКоллекцию(ФизическиеЛицаДокумента, Ключ, Тип<ДокументыНаПодписьФизическиеЛица.Ссылка>, новый ВебApiСервер.ИнструментыМенеджераОбъекта(
        (Объект: Сущность.Объект) -> (Объект как ДокументыНаПодписьФизическиеЛица.Объект).Записать()
    ))
;

метод ЗаполнениеФизическихЛицДокумента(
        ВнешниеИдентификаторы: Массив<Строка>, 
        Сервисы: ВебApiСервер.СервисыЗагрузкиJson,
        Документ: ДокументыНаПодпись.Ссылка,
        ФизическиеЛицаДокумента: Массив<ДокументыНаПодписьФизическиеЛица.Объект>,
        ПредставлениеДокумента: Строка)
        
    пер ВнешниеСсылки: Множество<ВебApiСервер.ВнешняяСсылка>
    для ИдентификаторФизическогоЛица из ВнешниеИдентификаторы
        ВнешниеСсылки.Добавить(ФизическиеЛица.ВнешняяСсылка(ИдентификаторФизическогоЛица))
    ;
    Сервисы.ПолучитьСсылки(ВнешниеСсылки)
    для ИдентификаторФизическогоЛица из ВнешниеИдентификаторы
        пер ДокументНаПодписьФизическоеЛицо = новый ДокументыНаПодписьФизическиеЛица.Объект()
        ДокументНаПодписьФизическоеЛицо.Документ = Документ
        ДокументНаПодписьФизическоеЛицо.ФизическоеЛицо = Сервисы.ПолучитьСсылку(
            ФизическиеЛица.ВнешняяСсылка(ИдентификаторФизическогоЛица)) как ФизическиеЛица.Ссылка
        ФизическиеЛицаДокумента.Добавить(ДокументНаПодписьФизическоеЛицо)
    ;
;    

//КонецОбласти

@ВПодсистеме
метод ФизическиеЛицаДокументов(ДокументыНаПодписьСсылки: ЧитаемыйМассив<ДокументыНаПодпись.Ссылка>): ЧитаемоеСоответствие<ДокументыНаПодпись.Ссылка, Массив<ФизическиеЛица.Ссылка>>
    
    пер ДанныеДокументов = новый Соответствие<ДокументыНаПодпись.Ссылка, Массив<ФизическиеЛица.Ссылка>>()
    знч Запрос = Запрос{
        Выбрать
            Документ,
            ФизическоеЛицо
        Из
            ДокументыНаПодписьФизическиеЛица
        Где
            Документ В (%ДокументыНаПодписьСсылки)}
    исп Результат = Запрос.Выполнить()
    пер СсылкиФизическихЛиц: Массив<ФизическиеЛица.Ссылка>
    для РезультатСтрока из Результат
        если ДанныеДокументов.СодержитКлюч(РезультатСтрока.Документ)
            СсылкиФизическихЛиц = ДанныеДокументов.Получить(РезультатСтрока.Документ) 
        иначе
            СсылкиФизическихЛиц = новый Массив<ФизическиеЛица.Ссылка>()
        ;
        СсылкиФизическихЛиц.Добавить(РезультатСтрока.ФизическоеЛицо)
        ДанныеДокументов.Вставить(РезультатСтрока.Документ, СсылкиФизическихЛиц) 
    ;
    возврат ДанныеДокументов
;

@ВПодсистеме
метод ФизическиеЛицаДокумента(ДокументНаПодписьСсылка: ДокументыНаПодпись.Ссылка): Массив<ФизическиеЛица.Ссылка>
    возврат ФизическиеЛицаДокументов([ДокументНаПодписьСсылка]).ПолучитьИлиУмолчание(ДокументНаПодписьСсылка, <ФизическиеЛица.Ссылка>[])
;