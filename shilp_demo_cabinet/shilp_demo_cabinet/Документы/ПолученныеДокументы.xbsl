импорт Зарплата
импорт ОбщиеСтандартные
импорт СтандартноеПриложение
импорт ФизическиеЛица
импорт Компания
импорт Компания::Согласования
импорт ОбщегоНазначения
импорт Уведомления
импорт УниверсальныеМеханизмы
импорт УниверсальныеМеханизмы::ШаблоныДокументов    
импорт КонтрольДоступа

@ВПроекте
конст КЛЮЧ_ПАРАМЕТРОВ_СЕАНСА = "ПолученныеДокументы"

@ВПодсистеме 
конст ВИД_СОГЛАСОВАНИЯ_ДОКУМЕНТОВ_СОТРУДНИКОВ = "ДокументыСотрудников"

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ВидСогласуемогоДокументаСотрудника(): ВидыСогласуемыхЗаявлений.Ссылка?
    возврат ВидыСогласуемыхЗаявлений.НайтиПредопределенное(ВИД_СОГЛАСОВАНИЯ_ДОКУМЕНТОВ_СОТРУДНИКОВ)
;

@ВПодсистеме
@НаСервере
метод ВидСогласуемогоДокументаСотрудника(ДокументСотрудника: ДокументыСотрудников.Ссылка): ВидыСогласуемыхЗаявлений.Ссылка
    возврат ВидСогласуемогоДокументаСотрудника(
        МенеджерСущности.ЗначениеРеквизитаОбъекта(ДокументСотрудника, "ШаблонДокумента") как ШаблоныДокументов.Ссылка)
;

@ВПодсистеме
@НаСервере
метод ВидСогласуемогоДокументаСотрудника(ШаблонДокумента: ШаблоныДокументов.Ссылка): ВидыСогласуемыхЗаявлений.Ссылка
    возврат МенеджерСущности.ЗначениеРеквизитаОбъекта(ШаблонДокумента, "ВидОбращения") как ВидыСогласуемыхЗаявлений.Ссылка
;

@ВПодсистеме
@НаСервере
метод ВидыОбращенийДокументовСотрудника(): Массив<ВидыСогласуемыхЗаявлений.Ссылка>
    знч ВидыОбращений = новый Массив<ВидыСогласуемыхЗаявлений.Ссылка>()
    знч Запрос = Запрос{
        Выбрать
            ВидОбращения
        Из
            ШаблоныДокументов
        Где
            ВидОбращения != Неопределено}
    исп Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        ВидыОбращений.Добавить(СтрокаРезультата.ВидОбращения)
    ;
    возврат ВидыОбращений
;

@ВПроекте
структура ПараметрыСеанса
    пер НапоминатьОПолученныхДокументахПодчиненных: Булево
    пер ФункциональныеОпции: ФункциональныеОпции
;

@ВПроекте
структура ФункциональныеОпции
    пер ИнформацияОПолученныхДокументах: Булево = Истина
;

@ВПодсистеме
структура НапоминанияОПолученныхДокументах
    пер НапоминатьОПолученныхДокументах: Булево
    пер НапоминатьОПолученныхДокументахПодчиненных: Булево
;

@НаСервере 
структура ДанныеДокумента
    обз пер ДатаДокумента: Дата
    обз пер Представление: Строка
;

@ВПроекте
@НаКлиенте
конст ИД_РАЗДЕЛА_ДОКУМЕНТЫ_СОТРУДНИКОВ = "ДокументыСотрудников"
@ВПодсистеме конст ИМЯ_РАЗДЕЛА_ДОКУМЕНТЫ_СОТРУДНИКОВ = "Документы"

@ВПроекте
конст ИД_ПОДСИСТЕМЫ = "ДокументыСотрудников"

@ВПроекте
@НаКлиенте
метод ПараметрыСеанса(): ПараметрыСеанса
    возврат ПараметрыСеансаСервис.ПолучитьСервис().ПараметрПоКлючу(КЛЮЧ_ПАРАМЕТРОВ_СЕАНСА) как ПараметрыСеанса
;

@ВПроекте конст ПОДСИСТЕМА_ПОЛУЧЕННЫЕ_ДОКУМЕНТЫ = "ПолученныеДокументы"

@ВПодсистеме конст ГРУППА_РЕСУРСОВ_ПОЛУЧЕННЫЕ_ДОКУМЕНТЫ = "ПолученныеДокументы"

@ВПроекте конст ПОЛУЧЕННЫЙ_ДОКУМЕНТ_ОПУБЛИКОВАН_SMS = "ПолученныйДокументОпубликованSms"
@ВПроекте конст ПОЛУЧЕННЫЙ_ДОКУМЕНТ_ОПУБЛИКОВАН_PUSH = "ПолученныйДокументОпубликованPush"
@ВПроекте конст ПОЛУЧЕННЫЙ_ДОКУМЕНТ_ОПУБЛИКОВАН_EMAIL = "ПолученныйДокументОпубликованEmail"
@ВПроекте конст ПОЛУЧЕННЫЙ_ДОКУМЕНТ_ОПУБЛИКОВАН_ТЕМА = "ПолученныйДокументОпубликованТема"

@ВПодсистеме конст ПОЛУЧЕННЫЙ_ДОКУМЕНТ_НАПОМИНАНИЕ_SMS = "ПолученныйДокументНапоминаниеSms"
@ВПодсистеме конст ПОЛУЧЕННЫЙ_ДОКУМЕНТ_НАПОМИНАНИЕ_PUSH = "ПолученныйДокументНапоминаниеPush"
@ВПодсистеме конст ПОЛУЧЕННЫЙ_ДОКУМЕНТ_НАПОМИНАНИЕ_EMAIL = "ПолученныйДокументНапоминаниеEmail"
@ВПодсистеме конст ПОЛУЧЕННЫЙ_ДОКУМЕНТ_НАПОМИНАНИЕ_ТЕМА = "ПолученныйДокументНапоминаниеТема"

конст РОЛЬ_СОГЛАСОВАНИЕ_ДОКУМЕНТОВ_СОТРУДНИКОВ = "СогласованиеДокументовСотрудников"

@ВПроекте
@НаСервере
метод ДобавитьРоли()
    ДобавитьРольСогласованиеДокументовСотрудников()
;

@НаСервере
метод ДобавитьРольСогласованиеДокументовСотрудников()
    КонтрольДоступа.ДобавитьРоль(
        "Согласование документов сотрудников",
        РОЛЬ_СОГЛАСОВАНИЕ_ДОКУМЕНТОВ_СОТРУДНИКОВ,
        [
            КонтрольДоступа.ПолномочиеПросмотрЛичныхДанных()
        ]
    )
;

@ВПодсистеме
@НаСервере
метод РольСогласованиеДокументовСотрудников(): Роли.Ссылка
    возврат КонтрольДоступа.Роль(РОЛЬ_СОГЛАСОВАНИЕ_ДОКУМЕНТОВ_СОТРУДНИКОВ)
;

@ВПроекте
@НаСервере
метод НастройкиПолученныхДокументов(): ПолученныеДокументы.НапоминанияОПолученныхДокументах

    возврат НастройкиПолученныхДокументов.НастройкиПолученныхДокументов()
    
;

@ВПодсистеме
@НаСервере
метод ЗапланироватьНапоминанияОПолученныхДокументах()

    пер Настройки = НастройкиПолученныхДокументов.НастройкиПолученныхДокументов()
    если не Настройки.НапоминатьОПолученныхДокументах
        возврат
    ;
    
    пер Расписание = [Расписание.Ежедневно(Время{06:00:00})]
    пер КлючЗадания = "НапоминаниеОПолученныхДокументах"
    
    МенеджерЗаданий.ПроверитьАвтозапускЗапланированныхЗаданийВключен()
    если ЗапланированныеЗадания.ПолучитьПоКлючу(КлючЗадания) == Неопределено
        ЗапланированныеЗадания.Создать(&ПолученныеДокументы.ОтправитьНапоминанияОНеподписанныхДокументах)
            .Настроить(
                Ключ = КлючЗадания,
                Расписание = Расписание)
            .Запланировать()
    иначе
        ЗапланированныеЗадания.Изменить(КлючЗадания)
            ?.Настроить(Расписание = Расписание)
            .Запланировать()
    ; 
;

@НаСервере
метод ОтправитьНапоминанияОНеподписанныхДокументах()
    пер Настройки = ПолученныеДокументы.НастройкиПолученныхДокументов()
    если не Настройки.НапоминатьОПолученныхДокументах
        возврат
    ;
    
    пер ИменаРесурсов = [
        ПОЛУЧЕННЫЙ_ДОКУМЕНТ_НАПОМИНАНИЕ_ТЕМА,
        ПОЛУЧЕННЫЙ_ДОКУМЕНТ_НАПОМИНАНИЕ_SMS,
        ПОЛУЧЕННЫЙ_ДОКУМЕНТ_НАПОМИНАНИЕ_PUSH,
        ПОЛУЧЕННЫЙ_ДОКУМЕНТ_НАПОМИНАНИЕ_EMAIL]
    пер ЗначенияРесурсов = УниверсальныеМеханизмы.ЗначенияРесурсовПодсистемы(ГРУППА_РЕСУРСОВ_ПОЛУЧЕННЫЕ_ДОКУМЕНТЫ, ИменаРесурсов)
    
    пер ТекущаяДата: Дата = Дата.Сейчас()
    
    пер ДатыПубликации: Массив<Дата>
    пер СрокиНапоминаний = СрокиНапоминанийОПолученныхДокументах.СрокиНапоминаний()
    если СрокиНапоминаний.Пусто()
        возврат
    ;
    для СрокНапоминания из СрокиНапоминаний
        ДатыПубликации.Добавить(ТекущаяДата.ДобавитьДни(-СрокНапоминания.КоличествоДней))
    ;
    
    знч РольПодписантаСотрудник: РолиПодписантов.Ссылка = Согласования.РольПодписантаСотрудник()
    
    знч Запрос = Запрос{
        Выбрать 
            ДокументыНаПодпись.ФизическоеЛицо Как ФизическоеЛицо,
            ДокументыНаПодпись.Документ Как Документ,
            ДокументыНаПодпись.Документ.Наименование Как Наименование,
            ДокументыНаПодпись.Документ.Дата Как ДатаПубликации,
            Выбор
                Когда  РасчетныеЛисты.Владелец.Ссылка Есть Null
                    Тогда Неопределено
                Иначе РасчетныеЛисты.Владелец.Ссылка
            Конец Как РасчетныйЛист,
            РасчетныеЛисты.Владелец.Месяц Как Месяц,
            Выбор
                Когда РасчетныеЛисты.Владелец.ПерваяПоловинаМесяца Есть Null
                    Тогда Ложь
                Иначе РасчетныеЛисты.Владелец.ПерваяПоловинаМесяца
            Конец Как ПерваяПоловинаМесяца
        Из 
            ДокументыНаПодписьФизическиеЛица Как ДокументыНаПодпись
                Внутреннее Соединение ПодразделенияИСотрудники Как ПодразделенияИСотрудники
                    По ДокументыНаПодпись.ФизическоеЛицо == ПодразделенияИСотрудники.ФизическоеЛицо
                    И ПодразделенияИСотрудники.ОсновноеМестоРаботы
                Левое Соединение РасчетныеЛисты.РасчетныеЛистыНаПодпись Как РасчетныеЛисты
                    По ДокументыНаПодпись.Документ == РасчетныеЛисты.Элемент
                Левое Соединение СогласованияДокументов Как Подписи
                    По ДокументыНаПодпись.Документ == Подписи.Документ
                    И (Подписи.РольПодписанта == %РольПодписантаСотрудник)
        Где 
            ДокументыНаПодпись.Документ.Дата В (%ДатыПубликации)
            И (Подписи.Документ Есть Null)
            И Выбор
                Когда РасчетныеЛисты.Владелец.ПерваяПоловинаМесяца Есть Null
                    Тогда Ложь
                Иначе РасчетныеЛисты.Владелец.ПерваяПоловинаМесяца
            Конец == Ложь
        Упорядочить По
            ФизическоеЛицо,
            ДатаПубликации}
    
    пер СсылкиФизическихЛиц: Множество<ФизическиеЛица.Ссылка>
    пер ДанныеДокументов: Массив<ЧитаемоеСоответствие<Строка, Объект?>>
    
    исп Результат = Запрос.Выполнить() 
    для РезультатСтрока из Результат
        СсылкиФизическихЛиц.Добавить(РезультатСтрока.ФизическоеЛицо)
        ДанныеДокументов.Добавить(МенеджерЗапросов.СтрокаРезультатаЗапросаВСоответствие(РезультатСтрока, Результат))
    ;
    
    пер ДанныеРасчетныхЛистов: Массив<ЧитаемоеСоответствие<Строка, Объект?>>
    пер УниверсальныеПараметры = ОбщегоНазначения.УниверсальныеПараметрыСтроковыхРесурсов(ЗначенияРесурсов, СсылкиФизическихЛиц)
    
    для ДанныеДокумента из ДанныеДокументов
        если ДанныеДокумента.Получить("РасчетныйЛист") != Неопределено
            ДанныеРасчетныхЛистов.Добавить(ДанныеДокумента)
            продолжить
        ;
        пер СообщениеТема = ЗначенияРесурсов[ПОЛУЧЕННЫЙ_ДОКУМЕНТ_НАПОМИНАНИЕ_ТЕМА].Заменить("\%ПредставлениеДокумента\%", ДанныеДокумента.Получить("Наименование") как Строка)
        пер СообщениеSMS = ЗначенияРесурсов[ПОЛУЧЕННЫЙ_ДОКУМЕНТ_НАПОМИНАНИЕ_SMS].Заменить("\%ПредставлениеДокумента\%", ДанныеДокумента.Получить("Наименование") как Строка)
        пер СообщениеPUSH = ЗначенияРесурсов[ПОЛУЧЕННЫЙ_ДОКУМЕНТ_НАПОМИНАНИЕ_PUSH].Заменить("\%ПредставлениеДокумента\%", ДанныеДокумента.Получить("Наименование") как Строка)
        пер СообщениеEMAIL = ЗначенияРесурсов[ПОЛУЧЕННЫЙ_ДОКУМЕНТ_НАПОМИНАНИЕ_EMAIL].Заменить("\%ПредставлениеДокумента\%", ДанныеДокумента.Получить("Наименование") как Строка)
        пер ЗначенияПараметров = УниверсальныеПараметры[ДанныеДокумента.Получить("ФизическоеЛицо") как ФизическиеЛица.Ссылка?]
        СообщениеТема = ОбщегоНазначения.ЗаполнитьУниверсальныеПараметрыВСообщении(СообщениеТема, ЗначенияПараметров)
        СообщениеSMS = ОбщегоНазначения.ЗаполнитьУниверсальныеПараметрыВСообщении(СообщениеSMS, ЗначенияПараметров)
        СообщениеPUSH = ОбщегоНазначения.ЗаполнитьУниверсальныеПараметрыВСообщении(СообщениеPUSH, ЗначенияПараметров)
        СообщениеEMAIL = ОбщегоНазначения.ЗаполнитьУниверсальныеПараметрыВСообщении(СообщениеEMAIL, ЗначенияПараметров)
        пер ТекстыУведомлений = новый УведомленияСервер.ТекстыСообщений(СообщениеТема, СообщениеSMS, СообщениеPUSH, СообщениеEMAIL)
        пер ДанныеУведомления = новый УведомленияСервер.ДанныеУведомления(Уведомления.ВидыУведомлений.ОзнакомлениеПодПодпись, ДанныеДокумента.Получить("Документ") как Справочник.Ссылка) 
        УведомленияСервер.ОтправитьУведомление(ДанныеДокумента.Получить("ФизическоеЛицо") как ФизическиеЛица.Ссылка?, ТекстыУведомлений, ДанныеУведомления)
    ;
    РасчетныеЛисты.ОтправитьНапоминанияОРасчетныхЛистах(ДанныеРасчетныхЛистов, УниверсальныеПараметры)
;

@ВПроекте
@НаСервере
метод ОбновитьСтроковыеРесурсы()
    пер ПолученныйДокументОпубликованSms = "Ознакомьтесь с документом \%ПредставлениеДокумента\%"
    пер Комментарий = "Уведомление о публикации полученного документа, оправляемое как sms"
    УниверсальныеМеханизмы.ЗаписатьЗначениеРесурса(ГРУППА_РЕСУРСОВ_ПОЛУЧЕННЫЕ_ДОКУМЕНТЫ, ПОЛУЧЕННЫЙ_ДОКУМЕНТ_ОПУБЛИКОВАН_SMS, Комментарий, ПолученныйДокументОпубликованSms, 70)
    
    пер ПолученныйДокументОпубликованPush = "Ознакомьтесь с документом \%ПредставлениеДокумента\%"
    Комментарий = "Уведомление о публикации полученного документа, оправляемое как push"
    УниверсальныеМеханизмы.ЗаписатьЗначениеРесурса(ГРУППА_РЕСУРСОВ_ПОЛУЧЕННЫЕ_ДОКУМЕНТЫ, ПОЛУЧЕННЫЙ_ДОКУМЕНТ_ОПУБЛИКОВАН_PUSH, Комментарий, ПолученныйДокументОпубликованPush)
    
    пер ПолученныйДокументОпубликованEmail = "Ознакомьтесь с документом \%ПредставлениеДокумента\%"
    Комментарий = "Уведомление о публикации полученного документа, оправляемое как email"
    УниверсальныеМеханизмы.ЗаписатьЗначениеРесурса(ГРУППА_РЕСУРСОВ_ПОЛУЧЕННЫЕ_ДОКУМЕНТЫ, ПОЛУЧЕННЫЙ_ДОКУМЕНТ_ОПУБЛИКОВАН_EMAIL, Комментарий, ПолученныйДокументОпубликованEmail)
    
    пер ПолученныйДокументОпубликованТема = "Получен документ \%ПредставлениеДокумента\%"
    Комментарий = "Тема письма о публикации полученного документа"
    УниверсальныеМеханизмы.ЗаписатьЗначениеРесурса(ГРУППА_РЕСУРСОВ_ПОЛУЧЕННЫЕ_ДОКУМЕНТЫ, ПОЛУЧЕННЫЙ_ДОКУМЕНТ_ОПУБЛИКОВАН_ТЕМА, Комментарий, ПолученныйДокументОпубликованТема)
    
    пер ПолученныйДокументНапоминаниеSms = "В личном кабинете доступен документ \%ПредставлениеДокумента\%"
    Комментарий = "Напоминание о необходимости ознакомиться с полученным документом, оправляемое как sms"
    УниверсальныеМеханизмы.ЗаписатьЗначениеРесурса(ГРУППА_РЕСУРСОВ_ПОЛУЧЕННЫЕ_ДОКУМЕНТЫ, ПОЛУЧЕННЫЙ_ДОКУМЕНТ_НАПОМИНАНИЕ_SMS, Комментарий, ПолученныйДокументНапоминаниеSms, 70)
    
    пер ПолученныйДокументНапоминаниеPush = "В личном кабинете доступен документ \%ПредставлениеДокумента\%"
    Комментарий = "Напоминание о необходимости ознакомиться с полученным документом, оправляемое как push"
    УниверсальныеМеханизмы.ЗаписатьЗначениеРесурса(ГРУППА_РЕСУРСОВ_ПОЛУЧЕННЫЕ_ДОКУМЕНТЫ, ПОЛУЧЕННЫЙ_ДОКУМЕНТ_НАПОМИНАНИЕ_PUSH, Комментарий, ПолученныйДокументНапоминаниеPush)
    
    пер ПолученныйДокументНапоминаниеEmail = "В личном кабинете доступен документ \%ПредставлениеДокумента\%"
    Комментарий = "Напоминание о необходимости ознакомиться с полученным документом, оправляемое как email"
    УниверсальныеМеханизмы.ЗаписатьЗначениеРесурса(ГРУППА_РЕСУРСОВ_ПОЛУЧЕННЫЕ_ДОКУМЕНТЫ, ПОЛУЧЕННЫЙ_ДОКУМЕНТ_НАПОМИНАНИЕ_EMAIL, Комментарий, ПолученныйДокументНапоминаниеEmail)
    
    пер ПолученныйДокументНапоминаниеТема = "Получен документ \%ПредставлениеДокумента\%"
    Комментарий = "Тема письма с напоминанием о полученном документе"
    УниверсальныеМеханизмы.ЗаписатьЗначениеРесурса(ГРУППА_РЕСУРСОВ_ПОЛУЧЕННЫЕ_ДОКУМЕНТЫ, ПОЛУЧЕННЫЙ_ДОКУМЕНТ_НАПОМИНАНИЕ_ТЕМА, Комментарий, ПолученныйДокументНапоминаниеТема)
    
;

@ВПроекте
@НаСервере
метод ПериодНаОзнакомлениеСПолученнымиДокументами(): Число
    пер СрокиНапоминаний = СрокиНапоминанийОПолученныхДокументах.СрокиНапоминаний()
    возврат СрокиНапоминаний.Пусто() ? 0 : СрокиНапоминаний[0].КоличествоДней
;

@ВПодсистеме
@НаСервере
метод ЗарегисрироватьОбновлениеПредставленияДокумента(ДокументНаПодпись: ДокументыНаПодпись.Ссылка)
    пер НаборЗаписей: ДокументыКОбновлениюПредставлений.НаборЗаписей
    НаборЗаписей.Фильтр.Установить(ДокументНаПодпись = ДокументНаПодпись)
    НаборЗаписей.Записать(Истина)
;

@ВПодсистеме
@НаСервере
метод ОжидаетОбновленияПредставления(ДокументНаПодпись: ДокументыНаПодпись.Ссылка): Булево
    пер НаборЗаписей: ДокументыКОбновлениюПредставлений.НаборЗаписей
    НаборЗаписей.Фильтр.Установить(ДокументНаПодпись = ДокументНаПодпись)
    НаборЗаписей.Прочитать()
    возврат не НаборЗаписей.Пусто()
;

@ВПроекте
@НаСервере
метод ЗарегистрироватьДокументКОбновлениюПредставления(ДокументНаПодпись: ДокументыНаПодпись.Ссылка)
    если ДокументыНаПодпись.ДанныеДокумента(ДокументНаПодпись).ВозможноОбновлениеПредставлений
        пер НаборЗаписей: ДокументыКОбновлениюПредставлений.НаборЗаписей
        НаборЗаписей.Фильтр.Установить(ДокументНаПодпись = ДокументНаПодпись)
        НаборЗаписей.ДобавитьЗапись(ДокументНаПодпись = ДокументНаПодпись)
        НаборЗаписей.Записать(Истина)
    ;
;


@ВПроекте
@НаСервере
метод ПолучитьФункциональныеОпции(): ФункциональныеОпции?
    возврат ИспользуемаяФункциональность.ФункциональныеОпции()
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ЗаписатьФункциональныеОпции(ФункциональныеОпции: ФункциональныеОпции)
    ИспользуемаяФункциональность.ЗаписатьФункциональныеОпции(ФункциональныеОпции)
;

@ВПодсистеме
@НаСервере @ДоступноСКлиента
метод ПредставленияДокументовСотрудников(ФизическоеЛицо: ФизическиеЛица.Ссылка?): ЧитаемаяКоллекция<СостояниеДокументаКомпонентДанных>
    пер ПредставленияДокументовФизлица: Массив<СостояниеДокументаКомпонентДанных>
    если ФизическоеЛицо == Неопределено
        возврат ПредставленияДокументовФизлица
    ;
    знч ДокументыФизлица: Массив<ДокументИмеющийСостояние.Ссылка>
    знч ДанныеДокументов: Соответствие<ДокументИмеющийСостояние.Ссылка, ДанныеДокумента>
    исп РезультатЗапроса = Запрос{Выбрать
            Ссылка Как Документ,
            Дата Как ДатаДокумента,
            Наименование Как Представление
            Из ДокументыСотрудников
            Где ФизическоеЛицо == %ФизическоеЛицо
            Упорядочить по МоментСоздания Убыв}.Выполнить()
    для СтрокаРезультата из РезультатЗапроса
        ДокументыФизлица.Добавить(СтрокаРезультата.Документ)
        ДанныеДокументов.Вставить(СтрокаРезультата.Документ, новый ДанныеДокумента(СтрокаРезультата.ДатаДокумента, СтрокаРезультата.Представление))
    ;
    ПредставленияДокументовФизлица = СостДокументов.СостоянияДокументов(ДокументыФизлица)
    для Компонент из ПредставленияДокументовФизлица
        Компонент.ДатаДокумента = ДанныеДокументов[Компонент.Документ].ДатаДокумента
        Компонент.Представление = ДанныеДокументов[Компонент.Документ].Представление
        Компонент.ДополнительноеПредставление = МенеджерДат.ФорматДаты(ДанныеДокументов[Компонент.Документ].ДатаДокумента)
    ;
    знч Сервисы = СостояниеДокументовПоставщик.ПолучитьСервисы()
    для Сервис из Сервисы
        Сервис.ЗаполнитьКартинкиДокументов(ПредставленияДокументовФизлица)
    ;
    возврат ПредставленияДокументовФизлица
;@ВПроекте
@НаСервере @ДоступноСКлиента
метод ЗарегистрироватьОзнакомлениесОбъектом(Объект: ДокументыНаПодпись.Ссылка, ФизическоеЛицо: ФизическиеЛица.Ссылка)
    НовыеДокументы.ЗарегистрироватьОзнакомлениесОбъектом(Объект, ФизическоеЛицо)
;
