импорт ИнтерфейсныеКомпонентыСтандартные
импорт Компания
импорт ЛичныеКабинетыПользователей
импорт ОбщиеСтандартные
импорт СтандартноеПриложение
импорт УниверсальныеМеханизмы
импорт ФизическиеЛица

// Обработчики событий формы

@Обработчик
метод ПослеСоздания() 
    если Компания.ПараметрыСеанса().ТекущийПользовательСотрудник
        пер СписокЗаявлений: Массив<ЭлементСпискаЗначений<Объект?>>
        знч Сервисы = ДокументыСотрудниковПоставщик.ПолучитьСервисы()
        для Сервис из Сервисы
            СписокЗаявлений.ДобавитьВсе(Сервис.КомандыСоздатьЗаявление())
        ;               
        СписокЗаявлений = СписокЗаявлений.СортироватьПо(Элемент -> Элемент.Представление, НаправлениеСортировки.ПоВозрастанию)
        КомандыСоздания = СформироватьКомандыСоздания(
            "Новый документ",
            СписокЗаявлений,
            &КомпонентВсеЗаявленияПриНажатииКомандыСоздания
        )
        
        МенеджерГлобальныхКлиентскихСобытий.ПодключитьОбработчик(метод (Источник, Параметры) ->
            выбор Источник
            когда ФизЛица.ТРЕБУЕТСЯ_ОБНОВЛЕНИЕ_ДАННЫХ_ФИЗИЧЕСКОГО_ЛИЦА
                Компоненты.Заявления.Инициализировать()
                если ТекущееЗаявление != Неопределено
                    УстановитьТекущееЗаявление()
                ;
            ;
            возврат
        ;)   
    ;
;

метод КомпонентВсеЗаявленияПриНажатииКомандыСоздания(Действие: ЭлементСпискаЗначений<Объект?>)
    знч Сервисы = ДокументыСотрудниковПоставщик.ПолучитьСервисы()
    для Сервис из Сервисы
        Сервис.ВыполнитьКомандуСоздать(Действие)
    ;    
;

метод ИзменитьПриНажатии(Источник: Кнопка, Событие: СобытиеПриНажатии)
    если ОткрытьФормуЗаявления()
        УстановитьТекущееЗаявление()
    ;
;

// Конец Обработчики событий формы

// Методы заполнения формы

метод КомпонентВсеЗаявленияМаксимальнаяШирина(): Число
    возврат Содержимое.МаксимальнаяШирина
;

метод КомпонентВсеЗаявленияМинимальнаяШирина(): Число
    возврат Содержимое.МинимальнаяШирина
;

метод СодержимоеОтсутствуетВидимость(): Булево
    возврат не СодержимоеВидимость() 
;

метод СодержимоеВидимость(): Булево
    возврат Компоненты.Заявления.Видимость
;

метод ПанельМинимальнаяШирина(): Число
    возврат ОсновнойИнтерфейс.МинимальнаяШиринаПанелейПодразделов()
;

метод ПанельМаксимальнаяШирина(): Число
    возврат ОсновнойИнтерфейс.МаксимальнаяШиринаПанелейПодразделов()
;

метод ЗаявленияФизическоеЛицо(): ФизическиеЛица.Ссылка
    возврат ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо
;

метод ПраваяПанельВертикальноеПоложениеДочерних(): ВыравниваниеПоВертикали | Авто
    возврат ЗаявлениеЗаглушкаВидимость() ? ВыравниваниеПоВертикали.Центр : ВыравниваниеПоВертикали.Верх
;

метод ЗаявлениеЗаглушкаВидимость(): Булево
    возврат ТекущееЗаявление == Неопределено
;

метод ПраваяПанельВидимость(): Булево
    возврат не ОсновнойИнтерфейс.РаботаНаУзкомУстройстве()
;

метод ЗаявлениеИКнопкаВидимость(): Булево
    возврат не ЗаявлениеЗаглушкаВидимость()
;

метод ИзменитьЗаголовок(): Строка
    возврат (ТекущееСостояние == Неопределено или ТекущееСостояние == СостоянияДокумента.Черновик) ? "Изменить" : "Открыть"
;

// Конец Методы заполнения формы

// Начальная генерация формы

метод СформироватьКомандыСоздания(ЗаголовокГруппы: Строка, Действия: ЧитаемыйМассив<ЭлементСпискаЗначений<Объект?>>, Обработчик: (ЭлементСпискаЗначений<Объект?>) -> ничто): Команда | ГруппаКомандногоИнтерфейса<Команда>?
    если Действия.Пусто()
        возврат Неопределено
    ;
    если Действия.Размер() == 1
        пер Действие = Действия[0]
        пер Команда = новый ОбычнаяКоманда(метод (Команда: ОбычнаяКоманда) ->
            Обработчик(Действие)
        ;, Действие.Представление)
        возврат Команда
    ;
    пер ДействияКомандыСоздания = <Команда>[]
    для Действие из Действия
        пер Команда = новый ОбычнаяКоманда(метод (Команда: ОбычнаяКоманда) ->
            Обработчик(Действие)
        ;, Действие.Представление)
        ДействияКомандыСоздания.Добавить(Команда)
    ;
    возврат новый ГруппаКомандногоИнтерфейса<Команда>(ЗаголовокГруппы, Неопределено, ДействияКомандыСоздания)
;

// Конец Начальная генерация формы

// Контракт ВладелецСостояниеДокументовКомпонент

@ВПроекте
@Реализация
метод ПредставленияДокументов(): ЧитаемаяКоллекция<СостояниеДокументаКомпонентДанных>
    пер ПредставленияДокументов: Массив<СостояниеДокументаКомпонентДанных>
    знч Сервисы = ДокументыСотрудниковПоставщик.ПолучитьСервисы()
    для Сервис из Сервисы 
        ПредставленияДокументов.ДобавитьВсе(Сервис.ПредставленияДокументов())
    ;
    возврат ПредставленияДокументов.СортироватьПо(элемент -> (элемент.ДатаДокумента!), НаправлениеСортировки.ПоУбыванию)
;

@ВПроекте
@Реализация
метод ПриНажатии(Документ: ДокументИмеющийСостояние.Ссылка, ИдКомпонента: Строка = "")
    знч СправкаИзменилась = (Документ != ТекущееЗаявление)
    ТекущееЗаявление = Документ как ДокументСотрудника.Ссылка?
    если ТекущееЗаявление == Неопределено
        ТекущееСостояние = Неопределено
    иначе
        ТекущееСостояние = СостояниеДокумента(ТекущееЗаявление как Справочник.Ссылка)
    ;

    если ОсновнойИнтерфейс.РаботаНаУзкомУстройстве()
        ОткрытьФормуЗаявления()
    иначе если СправкаИзменилась
        УстановитьТекущееЗаявление()
    ;
;

@НаСервере
@ДоступноСКлиента
статический метод СостояниеДокумента(Ссылка: Справочник.Ссылка): СостоянияДокумента?
    возврат СостДокументов.ДанныеСостоянияДокумента(Ссылка).Состояние
;

@ВПроекте
@Реализация
метод ТипыОтображаемыхДокументов(): Массив<Тип>
    возврат []
;

// Конец ВладелецСостояниеДокументовКомпонент

// Прочее

метод УстановитьТекущееЗаявление()
    пер Объект = МенеджерСущности.ОбъектПоСсылке(ТекущееЗаявление)
    знч ЗаявлениеСодержимое = Компоненты.Заявление.Содержимое
    пер Компонент: ДокументСотрудникаКомпонент?
    знч Сервисы = ДокументыСотрудниковПоставщик.ПолучитьСервисы()
    для Сервис из Сервисы
        Компонент = Сервис.КомпонентДокумента(ТекущееЗаявление)
        если Компонент != Неопределено
            прервать
        ;
    ;
    Компонент.УстановитьТекущееЗаявление(Объект)
    Компонент.РежимПросмотра = Истина
    если ЗаявлениеСодержимое.Размер() == 1
        ЗаявлениеСодержимое.УдалитьПоИндексу(0)
    ;
    ЗаявлениеСодержимое.Вставить(0, Компонент как Компонент)
;

метод ОткрытьФормуЗаявления(): Булево 
    пер Действие: СтандартныеФормы.ДействиеВФорме?
    знч Сервисы = ДокументыСотрудниковПоставщик.ПолучитьСервисы()
    для Сервис из Сервисы
        Действие = Сервис.ОткрытьЗаявлениеМодально(ТекущееЗаявление)
        если Действие != Неопределено
            прервать   
        ;
    ;
    если Действие == СтандартныеФормы.ДействиеВФорме.Удален
        ТекущееЗаявление = Неопределено
    ;
    возврат (Действие == СтандартныеФормы.ДействиеВФорме.Изменен)
;
// Конец Прочее