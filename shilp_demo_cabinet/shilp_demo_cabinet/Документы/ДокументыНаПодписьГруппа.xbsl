импорт ОбщиеСтандартные
импорт СтандартноеПриложение
импорт ИнтерфейсныеКомпонентыСтандартные
импорт УниверсальныеМеханизмы
импорт Компания::Согласования
импорт ФизическиеЛица
импорт Компания
импорт Криптография
импорт ЛичныеКабинетыПользователей
импорт Зарплата

// Контракт ИнициализируемыйКомпонент

@ВПроекте
@Реализация
метод Инициализировать()
    
    ИнтерфейсныеКомпоненты.ИнициализироватьТаблицу(Таблица = Компоненты.ДокументыНаПодпись)
    
    знч ФизическоеЛицо = ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо
    ВидЭлектроннойПодписи = ВидЭлектроннойПодписи(ФизическоеЛицо)
    если не ДокументыПодчиненных
        ФизическиеЛица = новый Множество<ФизическиеЛица.Ссылка>([ФизическоеЛицо])
    иначе если ПолученныеДокументы.ПараметрыСеанса().НапоминатьОПолученныхДокументахПодчиненных
        ФизическиеЛица = ПодчиненныеРуководителя(
            ФизическоеЛицо, 
            Компания.ПараметрыСеанса().ПодразделенияРуководителя)
    ;
    
    Пусто = ФизическиеЛица.Пусто()
    
    ТолькоДокументыНаПодпись = ДокументыПодчиненных или ЕстьДокументыНаПодпись(ФизическиеЛица)
    (СписокДокументовНаПодпись.Фильтр.Элементы[0] как ЭлементФильтра).ВидСравнения = ВидСравнения.ВСписке
    (СписокДокументовНаПодпись.Фильтр.Элементы[0] как ЭлементФильтра).Значение = ФизическиеЛица
    (СписокДокументовНаПодпись.ПрисоединенныеТаблицы[0].Фильтр.Элементы[1] как ЭлементФильтра).ВидСравнения = ВидСравнения.ВСписке
    (СписокДокументовНаПодпись.ПрисоединенныеТаблицы[0].Фильтр.Элементы[1] как ЭлементФильтра).Значение = ФизическиеЛица
    (СписокДокументовНаПодпись.ПрисоединенныеТаблицы[1].Фильтр.Элементы[1] как ЭлементФильтра).ВидСравнения = ВидСравнения.ВСписке
    (СписокДокументовНаПодпись.ПрисоединенныеТаблицы[1].Фильтр.Элементы[1] как ЭлементФильтра).Значение = ФизическиеЛица
    (СписокДокументовНаПодпись.ПрисоединенныеТаблицы[1].Фильтр.Элементы[2] как ЭлементФильтра).ВидСравнения = ВидСравнения.Равно
    (СписокДокументовНаПодпись.ПрисоединенныеТаблицы[1].Фильтр.Элементы[2] как ЭлементФильтра).Значение = Согласования.РольПодписантаСотрудник()
    (СписокДокументовНаПодпись.ПрисоединенныеТаблицы[2].Фильтр.Элементы[1] как ЭлементФильтра).ВидСравнения = ВидСравнения.Равно
    (СписокДокументовНаПодпись.ПрисоединенныеТаблицы[2].Фильтр.Элементы[1] как ЭлементФильтра).Значение = ФизическоеЛицо
    (СписокДокументовНаПодпись.ПрисоединенныеТаблицы[3].Фильтр.Элементы[1] как ЭлементФильтра).ВидСравнения = ВидСравнения.ВСписке
    (СписокДокументовНаПодпись.ПрисоединенныеТаблицы[3].Фильтр.Элементы[1] как ЭлементФильтра).Значение = ФизическиеЛица
        
    ПользовательИмеетСертификатЭП = Криптография.ПараметрыСеанса().ПользовательИмеетСертификатЭП
    
    (СписокДокументовНаПодпись.Фильтр.Элементы[4] как ГруппаЭлементовФильтра).Использовать = ДокументыПодчиненных
    
    МенеджерГлобальныхКлиентскихСобытий.ПодключитьОбработчик(метод (Источник, Параметры) ->
        выбор Источник 
        когда ФизЛица.ТРЕБУЕТСЯ_ОБНОВЛЕНИЕ_ДАННЫХ_ФИЗИЧЕСКОГО_ЛИЦА, Согласования.ДОКУМЕНТ_СОГЛАСОВАН,
            Согласования.ДОКУМЕНТ_ОТКЛОНЕН, Согласования.СОГЛАСОВАНИЕ_ОТМЕНЕНО, Зарплата.ПОДПИСАН_РАСЧЕТНЫЙ_ЛИСТ
            Компоненты.ДокументыНаПодпись.Обновить()                            
            Компоненты.ДокументНаПодпись.Инициализировать()
        ;
        возврат
    ;)
        
;

метод МоментОтправкиНаПодписаниеЗаголовок(ДанныеЭлемента: СтрокаДинамическогоСписка): Строка
    пер ФорматированныйМоментОтправки = ""
    если ДанныеЭлемента.Данные["МоментОтправкиНаПодписание"] == Неопределено или ДанныеЭлемента.Данные["МоментОтправкиНаПодписание"] == Null
        возврат ""
    иначе если МенеджерДат.ДобавитьДни(ДанныеЭлемента.Данные["МоментОтправкиНаПодписание"] как Момент, 2) < МенеджерДат.ТекущаяДатаВремя() 
        ФорматированныйМоментОтправки = МенеджерДат.ФорматМомента(
            ДанныеЭлемента.Данные["МоментОтправкиНаПодписание"] как Момент?, "дд ММММ гггг")
    иначе
        ФорматированныйМоментОтправки = МенеджерДат.ФорматМомента(
            ДанныеЭлемента.Данные["МоментОтправкиНаПодписание"] как Момент?, "дд ММММ гггг, ЧЧ:мм", Неопределено, Истина, Истина)
    ;
    возврат "Отправлен для подписания %ФорматированныйМоментОтправки"
;

метод МоментОтправкиНаПодписаниеВидимость(): Булево
    возврат (ВидЭлектроннойПодписи == ВидыЭлектронныхПодписей.Госключ
        или ВидЭлектроннойПодписи == ВидыЭлектронныхПодписей.УнэпАстралПлатформа)
            и ТолькоДокументыНаПодпись
;

// Конец ИнициализируемыйКомпонент

метод ПанельМинимальнаяШирина(): Число
    возврат ОсновнойИнтерфейс.МинимальнаяШиринаПанелейПодразделов()
;

метод ПанельМаксимальнаяШирина(): Число
    возврат ОсновнойИнтерфейс.МаксимальнаяШиринаПанелейПодразделов()
;

метод ДокументыНаПодписьГруппаЗаголовок(): Строка
    если не УчаствуетВСогласованиях или ДокументыПодчиненных
        возврат ""
    ;
    возврат ОсновнойИнтерфейс.ШиринаОсновногоОкнаПриложения() > 400 ? "Мои документы" : "Мои"
;

метод ДокументыНаПодписьПриНажатииЭлемента(Источник: Список<ДинамическийСписок>, Событие: СобытиеСДанными<СтрокаСписка<СтрокаДинамическогоСписка>>)
    если ДокументыПодчиненных
        ТекущийДокумент = Неопределено
        возврат
    ;
   
    знч ВыбранныйДокумент = Событие.Данные.ДанныеСтроки.Ключ как ДокументыНаПодпись.Ссылка
    если МенеджерСущности.СсылкаСуществует(ВыбранныйДокумент)
        ТекущийДокумент = МенеджерСущности.ОбъектПоСсылке(ВыбранныйДокумент) как ДокументыНаПодпись.Объект
        если ОсновнойИнтерфейс.РаботаНаУзкомУстройстве()
            ОткрытьФормуДокумента()
        иначе
            Компоненты.ДокументНаПодпись.Инициализировать()
        ;
    иначе
        знч Уведомление = новый Уведомление("Документ более недоступен", Событие.Данные.ДанныеСтроки.Данные["Наименование"] как Строка)
        Уведомление.Показать()
        Компоненты.ДокументыНаПодпись.Обновить()
    ;
;

метод ОткрытьФормуДокумента(): Булево
    пер Действие: СтандартныеФормы.ДействиеВФорме?
    Действие = ДокументыНаПодписьФормаДокумента.ОткрытьВМодальномОкне(КлючОбъекта = ТекущийДокумент.Ссылка)
    если Действие == СтандартныеФормы.ДействиеВФорме.Удален
        ТекущийДокумент = Неопределено
    ;
    возврат (Действие == СтандартныеФормы.ДействиеВФорме.Изменен)
;

@ВПодсистеме
метод СтрокаПоискаВыполнитьПоиск(Источник: СтрокаПоиска, Событие: СобытиеСДанными<Строка>)
    СтрокаПоиска = Событие.Данные
    пер ЭлементФильтра = СписокДокументовНаПодпись.Фильтр.Элементы[2] как ЭлементФильтра
    ЭлементФильтра.Значение = СтрокаПоиска
    ЭлементФильтра.Использовать = не СтрокаПоиска.Пусто()
;

метод РезультатЦвет(ДанныеЭлемента: СтрокаДинамическогоСписка): Цвет | Авто
    пер СостояниеПоРезультатуСогласования: СостоянияДокумента 
    выбор ДанныеЭлемента.Данные["Результат"] как РезультатыСогласования|Null|Неопределено
        когда РезультатыСогласования.Согласовано
            СостояниеПоРезультатуСогласования = СостоянияДокумента.Выполнен
        когда РезультатыСогласования.Отказано
            СостояниеПоРезультатуСогласования = СостоянияДокумента.ПолученОтказ
        иначе
            если ДанныеЭлемента.Данные["ВариантПодписания"] == ВариантыПодписанияДокументов.Требуется
                СостояниеПоРезультатуСогласования = СостоянияДокумента.Черновик
            иначе
                СостояниеПоРезультатуСогласования = СостоянияДокумента.Выполнен
            ;
    ;
    если ПользовательИмеетСертификатЭП и не ДокументыПодчиненных
        и СостояниеПоРезультатуСогласования == СостоянияДокумента.Выполнен
        и ДанныеЭлемента.Данные["Подпись"] == Неопределено
        
        СостояниеПоРезультатуСогласования = СостоянияДокумента.Подготовлен
    ;
    возврат БиблиотекаЦветов.Цвет(СостДокументов.ВидЦветаПоСостоянию(СостояниеПоРезультатуСогласования))
;

метод ОрганизацияВидимость(): Булево
    возврат КлиентскоеУстройство.ВидИнтерфейса == ВидИнтерфейса.Компьютер
;

метод ПросмотрДокументаВидимость(): Булево
    возврат не ОсновнойИнтерфейс.РаботаНаУзкомУстройстве() и не ДокументыПодчиненных
;

метод ДокументИКнопкаВидимость(): Булево
    возврат ТекущийДокумент != Неопределено
;

метод ДокументНаПодписьЗаглушкаВидимость(): Булево
    возврат ТекущийДокумент == Неопределено
;

метод ОткрытьПриНажатии(Источник: Кнопка, Событие: СобытиеПриНажатии)
    ОткрытьФормуДокумента()
;

@НаСервере @ДоступноСКлиента
статический метод ЕстьДокументыНаПодпись(ФизическиеЛица: Множество<ФизическиеЛица.Ссылка>): Булево
    знч Запрос = Запрос{
        Выбрать Первые 1
            ДокументыНаПодпись.Ссылка
        Из
            ДокументыНаПодпись Как ДокументыНаПодпись
            Левое Соединение СогласованияДокументов Как СогласованияДокументов
                По ДокументыНаПодпись.Ссылка == СогласованияДокументов.Документ
                    И СогласованияДокументов.УчастникСогласования В(%ФизическиеЛица) 
                    И СогласованияДокументов.РольПодписанта == %{Согласования.РольПодписантаСотрудник()}
        Где
            СогласованияДокументов.Документ Есть Null
            И ДокументыНаПодпись.Ссылка В
                (Выбрать
                    ДокументыНаПодписьФизическиеЛица.Документ
                Из
                    ДокументыНаПодписьФизическиеЛица Как ДокументыНаПодписьФизическиеЛица
                Где
                    ДокументыНаПодписьФизическиеЛица.ФизическоеЛицо В(%ФизическиеЛица))}
    исп РезультатЗапроса = Запрос.Выполнить()
    знч РезультатЗапросаСтроки = новый ЧитаемыйМассив(РезультатЗапроса)
    если (не РезультатЗапросаСтроки.Пусто())
        возврат Истина
    ; 
    возврат Ложь
;

@НаСервере @ДоступноСКлиента
статический метод ПодчиненныеРуководителя(Руководитель: ФизическиеЛица.Ссылка?, Подразделения: ЧитаемыйМассив<СтруктураПредприятия.Ссылка>): Множество<ФизическиеЛица.Ссылка>
    знч ПодчиненныеРуководителя = ОрганизационнаяСтруктура.ПодчиненныеРуководителя(Руководитель, Подразделения)
    
    пер ГруппаФильтр: ГруппаЭлементовФильтра
    пер ФильтрПодчиненныхРуководителя: ЭлементФильтра
    пер ФильтрАктивированныхЛичныхКабинетов: ЭлементФильтра
    ГруппаФильтр.Использовать = Истина
    ГруппаФильтр.ВидГруппы = ВидГруппыЭлементовФильтра.ГруппаИ
    ФильтрПодчиненныхРуководителя.Использовать = Истина
    ФильтрПодчиненныхРуководителя.Поле = "ФизическиеЛица.Ссылка"
    ФильтрПодчиненныхРуководителя.ВидСравнения = ВидСравнения.ВСписке
    ФильтрПодчиненныхРуководителя.Значение = ПодчиненныеРуководителя
    ГруппаФильтр.Элементы.Добавить(ФильтрПодчиненныхРуководителя)
    ФильтрАктивированныхЛичныхКабинетов.Использовать = Истина
    ФильтрАктивированныхЛичныхКабинетов.Поле = "ЛичныеКабинеты.Доступность"
    ФильтрАктивированныхЛичныхКабинетов.ВидСравнения = ВидСравнения.Равно
    ФильтрАктивированныхЛичныхКабинетов.Значение = ДоступностьЛичногоКабинета.Включен
    ГруппаФильтр.Элементы.Добавить(ФильтрАктивированныхЛичныхКабинетов)
    
    исп КонтекстДоступа.Привилегированный()
    возврат ЛичныеКабинетыПользователей.ОтображаемыеФизическиеЛица(ГруппаФильтр)
;

@НаСервере @ДоступноСКлиента
статический метод ВидЭлектроннойПодписи(ФизическоеЛицо: ФизическиеЛица.Ссылка): ВидыЭлектронныхПодписей
    возврат РаботаСПодписями.ВидЭлектроннойПодписи(ФизическоеЛицо)
;

метод НаименованиеСвоегоДокументаШрифт(НовыйДокумент: Булево): СтилевойШрифт
    возврат НовыйДокумент ? СтилевыеШрифты.ЗаголовокОбычный : СтилевыеШрифты.Обычный
;

метод ПиктограммаДокументаИзображение(ДанныеСтроки: СтрокаДинамическогоСписка): ДвоичныйОбъект.Ссылка
    выбор ДанныеСтроки.Данные["ВариантПодписания"] как ВариантыПодписанияДокументов 
        когда ВариантыПодписанияДокументов.НеТребуется
            возврат Ресурс{ПодписьНеТребуется.png}.Ссылка
        когда ВариантыПодписанияДокументов.НеобходимаСобственноручнаяПодпись
            возврат Ресурс{СобственноручнаяПодпись.png}.Ссылка
    ;
    возврат Ресурс{ТребуетсяЦП.png}.Ссылка
;

метод ДнейНаОзнакомлении(ДанныеСтроки: СтрокаДинамическогоСписка): Строка
    знч ДнейЧислом = (МенеджерДат.ТекущаяДатаВремя()
            - (ДанныеСтроки.Данные["Дата"] как Дата).НачалоДня().ВМомент(МенеджерДат.ЧасовойПоясТекущий())).ВДнях()
    возврат "%ДнейЧислом %{МенеджерСтрок.ТекстПоКоличеству("День", ДнейЧислом).ВНижнийРегистр()}"
;