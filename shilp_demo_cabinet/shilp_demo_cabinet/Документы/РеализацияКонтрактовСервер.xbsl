импорт СтандартноеПриложение
импорт ВебApi
импорт ФизическиеЛица
импорт Компания
импорт Компания::Согласования
импорт Криптография
импорт ОбщиеСтандартные
импорт КонтрольДоступа
импорт ОбменДанными
импорт ВладельцыКабинетов
импорт ЛичныеКабинетыПользователей
импорт Уведомления
импорт УниверсальныеМеханизмы
импорт УниверсальныеМеханизмы::ШаблоныДокументов
импорт ИнтерфейсныеКомпонентыСтандартные
импорт КлиентСервисаПодписания

// Контракт ПараметрыСеансаПоставщик

@ВПроекте
@Реализация
метод КоллекцияПараметровСеанса(МобильныйИнтерфейс: Булево): Соответствие<Строка, Объект>
    пер ПараметрыСеанса = новый ПолученныеДокументы.ПараметрыСеанса()
    ПараметрыСеанса.НапоминатьОПолученныхДокументахПодчиненных 
        = ПолученныеДокументы.НастройкиПолученныхДокументов().НапоминатьОПолученныхДокументахПодчиненных
    ПараметрыСеанса.ФункциональныеОпции = ПолученныеДокументы.ПолучитьФункциональныеОпции()
    возврат {ПолученныеДокументы.КЛЮЧ_ПАРАМЕТРОВ_СЕАНСА: ПараметрыСеанса}
;
// Конец ПараметрыСеансаПоставщик

// Контракт ПодсистемаПриложения

@ВПроекте
@Реализация
метод ОписаниеПодсистемы(): СтандартноеПриложение.ОписаниеПодсистемы
    возврат новый СтандартноеПриложение.ОписаниеПодсистемы(
        ПолученныеДокументы.ИД_ПОДСИСТЕМЫ,
        {
            // Зарплата.ИД_ПОДСИСТЕМЫ, - циклическая ссылка
            // Справки.ИД_ПОДСИСТЕМЫ, - циклическая ссылка
            КонтрольДоступа.ИД_ПОДСИСТЕМЫ,
            ОбменДанными.ИД_ПОДСИСТЕМЫ,
            // Отсутствия.ИД_ПОДСИСТЕМЫ, - циклическая ссылка
            // Отпуск.ИД_ПОДСИСТЕМЫ, - циклическая ссылка
            ФизЛица.ИД_ПОДСИСТЕМЫ,
            ВладельцыКабинетов.ИД_ПОДСИСТЕМЫ,
            ЛичныеКабинетыПользователей.ИД_ПОДСИСТЕМЫ,
            Уведомления.ИД_ПОДСИСТЕМЫ,
            // ПриложениеНастройки.ИД_ПОДСИСТЕМЫ, - циклическая ссылка
            Криптография.ИД_ПОДСИСТЕМЫ,
            УниверсальныеМеханизмы.ИД_ПОДСИСТЕМЫ
        }
    )
;

// Конец ПодсистемаПриложения

// Контракт ОбновляемаяПодсистема

@ВПроекте
@Реализация
метод ОбработчикиЗаполнения(): Массив<СтандартноеПриложение.ОписаниеОбработчикаЗаполнения>
    возврат [новый СтандартноеПриложение.ОписаниеОбработчикаЗаполнения(
                    ПолученныеДокументы.ИД_ПОДСИСТЕМЫ, 
                    "СрокиНапоминанийОПолученныхДокументахНачальноеЗаполнение", 
                    &СрокиНапоминанийОПолученныхДокументах.НачальноеЗаполнение()
                ),
            новый СтандартноеПриложение.ОписаниеОбработчикаЗаполнения(
                    ПолученныеДокументы.ИД_ПОДСИСТЕМЫ, 
                    "ПолученныеДокументыОбновитьСтроковыеРесурсы", 
                    &ПолученныеДокументы.ОбновитьСтроковыеРесурсы()
                )
            ]
;

@ВПроекте
@Реализация
метод ОбработчикиОбновления(): Массив<СтандартноеПриложение.ОписаниеОбработчикаОбновления>
    пер Обработчики: Массив<СтандартноеПриложение.ОписаниеОбработчикаОбновления>
	Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
        ПолученныеДокументы.ИД_ПОДСИСТЕМЫ, 
        "ДобавитьРазделительИнформационныхСистемДокументыСотрудников", 
        &ДобавитьРазделительИнформационныхСистемДокументыСотрудников(), 
        Версия{7.1.1.34}))
	Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
        ПолученныеДокументы.ИД_ПОДСИСТЕМЫ, 
        "ДокументыНаПодписьЗаполнитьИнформациюОНовыхДокументах", 
        &НовыеДокументы.ЗаполнитьИнформациюОНовыхДокументах(), 
        Версия{7.1.1.36}))
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
        ПолученныеДокументы.ИД_ПОДСИСТЕМЫ, 
       "ПеренестиНастройкиСогласованияВШаблоныДокументов", 
        &ПеренестиНастройкиСогласованияВШаблоныДокументов(), 
        Версия{8.1.1.22}))
    возврат Обработчики
;

// Конец ОбновляемаяПодсистема

//Контракт ДанныеApi

@ВПроекте
@Реализация
метод МассивТипов(Получатель: ВидПриложения?, ВерсияФорматаОбмена: Версия?): Массив<Тип>
    пер Типы: Массив<Тип>
    если Получатель == ВидПриложения.Hrm
        если ВерсияФорматаОбмена != Неопределено и ВерсияФорматаОбмена >= Версия{2.2}
            Типы.Добавить(Тип<ДокументыСотрудников.Ссылка>)
            если ВерсияФорматаОбмена >= Версия{3.0}
                Типы.Добавить(Тип<АннулированияЗаявлений.Ссылка>)
            ;
        ;
    ;
    возврат Типы
;

@ВПроекте
@Реализация
метод ТипДанныхJson(ТипОбъекта: Тип, ВерсияФорматаОбмена: Версия?): Массив<Тип>
    пер Типы: Массив<Тип>
    выбор ТипОбъекта
    когда Тип<ДокументыНаПодпись.Ссылка>
        Типы.Добавить(ДокументыНаПодпись.ТипДанныхJson(ВерсияФорматаОбмена))
    когда Тип<АннулированияЗаявлений.Ссылка>
        Типы.Добавить(ДокументыНаПодпись.ТипДанныхJson(ВерсияФорматаОбмена))
    ;
    возврат Типы
;

@ВПроекте
@Реализация
метод ТипКоллекцииДанныхJson(ТипОбъекта: Тип, ВерсияФорматаОбмена: Версия?): Массив<Тип>
    пер Типы: Массив<Тип>
    выбор ТипОбъекта
    когда Тип<ДокументыНаПодпись.Ссылка>
        Типы.Добавить(ДокументыНаПодпись.ТипКоллекцииДанныхJson(ВерсияФорматаОбмена))
    ;
    возврат Типы
;

@ВПроекте
@Реализация
метод ИнструментыМенеджераОбъекта(ТипОбъекта: Тип): Массив<ВебApiСервер.ИнструментыМенеджераОбъекта>
    пер НаборИнструментыМенеджераОбъекта: Массив<ВебApiСервер.ИнструментыМенеджераОбъекта>
    пер ИнструментыМенеджераОбъекта: ВебApiСервер.ИнструментыМенеджераОбъекта
    выбор ТипОбъекта
    когда Тип<ДокументыНаПодпись.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как ДокументыНаПодпись.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    когда Тип<ДокументыСотрудников.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как ДокументыСотрудников.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    ;
    возврат НаборИнструментыМенеджераОбъекта
;

@ВПроекте
@Реализация
метод ПолучитьДанныеJson(ТипОбъекта: Тип, Ссылка: ВходящиеДанные.Ссылка|ИсходящиеДанные.Ссылка, 
    Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?): Массив<Объект?>
    
    пер ДанныеJson: Массив<Объект?>
    выбор ТипОбъекта
    когда Тип<ДокументыСотрудников.Ссылка>
        ДанныеJson.Добавить(ДокументыСотрудников.ПолучитьДанныеJson(Ссылка как ДокументыСотрудников.Ссылка, Сервисы, ВерсияФорматаОбмена))
    когда Тип<АннулированияЗаявлений.Ссылка>
        ДанныеJson.Добавить(АннулированияЗаявлений.ПолучитьДанныеJson(Ссылка как АннулированияЗаявлений.Ссылка, Сервисы, ВерсияФорматаОбмена))
    ;
    возврат ДанныеJson
;

@ВПроекте
@Реализация
метод МассивСсылокПоФильтру(ТипОбъекта: Тип, Фильтр: () -> ЧитаемыйМассив<Справочник.Ссылка>): Массив<ЧитаемыйМассив<Справочник.Ссылка>>
    пер МассивСсылок: Массив<ЧитаемыйМассив<Справочник.Ссылка>>
    возврат МассивСсылок
;

@ВПроекте
@Реализация
метод УдалитьОбъекты(ТипОбъекта: Тип, ПараметрыЗапроса: ЧитаемоеСоответствие<Строка, Число|Булево|Ууид|Строка>, Сервисы: ВебApiСервер.СервисыУдаленияОбъектов)
;

@ВПроекте
@Реализация
метод ТипОбъектаJson(ТипОбъекта: Тип): Массив<Строка>
    пер ТипОбъектаJson: Массив<Строка>
    выбор ТипОбъекта
    когда Тип<ДокументыНаПодпись.Ссылка>
        ТипОбъектаJson.Добавить(ДокументыНаПодпись.ТипОбъектаJson())
    когда Тип<ДокументыНаПодписьФизическиеЛица.Ссылка>
        ТипОбъектаJson.Добавить(ДокументыНаПодписьФизическиеЛица.ТипОбъектаJson())
    ;
    возврат ТипОбъектаJson
;

@ВПроекте
@Реализация
метод ЗагрузитьОбъектИзJson(ТипОбъекта: Тип, ТипДанных: Тип, ДанныеJson: Объект?, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    выбор ТипОбъекта
    когда Тип<ДокументыНаПодпись.Ссылка>
        выбор ТипДанных
        когда Тип<ДокументыНаПодпись.ДокументНаПодпись>
            ДокументыНаПодпись.ЗагрузитьОбъектИзJson(ДанныеJson как ДокументыНаПодпись.ДокументНаПодпись, Сервисы)
        когда Тип<ДокументыНаПодпись.ДокументНаПодпись_1_0>
            ДокументыНаПодпись.ЗагрузитьОбъектИзJson(ДанныеJson как ДокументыНаПодпись.ДокументНаПодпись_1_0, Сервисы)
        когда Тип<ДокументыНаПодпись.ДокументНаПодпись_2_0>
            ДокументыНаПодпись.ЗагрузитьОбъектИзJson(ДанныеJson как ДокументыНаПодпись.ДокументНаПодпись_2_0, Сервисы)
        когда Тип<ДокументыНаПодпись.ДокументНаПодпись_2_1>
            ДокументыНаПодпись.ЗагрузитьОбъектИзJson(ДанныеJson как ДокументыНаПодпись.ДокументНаПодпись_2_1, Сервисы)
        ;
    ;
;

@ВПроекте
@Реализация
метод ПослеЗаписиГруппыОбъектов(ТипОбъекта: Тип, МассивОбъектовОтложенногоОбновления: Массив<ВебApiСервер.ОбъектОтложенногоОбновления>)
;

@ВПроекте
@Реализация
метод ИзменитьОбъектИзJson(ТипОбъекта: Тип, ДанныеJson: Объект, Сервисы: ВебApiСервер.СервисыЗагрузкиJson, ЗаданиеМодификации: ВебApiСервер.ЗаданиеМодификации)
;

@ВПроекте
@Реализация
метод ЗавершитьИзменениеОбъектИзJson(ТипОбъекта: Тип, МассивСсылок: ЧитаемыйМассив<ВходящиеДанные.Ссылка>, ЗаданиеМодификации: ВебApiСервер.ЗаданиеМодификации)
;

@ВПроекте
@Реализация
метод ГруппаИзмененийВJson(ТипОбъекта: Тип, Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>,
    Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?): Массив<ЧитаемоеСоответствие<Строка, Массив<Объект?>>>
    
    пер ДанныеJson: Массив<ЧитаемоеСоответствие<Строка, Массив<Объект?>>>
    выбор ТипОбъекта
    когда Тип<ДокументыСотрудников.Ссылка>
        если ВерсияФорматаОбмена >= Версия{3.0}
           ДанныеJson.Добавить(ДокументыСотрудников.ГруппаИзмененийВJson_3_0(Ссылки, Сервисы))
        иначе если ВерсияФорматаОбмена >= Версия{2.2}
           ДанныеJson.Добавить(ДокументыСотрудников.ГруппаИзмененийВJson_2_2(Ссылки, Сервисы))
        ;
    когда Тип<АннулированияЗаявлений.Ссылка>
        ДанныеJson.Добавить(АннулированияЗаявлений.ГруппаИзмененийВJson(Ссылки, Сервисы, ВерсияФорматаОбмена))
    ;

    возврат ДанныеJson
;

//Конец ДанныеApi

// Контракт СогласованияПользователь
@ВПроекте
@Реализация
метод СформироватьПредставленияДокумента(Документ: ПодписываемыйДокумент.Ссылка)
    выбор Документ
    когда это ДокументыСотрудников.Ссылка,
        это АннулированияЗаявлений.Ссылка
        ПредставленияДокументов.СформироватьПредставленияДокумента(Документ как Справочник.Ссылка, Ложь)
    ;
;

@ВПроекте
@Реализация
метод ДокументСогласованияJson(ДанныеОбъекта: ЧитаемоеСоответствие<Строка, Объект?>,
    Сервисы: ВебApiСервер.СервисыУпаковкиJson): СогласованияДокументов.ДокументСогласованияJson?
    
    знч Документ = ДанныеОбъекта["Документ"] как Справочник.Ссылка
    выбор Документ
    когда это ДокументыНаПодпись.Ссылка
        возврат новый СогласованияДокументов.ДокументСогласованияJson(
            Сервисы.ПолучитьИдентификатор(Документ как ДокументыНаПодпись.Ссылка),
            ДокументыНаПодпись.ДанныеДокумента(Документ как  ДокументыНаПодпись.Ссылка).ВозможноОбновлениеПредставлений
        )
    когда это ДокументыСотрудников.Ссылка,
        это АннулированияЗаявлений.Ссылка
        возврат новый СогласованияДокументов.ДокументСогласованияJson(
            Документ.Ид.ВСтроку()
        )
    ;
    
    возврат Неопределено
;

@ВПроекте
@Реализация
метод ПослеПодписанияДокумента(Документ: ПодписываемыйДокумент.Ссылка, ДанныеСогласующего: Согласования.ДанныеСогласующего, ОбновитьПредставление: Булево)
    пер ЭтоДокументПодсистемы = Ложь
    выбор Документ
    когда это ДокументыНаПодпись.Ссылка
        ЭтоДокументПодсистемы = Истина
        если Согласования.РолиПодписантовПриложения().Содержит(ДанныеСогласующего.Роль)
            и ОбновитьПредставление
            
            ПолученныеДокументы.ЗарегистрироватьДокументКОбновлениюПредставления(Документ как ДокументыНаПодпись.Ссылка)
        ;
    когда это ДокументыСотрудников.Ссылка
        ЭтоДокументПодсистемы = Истина
        ДокументыСотрудников.ПослеПодписания(Документ как ДокументыСотрудников.Ссылка, ДанныеСогласующего)
    когда это АннулированияЗаявлений.Ссылка
        ЭтоДокументПодсистемы = Истина
        АннулированияЗаявлений.ПослеПодписания(Документ как АннулированияЗаявлений.Ссылка, ДанныеСогласующего)
    ;
    если ЭтоДокументПодсистемы и ОбновитьПредставление  
        СформироватьПредставленияДокумента(Документ)        
    ;
;

@ВПроекте
@Реализация
метод ОтправлятьСогласование(Документ: ПодписываемыйДокумент.Ссылка): Булево
    выбор Документ
    когда это ДокументыНаПодпись.Ссылка 
        возврат ОбменДанными.СсылкаВнешнегоОбъекта(Документ как ВходящиеДанные.Ссылка)
    когда это ДокументыСотрудников.Ссылка,
        это АннулированияЗаявлений.Ссылка 
        возврат ОбменДанными.ЭтоОтправляемыйДокумент(Документ как ИсходящиеДанные.Ссылка)
    ;
    
    возврат Ложь
;

@ВПроекте
@Реализация
метод ДокументыНаСогласовании(Согласующий: ФизическиеЛица.Ссылка): ЧитаемыйМассив<ПодписываемыйДокумент.Ссылка>
    знч Документы: Массив<ДокументыСотрудников.Ссылка>
    знч Запрос = Запрос{
        Выбрать Различные
            ДокументыСотрудников.Ссылка как Документ,
            ДокументыСотрудников.ФизическоеЛицо как ФизическоеЛицо,
            ДокументыСотрудников.ШаблонДокумента.ВидОбращения.ЗаменитьNull(Неопределено) как ВидСогласуемогоДокумента
        Из
            ДокументыСотрудников как ДокументыСотрудников 
            Внутреннее соединение СостояниеДокументов как СостояниеДокументов
                по СостояниеДокументов.Документ == ДокументыСотрудников.Ссылка
            Внутреннее соединение СогласующиеЗаявленийСотрудников как СогласующиеЗаявленийСотрудников
                по ДокументыСотрудников.ФизическоеЛицо == СогласующиеЗаявленийСотрудников.Сотрудник
                и ДокументыСотрудников.ШаблонДокумента.ВидОбращения.ЗаменитьNull(Неопределено) == СогласующиеЗаявленийСотрудников.ВидСогласуемогоЗаявления
                и (СогласующиеЗаявленийСотрудников.Согласующий == %Согласующий
                    или (СогласующиеЗаявленийСотрудников.СпособЗамещения == СпособыЗамещения.ВместеССогласующим)
                        и СогласующиеЗаявленийСотрудников.ПервичныйСогласующий == %Согласующий)
            Левое соединение СогласованияДокументов как СогласованияДокументов
                по СогласованияДокументов.Документ == СостояниеДокументов.Документ
                    и (СогласованияДокументов.НомерШагаСогласования > СогласующиеЗаявленийСотрудников.ШагСогласования
                            или СогласованияДокументов.УчастникСогласования == %Согласующий)
            Левое соединение ОтправляемыеДокументы как ОтправляемыеДокументы
                по ОтправляемыеДокументы.Владелец == СостояниеДокументов.Документ
        Где
            СостояниеДокументов.Состояние != СостоянияДокумента.Черновик
            и СостояниеДокументов.Состояние != СостоянияДокумента.ПолученОтказ
            и ОтправляемыеДокументы.Владелец Есть Null
            и СогласованияДокументов.Документ Есть Null
            и не 1 в 
                (Выбрать Первые 1
                    1 как поле
                из
                    СогласованияДокументов как СогласованияВСервисеПодписания
                где
                    СогласованияВСервисеПодписания.Документ == ДокументыСотрудников.Ссылка
                    и СогласованияВСервисеПодписания.УчастникСогласования == ДокументыСотрудников.ФизическоеЛицо
                    и СогласованияВСервисеПодписания.Результат == РезультатыСогласования.НаПодписанииВСервисеПодписания)
    } 
    
    исп Результат = Запрос.Выполнить()
    для РезультатСтрока из Результат
        пер ДолженСогласовать = Ложь
        знч ТекущиеСогласующие = Согласования.ТекущиеСогласующие(
            РезультатСтрока.Документ, РезультатСтрока.ВидСогласуемогоДокумента, РезультатСтрока.ФизическоеЛицо)
            
        для ТекущийСогласующий из ТекущиеСогласующие
            если ТекущийСогласующий.Согласующий == Согласующий
                ДолженСогласовать = Истина
                прервать
            ;
        ;
        если не ДолженСогласовать
            продолжить
        ;
        Документы.Добавить(РезультатСтрока.Документ)
    ;
    
    возврат Документы
;

@ВПроекте
@Реализация
метод ДокументыСогласованные(Согласующий: ФизическиеЛица.Ссылка): ЧитаемыйМассив<ПодписываемыйДокумент.Ссылка>
    знч Документы: Массив<ДокументыСотрудников.Ссылка>
    
    знч Запрос = Запрос{
        Выбрать Различные
            ДокументыСотрудников.Ссылка как Документ,
            ДокументыСотрудников.ШаблонДокумента.ВидОбращения.ЗаменитьNull(Неопределено) как ВидСогласуемогоДокумента
        Из
            ДокументыСотрудников как ДокументыСотрудников
            Внутреннее соединение СостояниеДокументов как СостояниеДокументов
                по СостояниеДокументов.Документ == ДокументыСотрудников.Ссылка
            Внутреннее соединение СогласующиеЗаявленийСотрудников как СогласующиеЗаявленийСотрудников
                по ДокументыСотрудников.ФизическоеЛицо == СогласующиеЗаявленийСотрудников.Сотрудник
                и ДокументыСотрудников.ШаблонДокумента.ВидОбращения.ЗаменитьNull(Неопределено) == СогласующиеЗаявленийСотрудников.ВидСогласуемогоЗаявления
                и (СогласующиеЗаявленийСотрудников.Согласующий == %Согласующий
                    или (СогласующиеЗаявленийСотрудников.СпособЗамещения == СпособыЗамещения.ВместеССогласующим)
                        и СогласующиеЗаявленийСотрудников.ПервичныйСогласующий == %Согласующий)
            Внутреннее соединение СогласованияДокументов как СогласованияДокументов
                по СогласованияДокументов.Документ == СостояниеДокументов.Документ
                    и (СогласованияДокументов.НомерШагаСогласования > СогласующиеЗаявленийСотрудников.ШагСогласования
                        или СогласованияДокументов.УчастникСогласования == %Согласующий)
        Где
            СостояниеДокументов.Состояние != СостоянияДокумента.Черновик
    }
    
    исп Результат = Запрос.Выполнить()
    для РезультатСтрока из Результат
        Документы.Добавить(РезультатСтрока.Документ)
    ;
    
    возврат Документы
;

@ВПроекте
@Реализация
метод ДокументДляОзнакомления(Документ: ПодписываемыйДокумент.Ссылка): Булево
    выбор Документ
    когда это ДокументыНаПодпись.Ссылка
        возврат Истина
    ;
    возврат Ложь
;

@ВПроекте
@Реализация
метод ПравилаСогласованияПоУмолчанию(): ЧитаемыйМассив<Согласования.ПравилоСогласования>
    возврат []
;

@ВПроекте
@Реализация
метод ЗаполнитьПредопределенныеВидыСогласуемыхЗаявлений()
;

@ВПроекте
@Реализация
метод ЗаполнитьПредопределенныеРолиПодписантов()
;

конст ДОКУМЕНТЫ_НА_ПОДПИСЬ = "ДокументыНаПодпись"
конст ДОКУМЕНТЫ_СОТРУДНИКОВ = "ДокументыСотрудников"

@ВПроекте
@Реализация
метод ЗаполнитьПредопределенныеТипыСогласуемыхДокументов()
    Согласования.ДобавитьПредопределенныйТипСогласуемогоДокумента(ДОКУМЕНТЫ_НА_ПОДПИСЬ)
    Согласования.ДобавитьПредопределенныйТипСогласуемогоДокумента(ДОКУМЕНТЫ_СОТРУДНИКОВ)
;

@ВПроекте
@Реализация
метод ТипСогласуемогоДокумента(ОбъектСогласования: ПодписываемыйДокумент.Ссылка|ВидыСогласуемыхЗаявлений.Ссылка): ТипыСогласуемыхДокументов.Ссылка?
    выбор ОбъектСогласования
    когда это ДокументыНаПодпись.Ссылка
        возврат Согласования.НайтиТипСогласуемогоДокумента(ДОКУМЕНТЫ_НА_ПОДПИСЬ)
    когда это ДокументыСотрудников.Ссылка
        возврат Согласования.НайтиТипСогласуемогоДокумента(ДОКУМЕНТЫ_СОТРУДНИКОВ)
    ;
    
    возврат Неопределено
;

@ВПроекте
@Реализация
метод ТипыСогласуемыхДокументовПолучателя(Получатель: ВидПриложения?): Массив<ТипыСогласуемыхДокументов.Ссылка>
    пер Типы: Массив<ТипыСогласуемыхДокументов.Ссылка>
    если Получатель == ВидПриложения.Hrm
        Типы.Добавить(Согласования.НайтиТипСогласуемогоДокумента(ДОКУМЕНТЫ_НА_ПОДПИСЬ))
        Типы.Добавить(Согласования.НайтиТипСогласуемогоДокумента(ДОКУМЕНТЫ_СОТРУДНИКОВ))
    ;
    возврат Типы
;

@ВПроекте
@Реализация
метод РольСогласующегоЗаявления(ВидЗаявления: ВидыСогласуемыхЗаявлений.Ссылка): Роли.Ссылка?
    если ВидЗаявления == ПолученныеДокументы.ВидСогласуемогоДокументаСотрудника()
        или ПолученныеДокументы.ВидыОбращенийДокументовСотрудника().Содержит(ВидЗаявления)
        
        возврат ПолученныеДокументы.РольСогласованиеДокументовСотрудников()
    иначе
        возврат Неопределено
    ;
;

@ВПроекте
@Реализация
метод ВидСогласуемогоЗаявления(Документ: ПодписываемыйДокумент.Ссылка): ВидыСогласуемыхЗаявлений.Ссылка?
    если Документ это ДокументыСотрудников.Ссылка
        возврат ПолученныеДокументы.ВидСогласуемогоДокументаСотрудника(Документ как ДокументыСотрудников.Ссылка)
    ;
    возврат Неопределено
;

@ВПроекте
@Реализация
метод Согласуемый(Документ: ПодписываемыйДокумент.Ссылка): ФизическиеЛица.Ссылка?
    если Документ это ДокументыСотрудников.Ссылка
        знч Запрос = Запрос{
            Выбрать
                ДокументыСотрудников.ФизическоеЛицо Как ФизическоеЛицо
            Из
                ДокументыСотрудников Как ДокументыСотрудников
            Где
                ДокументыСотрудников.Ссылка == %Документ
        } 
        возврат Запрос.Выполнить().ЕдинственныйИлиУмолчание()?.ФизическоеЛицо!
    ;
    возврат Неопределено
;

@ВПроекте
@Реализация
метод ИдентификаторыЭлектронныхДокументов(Документ: ПодписываемыйДокумент.Ссылка): ЧитаемыйМассив<Строка>
    знч ИдентификаторыЭлектронныхДокументов: Массив<Строка>
    если Документ это АннулированияЗаявлений.Ссылка
        знч Сервисы = АннулируемыйПоставщик.ПолучитьСервисы()
        знч МетодыПолученияРазрезаДляИдентификатораЭлектронногоДокумента: Соответствие<Тип, ()-> Тип>
        знч МетодыПолученияРабочегоМестаАннулируемого: Соответствие<Тип, (АннулируемыйДокумент.Ссылка) -> Массив<РабочиеМестаАннулирования>>
        для Сервис из Сервисы
            МетодыПолученияРабочегоМестаАннулируемого.ВставитьВсе(Сервис.МетодыПолученияРабочегоМестаАннулируемого())
            МетодыПолученияРазрезаДляИдентификатораЭлектронногоДокумента.ВставитьВсе(Сервис.МетодыПолученияРазрезаДляИдентификатораЭлектронногоДокумента())
        ;
        
        знч АннулируемыйДокумент = Аннулирование.АннулируемыйДокумент(Документ как АннулирующийДокумент.Ссылка)
        знч ТипАннулируемогоДокумента = АннулируемыйДокумент.ПолучитьТип()
        знч МетодРазреза = 
            МетодыПолученияРазрезаДляИдентификатораЭлектронногоДокумента.Получить(ТипАннулируемогоДокумента)
    
        знч Разрез = МетодРазреза()
        знч МетодПолученияРабочегоМестаАннулируемого = 
            МетодыПолученияРабочегоМестаАннулируемого.Получить(ТипАннулируемогоДокумента)
    
        знч РабочиеМеста = МетодПолученияРабочегоМестаАннулируемого(АннулируемыйДокумент)
        
        для РабочееМесто из РабочиеМеста
            пер Идентификатор: Организации.Ссылка|Сотрудники.Ссылка|?
            если Разрез == Тип<Сотрудники.Ссылка>
               Идентификатор = РабочееМесто.Сотрудник    
            иначе если Разрез == Тип<Организации.Ссылка>
                Идентификатор = РабочееМесто.Организация
            ;
            
            ИдентификаторыЭлектронныхДокументов.Добавить(
                Файлы.ИдентификаторЭлектронногоДокумента(Документ, Идентификатор))
        ;
    ;
    возврат ИдентификаторыЭлектронныхДокументов
;

// Конец СогласованияПользователь

// Контракт ПодписываемыйДокументПоставщикОграничений

@ВПроекте
@Реализация
метод РазрешенияДоступаПодписываемыхДокументов(Документы: ЧитаемыйМассив<ПодписываемыйДокумент.Ссылка>): ЧитаемоеСоответствие<ПодписываемыйДокумент.Ссылка, ЧитаемыйМассив<РазрешениеДоступа>>
    знч Разрешения: Соответствие<ПодписываемыйДокумент.Ссылка, ЧитаемыйМассив<РазрешениеДоступа>>
    знч ВладельцыСогласуемыхДокументов: Соответствие<ПодписываемыйДокумент.Ссылка, ЧитаемыйМассив<ФизическиеЛица.Ссылка>>
    знч МассивДокументовНаПодпись: Массив<ДокументыНаПодпись.Ссылка>
    знч МассивДокументовСотрудников: Массив<ДокументыСотрудников.Ссылка>
    знч ДокументыПодсистемы: Массив<ПодписываемыйДокумент.Ссылка>
    знч МассивАннулированийЗаявлений: Массив<АннулированияЗаявлений.Ссылка>
    для Документ из Документы
        выбор Документ
        когда это ДокументыНаПодпись.Ссылка
            МассивДокументовНаПодпись.Добавить(Документ как ДокументыНаПодпись.Ссылка)
            ДокументыПодсистемы.Добавить(Документ)
        когда это ДокументыСотрудников.Ссылка
            МассивДокументовСотрудников.Добавить(Документ как ДокументыСотрудников.Ссылка)
            ДокументыПодсистемы.Добавить(Документ)
        когда это АннулированияЗаявлений.Ссылка
            МассивАннулированийЗаявлений.Добавить(Документ как АннулированияЗаявлений.Ссылка)
            ДокументыПодсистемы.Добавить(Документ)
        ;
    ;   
        
    ВладельцыСогласуемыхДокументов.ВставитьВсе(ДокументыНаПодписьФизическиеЛица.ФизическиеЛицаДокументов(МассивДокументовНаПодпись))
    ВладельцыСогласуемыхДокументов.ВставитьВсе(ДокументыСотрудников.ФизическиеЛицаДокументов(МассивДокументовСотрудников))
    ВладельцыСогласуемыхДокументов.ВставитьВсе(АннулированияЗаявлений.ФизическиеЛицаДокументов(МассивАннулированийЗаявлений))
    
    для Документ из ДокументыПодсистемы
        знч РазрешенияДокумента: Массив<РазрешениеДоступа>
        РазрешенияДокумента.ДобавитьВсе(КонтрольДоступа.ЧтениеРедактированиеДанныхСправочниковПерсонально(
            ВладельцыСогласуемыхДокументов.ПолучитьИлиУмолчание(Документ, [])))
        РазрешенияДокумента.ДобавитьВсе(КонтрольДоступа.ЧтениеДанныхСправочниковПоПолномочиям(
            [КонтрольДоступа.ПолномочиеПросмотрЛичныхДанных()],
            ВладельцыСогласуемыхДокументов.ПолучитьИлиУмолчание(Документ, [])
        ))
        Разрешения.Вставить(Документ, РазрешенияДокумента)
    ;
    
    возврат Разрешения
;

// Конец ПодписываемыйДокументПоставщикОграничений

// Контракт СтатистикаПоставщик

@ВПроекте
@Реализация
метод СтатистикаСправочников(): Массив<СтатистикаДанных.Справочник>
    знч СправочникиСтатистика: Массив<СтатистикаДанных.Справочник>
    возврат СправочникиСтатистика
;

@ВПроекте
@Реализация
метод СтатистикаДокументов(): Массив<СтатистикаДанных.Документ>
    знч ДокументыСтатистика: Массив<СтатистикаДанных.Документ>
    ДокументыСтатистика.ДобавитьВсе(СтатистикаДанных.СтатистикаПоДокументу(АннулированияЗаявлений))
    возврат ДокументыСтатистика
;

// Конец СтатистикаПоставщик

// Контракт КонтрольДоступаПоПолномочиямСервис

@ВПроекте
@Реализация
метод ЗаполнитьПредопределенныеПолномочия()
;

@ВПроекте
@Реализация
метод ЗаполнитьПредопределенныеРоли()
    ПолученныеДокументы.ДобавитьРоли()
;

@ВПроекте
@Реализация
метод ЗаполнитьПредопределенныеТипыАтрибутов()
;

@ВПроекте
@Реализация
метод СоздатьНаборыОграниченийДоступа()
;

@ВПроекте
@Реализация
метод ТипыАтрибутовПоТипамЗначений(): ЧитаемоеСоответствие<Тип, ТипыАтрибутов.Ссылка>
    возврат {:}
;

метод ПолномочияСотрудника(): ЧитаемыйМассив<Полномочия.Ссылка>
    возврат []
;

//Конец КонтрольДоступаПоПолномочиямСервис

// Контракт ДанныеПодписанияСервис
@ВПроекте
@Реализация
метод ДанныеОрганизации(ДокументСсылка: ДокументПодписываемыйВСервисеПодписания.Ссылка): Соответствие<Строка, ОрганизацияПодписываемогоДокумента.Ссылка?>?
    выбор ДокументСсылка
    когда это ДокументыНаПодпись.Ссылка
        возврат {"" : МенеджерСущности.ЗначениеРеквизитаОбъекта(ДокументСсылка как Справочник.Ссылка, "Организация")}
    когда это ДокументыСотрудников.Ссылка
        возврат {"" : МенеджерСущности.ЗначениеРеквизитаОбъекта(ДокументСсылка как Справочник.Ссылка, "Организация")}
    когда это АннулированияЗаявлений.Ссылка
        знч АннулируемыйДокумент = Аннулирование.АннулируемыйДокумент(ДокументСсылка как АннулирующийДокумент.Ссылка)
        знч ОрганизацииАннулируемогоДокумента = КлиентСервисаПодписания.ДанныеОрганизацийДокумента(
            АннулируемыйДокумент как ДокументПодписываемыйВСервисеПодписания.Ссылка)
        пер ОрганизацииДокумента = новый Соответствие<Строка, ОрганизацияПодписываемогоДокумента.Ссылка?>()
        для ДанныеОрганизацииАннулируемогоДокумента из ОрганизацииАннулируемогоДокумента
            ОрганизацииДокумента.Вставить(
                ДанныеОрганизацииАннулируемогоДокумента.Ключ.Заменить(
                    АннулируемыйДокумент.Ид.ВСтроку(), ДокументСсылка.Ид.ВСтроку()),
                ДанныеОрганизацииАннулируемогоДокумента.Значение  
            )
        ;
        возврат ОрганизацииДокумента
    ;
    возврат Неопределено
;

@ВПроекте
@Реализация
метод ДанныеДокументов(ДокументСсылка: ДокументПодписываемыйВСервисеПодписания.Ссылка): Массив<ДокументПодписываемыйВСервисеПодписания.Ссылка>?
    возврат Неопределено
;

// Конец ДанныеПодписанияСервис

// Контракт ВторичныеДанные

@ВПроекте
@Реализация
метод Пересчитать()
    ПолученныеДокументы.ОбновитьСтроковыеРесурсы()
;

// Конец ВторичныеДанные

// Контракт ПоставщикШаблонов

@ВПроекте
@Реализация
метод ДанныеШаблонаДокумента(ДокументСсылка: Справочник.Ссылка, ДополнительныеПараметры: Соответствие<Строка, Объект>? = Неопределено): ШаблоныДокументовМенеджер.ДанныеДляШаблонаПечатнойФормы?
    выбор ДокументСсылка
    когда это ДокументыСотрудников.Ссылка
        знч ШаблонДокумента = МенеджерСущности.ЗначениеРеквизитаОбъекта(ДокументСсылка, "ШаблонДокумента")
        знч Ид = УниверсальныеМеханизмы.Ид(ШаблоныДокументов.ИД_ПОДСИСТЕМЫ, ШаблонДокумента.Ид.ВСтроку())
        пер ДанныеДляШаблона = новый ШаблоныДокументовМенеджер.ДанныеДляШаблонаПечатнойФормы(
            УниверсальныеМеханизмы.ДвоичныеДанные(Ид),
            УсловияВыводаОбластейШаблонов.УсловияВыводаОбластей(Ид),
            ДокументыСотрудников.ДанныеДокументаДляПечатнойФормы(ДокументСсылка))
        ШаблоныДокументовМенеджер.ДополнитьДанныеДополнительнымиРеквизитами(ДанныеДляШаблона, ДокументСсылка, Ид)
        возврат ДанныеДляШаблона
    когда это АннулированияЗаявлений.Ссылка
        знч Ид = УниверсальныеМеханизмы.Ид(Документы.ИД_ПОДСИСТЕМЫ, Документы.ШАБЛОН_АННУЛИРОВАНИЯ_ЗАЯВЛЕНИЯ)
        пер ДанныеДляШаблона = новый ШаблоныДокументовМенеджер.ДанныеДляШаблонаПечатнойФормы(
            УниверсальныеМеханизмы.ДвоичныеДанные(Ид),
            УсловияВыводаОбластейШаблонов.УсловияВыводаОбластей(Ид),
            АннулированияЗаявлений.ДанныеДокументаДляПечатнойФормы(ДокументСсылка))
        ШаблоныДокументовМенеджер.ДополнитьДанныеДополнительнымиРеквизитами(ДанныеДляШаблона, ДокументСсылка, Ид)
        возврат ДанныеДляШаблона
    ;
    возврат Неопределено
;

@ВПроекте
@Реализация
метод ДополнитьДанныеШаблонаДокумента(ДокументСсылка: Справочник.Ссылка, ДанныеДокумента: Соответствие<Строка, ШаблоныДокументовМенеджер.ДанныеПечатныхФорм>): Булево
    выбор ДокументСсылка
    когда это ДокументыСотрудников.Ссылка
        ДокументыСотрудников.ДополнитьДанныеДокументаДляПечатнойФормы(ДанныеДокумента)
        возврат Истина
    когда это АннулированияЗаявлений.Ссылка
        АннулированияЗаявлений.ДополнитьДанныеДокументаДляПечатнойФормы(ДанныеДокумента)
        возврат Истина
    ;
    возврат Ложь
;

// Конец ПоставщикШаблонов

// Контракт ИсходящиеДокументыСОписанием

@ВПроекте
@Реализация
метод ДокументСнабжаетсяФайломОписания(СсылкаНаДокумент: Сущность.Ключ): Булево
    если СсылкаНаДокумент это ДокументыСотрудников.Ссылка
        или СсылкаНаДокумент это АннулированияЗаявлений.Ссылка
        возврат Истина
    ;
    возврат Ложь
;

@ВПроекте
@Реализация
метод ДанныеДляПодготовкиОписаний(СсылкаНаДокумент: Сущность.Ключ): Соответствие<Строка, Согласования.ДанныеДляПодготовкиОписания>?
    
    если СсылкаНаДокумент это ДокументыСотрудников.Ссылка
        возврат ДокументыСотрудников.ДанныеДокументаДляПодготовкиОписаний(СсылкаНаДокумент)
    иначе если СсылкаНаДокумент это АннулированияЗаявлений.Ссылка
        возврат АннулированияЗаявлений.ДанныеДокументаДляПодготовкиОписаний(СсылкаНаДокумент)
    ;
    возврат Неопределено
;

// Конец ИсходящиеДокументыСОписанием

// Контракт Документы

@ВПроекте
@Реализация
метод СтрокиДокументовНаСогласовании(Документы: ЧитаемыйМассив<ПодписываемыйДокумент.Ссылка>): ЧитаемоеСоответствие<ПодписываемыйДокумент.Ссылка, СтрокаСпискаСМиниатюройКомпонентДанных>
    знч ПредставлениеДокументов: Соответствие<ДокументыСотрудников.Ссылка, СтрокаСпискаСМиниатюройКомпонентДанных>
    
    знч СсылкиДокументовСотрудников: Массив<ДокументыСотрудников.Ссылка>
    для Документ из Документы
        если Документ это ДокументыСотрудников.Ссылка
            СсылкиДокументовСотрудников.Добавить(Документ как ДокументыСотрудников.Ссылка)
        ;
    ;
    
    знч Запрос = Запрос{
        Выбрать Различные
            ДокументыСотрудников.Ссылка как Документ,
            ДокументыСотрудников.Дата как Дата,
            СостояниеДокументов.Состояние как Состояние,
            ДокументыСотрудников.ФизическоеЛицо как ФизическоеЛицо,
            ДокументыСотрудников.ФизическоеЛицо.Представление.ЗаменитьNull("") как ФизическоеЛицоПредставление,
            ДокументыСотрудников.ФизическоеЛицо.Миниатюра.ЗаменитьNull(Неопределено) как Миниатюра
        Из
            ДокументыСотрудников как ДокументыСотрудников
            Внутреннее соединение СостояниеДокументов как СостояниеДокументов
                по СостояниеДокументов.Документ == ДокументыСотрудников.Ссылка
        Где
            СостояниеДокументов.Документ В (%СсылкиДокументовСотрудников)
        Упорядочить По
            Дата Убыв
    }
    
    исп Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        знч ДанныеПредставления = новый СтрокаСпискаСМиниатюройКомпонентДанных()
        ДанныеПредставления.Представление = СтрокаРезультата.ФизическоеЛицоПредставление
        ДанныеПредставления.ДополнительноеПредставление =
            "%{МенеджерСущности.ПредставлениеСсылки(СтрокаРезультата.Документ)} от %{МенеджерДат.ФорматДаты(СтрокаРезультата.Дата)}"
        ДанныеПредставления.Изображение = ФизическиеЛица.ФотографияИзФайла(СтрокаРезультата.Миниатюра)
        ПредставлениеДокументов.Вставить(СтрокаРезультата.Документ, ДанныеПредставления)
    ;
    
    возврат ПредставлениеДокументов
;

// Конец Документы

// Контракт СтроковыеРесурсыПоставщик

@ВПроекте
@Реализация
метод ИменаРесурсовПоГруппеРесурсов(УчитыватьИспользуемуюФункциональность: Булево): Соответствие<Строка, Коллекция<Строка>>
    возврат {
        ПолученныеДокументы.ГРУППА_РЕСУРСОВ_ПОЛУЧЕННЫЕ_ДОКУМЕНТЫ: [
            ПолученныеДокументы.ПОЛУЧЕННЫЙ_ДОКУМЕНТ_ОПУБЛИКОВАН_SMS,
            ПолученныеДокументы.ПОЛУЧЕННЫЙ_ДОКУМЕНТ_ОПУБЛИКОВАН_PUSH,
            ПолученныеДокументы.ПОЛУЧЕННЫЙ_ДОКУМЕНТ_ОПУБЛИКОВАН_EMAIL,
            ПолученныеДокументы.ПОЛУЧЕННЫЙ_ДОКУМЕНТ_ОПУБЛИКОВАН_ТЕМА,

            ПолученныеДокументы.ПОЛУЧЕННЫЙ_ДОКУМЕНТ_НАПОМИНАНИЕ_SMS,
            ПолученныеДокументы.ПОЛУЧЕННЫЙ_ДОКУМЕНТ_НАПОМИНАНИЕ_PUSH,
            ПолученныеДокументы.ПОЛУЧЕННЫЙ_ДОКУМЕНТ_НАПОМИНАНИЕ_EMAIL,
            ПолученныеДокументы.ПОЛУЧЕННЫЙ_ДОКУМЕНТ_НАПОМИНАНИЕ_ТЕМА]
    }
;

// Конец СтроковыеРесурсыПоставщик

@ВПроекте
метод ДобавитьРазделительИнформационныхСистемДокументыСотрудников()
    Согласования.ДобавитьПредопределенныйТипСогласуемогоДокумента(ДОКУМЕНТЫ_СОТРУДНИКОВ)
    знч ДанныеИнформационныхСистем = ИнформационныеСистемы.ДанныеИнформационныхСистем()
    для ДанныеИнформационнойСистемы из ДанныеИнформационныхСистем
        знч ВидПриложения = ДанныеИнформационнойСистемы.Значение.ВидПриложения
        для Сервис из СогласованияПользователь.ПолучитьСервисы()
            знч ТипыСогласуемыхДокументов = Сервис.ТипыСогласуемыхДокументовПолучателя(ВидПриложения)
            для ТипСогласуемогоДокумента из ТипыСогласуемыхДокументов
                если ТипСогласуемогоДокумента.Представление() == ДОКУМЕНТЫ_СОТРУДНИКОВ
                    ИнформационныеСистемыРазделителейДанных.ОбновитьИнформационныеСистемыРазделителейДанных(
                        ТипСогласуемогоДокумента, ДанныеИнформационнойСистемы.Ключ)
                    прервать
                ;
            ;
        ;
    ;
;

метод ЗаполнитьПравилоСогласованияПоУмолчанию()
    для ПравилоСогласования из ПравилаСогласованияПоУмолчанию()
        Согласования.ЗаписатьПравилоСогласования(ПравилоСогласования)
    ;
    
    Согласования.ОбновитьПравилаСогласования()
;

@ВПроекте
метод ПеренестиНастройкиСогласованияВШаблоныДокументов()
    знч ВидСогласуемогоДокументаСотрудника = ПолученныеДокументы.ВидСогласуемогоДокументаСотрудника()
    если ВидСогласуемогоДокументаСотрудника != Неопределено
        знч Запрос = Запрос{
            Выбрать
                Ссылка,
                Наименование,
                НеобходимоСогласование,
                Архивирован
            Из
                ШаблоныДокументов
            Где
                ВидОбращения == Неопределено}
        исп Результат = Запрос.Выполнить()
        если не Результат.Пусто()
            для СтрокаРезультата из Результат
                знч ШаблонДокументаОбъект = СтрокаРезультата.Ссылка.ЗагрузитьОбъект()
                ШаблонДокументаОбъект.ВидОбращения =
                    ШаблоныДокументов.НовыйВидОбращения(
                        СтрокаРезультата.Наименование,
                        СтрокаРезультата.НеобходимоСогласование и не СтрокаРезультата.Архивирован)
                ШаблонДокументаОбъект.Записать()
                Согласования.СкопироватьНастройкиСогласования(ШаблонДокументаОбъект.ВидОбращения, ВидСогласуемогоДокументаСотрудника)
            ;
            Согласования.ОбновитьПравилаСогласования()
        ;
        ВидыСогласуемыхЗаявлений.УстановитьИспользуемостьВидаСогласования(ВидСогласуемогоДокументаСотрудника, Ложь)
    ;
;