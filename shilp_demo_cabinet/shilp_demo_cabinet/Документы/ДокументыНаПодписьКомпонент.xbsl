импорт ИнтерфейсныеКомпонентыСтандартные
импорт Криптография
импорт ФизическиеЛица
импорт КонтрольДоступа
импорт УниверсальныеМеханизмы
импорт Компания::Согласования
импорт ЛичныеКабинетыПользователей
импорт КлиентСервисаПодписания

// Контракт ИнициализируемыйКомпонент

@ВПроекте
@Реализация
метод Инициализировать()
    ПрочитатьОбъект()
;

// Конец ИнициализируемыйКомпонент

@ВПодсистеме 
метод ЗаголовокФормы(): Строка
    возврат "Документ на ознакомление"
;

@ВПроекте 
метод УстановитьДокумент(ДокументНаПодпись: ДокументыНаПодпись.Объект)
    ПрочитатьОбъект()
;

@НаСервере @ДоступноСКлиента
статический метод Прочитать(ДокументыНаПодпись: ДокументыНаПодпись.Ссылка): ДокументыНаПодпись.Объект
    возврат ДокументыНаПодпись.ЗагрузитьОбъект()
;

метод ПрочитатьОбъект()
    ФизическоеЛицо = ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо
    знч ПользовательИмеетСертификатЭП = Криптография.ПараметрыСеанса().ПользовательИмеетСертификатЭП
       
    если Объект == Неопределено
        возврат
    ;
    
    пер ДанныеДокумента = ДополнительныеДанныеДокумента(Объект.Ссылка, Объект.Файл, ФизическоеЛицо, ПользовательИмеетСертификатЭП)
    СостояниеЗапроса = ДанныеДокумента.Состояние
    ДатаСостояния = ДанныеДокумента.ДатаСостояния
    ТаблицаФайлы = ДанныеДокумента.ТаблицаФайлы
    ТаблицаСогласующие = ДанныеДокумента.ТаблицаСогласующие
    ЭтоНовыйДокумент = ДанныеДокумента.ЭтоНовыйДокумент
    ТолькоЧтение = не ВозможноРедактирование()
    ТребуетОзнакомления = ДанныеДокумента.ТребуетОзнакомления
    ОжидаетОбновленияПредставления = ДанныеДокумента.ОжидаетОбновленияПредставления
    УведомитьОВозможностиПодписать = ДанныеДокумента.УведомитьОВозможностиПодписать
        и Объект.ВариантПодписания == ВариантыПодписанияДокументов.Требуется
    ИнтерфейсныеКомпоненты.ИнициализироватьПодчиненныеКомпоненты(Компоненты)
    ЗавершеноЧтениеДанных(новый СобытиеКомпонента())
;

метод ДокументыНаПодписьКомпонентОтступПоВертикали(): РазмерОтступа | Авто
    возврат РежимПросмотра ? РазмерОтступа.Двойной : РазмерОтступа.Отсутствует
;

метод ОрганизацияЗаголовок(): Строка
    пер ОрганизацияЗаголовок: Строка
    если не (Объект == Неопределено или Объект.Организация == Неопределено)
        ОрганизацияЗаголовок = Объект.Организация.Представление()
    ;
    возврат ОрганизацияЗаголовок
;
 
метод ВозможноРедактирование(): Булево
    если Объект?.ВариантПодписания == ВариантыПодписанияДокументов.Требуется
        возврат СостояниеЗапроса == СостоянияДокумента.Черновик или СостояниеЗапроса == Неопределено
    ;
    возврат ЭтоНовыйДокумент
;

метод КомментарийВидимость(): Булево
    возврат не (Объект?.Комментарий.Пусто() ?? Ложь)
;

метод ВидимостьПодсказкиОжидаетОбновленияПредставления(): ВидимостьПодсказки | Авто
    если ОжидаетОбновленияПредставления
        возврат Авто
    ;
    возврат ВидимостьПодсказки.НеОтображать
;

@НаСервере @НаКлиенте
структура ДополнительныеДанныеДокумента
    пер Состояние: СостоянияДокумента?
    пер ДатаСостояния: Момент?
    пер ТаблицаСогласующие: Согласующие?
    пер ТаблицаФайлы: ПрисоединенныеФайлы?
    пер ТребуетОзнакомления: Булево = Истина
    пер ОжидаетОбновленияПредставления: Булево
    пер УведомитьОВозможностиПодписать: Булево
    пер ЭтоНовыйДокумент: Булево
;

@НаСервере @ДоступноСКлиента
статический метод ДополнительныеДанныеДокумента(
	Ссылка: ДокументыНаПодпись.Ссылка?, 
	Файл: Файлы.Ссылка?, 
	ФизическоеЛицо: ФизическиеЛица.Ссылка?,
    ПользовательИмеетСертификатЭП: Булево): ДополнительныеДанныеДокумента
    пер ДанныеСостояния = СостДокументов.ДанныеСостоянияДокумента(Ссылка)
    пер ПрисоединенныеФайлы = новый ПрисоединенныеФайлы()
    ПрисоединенныеФайлы.Файлы.Добавить(ПрисоединенныеФайлыМенеджер.ПрисоединенныйФайл(Файл))
    пер ФайлыОбъекта = ПрисоединенныеФайлыМенеджер.ФайлыОбъекта(Ссылка)
    для ФайлОбъекта из ФайлыОбъекта
        если ФайлОбъекта.Ссылка == Файл
            продолжить
        ;
        ПрисоединенныеФайлы.Файлы.Добавить(ПрисоединенныеФайлыМенеджер.ПрисоединенныйФайл(ФайлОбъекта.Ссылка))
    ;
    пер ДанныеДокумента = новый ДополнительныеДанныеДокумента()
    ДанныеДокумента.Состояние = ДанныеСостояния.Состояние
    ДанныеДокумента.ДатаСостояния = ДанныеСостояния.Дата
    ДанныеДокумента.ТаблицаФайлы = ПрисоединенныеФайлы
    
    знч СогласующиеДокумента = Согласования.Согласующие(
        Ссылка, ПользователиСистемы.ТекущееФизическоеЛицо(), Согласования.РольПодписантаОрганизация())
    
    ДанныеДокумента.ТаблицаСогласующие = новый Согласующие()
    ДанныеДокумента.ТаблицаСогласующие.Владелец = СогласующиеДокумента.Владелец
    для СтрокаСогласующих из СогласующиеДокумента.Согласующие
        если СтрокаСогласующих.РольПодписанта == Согласования.РольПодписантаСотрудник()
            ДанныеДокумента.ТаблицаСогласующие.ЭтоДокументДляОзнакомления = СогласующиеДокумента.ЭтоДокументДляОзнакомления
        ;
        ДанныеДокумента.ТаблицаСогласующие.Согласующие.Добавить(СтрокаСогласующих)
    ;
    пер ПодписьСотрудника: СогласованияДокументов.Ссылка?
    если ФизическоеЛицо != Неопределено
        ПодписьСотрудника = СогласованияДокументов.ПодписьДокумента(
            Ссылка, ФизическоеЛицо, [Согласования.РольПодписантаСотрудник()], РезультатыСогласования.Согласовано)
            
        ДанныеДокумента.УведомитьОВозможностиПодписать = ПользовательИмеетСертификатЭП 
            и ПодписьСотрудника != Неопределено и СогласованияДокументов.ЭтоПростаяПодпись(ПодписьСотрудника)
        // В случае отказа подписать документ мы не подписываем документ и не уведомляем о подписи
        если ДанныеДокумента.ТаблицаСогласующие.Согласующие.Размер() > 0 
                и ДанныеДокумента.ТаблицаСогласующие.Согласующие[0].Результат == РезультатыСогласования.Отказано
            ДанныеДокумента.УведомитьОВозможностиПодписать = Ложь
        ;
        ДанныеДокумента.ТребуетОзнакомления = (ПодписьСотрудника == Неопределено)
        если ДанныеДокумента.ТребуетОзнакомления
            и КлиентСервисаПодписания.ДокументОжидаетПодписания(Ссылка, ФизическоеЛицо)
            
            ДанныеДокумента.ТребуетОзнакомления = Ложь
        ;
        ДанныеДокумента.ОжидаетОбновленияПредставления = ПолученныеДокументы.ОжидаетОбновленияПредставления(Ссылка)
        ДанныеДокумента.ЭтоНовыйДокумент = НовыеДокументы.ЭтоНовыйДокумент(Ссылка, ФизическоеЛицо)
    ;
    возврат ДанныеДокумента
;

// Контракт ВладелецПрисоединенныеФайлыКомпонент
@Реализация
@ВПроекте
метод ПрисоединенныеФайлыНачатаЗагрузкаФайлов(Источник: ПрисоединенныеФайлыКомпонент, Событие: неизвестно, ИдКомпонента: Строка = "")
;

@Реализация
@ВПроекте
метод ПрисоединенныеФайлыЗавершенаЗагрузкаФайлов(Источник: ПрисоединенныеФайлыКомпонент, Событие: неизвестно, ИдКомпонента: Строка = "")
;
// Конец ВладелецПрисоединенныеФайлыКомпонент

метод ПодписатьПриНажатии(Источник: Кнопка, Событие: СобытиеПриНажатии)
    если Объект == Неопределено
        возврат
    ;
    если Криптография.ТребуетсяПарольЗакрытогоКлюча()
        если не (ЗапросПароляЗакрытогоКлюча.ОткрытьВМодальномОкне() ?? Ложь)
            возврат
        ;
    ;
    попытка
        ПодписатьЦифровойПодписью(Объект.Ссылка, Объект.Файл, ФизическоеЛицо, Криптография.ПараметрыСеанса().ПарольЗакрытогоКлючаПользователя)  
        ПрочитатьОбъект()
    поймать Ошибка: Исключение
        ТекстОшибки = Ошибка.Описание
    ;
;

метод СообщениеОбОшибкеПодписанияВидимость(): Булево
    возврат не ТекстОшибки.Пусто()
;

@НаСервере @ДоступноСКлиента
статический метод ПодписатьЦифровойПодписью(
        Ссылка: ДокументыНаПодпись.Ссылка?, 
        Файл: Файлы.Ссылка?, 
        ФизическоеЛицо: ФизическиеЛица.Ссылка,
        ПарольЗакрытогоКлюча: Строка)
    
    знч ДанныеСогласующего = новый Согласования.ДанныеСогласующего(ФизическоеЛицо, Согласования.РольПодписантаСотрудник())
    Согласования.ПроверитьНастройкиИПодписатьФайлДокумента(Ссылка, Файл, ДанныеСогласующего, ПарольЗакрытогоКлюча)
;
