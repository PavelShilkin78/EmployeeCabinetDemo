импорт ИнтерфейсныеКомпонентыСтандартные
импорт Компания
импорт Компания::Согласования
импорт Криптография
импорт ЛичныеКабинетыПользователей
импорт ОбщегоНазначения
импорт ОбщиеСтандартные
импорт УниверсальныеМеханизмы
импорт УниверсальныеМеханизмы::ШаблоныДокументов
импорт ФизическиеЛица

@Обработчик
метод ПослеЧтения()
    Компоненты.Содержимое.УстановитьТекущееЗаявление(Объект)
    ИнтерфейсныеКомпоненты.ИнициализироватьПодчиненныеКомпоненты(Компоненты)        
;

метод ПанельОсновнаяЗаписатьИЗакрыть(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    ЗаписатьИЗакрыть(Истина)    
;

метод ПанельОсновнаяСохранитьЧерновик(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    ЗаписатьИЗакрыть(Ложь)    
;

метод ПанельОсновнаяВидимость(): Булево
    возврат не ПанельСогласованияВидимость()
;

метод ПанельСогласованияВыполненоСогласование(Источник: КоманднаяПанельСогласования, Событие: СобытиеКомпонента)
    Закрыть(СтандартныеФормы.ДействиеВФорме.Изменен)
;

метод ПанельСогласованияВидимость(): Булево
    возврат Компоненты.Содержимое.РежимСогласования
;

метод ДанныеСогласующего(): Согласования.ДанныеСогласующего?
    возврат Компоненты.Содержимое.ДанныеСогласующего
;

метод ПанельСогласованияОшибкаПриВыполненииКоманды(Источник: КоманднаяПанельСогласования, Событие: СобытиеСДанными<Исключение>)
    ПоказатьОшибку(Событие.Данные)
;

метод СодержимоеЗавершеноЧтениеДанных(Источник: ДокументыСотрудниковКомпонент, Событие: неизвестно)
    Компоненты.ГлавнаяГруппа.ЧтениеДанныхЗавершено = Истина 
;

метод ОшибкаПриВыполненииКоманды(Источник: КоманднаяПанельФорм, Событие: СобытиеСДанными<Исключение>)
    Компоненты.ГлавнаяГруппа.ПоказатьОшибку(ОбщегоНазначения.ОписаниеОшибкиПриДействииСДокументом(Событие.Данные))
;

метод ДокументыСотрудниковФормаДокументаЗаголовок(): Строка
    возврат Компоненты.Содержимое.ЗаголовокФормы()
;

метод ПанельОсновнаяЗаголовокКнопкиЗаписатьИЗакрыть(): Строка
    если Компоненты.Содержимое.ВозможноРедактирование()
        если Компоненты.Содержимое.НеобходимоСогласование
            возврат "Отправить на согласование"
        иначе
            возврат "Заказать"
        ;
    ;
    возврат "Закрыть" 
;

метод ИспользованиеКнопкиУдалить(): Булево
    возврат ОбщегоНазначения.ИспользованиеКнопкиУдалить(
        Компоненты.Содержимое.СостояниеЗапроса,
        Объект.ФизическоеЛицо, 
        ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо, 
        ЭтоНовый(), 
        Компоненты.Содержимое.Отправлен, 
        Компоненты.Содержимое.ПодписанТекущимФизическимЛицом,
        Компоненты.Содержимое.ПодписанПослеАвтора)
;

метод ЗаголовокКнопкиУдалить(): Строка
    возврат ОбщегоНазначения.ЗаголовокКнопкиУдалить(Компоненты.Содержимое.ПодписанТекущимФизическимЛицом)
;
метод ПанельОсновнаяИспользованиеСохранитьЧерновик(): Булево
    возврат Компоненты.Содержимое.ВозможноРедактирование()
;

метод ПанельОсновнаяУдалить(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    СобственнаяМодифицированность = Ложь
    СобственнаяМодифицированность = Ложь
    если Объект.ФизическоеЛицо != ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо
        ОтменитьСогласование(Объект.Ссылка, ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо)
        МенеджерГлобальныхКлиентскихСобытий.Оповестить(Согласования.СОГЛАСОВАНИЕ_ОТМЕНЕНО, Объект.Ссылка)    
    иначе
        знч Ссылка = Объект.Ссылка
        знч ФизЛицо = Объект.ФизическоеЛицо
        знч Дата = Объект.Дата
        УдалитьДокумент(Ссылка, ФизЛицо)
        УдаленДокумент.Оповестить(Ссылка, Дата)
    ;
    Закрыть(СтандартныеФормы.ДействиеВФорме.Удален)
;

метод ОсновнойКомпонентПанели(): Компонент
    возврат Компоненты.Содержимое
;

@НаСервере @НаКлиенте
структура ДанныеДокумента
    обз пер Ссылка: ДокументыСотрудников.Ссылка
    обз пер Дата: Дата
    обз пер Наименование: Строка
    обз пер Организация: Организации.Ссылка
    обз пер ФизическоеЛицо: ФизическиеЛица.Ссылка
    обз пер ШаблонДокумента: ШаблоныДокументов.Ссылка?
    обз пер Комментарий: Строка
    обз пер ТабличныеЧасти: ДокументыСотрудниковКомпонент.ТабличныеЧасти
;

метод ЗаписатьИЗакрыть(ОтправитьНаСогласование: Булево)
     
    если не Компоненты.Содержимое.ВозможноРедактирование()
        Закрыть(СтандартныеФормы.ДействиеВФорме.НеИзменен)
        возврат
    ;
    
    если не Компоненты.Содержимое.ПроверкаЗаполнения()
        возврат
    ;
    
    знч НеобходимоПодписание = Компоненты.Содержимое.НеобходимоПодписание
    знч НеобходимоСогласование = Компоненты.Содержимое.НеобходимоСогласование
    если (НеобходимоПодписание или НеобходимоСогласование)
        и ОтправитьНаСогласование
        и Криптография.ТребуетсяПарольЗакрытогоКлюча()
        и не (ЗапросПароляЗакрытогоКлюча.ОткрытьВМодальномОкне() ?? Ложь)
            возврат
    ;
    
    знч ЭтоНовый = ЭтоНовый()
    пер ОтменитьОтправку: Булево
    если не ОтправитьНаСогласование
        и не (Компоненты.Содержимое.СостояниеЗапроса == Неопределено
            или Компоненты.Содержимое.СостояниеЗапроса == СостоянияДокумента.Черновик)
            
        ОтменитьОтправку = Истина
    ;
    
    пер ДанныеДляЗаписи = новый ДанныеДокумента(
        Ссылка = Объект.Ссылка,
        Дата = Объект.Дата,
        Наименование = Объект.Наименование,
        Организация = Объект.Организация,
        ФизическоеЛицо = Объект.ФизическоеЛицо,
        ШаблонДокумента = Объект.ШаблонДокумента,
        Комментарий = Объект.Комментарий,
        ТабличныеЧасти = Компоненты.Содержимое.МодифицированныеТабличныеЧасти())
    
    Записать(
        ЭтоНовый,
        ДанныеДляЗаписи,
        ОтправитьНаСогласование,
        Криптография.ПараметрыСеанса().ПарольЗакрытогоКлючаПользователя,
        ОтменитьОтправку,
        НеобходимоПодписание,
        НеобходимоСогласование)
    
    если ОтправитьНаСогласование
        если Криптография.УстановитьПодписьВСервисеПодписания(
            Объект.Ссылка, ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо, Согласования.РольПодписантаСотрудник()) == Ложь
            
            Прочитать(Объект.Ссылка)
            возврат
        ;
    ;
    Компоненты.Содержимое.СброситьМодифицированностьТабличныхЧастей()
    если РассчитаннаяМодифицированность
        СобственнаяМодифицированность = Ложь
    ;
    
    знч ДанныеСостояния = СостояниеДокументаКомпонентДанных.Создать()
    ДанныеСостояния.Документ = Объект.Ссылка
    ДанныеСостояния.ДатаДокумента = ДанныеДляЗаписи.Дата
    ДанныеСостояния.Состояние = СостоянияДокумента.Подготовлен
    ДанныеСостояния.ДополнительноеПредставление = СостДокументов.ПредставлениеПериодаДокумента(ДатаДокумента = ДанныеДляЗаписи.Дата)
    ИзмененоСостояниеДокумента.Оповестить(ДанныеСостояния, ЭтоНовый)
    
    Закрыть(СтандартныеФормы.ДействиеВФорме.Изменен)
         
;

@НаСервере @ДоступноСКлиента
статический метод Записать(ЭтоНовый: Булево, ДанныеДляЗаписи: ДанныеДокумента, ОтправитьНаСогласование: Булево,
    ПарольЗакрытогоКлюча: Строка?, ОтменитьОтправку: Булево, НеобходимоПодписание: Булево, НеобходимоСогласование: Булево):
    Криптография.РезультатПодписания

    пер ДокументСотрудника: ДокументыСотрудников.Объект?
    если ЭтоНовый
        ДокументСотрудника = новый ДокументыСотрудников.Объект(ДанныеДляЗаписи.Ссылка.Ид).Заполнить()
    иначе
        ДокументСотрудника = ДанныеДляЗаписи.Ссылка.ЗагрузитьОбъект()
    ;
    
    ДокументСотрудника!.Дата = ДанныеДляЗаписи.Дата
    ДокументСотрудника!.Наименование = ДанныеДляЗаписи.Наименование
    ДокументСотрудника!.Организация = ДанныеДляЗаписи.Организация
    ДокументСотрудника!.ФизическоеЛицо = ДанныеДляЗаписи.ФизическоеЛицо
    ДокументСотрудника!.ШаблонДокумента = ДанныеДляЗаписи.ШаблонДокумента
    ДокументСотрудника!.Комментарий = ДанныеДляЗаписи.Комментарий
    
    исп Транзакции.Начать()
    ДокументСотрудника!.Записать()
    если не ДанныеДляЗаписи.ТабличныеЧасти.ТаблицаФайлы == Неопределено
        ПрисоединенныеФайлыМенеджер.Записать(ДанныеДляЗаписи.ТабличныеЧасти.ТаблицаФайлы)
    ;
    ШаблоныДокументовМенеджер.СохранитьРеквизиты(ДанныеДляЗаписи.ТабличныеЧасти.ДополнительныеРеквизиты)
    ПредставленияДокументов.СформироватьПредставленияДокумента(ДокументСотрудника.Ссылка, Истина)
    
    пер РезультатПодписания: Криптография.РезультатПодписания
    если НеобходимоПодписание или НеобходимоСогласование
        если ОтправитьНаСогласование
            знч ДанныеСогласующего = новый Согласования.ДанныеСогласующего(ДанныеДляЗаписи.ФизическоеЛицо, Согласования.РольПодписантаСотрудник())
            РезультатПодписания = Согласования.ПодписатьИУстановитьСостояниеДокумента(
                ДокументСотрудника.Ссылка, ДанныеСогласующего, ПарольЗакрытогоКлюча, СостоянияДокумента.Подготовлен, ДанныеДляЗаписи.ФизическоеЛицо)
            если РезультатПодписания.ЕстьОшибки
                возврат РезультатПодписания
            ;
        ;
    иначе
        если ОтправитьНаСогласование
            СостДокументов.УстановитьСостояниеДокумента(ДокументСотрудника.Ссылка, СостоянияДокумента.Подготовлен)
        ;
    ;
    если ОтменитьОтправку
        СогласованияДокументов.ОтозватьПодпись(ДанныеДляЗаписи.Ссылка, ДанныеДляЗаписи.ФизическоеЛицо)
        СостДокументов.УстановитьСостояниеДокумента(ДанныеДляЗаписи.Ссылка, СостоянияДокумента.Черновик)
    ;
    возврат РезультатПодписания
;

@НаСервере @ДоступноСКлиента
статический метод ОтменитьСогласование(Ссылка: ДокументыСотрудников.Ссылка, ФизическоеЛицо: ФизическиеЛица.Ссылка?)
    СогласованияДокументов.ОтозватьПодпись(Ссылка, ФизическоеЛицо)
    СостДокументов.УстановитьСостояниеДокумента(Ссылка, СостоянияДокумента.Подготовлен)
;

@НаСервере @ДоступноСКлиента
статический метод УдалитьДокумент(Ссылка: ДокументыСотрудников.Ссылка, ФизическоеЛицо: ФизическиеЛица.Ссылка?)
    СогласованияДокументов.ОтозватьПодпись(Ссылка, ФизическоеЛицо)
    ДокументыСотрудников.УдалитьДокумент(Ссылка, ФизическоеЛицо)
;

метод ПоказатьОшибку(Ошибка: Исключение)
    Криптография.СброситьПарольЗакрытогоКлючаПриОшибкеВводаПароля(Ошибка)
    Компоненты.ГлавнаяГруппа.ПоказатьОшибку(
        ОбщегоНазначения.ОписаниеОшибкиПриДействииСДокументом(Ошибка, Объект.ФизическоеЛицо, Компоненты.Содержимое.ПодписанТекущимФизическимЛицом))
;
