импорт ВладельцыКабинетов
импорт ИнтерфейсныеКомпонентыСтандартные
импорт Компания
импорт Компания::Согласования
импорт Криптография
импорт ЛичныеКабинетыПользователей
импорт ОбменДанными
импорт ОбщегоНазначения
импорт ОбщиеСтандартные
импорт СтандартноеПриложение
импорт УниверсальныеМеханизмы
импорт УниверсальныеМеханизмы::ШаблоныДокументов
импорт ФизическиеЛица

@Обработчик
метод ПослеЧтения()
    если не ЭтоНовый()
        АннулируемыйДокумент = Аннулирование.АннулируемыйДокумент(Объект.Ссылка)
    ;
    Компоненты.АннулированияЗаявлений.УстановитьТекущееЗаявление(Объект)
    
    УстановитьРежимПросмотра()
    ИнтерфейсныеКомпоненты.ИнициализироватьПодчиненныеКомпоненты(Компоненты)
;

метод АннулированияЗаявленийЗавершеноЧтениеДанных(Источник: АннулированияЗаявленийКомпонент, Событие: СобытиеКомпонента)
    Компоненты.ГлавнаяГруппа.ЧтениеДанныхЗавершено = Истина
;

метод ПанельОсновнаяЗаголовокКнопкиЗаписатьИЗакрыть(): Строка
    возврат ОбщегоНазначения.ЗаголовокКнопкиЗаписатьИЗакрыть(
        ОбщегоНазначения.ЭтоЧерновик(Компоненты.АннулированияЗаявлений.ДанныеДокумента?.Состояние),
        Компоненты.АннулированияЗаявлений.РедактированиеЗапрещено или Компоненты.АннулированияЗаявлений.РежимПросмотра,
        Истина)
;

метод ПанельОсновнаяВидКнопкиЗаписатьИЗакрыть(): ВидКнопки?
    возврат ОбщегоНазначения.ВидКнопкиЗаписатьИЗакрыть(
        ОбщегоНазначения.ЭтоЧерновик(Компоненты.АннулированияЗаявлений.ДанныеДокумента?.Состояние),
        Компоненты.АннулированияЗаявлений.РедактированиеЗапрещено или Компоненты.АннулированияЗаявлений.РежимПросмотра,
        Истина)
;

метод ПанельОсновнаяИспользованиеСохранитьЧерновик(): Булево
    возврат ОбщегоНазначения.ИспользованиеКнопкиСохранитьЧерновик(
        Объект.ФизическоеЛицо,
        Компоненты.АннулированияЗаявлений.ПодписанПослеАвтора,
        Компоненты.АннулированияЗаявлений.РежимПросмотра или (Компоненты.АннулированияЗаявлений.ДанныеДокумента?.Отправлен ?? Ложь))
;

метод ПанельОсновнаяИспользованиеУдалить(): Булево
        возврат ОбщегоНазначения.ИспользованиеКнопкиУдалить(
        Компоненты.АннулированияЗаявлений.ДанныеДокумента?.Состояние,
        Объект.ФизическоеЛицо, 
        ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо, 
        ЭтоНовый(), 
        Компоненты.АннулированияЗаявлений.ДанныеДокумента?.Отправлен ?? Ложь, 
        Компоненты.АннулированияЗаявлений.ПодписанТекущимФизическимЛицом,
        Компоненты.АннулированияЗаявлений.ПодписанПослеАвтора)
;

метод ФормаДокументаВысота(): Число
    возврат ОсновнойИнтерфейс.ВысотаФормыДокумента(100)
;

метод ПанельОсновнаяЗаписатьИЗакрыть(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    ЗаписатьДокумент(ОтправитьНаСогласование = Истина)
;

метод ПанельОсновнаяСохранитьЧерновик(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    ЗаписатьДокумент(ОтправитьНаСогласование = Ложь)
;

метод АннулированияЗаявленийИзменениеСостоянияЗагрукиФайлов(Источник: АннулированияЗаявленийКомпонент, Событие: СобытиеСДанными<Булево>)
    УстановитьДоступностьКоманд(не Событие.Данные)
;

метод ЗаписатьДокумент(ОтправитьНаСогласование: Булево)
    если Компоненты.АннулированияЗаявлений.РежимПросмотра
        или (Объект.ФизическоеЛицо != ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо
            или Компоненты.АннулированияЗаявлений.РедактированиеЗапрещено 
                и не (ОтправитьНаСогласование == Ложь
                    и Компоненты.АннулированияЗаявлений.ДанныеДокумента.Состояние == СостоянияДокумента.Подготовлен))
                
        Закрыть(СтандартныеФормы.ДействиеВФорме.НеИзменен)
        возврат
    ;

    если ОтправитьНаСогласование
        и не Криптография.ВвестиПарольЗакрытогоКлюча(
            Объект.ФизическоеЛицо, Объект.Ссылка)
        
        возврат
    ;
    
    пер ТабличныеЧасти: АннулированияЗаявленийКомпонент.ТабличныеЧасти = Компоненты.АннулированияЗаявлений.МодифицированныеТабличныеЧасти()
    // Признак ЭтоНовый получаем до записи 
    пер ЭтоНовый: Булево = ЭтоНовый()
    пер ТекущееСостояние: СостоянияДокумента 
    если ОтправитьНаСогласование
        ТекущееСостояние = СостоянияДокумента.Подготовлен
    ;
        
    пер ДанныеДокумента = новый ДанныеДокумента()
    ДанныеДокумента.Ссылка = Объект.Ссылка
    ДанныеДокумента.Дата = Объект.Дата
    ДанныеДокумента.ФизическоеЛицо = Объект.ФизическоеЛицо
    ДанныеДокумента.Причина = Объект.Причина
    ДанныеДокумента.Комментарий = Объект.Комментарий
    пер СостояниеОбмена: ОбменДанными.СостояниеОбмена
    знч РезультатПодписания = Записать(
            ЭтоНовый(), 
            ДанныеДокумента, 
            ТабличныеЧасти, 
            ОтправитьНаСогласование,
            Криптография.ПараметрыСеанса().ПарольЗакрытогоКлючаПользователя, 
            ВладельцыКабинетов.ПараметрыСеанса().ИнформационныеСистемы, СостояниеОбмена, АннулируемыйДокумент)
    если РезультатПодписания.ЕстьОшибки
        СтандартныеФормы.ПоказатьУведомление(
            "Ошибка подписания документа",
            РезультатПодписания.ТекстОшибки,
            ОценкаИнформации.Отрицательная
        )
        возврат
    ;
    если ОтправитьНаСогласование
        если Криптография.УстановитьПодписьВСервисеПодписания(
            Объект.Ссылка, ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо, Согласования.РольПодписантаСотрудник()) == Ложь
            
            Прочитать(Объект.Ссылка)
            возврат
        ;
        ТекущееСостояние = СостоянияДокумента.Подготовлен
    ;
    если РассчитаннаяМодифицированность
        СобственнаяМодифицированность = Ложь
    ;
    // Опровещение выполянем перед закрытием - когда уже записаны все данные, сопровождающие запись документа
    знч ДанныеСостояния = новый СостояниеДокументаКомпонентДанных()
    ДанныеСостояния.Документ = ДанныеДокумента.Ссылка
    ДанныеСостояния.ДатаДокумента = ДанныеДокумента.Дата
    ДанныеСостояния.Состояние = ТекущееСостояние
    ДанныеСостояния.ДополнительноеПредставление = СостДокументов.ПредставлениеПериодаДокумента(ДатаДокумента = ДанныеДокумента.Дата)
    ИзмененоСостояниеДокумента.Оповестить(ДанныеСостояния, ЭтоНовый)
    если ОтправитьНаСогласование
        пер ЗаголовокУведомления = "Отправлено"
        пер ТекстУведомления = "Заявление отправлено в кадровую службу. После согласования или отклонения заявления вы получите уведомление."
        пер КоннотацияУведомления: ОценкаИнформации = ОценкаИнформации.Обычная
        если СостояниеОбмена.ОповеститьОбОтсутствииОбмена
            ЗаголовокУведомления = "Приостановлена отправка заявления"
            ТекстУведомления = "Заявление сейчас не может быть отправлено. Заявление будет отправлено в кадровую службу, как только появится такая возможность." 
            если СостояниеОбмена.ОповеститьСотрудникаОВозобновленииОбмена
                ТекстУведомления += " Вы получите уведомление после его отправки."
            ;
            КоннотацияУведомления = ОценкаИнформации.Предупреждающая
        ;
        СтандартныеФормы.ПоказатьУведомление(ЗаголовокУведомления, ТекстУведомления, КоннотацияУведомления)
    ;
    СформированоАннулирование.Оповестить()
    Закрыть()
;

метод ПанельОсновнаяУдалить(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    СобственнаяМодифицированность = Ложь
    УдалитьДокумент(Объект.Ссылка, Объект.ФизическоеЛицо)
    УдаленДокумент.Оповестить(Объект.Ссылка, Объект.Дата)
    Закрыть()
;

метод УстановитьДоступностьКоманд(Доступность: Булево)
    пер ГлавнаяГруппа: КорневойКомпонентМодальнойФормы = Компоненты.ГлавнаяГруппа
    для КоманднаяПанель из ГлавнаяГруппа.КомандныеПанели
         КоманднаяПанель.Доступность = Доступность
    ;
;

метод ОшибкаПриВыполненииКоманды(Источник: КоманднаяПанельФорм, Событие: СобытиеСДанными<Исключение>)
    Криптография.СброситьПарольЗакрытогоКлючаПриОшибкеВводаПароля(Событие.Данные)
    Компоненты.ГлавнаяГруппа.ПоказатьОшибку(
        ОбщегоНазначения.ОписаниеОшибкиПриДействииСДокументом(Событие.Данные, Объект.ФизическоеЛицо))
;

@НаСервере @НаКлиенте
структура ДанныеДокумента
    пер Ссылка: АннулированияЗаявлений.Ссылка?
    пер Дата: Дата?
    пер ФизическоеЛицо: ФизическиеЛица.Ссылка?
    пер АннулируемыйДокумент: АннулируемыйДокумент.Ссылка?
    пер Причина: Строка?
    пер Комментарий: Строка?
;

@НаСервере @ДоступноСКлиента
статический метод Записать( ЭтоНовый: Булево, 
                ДанныеДокумента: ДанныеДокумента, 
                ТабличныеЧасти: АннулированияЗаявленийКомпонент.ТабличныеЧасти, 
                ОтправитьНаСогласование: Булево, 
                ПарольЗакрытогоКлюча: Строка?,
                ИнформационныеСистемы: Соответствие<ИнформационныеСистемы.Ссылка, ОбменДанными.НастройкиИнформационнойСистемы>, 
                СостояниеОбмена: ОбменДанными.СостояниеОбмена,
                АннулируемыйДокумент: АннулируемыйДокумент.Ссылка): Криптография.РезультатПодписания
    
    пер Заявление: АннулированияЗаявлений.Объект?
    пер ЗаявлениеСсылка: АннулированияЗаявлений.Ссылка? = ДанныеДокумента.Ссылка
    если ЭтоНовый
        Заявление = новый АннулированияЗаявлений.Объект(ЗаявлениеСсылка.Ид).Заполнить()
    иначе
        Заявление = ЗаявлениеСсылка.ЗагрузитьОбъект()
    ;
    Заявление!.ФизическоеЛицо = ДанныеДокумента.ФизическоеЛицо
    Заявление!.Дата = ДанныеДокумента.Дата
    Заявление!.Причина = ДанныеДокумента.Причина
    Заявление!.Комментарий = ДанныеДокумента.Комментарий
    
    исп Транзакции.Начать()
    Заявление.ЗаписатьАннулирование(АннулируемыйДокумент)
    Заявление.Записать(АннулируемыйДокумент)
    
    если не ТабличныеЧасти.ТаблицаФайлы == Неопределено
        ПрисоединенныеФайлыМенеджер.Записать(ТабличныеЧасти.ТаблицаФайлы)
    ;
    ШаблоныДокументовМенеджер.СохранитьРеквизиты(ТабличныеЧасти.ДополнительныеРеквизиты)
    ПредставленияДокументов.СформироватьПредставленияДокумента(ЗаявлениеСсылка, Истина)
    пер РезультатПодписания: Криптография.РезультатПодписания
    если ОтправитьНаСогласование
        знч ДанныеСогласующего = новый Согласования.ДанныеСогласующего(ДанныеДокумента.ФизическоеЛицо, Согласования.РольПодписантаСотрудник())
        РезультатПодписания = Согласования.ПодписатьИУстановитьСостояниеДокумента(ЗаявлениеСсылка, ДанныеСогласующего, ПарольЗакрытогоКлюча, СостоянияДокумента.Подготовлен, ДанныеДокумента.ФизическоеЛицо)
        если РезультатПодписания.ЕстьОшибки
            возврат РезультатПодписания
        ;
        СостояниеОбмена = ВладельцыКабинетов.ПроверитьСостояниеОбмена(ДанныеДокумента.ФизическоеЛицо)
    ;
    возврат РезультатПодписания 
;

@НаСервере @ДоступноСКлиента
статический метод УдалитьДокумент(Ссылка: АннулированияЗаявлений.Ссылка, ФизическоеЛицо: ФизическиеЛица.Ссылка?)
    АннулированияЗаявлений.УдалитьДокумент(Ссылка, ФизическоеЛицо)
;

метод ОсновнойКомпонентПанели(): Компонент
    возврат этот
;

метод УстановитьРежимПросмотра()
    если не Компания.ПараметрыСеанса().ТекущийПользовательСотрудник
        Компоненты.АннулированияЗаявлений.РежимПросмотра = Истина
    ;
;