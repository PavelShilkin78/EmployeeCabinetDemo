импорт АдаптацияПерсонала
импорт Администрирование
импорт Анкетирование
импорт ВладельцыКабинетов
импорт Документы
импорт Зарплата
импорт Компания
импорт Компания::Согласования
импорт ЛичныеКабинетыКандидатов
импорт ЛичныеКабинетыПользователей
импорт Обсуждения
импорт Отпуск
импорт Отсутствия
импорт ОценкаПерсонала
импорт ПодборПерсонала
импорт Справки
импорт СтандартноеПриложение
импорт Тестирование
импорт УчетВремени
импорт ФизическиеЛица
импорт Почта
импорт Руководителю
импорт ЗарплатаСразу
импорт ИнтерфейсныеКомпонентыСтандартные

// Контракт ОсновнойИнтерфейсПоставщик
@ВПроекте
@Реализация
метод РазделыПриложения(): ЧитаемаяКоллекция<ОсновнойИнтерфейс.ОписаниеРаздела>
    знч Разделы: Массив<ОсновнойИнтерфейс.ОписаниеРаздела>
    
    знч КабинетНедоступен = не ЛичныеКабинетыПользователей.ПараметрыСеанса().ДоступностьКабинета
    знч ПриложениеНедоступно = не Приложение.ПараметрыСеанса().ДоступностьПриложения
    знч ТекущийИлиБывшийСотрудник = (Компания.ПараметрыСеанса().ТекущийПользовательСотрудник 
        или ВладельцыКабинетов.ПараметрыСеанса().ДнейДоОтключенияКабинета != Неопределено)
    знч ЭтоПользовательСПолнымиПравами = СтандартноеПриложение.ПараметрыСеанса().ТекущийПользовательИмеетПолныеПрава
    знч ЭтоКандидат = ЛичныеКабинетыКандидатов.ПараметрыСеанса().ЛичныйКабинетКандидата   
    
    если Приложение.ПараметрыСеанса().ПриложениеЗарегистрировано
        
        если Обсуждения.ИспользуютсяОбсуждения() и Компания.ПараметрыСеанса().ТекущийПользовательСотрудник
            Разделы.Добавить(ОписаниеРазделаОбсуждения())
        ;
        
        если (КабинетНедоступен или ПриложениеНедоступно или не ТекущийИлиБывшийСотрудник) и 
            не ЭтоПользовательСПолнымиПравами и не ЭтоКандидат
                            
            Разделы.Добавить(ОписаниеРазделаПриложениеОтключено())
        ;
    иначе
        если СтандартноеПриложение.ПараметрыСеанса().ТекущийПользовательИмеетПолныеПрава
            Разделы.Добавить(ОписаниеРазделаИнициализация())
        иначе
            Разделы.Добавить(ОписаниеРазделаВходНевозможен())
        ;
    ;
 
    возврат Разделы
;

@ВПроекте
@Реализация
метод Виджеты(): ЧитаемаяКоллекция<ОсновнойИнтерфейс.ОписаниеВиджета>
    возврат []
;

@ВПроекте
@Реализация
метод КомандыВсеФункции(): ЧитаемаяКоллекция<ОсновнойИнтерфейс.ОписательКомандыВсеФункции>
    возврат [
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Представление = "Отзывы пользователей",
            СоздательФормыСписка = метод()-> возврат новый ОтзывыПользователей.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый ОтзывыПользователей.АвтоматическаяФормаОбъекта();
            )
    ]
;

@ВПроекте
@Реализация
метод ДополнительныеКоманды(): ЧитаемыйМассив<Команда>
    если ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо != Неопределено и 
        (ЛичныеКабинетыПользователей.ПараметрыСеанса().ДоступностьКабинета и Приложение.ПараметрыСеанса().ДоступностьПриложения)
        возврат [ДействиеОценитьПриложение]
    иначе
        возврат []
    ;
;

@ВПроекте
@Реализация
метод КомандыПанелиДействий(): ЧитаемыйМассив<Команда>
    возврат []
;

@ВПроекте
@Реализация
метод ДополнительныеКомандыПанелиГлавное(): ЧитаемыйМассив<Команда>
    возврат []
;
// Конец ОсновнойИнтерфейсПоставщик

// Контракт ПослеСозданияОбработчик
@ВПроекте
@Реализация
метод ПослеСоздания()
    если Приложение.ПараметрыСеанса().СборАналитики
        СтатистикаИспользованияПриложения.НачатьСборСтатистики(СервисСтатистикиИспользованияПриложения.ЯндексМетрика, "65765293")        
    ;
;
// Конец ПослеСозданияОбработчик

// Контракт КомпоновщикОсновногоИнтерфейса
@ВПроекте
@Реализация
метод СкомпоноватьРазделы(Разделы: Массив<ОсновнойИнтерфейс.ОписаниеРаздела>, ВходУжеВыполнен: Булево): Массив<ОсновнойИнтерфейс.ОписаниеРаздела>
    знч КУдалению: Массив<ОсновнойИнтерфейс.ОписаниеРаздела>
    если    Приложение.ПараметрыСеанса().ПриложениеЗарегистрировано 
        для Раздел из Разделы
            если 
                Раздел.Ид == ИД_РАЗДЕЛА_ПРИЛОЖЕНИЕ_ОТКЛЮЧЕНО и ВходУжеВыполнен или                              // Повторный вход администратора приложения
                Раздел.Ид == ОсновнойИнтерфейс.ИД_РАЗДЕЛА_ГЛАВНОЕ и ОсновнойИнтерфейс.Виджеты().Размер() == 0   // Пустой набор доступных виджетов
                
                КУдалению.Добавить(Раздел)
            ;
        ;
        выбор 
        когда ПриложениеОтключено() и не ВходУжеВыполнен
            для Раздел из Разделы
                выбор Раздел.Ид
                когда ИД_РАЗДЕЛА_ПРИЛОЖЕНИЕ_ОТКЛЮЧЕНО
                    Раздел.Приоритет = 1
                иначе
                    КУдалению.Добавить(Раздел)
                ;
            ;
        когда  ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо == Неопределено
                и не ЛичныеКабинетыКандидатов.ПараметрыСеанса().ЛичныйКабинетКандидата
            для Раздел из Разделы
                выбор Раздел.Ид
                когда Компания.ИД_РАЗДЕЛА_КОМПАНИЯ
                    Раздел.Приоритет = 1
                когда ОсновнойИнтерфейс.ИД_РАЗДЕЛА_НАСТРОЙКИ
                    Раздел.Приоритет = 99
                когда ОсновнойИнтерфейс.ИД_РАЗДЕЛА_ВСЕ_ФУНКЦИИ
                    Раздел.Приоритет = 100
                иначе
                    КУдалению.Добавить(Раздел)
                ;
            ;
        когда ЛичныеКабинетыКандидатов.ПараметрыСеанса().ЛичныйКабинетКандидата
            знч КандидатПринятНаРаботу = ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо != Неопределено
            знч ЛичныеКабинетыРазделы = ЛичныеКабинетыКандидатов.ПОРЯДОК_РАЗДЕЛОВ
            для Раздел из Разделы
                если КандидатПринятНаРаботу
                    если ЛичныеКабинетыРазделы.СодержитКлюч(Раздел.Ид)
                        КУдалению.Добавить(Раздел)
                    ;
                иначе  
                    если ЛичныеКабинетыРазделы.СодержитКлюч(Раздел.Ид)
                        Раздел.Приоритет = ЛичныеКабинетыРазделы.Получить(Раздел.Ид)
                    иначе
                        КУдалению.Добавить(Раздел)
                    ;
                ;
            ;
        иначе
            для Раздел из Разделы
                выбор Раздел.Ид
                когда ОсновнойИнтерфейс.ИД_РАЗДЕЛА_ГЛАВНОЕ
                    Раздел.Приоритет = 1
                когда Зарплата.ИД_РАЗДЕЛА_ЗАРПЛАТА
                    Раздел.Приоритет = 2
                когда ЗарплатаСразу.ИД_РАЗДЕЛА_ЗАРПЛАТА_СРАЗУ
                    Раздел.Приоритет = 2.5
                когда УчетВремени.ИД_РАЗДЕЛА_УЧЕТ_ВРЕМЕНИ
                    Раздел.Приоритет = 3
                когда ПолученныеДокументы.ИД_РАЗДЕЛА_ДОКУМЕНТЫ_СОТРУДНИКОВ
                    Раздел.Приоритет = 4
                когда Отпуск.ИД_РАЗДЕЛА_ОТПУСК
                    Раздел.Приоритет = 5
                когда Отсутствия.ИД_РАЗДЕЛА_ОТСУТСТВИЯ
                    Раздел.Приоритет = 6
                когда Справки.ИД_РАЗДЕЛА_СПРАВКИ
                    Раздел.Приоритет = 7
                когда Руководителю.ИД_РАЗДЕЛА_РУКОВОДИТЕЛЮ
                    Раздел.Приоритет = 8
                когда Компания.ИД_РАЗДЕЛА_КОМПАНИЯ
                    Раздел.Приоритет = 9
                когда ПодборПерсонала.ИД_РАЗДЕЛА_ПОДБОР_ПЕРСОНАЛА
                    если не ПодборПерсонала.ИспользованиеРаздела()
                        КУдалению.Добавить(Раздел)
                    иначе
                        Раздел.Приоритет = 10
                    ;
                когда АдаптацияПерсонала.ИД_РАЗДЕЛА_АДАПТАЦИЯ_ПЕРСОНАЛА
                    если не АдаптацияПерсонала.ПараметрыСеанса().ПоказыватьРаздел
                        КУдалению.Добавить(Раздел)
                    иначе
                        Раздел.Приоритет = 11
                    ;
                когда Анкетирование.ИД_РАЗДЕЛА_АНКЕТИРОВАНИЕ
                    если не ВладельцыКабинетов.ЭтоРуководительПодразделения()
                        КУдалению.Добавить(Раздел)
                    иначе
                        Раздел.Приоритет = 12
                    ;
                когда ОсновнойИнтерфейс.ИД_РАЗДЕЛА_НАСТРОЙКИ
                    Раздел.Приоритет = 99
                когда ОсновнойИнтерфейс.ИД_РАЗДЕЛА_ВСЕ_ФУНКЦИИ
                    Раздел.Приоритет = 100
                иначе
                    Раздел.Приоритет = 90
                ;
            ;
        ;
    иначе
        для Раздел из Разделы
            выбор Раздел.Ид
            когда ОсновнойИнтерфейс.ИД_РАЗДЕЛА_ВСЕ_ФУНКЦИИ
                Раздел.Приоритет = 100
                продолжить
            когда ИД_РАЗДЕЛА_ИНИЦИАЛИЗАЦИЯ
                продолжить
            ;
            КУдалению.Добавить(Раздел)
        ;
    ;
    Разделы = Разделы.СортироватьПо(Раздел -> Раздел.Приоритет)
    для РазделКУдалению из КУдалению
        Разделы.Удалить(РазделКУдалению)
    ;
    возврат Разделы
;

@ВПроекте
@Реализация
метод СкомпоноватьВиджеты(Виджеты: Массив<ОсновнойИнтерфейс.ОписаниеВиджета>): Массив<ОсновнойИнтерфейс.ОписаниеВиджета>
    для Виджет из Виджеты
        выбор Виджет.Ид
        когда Зарплата.ИД_РАЗДЕЛА_ЗАРПЛАТА
            Виджет.Приоритет = 1
        когда ЗарплатаСразу.ИД_РАЗДЕЛА_ЗАРПЛАТА_СРАЗУ
            Виджет.Приоритет = 1.5
        когда УчетВремени.ИД_ВИДЖЕТА_УЧЕТ_ВРЕМЕНИ_ПЛЕЕР
            Виджет.Приоритет = 2
        когда ПолученныеДокументы.ИД_РАЗДЕЛА_ДОКУМЕНТЫ_СОТРУДНИКОВ
            Виджет.Приоритет = 3
        когда Отпуск.ИД_РАЗДЕЛА_ОТПУСК
            Виджет.Приоритет = 4
        когда Отсутствия.ИД_РАЗДЕЛА_ОТСУТСТВИЯ
            Виджет.Приоритет = 5
        когда Справки.ИД_РАЗДЕЛА_СПРАВКИ
            Виджет.Приоритет = 6
        когда Руководителю.ИД_РАЗДЕЛА_РУКОВОДИТЕЛЮ
            Виджет.Приоритет = 7
        когда ПодборПерсонала.ИД_РАЗДЕЛА_ПОДБОР_ПЕРСОНАЛА
            Виджет.Приоритет = 7
        когда ОценкаПерсонала.ИД_РАЗДЕЛА_ОЦЕНКА_ПЕРСОНАЛА
            Виджет.Приоритет = 8
        когда АдаптацияПерсонала.ИД_РАЗДЕЛА_АДАПТАЦИЯ_ПЕРСОНАЛА
            Виджет.Приоритет = 9
        когда Анкетирование.ИД_РАЗДЕЛА_АНКЕТИРОВАНИЕ
            Виджет.Приоритет = 10
        ;
    ;
    возврат Виджеты.СортироватьПо(Виджет -> Виджет.Приоритет)
;

@ВПроекте
@Реализация
метод СкомпоноватьДополнительныеКоманды(Команды: Массив<Команда>)
;

@ВПроекте
@Реализация
метод СкомпоноватьКомандыПанелиДействий(Команды: Массив<Команда>)
    если (не ЛичныеКабинетыПользователей.ПараметрыСеанса().ДоступностьКабинета или не Приложение.ПараметрыСеанса().ДоступностьПриложения) и
            не (СтандартноеПриложение.ПараметрыСеанса().ТекущийПользовательИмеетПолныеПрава)
        
        Команды.Очистить()
    ;
;

@ВПроекте
@Реализация
метод Аватар(): ДвоичныйОбъект.Ссылка?
    возврат ВладельцыКабинетов.ПараметрыСеанса().Аватар
;
// Конец КомпоновщикОсновногоИнтерфейса

// Контракт КомпоновщикПанелиНастройки

@ВПроекте
@Реализация
метод СкомпоноватьНастройки(Настройки: Массив<СтандартноеПриложение.ОписаниеДополнительнойСтраницы>): Массив<СтандартноеПриложение.ОписаниеДополнительнойСтраницы>
    для Панель из Настройки
        выбор Панель.ИдСтраницы
        когда Администрирование.ИД_НАСТРОЙКИ_ЛИЧНЫЕ_КАБИНЕТЫ
            Панель.Приоритет = 1
        когда Администрирование.ИД_НАСТРОЙКИ_КЭДО
            Панель.Приоритет = 2
        когда Приложение.ИД_НАСТРОЕК_КОМПАНИИ
            Панель.Приоритет = 3
        когда Приложение.ИД_НАСТРОЕК_СОГЛАСОВАНИЯ
            Панель.Приоритет = 4
        когда Приложение.ИД_НАСТРОЕК_УВЕДОМЛЕНИЙ
            Панель.Приоритет = 5
        когда Администрирование.ИД_НАСТРОЙКИ_ОБСЛУЖИВАНИЕ
            Панель.Приоритет = 6
        когда Анкетирование.ИД_НАСТРОЙКИ_АНКЕТИРОВАНИЯ
            Панель.Приоритет = 20
        когда Тестирование.ИД_НАСТРОЕК_ТЕСТИРОВАНИЯ
            Панель.Приоритет = 21
        когда Приложение.ИД_НАСТРОЙКИ_ОБМЕНА
            Панель.Приоритет = 22
        когда Почта.ИД_НАСТРОЙКА_ПОЧТЫ
            Панель.Приоритет = 23
        когда ЗарплатаСразу.ИД_НАСТРОЙКА_ЗАРПЛАТА_СРАЗУ
            Панель.Приоритет = 24
        ;
    ;
    возврат Настройки.СортироватьПо(Панель -> Панель.Приоритет)
;

// Конец КомпоновщикПанелиНастройки

// Контракт НастраиваемаяПодсистема

@ВПроекте
@Реализация
метод ПанелиНастроек(): Массив<СтандартноеПриложение.ОписаниеДополнительнойСтраницы>
    знч Настройки: Массив<СтандартноеПриложение.ОписаниеДополнительнойСтраницы>
    если Администрирование.АдминистрированиеДоступно()
        Настройки.Добавить(новый СтандартноеПриложение.ОписаниеДополнительнойСтраницы(
                Приложение.ИД_ПОДСИСТЕМЫ,
                Приложение.ИД_НАСТРОЕК_КОМПАНИИ,
                "Компания",
                новый НастройкиКомпании()))
        Настройки.Добавить(новый СтандартноеПриложение.ОписаниеДополнительнойСтраницы(
                Приложение.ИД_ПОДСИСТЕМЫ,
                Приложение.ИД_НАСТРОЕК_СОГЛАСОВАНИЯ,
                "Согласования",
                новый НастройкиСогласования()))
        Настройки.Добавить(новый СтандартноеПриложение.ОписаниеДополнительнойСтраницы(
                Приложение.ИД_ПОДСИСТЕМЫ,
                Приложение.ИД_НАСТРОЕК_УВЕДОМЛЕНИЙ,
                "Уведомления",
                новый НастройкаУведомлений()))
        если Приложение.ПараметрыСеанса().ФункциональныеОпции.ИнтеграцияС1СПерсонал
            Настройки.Добавить(новый СтандартноеПриложение.ОписаниеДополнительнойСтраницы(
                Приложение.ИД_ПОДСИСТЕМЫ,
                Приложение.ИД_НАСТРОЙКИ_ОБМЕНА,
                "1С:Персонал",
                новый ИнициализацияHrПриложения()))
        ;
    ;
    возврат Настройки
;

@ВПроекте
@Реализация
метод ЕстьДоступныеПанелиНастроек(): Булево
    пер ЕстьДоступныеПанелиНастроек: Булево
    если Администрирование.АдминистрированиеДоступно()
        ЕстьДоступныеПанелиНастроек = Истина
    ;
    возврат ЕстьДоступныеПанелиНастроек
;

// Конец НастраиваемаяПодсистема

конст ИД_РАЗДЕЛА_ИНИЦИАЛИЗАЦИЯ = "Инициализация"
конст ИД_РАЗДЕЛА_ВХОД_НЕВОЗМОЖЕН = "ВходНевозможен"
конст ИД_РАЗДЕЛА_ПРИЛОЖЕНИЕ_ОТКЛЮЧЕНО = "ПриложениеОтключено"
конст ИД_РАЗДЕЛА_ОБСУЖДЕНИЯ = "Обсуждения"

@НаКлиенте
метод ОписаниеРазделаИнициализация(): ОсновнойИнтерфейс.ОписаниеРаздела
    возврат новый ОсновнойИнтерфейс.ОписаниеРаздела(
        Ид = ИД_РАЗДЕЛА_ИНИЦИАЛИЗАЦИЯ,
        Имя = "Инициализация",
        НавигационнаяКомандаРаздела = НавигацияИнициализацияПриложения,
        ШиринаДляПанелиНавигации = 152)
;

@НаКлиенте
метод ОписаниеРазделаВходНевозможен(): ОсновнойИнтерфейс.ОписаниеРаздела
    возврат новый ОсновнойИнтерфейс.ОписаниеРаздела(
        Ид = ИД_РАЗДЕЛА_ВХОД_НЕВОЗМОЖЕН,
        Имя = "Вход невозможен",
        НавигационнаяКомандаРаздела = НавигацияВходВПриложениеНевозможен,
        ШиринаДляПанелиНавигации = 152)
;

@НаКлиенте
метод ОписаниеРазделаПриложениеОтключено(): ОсновнойИнтерфейс.ОписаниеРаздела
    возврат новый ОсновнойИнтерфейс.ОписаниеРаздела(
        Ид = ИД_РАЗДЕЛА_ПРИЛОЖЕНИЕ_ОТКЛЮЧЕНО,
        Имя = "Приложение отключено",
        НавигационнаяКомандаРаздела = НавигацияПриложениеОтключено,
        ШиринаДляПанелиНавигации = 152)
;

метод ОписаниеРазделаОбсуждения(): ОсновнойИнтерфейс.ОписаниеРаздела
    возврат новый ОсновнойИнтерфейс.ОписаниеРаздела(
        Ид = ИД_РАЗДЕЛА_ОБСУЖДЕНИЯ,
        Имя = "Обсуждения",
        Пиктограмма = Ресурс{Пиктограммы/ПиктограммаРазделаОбсуждения.svg}.Ссылка,
        ЦветПиктограммы = Неопределено,
        НавигационнаяКомандаРаздела = НавигацияСистемаВзаимодействия,
        ШиринаДляПанелиНавигации = 144)
;

// Контракт ПодборПерсоналаКомпонентыИнтерфейса

@ВПроекте
@Реализация
метод ВидимостьРаздела(): Булево
    пер НастроенаИнтеграция = Приложение.ПараметрыСеанса().ФункциональныеОпции.ИнтеграцияС1СПерсонал
    пер РазделПодключен = ПодборПерсонала.ПараметрыСеанса().ФункциональныеОпции.ИспользованиеПодсистемы
    возврат РазделПодключен и НастроенаИнтеграция
;


@ВПроекте
@Реализация
метод ОписаниеФормРаздела(ФормаВладелец: ЗамещаемаяФорма): Массив<ПодборПерсоналаКомпонентыИнтерфейса.ОписаниеДополнительногоКомпонента>
    знч КомпонентыРаздела = новый Массив<ПодборПерсоналаКомпонентыИнтерфейса.ОписаниеДополнительногоКомпонента>()
    если Компания.ПараметрыСеанса().ТекущийПользовательРуководитель
        КомпонентыРаздела.Добавить(
            новый ПодборПерсоналаКомпонентыИнтерфейса.ОписаниеДополнительногоКомпонента(
                Порядок = 0,
                Заголовок = "",
                Содержимое = новый ЗаявкиИнициатораПодбора(ФормаВладелец = ФормаВладелец)
        ))
    ;
    КомпонентыРаздела.Добавить(
        новый ПодборПерсоналаКомпонентыИнтерфейса.ОписаниеДополнительногоКомпонента(
            Порядок = 1,
            Заголовок = "",
            Содержимое = новый ЗаявкиТребующиеСогласования(ФормаВладелец = ФормаВладелец)
    ))
    КомпонентыРаздела.Добавить(
        новый ПодборПерсоналаКомпонентыИнтерфейса.ОписаниеДополнительногоКомпонента(
            Порядок = 2,
            Заголовок = "",
            Содержимое = новый КарточкаСобытий()
    ))
    КомпонентыРаздела.Добавить(
        новый ПодборПерсоналаКомпонентыИнтерфейса.ОписаниеДополнительногоКомпонента(
            Порядок = 3,
            Заголовок = "",
            Содержимое = новый КандидатыНаСогласование(ФормаВладелец = ФормаВладелец)
    ))
    возврат КомпонентыРаздела
;
@ВПроекте
@Реализация
метод ВиджетОткликиПриНажатии(): (() -> ничто)?
    возврат Неопределено
;

@ВПроекте
@Реализация
метод ВидимостьКнопокСогласования(): Булево
    возврат Истина
;
// Конец ПодборПерсоналаКомпонентыИнтерфейса

// Контракт АнкетированиеКомпонентыИнтерфейса
@ВПроекте
@Реализация
метод ОткрытьФормуПодбораРеспондентов(ВыбранныеРеспонденты: Массив<ФизическиеЛица.Ссылка>, ИдОповещаемогоКомпонента: Ууид?)
    ВыбраныФизическиеЛица.ПодключитьОбработчик(метод (Параметр) ->
        ВыбраныУчастникиОпроса.Оповестить(новый Массив(Параметр), ИдОповещаемогоКомпонента);)
    
    знч ФормаВыбора = новый ФизическиеЛицаФормаВыбора(
        СкрываемыеФизическиеЛица = новый Множество(ВыбранныеРеспонденты),
        ИспользуетсяФильтрПоСкрываемымФизлицам = Истина,
        ВыборСотрудников = Истина)

    ФормаВыбора.Инициализировать()
    ФормаВыбора.ОткрытьВМодальномОкне()
    
;


//Конец АнкетированиеКомпонентыИнтерфейса

метод ПриложениеОтключено(): Булево
    возврат Приложение.ПараметрыСеанса().ПриложениеЗарегистрировано и 
        (не ЛичныеКабинетыПользователей.ПараметрыСеанса().ДоступностьКабинета или
        не Приложение.ПараметрыСеанса().ДоступностьПриложения или
        не (Компания.ПараметрыСеанса().ТекущийПользовательСотрудник или
            ВладельцыКабинетов.ПараметрыСеанса().ДнейДоОтключенияКабинета != Неопределено)) и 
        не СтандартноеПриложение.ПараметрыСеанса().ТекущийПользовательИмеетПолныеПрава и
        не ЛичныеКабинетыКандидатов.ПараметрыСеанса().ЛичныйКабинетКандидата
;
