// JSON

@ВПроекте
структура ДанныеJson_V2_0
    обз знч nameInstitution: Строка 
    обз знч speciality: Строка
    обз знч year: Число
    пер level: УровеньОбразованияJson?
;

@ВПроекте
перечисление УровеньОбразованияJson
    secondary,
    secondarySpecial,
    incompleteHigher,
    bachelor,
    master,
    higher,
    phD,
    doctor         
;

конст СООТВЕТСТВИЕ_УРОВЕНЬ_ОБРАЗОВАНИЯ_JSON = {
    УровеньОбразованияJson.secondary: УровниОбразования.Среднее,
    УровеньОбразованияJson.secondarySpecial: УровниОбразования.СреднееСпециальное,
    УровеньОбразованияJson.incompleteHigher: УровниОбразования.НезаконченноеВысшее,
    УровеньОбразованияJson.bachelor: УровниОбразования.Бакалавр,
    УровеньОбразованияJson.master: УровниОбразования.Магистр,
    УровеньОбразованияJson.higher: УровниОбразования.Высшее,
    УровеньОбразованияJson.phD: УровниОбразования.КандидатНаук,
    УровеньОбразованияJson.doctor: УровниОбразования.ДокторНаук     
}

@ВПроекте
метод УровеньОбразованияВJson(УровеньОбразования: УровниОбразования): УровеньОбразованияJson
    для КлючИЗначение из СООТВЕТСТВИЕ_УРОВЕНЬ_ОБРАЗОВАНИЯ_JSON
        если КлючИЗначение.Значение == УровеньОбразования
            возврат КлючИЗначение.Ключ
        ;    
    ;    
;

@ВПроекте
метод УровеньОбразованияИзJson(УровеньОбразованияJson: УровеньОбразованияJson): УровниОбразования
    возврат СООТВЕТСТВИЕ_УРОВЕНЬ_ОБРАЗОВАНИЯ_JSON[УровеньОбразованияJson]    
;

@ВПроекте
метод ЗаполнитьПоJson(ДанныеJson: ДанныеJson_V2_0)
    если ДанныеJson.level != Неопределено
        Уровень = УровеньОбразованияИзJson(ДанныеJson.level)
    иначе
        Уровень = Неопределено
    ;
    НаименованиеУчебногоЗаведения = ДанныеJson.nameInstitution
    Специальность = ДанныеJson.speciality
    ГодОкончания = ДанныеJson.year   
;

@ВПроекте
метод ПолучитьJson_V2_0(): ДанныеJson_V2_0
    
    пер ДанныеJson = новый ДанныеJson_V2_0(
        НаименованиеУчебногоЗаведения,
        Специальность,
        ГодОкончания    
    )
    если Уровень != Неопределено
        ДанныеJson.level = УровеньОбразованияВJson(Уровень)
    ;
    возврат ДанныеJson    
;    

// Конец JSON