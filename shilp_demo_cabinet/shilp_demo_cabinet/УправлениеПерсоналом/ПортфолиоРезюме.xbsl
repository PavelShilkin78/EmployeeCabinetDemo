импорт ВебApi
импорт УниверсальныеМеханизмы
импорт ОбщиеСтандартные
импорт КонтрольДоступа

//КонтрольДоступа
@Обработчик
метод ВычислитьРазрешенияДоступа(): ЧитаемаяКоллекция<РазрешениеДоступа>
    возврат КонтрольДоступа.РазрешенияДоступаТаблицыБезПраваУдаления()
;

@Обработчик
метод ВычислитьРазрешенияДоступаДляОбъектов(Объекты: ЧитаемыйМассив<ПортфолиоРезюме.ДанныеРасчетаРазрешений>): ЧитаемоеСоответствие<ПортфолиоРезюме.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    возврат УправлениеПерсоналомКонтрольДоступаПоставщик.ПолучитьСервис().ВычислитьРазрешенияПортфолиоРезюме(Объекты)
;

//Конец КонтрольДоступа
@ВПроекте
@НаСервере @НаКлиенте
структура ДанныеПортфолиоРезюме
    пер Наименование: Строка
    пер Url: Строка
    пер Файл: ПрисоединенныйФайл?
;

метод УдалитьПортфолиоВладельца(Владелец: Резюме.Ссылка)
    исп РезультатПортфолиоВладельца = Запрос{
        Выбрать Ссылка 
        Из 
            ПортфолиоРезюме 
        Где 
            Владелец == %Владелец
    }.Выполнить()

    для Элемент из РезультатПортфолиоВладельца
        знч ПортфолиоРезюмеОбъект = Элемент.Ссылка.ЗагрузитьОбъект()
        ПортфолиоРезюмеОбъект.Удалить()
    ;
;

@ВПроекте
метод ЗаписатьПортфолиоВладельца(Владелец: Резюме.Ссылка, Данные: ЧитаемыйМассив<ДанныеПортфолиоРезюме>)
    исп Транзакции.Начать()
    УдалитьПортфолиоВладельца(Владелец)
    для Элемент из Данные
        знч ПортфолиоРезюмеОбъект = новый ПортфолиоРезюме.Объект(
            Владелец = Владелец,
            Наименование = Элемент.Наименование,
            Url = Элемент.Url
        )
        ПортфолиоРезюмеОбъект.Записать(Файл = Элемент.Файл)
    ;
;

@ВПроекте
метод ПолучитьПортфолиоВладельца(Владелец: Резюме.Ссылка): Массив<ДанныеПортфолиоРезюме>
    исп РезультатПортфолиоВладельца = Запрос{
        Выбрать
            Ссылка,
            Наименование,
            Url
        Из 
            ПортфолиоРезюме 
        Где 
            Владелец == %Владелец
    }.Выполнить()

    знч ПортфолиоВладельца = новый Массив<ДанныеПортфолиоРезюме>()
    для Элемент из РезультатПортфолиоВладельца
        знч Файл = ПрисоединенныеФайлыМенеджер.ФайлыОбъекта(Элемент.Ссылка).ПервыйИлиУмолчание()
        ПортфолиоВладельца.Добавить(
            новый ДанныеПортфолиоРезюме(
                Наименование = Элемент.Наименование,
                Url = Элемент.Url, 
                Файл = Файл
            )
        )
    ;
    возврат ПортфолиоВладельца
;

@ВПроекте
структура ДанныеJson_V2_0
    обз знч name: Строка
    обз знч url: Строка
    обз знч attachedFile: МенеджерФайлов.ДанныеФайлаJson? 
;

@ВПроекте
метод ПортфолиоВладельцаВДанныеJson(Владелец: Резюме.Ссылка, Сервисы: ВебApiСервер.СервисыУпаковкиJson): ЧитаемыйМассив<ДанныеJson_V2_0>
    знч Портфолио = ПолучитьПортфолиоВладельца(Владелец) 
    знч ПортфолиоДанныеJson = новый Массив<ДанныеJson_V2_0>()
    для Элемент из Портфолио
        пер ДанныеФайла: МенеджерФайлов.ДанныеФайлаJson?
        если Элемент.Файл?.Ссылка != Неопределено
            ДанныеФайла = Файлы.ДанныеФайлаJson(Элемент.Файл?.Ссылка, Сервисы)
        ;
        ПортфолиоДанныеJson.Добавить(
            новый ДанныеJson_V2_0(
                name = Элемент.Наименование,
                url = Элемент.Url,
                attachedFile = ДанныеФайла
            )
        )
    ;
    возврат ПортфолиоДанныеJson
;

@ВПроекте
метод ЗаписатьПортфолиоИзДанныеJson(ДанныеJson: Массив<ДанныеJson_V2_0>, Владелец: Резюме.Ссылка, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    исп Транзакции.Начать()
    УдалитьПортфолиоВладельца(Владелец)
    для Элемент из ДанныеJson
        знч Объект = новый ПортфолиоРезюме.Объект(
            Владелец = Владелец,
            Наименование = Элемент.name,
            Url = Элемент.url)
        Объект.Записать()
        если Элемент.attachedFile != Неопределено
            знч ВложенныеФайлы = Файлы.ВложенияИзJson([Элемент.attachedFile], Сервисы, Объект.Ссылка)
            Файлы.ЗаписатьФайлыПоВладельцу(ВложенныеФайлы, Объект.Ссылка)
        ;
    ;
;