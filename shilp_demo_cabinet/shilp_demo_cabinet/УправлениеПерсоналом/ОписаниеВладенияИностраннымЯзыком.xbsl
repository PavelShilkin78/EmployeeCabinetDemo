// Область JSON
@ВПроекте
@НаСервере
структура ДанныеJson_V2_0
    обз знч language: Строка
    обз знч level: УровниВладенияИностраннымЯзыкомJson
;

@ВПроекте
@НаСервере
перечисление УровниВладенияИностраннымЯзыкомJson
    a1,
    a2,
    b1,
    b2,
    c1,
    c2,
    native
;

@НаСервере
конст СООТВЕТСТВИЕ_УРОВНЕЙ_ВЛАДЕНИЯ_ЯЗЫКА_JSON = {
    УровниВладенияИностраннымЯзыкомJson.a1: УровниВладенияИностраннымЯзыком.A1,
    УровниВладенияИностраннымЯзыкомJson.a2: УровниВладенияИностраннымЯзыком.A2,
    УровниВладенияИностраннымЯзыкомJson.b1: УровниВладенияИностраннымЯзыком.B1,
    УровниВладенияИностраннымЯзыкомJson.b2: УровниВладенияИностраннымЯзыком.B2,
    УровниВладенияИностраннымЯзыкомJson.c1: УровниВладенияИностраннымЯзыком.C1,
    УровниВладенияИностраннымЯзыкомJson.c2: УровниВладенияИностраннымЯзыком.C2,
    УровниВладенияИностраннымЯзыкомJson.native: УровниВладенияИностраннымЯзыком.Родной
}

@НаСервере
метод УровеньВладенияИностраннымЯзыкомВJson(Уровень: УровниВладенияИностраннымЯзыком): УровниВладенияИностраннымЯзыкомJson
    для Элемент из СООТВЕТСТВИЕ_УРОВНЕЙ_ВЛАДЕНИЯ_ЯЗЫКА_JSON
        если Элемент.Значение == Уровень
            возврат Элемент.Ключ
        ;
    ;
;

@НаСервере
метод УровеньВладенияИностраннымЯзыкомИзJson(Уровень: УровниВладенияИностраннымЯзыкомJson): УровниВладенияИностраннымЯзыком
    возврат СООТВЕТСТВИЕ_УРОВНЕЙ_ВЛАДЕНИЯ_ЯЗЫКА_JSON.Получить(Уровень)
;


@ВПроекте
@НаСервере
метод ЗаполнитьПоJson(ДанныеJson: ДанныеJson_V2_0)
    ИностранныйЯзык = ИностранныеЯзыки.ПолучитьСсылку(новый Ууид(ДанныеJson.language))
    УровеньВладения = УровеньВладенияИностраннымЯзыкомИзJson(ДанныеJson.level)

;

@ВПроекте
@НаСервере
метод ПолучитьJson_V2_0(): ДанныеJson_V2_0
    
    пер ДанныеJson = новый ДанныеJson_V2_0(
        ИностранныйЯзык.Ид.ВСтроку(),
        УровеньВладенияИностраннымЯзыкомВJson(УровеньВладения))
    
    возврат ДанныеJson    
;

// КонецОбласти