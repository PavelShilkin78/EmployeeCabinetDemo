импорт ОбщиеСтандартные


@ВПроекте
@НаСервере @НаКлиенте
конст ПСЕВДОНИМ_ОПИСАНИЯ_СТРОКИ = "СущностьОписаниеСтроки"

@ВПодсистеме
@НаСервере @НаКлиенте
перечисление ВидыФильтров
    ФильтрПоЗначению,
    ФильтрПоПериоду,
    ФильтрБулево,
    ФильтрПоСпискуСущностей,
    ФильтрПоСпискуПеречислений
;

@ВПодсистеме
@НаСервере @НаКлиенте
структура ПоискПоСтроке
    обз знч Выражение: Строка
    обз знч Представление: Строка
;

@ВПодсистеме
@НаСервере @НаКлиенте
структура ОписаниеПоляФильтра
    обз знч Ид: Ууид
    обз знч ПолеДинамическогоСписка: ПолеДинамическогоСписка
    обз знч ЭлементФильтра: ЭлементФильтра|ГруппаЭлементовФильтра?
    обз знч ТипЗначения: Тип?
    обз знч ВидФильтра: ВидыФильтров
    обз знч ОсновнаяТаблица: Строка
    обз знч КлючиВиртуальнойТаблицы: Соответствие<Сущность.Ключ, Объект>
    обз знч ЗапретитьВыборНесколькихЗначений: Булево
    обз пер Активен: Булево
    знч ПолеОписанияСтроки: ПолеДинамическогоСписка?
    знч Сортировка: Массив<ЭлементСортировки>
    знч ПоискПоСтроке: ПоискПоСтроке?
;

@ВПодсистеме
@НаСервере @НаКлиенте
структура ДополнительныеНастройкиФильтров
    обз знч ПсевдонимПоля: Строка
    знч ЗапретитьВыборНесколькихЗначений: Булево
    знч ПолеОписанияСтроки: ПолеДинамическогоСписка?
    знч Сортировка: Массив<ЭлементСортировки>
    знч ВиртуальнаяТаблица: Строка?
;

@ВПроекте
@НаСервере @НаКлиенте
перечисление ЭлементУправления
    Переключатель,
    Команды
;

@ВПроекте
@НаСервере @НаКлиенте
структура ОписаниеЭлементаПроизвольногоФильтра
    обз пер Представление: Строка
    обз пер Фильтр: ГруппаЭлементовФильтра|ЭлементФильтра
    пер Изображение: ДвоичныйОбъект.Ссылка?
    пер Активен: Булево
    пер ИспользоватьПоУмолчанию: Булево = Ложь
;

@ВПроекте
@НаСервере @НаКлиенте
структура ОписаниеПроизвольногоФильтра
    обз пер ЭлементУправления: ЭлементУправления
    обз пер Элементы: Массив<ОписаниеЭлементаПроизвольногоФильтра>
    пер Представление: Строка = ""
;


@ВПодсистеме
@НаСервере @НаКлиенте
структура ДанныеКомпонента
    пер СтрокаПоиска: Строка?
    пер ФильтрыТаблицы: ГруппаЭлементовФильтра
    пер ФильтрАктивен: Булево
    пер ОписаниеПолейФильтра: Массив<ФильтрТаблицы.ОписаниеПоляФильтра>
;

метод СтрокаПоискаПриИзмененииТекстаРедактирования(Источник: ПолеВвода<Строка?>, Событие: СобытиеСДанными<Строка>)
    ДанныеКомпонента.СтрокаПоиска = Событие.Данные.Пусто() ? Неопределено : Событие.Данные
    Обновить()
;

метод КоличествоАктивныхФильтров(): Число
    пер КоличествоАктивныхФильтров: Число
    
    для ПроизвольныйФильтр из ПроизвольныеФильтры
        если не ПроизвольныйФильтр.Элементы.Фильтровать(Фильтр->Фильтр.Активен).Пусто()
            КоличествоАктивныхФильтров += 1
        ;
    ;
    
    для ОписаниеПоля из ДанныеКомпонента.ОписаниеПолейФильтра
        если ОписаниеПоля.Активен и УстановленФильтр(ОписаниеПоля)
            КоличествоАктивныхФильтров += 1
        ;
    ;
    
    возврат КоличествоАктивныхФильтров
;

метод ЗаголовокКнопкиАктивацииПанелиФильтров(): Строка
    пер ЗаголовокКнопки: Строка
    если не ДанныеКомпонента.ФильтрАктивен
        знч КоличествоАктивныхФильтров = КоличествоАктивныхФильтров()
        если КоличествоАктивныхФильтров > 0
            ЗаголовокКнопки = "Выбрано: %КоличествоАктивныхФильтров"   
        ;
    ;
    возврат ЗаголовокКнопки
;

метод ФильтрАктивен(): Булево
    возврат ДанныеКомпонента.ФильтрАктивен или не ИспользованиеКнопкиСворачиванияПанелиФильтров
;

метод ИзображениеКнопкиАктивацииПанелиФильтров(): ДвоичныйОбъект.Ссылка
    возврат ДанныеКомпонента.ФильтрАктивен ? Ресурс{Крестик.svg}.Ссылка : Ресурс{Фильтр.svg}.Ссылка
;

метод КнопкаАктивацииПанелиФильтровПриНажатии(Источник: Кнопка, Событие: СобытиеПриНажатии)
    ДанныеКомпонента.ФильтрАктивен = не ДанныеКомпонента.ФильтрАктивен
;


метод ЗаголовокПоляФильтра(ОписаниеПоля: ОписаниеПоляФильтра): Строка
    пер ЗаголовокФильтра: Строка
    если ОписаниеПоля.ПолеДинамическогоСписка.Представление.Пусто()
        ЗаголовокФильтра = ОписаниеПоля.ПолеДинамическогоСписка.Выражение
    иначе
        ЗаголовокФильтра = ОписаниеПоля.ПолеДинамическогоСписка.Представление
    ;

    пер ПредставлениеЗначения: Строка
    выбор ОписаниеПоля.ВидФильтра
    когда ФильтрПоЗначению
        если ОписаниеПоля.ТипЗначения == Тип<Число>
            знч Группа = (ОписаниеПоля.ЭлементФильтра как ГруппаЭлементовФильтра)
            знч ФильтрОт = Группа.Элементы[0] как ЭлементФильтра
            знч ФильтрДо = Группа.Элементы[1] как ЭлементФильтра
            если ФильтрОт.Использовать и ФильтрОт.Значение != Неопределено
                и ФильтрДо.Использовать и ФильтрДо.Значение != Неопределено
                ПредставлениеЗначения = "%{ФильтрОт.Значение.Представление()}-%{ФильтрДо.Значение.Представление()}"
            иначе если ФильтрОт.Использовать и ФильтрОт.Значение != Неопределено
                ПредставлениеЗначения = "от %{ФильтрОт.Значение.Представление()}"
            иначе если ФильтрДо.Использовать и ФильтрДо.Значение != Неопределено
                ПредставлениеЗначения = "до %{ФильтрДо.Значение.Представление()}"
            ;
        иначе
            знч ЭлементФильтра = (ОписаниеПоля.ЭлементФильтра как ЭлементФильтра)
            если ЭлементФильтра.Использовать и ЭлементФильтра.Значение != Неопределено
                ПредставлениеЗначения = ЭлементФильтра.Значение.Представление()
            ;
        ;
    когда ФильтрБулево
        знч ЭлементФильтра = (ОписаниеПоля.ЭлементФильтра как ЭлементФильтра)
        если ЭлементФильтра.Использовать и ЭлементФильтра.Значение != Неопределено
            ПредставлениеЗначения = ЭлементФильтра.Значение == Истина ? "Да" : "Нет"
        ;
    когда ФильтрПоПериоду
        знч Группа = (ОписаниеПоля.ЭлементФильтра как ГруппаЭлементовФильтра)
        знч ФильтрПоЗначению = Группа.Элементы[0] как ЭлементФильтра
        знч ГруппаФильтрПоПериоду = Группа.Элементы[1] как ГруппаЭлементовФильтра
        знч ФильтрПоПериодуОт = ГруппаФильтрПоПериоду.Элементы[0] как ЭлементФильтра
        знч ФильтрПоПериодуДо = ГруппаФильтрПоПериоду.Элементы[1] как ЭлементФильтра
        если ФильтрПоЗначению.Использовать и ФильтрПоЗначению.Значение != Неопределено
            ПредставлениеЗначения = ФильтрПоЗначению.Значение.Представление()
        иначе если ГруппаФильтрПоПериоду.Использовать
            если ФильтрПоПериодуОт.Значение != Неопределено и ФильтрПоПериодуДо.Значение != Неопределено
                ПредставлениеЗначения = "%{ФильтрПоПериодуОт.Значение.Представление()}-%{ФильтрПоПериодуДо.Значение.Представление()}"
            иначе если ФильтрПоПериодуОт.Значение != Неопределено
                ПредставлениеЗначения = "от %{ФильтрПоПериодуОт.Значение.Представление()}"
            иначе если ФильтрПоПериодуДо.Значение != Неопределено
                ПредставлениеЗначения = "до %{ФильтрПоПериодуДо.Значение.Представление()}"
            ;
        ;
    когда ФильтрПоСпискуСущностей, ФильтрПоСпискуПеречислений
        знч Элемент = ОписаниеПоля.ЭлементФильтра как ЭлементФильтра
        если Элемент.Значение это ЧитаемаяКоллекция<Объект?>
            знч Значения = Элемент.Значение как ЧитаемаяКоллекция<Объект?>
            если Значения.Размер() > 0
                если ОписаниеПоля.ЗапретитьВыборНесколькихЗначений
                    ПредставлениеЗначения = Значения.ПервыйИлиУмолчание().Представление()
                иначе
                    ПредставлениеЗначения = Значения.Размер().Представление()
                ;
            ;
        ;
    ;
    
    если не ПредставлениеЗначения.Пусто()
        ЗаголовокФильтра = "%ЗаголовокФильтра: %ПредставлениеЗначения"
    ;

    возврат ЗаголовокФильтра
;

метод ВключитьПроизвольныйФильтр(Фильтр: ОписаниеПроизвольногоФильтра, Элемент: ОписаниеЭлементаПроизвольногоФильтра)
    для ЭлементПроизвольногоФильтра из Фильтр.Элементы
        ЭлементПроизвольногоФильтра.Активен = ЭлементПроизвольногоФильтра == Элемент
    ;
    Обновить()
;

метод ВыключитьПроизвольныйФильтр(Фильтр: ОписаниеПроизвольногоФильтра)
    для Элемент из Фильтр.Элементы
        Элемент.Активен = Ложь
    ;
    Обновить()
;

метод СодержимоеПанелиФильтрации(): Массив<Компонент>
    знч СодержимоеПанели: Массив<Компонент>
    если ИспользоватьПлатформенныйФильтр()
        возврат СодержимоеПанели
    ;
    
    знч ОбщаяГруппаФильтров = новый ФиксированнаяГруппа(Ориентация = ОриентацияСодержимого.Горизонтальная, ИспользоватьРазделитель = Истина)
    знч ГруппаФильтровСПереключателем = новый ФиксированнаяГруппа(
            Ориентация = ОриентацияСодержимого.Горизонтальная, 
            ИспользоватьРазделитель = Истина, 
            ИнтервалМеждуЭлементамиПоГоризонтали = РазмерОтступа.Половинный)
            
    знч ГруппаФильтровСВыпадающимСписком= новый ФиксированнаяГруппа(
        Ориентация = ОриентацияСодержимого.Горизонтальная, 
        ИнтервалМеждуЭлементамиПоГоризонтали = РазмерОтступа.Половинный)
    
    для ПроизвольныйФильтр из ПроизвольныеФильтры
        выбор ПроизвольныйФильтр.ЭлементУправления
        когда Переключатель
            знч ГруппаФильтра = новый ФиксированнаяГруппа(
                Ориентация = ОриентацияСодержимого.Горизонтальная, 
                ИнтервалМеждуЭлементамиПоГоризонтали = РазмерОтступа.Половинный)
            для Элемент из ПроизвольныйФильтр.Элементы
                ГруппаФильтра.Содержимое.Добавить(новый КомпонентВыбора(
                    Заголовок = Элемент.Представление,
                    Активность = Элемент.Активен,
                    ПриНажатии = (Источник, Событие)-> ВключитьПроизвольныйФильтр(ПроизвольныйФильтр, Элемент)))
            ;
            ГруппаФильтровСПереключателем.Содержимое.Добавить(ГруппаФильтра)
        когда Команды
            пер АктивныйЭлемент: ОписаниеЭлементаПроизвольногоФильтра?
            знч КомандыФильтра: Массив<Команда|ФрагментКомандногоИнтерфейса<Команда>|ГруппаКомандногоИнтерфейса<Команда>>
            для Элемент из ПроизвольныйФильтр.Элементы
                КомандыФильтра.Добавить(новый ПереключаемаяКоманда(
                    ИзображениеАктивного = Элемент.Изображение,
                    ИзображениеНеактивного = Элемент.Изображение,
                    ПредставлениеАктивного = Элемент.Представление,
                    ПредставлениеНеактивного = Элемент.Представление,
                    Активна = Элемент.Активен, 
                    Обработчик = (Источник) -> ВключитьПроизвольныйФильтр(ПроизвольныйФильтр, Элемент)))
                
                если Элемент.Активен
                    АктивныйЭлемент = Элемент
                ;
            ;
            
            пер Представление = АктивныйЭлемент == Неопределено 
                ? ПроизвольныйФильтр.Представление : "%{ПроизвольныйФильтр.Представление}: %{АктивныйЭлемент.Представление}"
            
            знч КомпонентВыбора = новый КомпонентВыбора(
                Заголовок = Представление,
                Изображение = АктивныйЭлемент?.Изображение,
                Активность = АктивныйЭлемент != Неопределено,
                Закрываемый = АктивныйЭлемент != Неопределено,
                Команды = новый ГруппаКомандногоИнтерфейса<Команда>(Представление = Представление, Элементы = КомандыФильтра),
                ПриНажатииЗакрытия = (Источник, Событие)-> ВыключитьПроизвольныйФильтр(ПроизвольныйФильтр))
                ГруппаФильтровСВыпадающимСписком.Содержимое.Добавить(КомпонентВыбора)
        ;
    ;
    ОбщаяГруппаФильтров.Содержимое.Добавить(ГруппаФильтровСПереключателем)
    
    для ОписаниеПоля из ДанныеКомпонента.ОписаниеПолейФильтра
        если ОписаниеПоля.Активен
            пер УстановленФильтр: Булево = УстановленФильтр(ОписаниеПоля)  

            знч КомпонентФильтра = новый КомпонентВыбора()
            если УстановленФильтр
                КомпонентФильтра.Активность = Истина
                КомпонентФильтра.Закрываемый = Истина
                КомпонентФильтра.ПриНажатииЗакрытия = (Компонент, Событие) -> ОтключитьФильтр(ОписаниеПоля)
            ;
            КомпонентФильтра.ПриНажатии = (Компонент, Событие) -> ПоказатьФильтр(Компонент, ОписаниеПоля)
            пер ИконкаФильтра: ДвоичныйОбъект.Ссылка?
            выбор ОписаниеПоля.ВидФильтра
            когда ФильтрПоПериоду
                ИконкаФильтра = Ресурс{Календарь.svg}.Ссылка
            ;           
            КомпонентФильтра.Заголовок = ЗаголовокПоляФильтра(ОписаниеПоля)
            ГруппаФильтровСВыпадающимСписком.Содержимое.Добавить(КомпонентФильтра) 
        ;
    ;
    ОбщаяГруппаФильтров.Содержимое.Добавить(ГруппаФильтровСВыпадающимСписком)
    СодержимоеПанели.Добавить(ОбщаяГруппаФильтров)
    
    если ИспользованиеНастройкиПолей
        знч КнопкаВыбораФильтров = новый Кнопка(
            Изображение = Ресурс{Плюс.svg}.Ссылка, 
            Вид = ВидКнопки.Дополнительная,
            ПриНажатии = &КнопкаВыбораФильтровПриНажатии,
            Ширина = 10)
        СодержимоеПанели.Добавить(КнопкаВыбораФильтров)
    ; 
    возврат СодержимоеПанели
;

метод УстановленФильтр(ОписаниеПоля: ОписаниеПоляФильтра): Булево
    пер УстановленФильтр: Булево
    выбор ОписаниеПоля.ЭлементФильтра
    когда это ЭлементФильтра
        УстановленФильтр = (ОписаниеПоля.ЭлементФильтра как ЭлементФильтра).Использовать
    когда это ГруппаЭлементовФильтра
        для ЭлементГруппы из (ОписаниеПоля.ЭлементФильтра как ГруппаЭлементовФильтра).Элементы
            выбор ЭлементГруппы
            когда это ЭлементФильтра
                если (ЭлементГруппы как ЭлементФильтра).Использовать
                    УстановленФильтр = Истина
                    прервать
                ;
            когда это ГруппаЭлементовФильтра
                если (ЭлементГруппы как ГруппаЭлементовФильтра).Использовать
                    УстановленФильтр = Истина
                    прервать
                ;
            ;
        ;
    ;
    возврат УстановленФильтр
;

метод КнопкаВыбораФильтровПриНажатии(Источник: Кнопка, Событие: СобытиеПриНажатии)
    знч СписокФильтров: Массив<ЭлементСпискаЗначений<Ууид>>
    знч ВыбранныеПоля: Множество<Ууид>
    для Элемент из ДанныеКомпонента.ОписаниеПолейФильтра
        
        пер Представление: Строка
        если Элемент.ПолеДинамическогоСписка.Представление.Пусто()
            Представление = Элемент.ПолеДинамическогоСписка.Выражение
        иначе
            Представление = Элемент.ПолеДинамическогоСписка.Представление
        ;
        СписокФильтров.Добавить(новый ЭлементСпискаЗначений<Ууид>(
            Представление = Представление,
            Значение = Элемент.Ид))
            
        если Элемент.Активен
            ВыбранныеПоля.Добавить(Элемент.Ид)
        ;
    ;
    
    знч Результат = ФильтрТаблицыВсплывающийКомпонент.Показать(Источник, СписокФильтров, ВыбранныеПоля)
    если Результат != Неопределено
        для Элемент из ДанныеКомпонента.ОписаниеПолейФильтра 
            Элемент.Активен = Результат.Содержит(Элемент.Ид)
        ; 
        Обновить()
    ;
;

метод ПоказатьФильтр(РасположениеВсплывающегоОкна: Компонент, ОписаниеПоляФильтра: ОписаниеПоляФильтра)
    знч Результат = ФильтрТаблицыВсплывающийКомпонент.Показать(РасположениеВсплывающегоОкна, ОписаниеПоляФильтра)
    если Результат != Неопределено
        ОписаниеПоляФильтра = Результат
        Обновить()
    ;
;

метод ОтключитьФильтр(ОписаниеПоляФильтра: ОписаниеПоляФильтра)
    для Элемент из ДанныеКомпонента.ОписаниеПолейФильтра
        если Элемент.ПолеДинамическогоСписка == ОписаниеПоляФильтра.ПолеДинамическогоСписка
            выбор Элемент.ЭлементФильтра
            когда это ЭлементФильтра
                знч ЭлементФильтра = Элемент.ЭлементФильтра как ЭлементФильтра
                ЭлементФильтра.Использовать = Ложь
                ЭлементФильтра.Значение = Неопределено
            когда это ГруппаЭлементовФильтра
                знч ГруппаЭлементовФильтра = Элемент.ЭлементФильтра как ГруппаЭлементовФильтра
                для ЭлементГруппы из ГруппаЭлементовФильтра.Элементы
                    выбор ЭлементГруппы
                    когда это ЭлементФильтра
                        (ЭлементГруппы как ЭлементФильтра).Использовать = Ложь
                    когда это ГруппаЭлементовФильтра
                        (ЭлементГруппы как ГруппаЭлементовФильтра).Использовать = Ложь
                    ;
                ;
            ;
        ;
    ;
;

метод Обновить()
    Таблица.Источник.Фильтр.ВидГруппы = ВидГруппыЭлементовФильтра.ГруппаИ
    Таблица.Источник.Фильтр.Элементы.Очистить()
    Таблица.Источник.Фильтр.Элементы.ДобавитьВсе(Фильтр().Элементы)
    Таблица.Обновить()
;

метод ФильтрПоПредставлению(): ГруппаЭлементовФильтра
    знч Группа= новый ГруппаЭлементовФильтра(ВидГруппыЭлементовФильтра.ГруппаИли)
    Группа.Использовать = ДанныеКомпонента.СтрокаПоиска != Неопределено    
    для Элемент из ДанныеКомпонента.ОписаниеПолейФильтра
        если Элемент.ПоискПоСтроке != Неопределено
            знч ЭлементФильтра = новый ЭлементФильтра(
                Поле = Элемент.ПоискПоСтроке!.Выражение,
                Значение = ДанныеКомпонента.СтрокаПоиска,
                ВидСравнения = ВидСравнения.Содержит,
                Использовать = Истина)
            Группа.Элементы.Добавить(ЭлементФильтра)
        ;
    ;
    
    возврат Группа
;

метод Фильтр(): ГруппаЭлементовФильтра
    пер ФильтрыТаблицы = новый ГруппаЭлементовФильтра()
    ФильтрыТаблицы.Элементы.ДобавитьВсе(ДанныеКомпонента.ФильтрыТаблицы.Элементы)
    ФильтрыТаблицы.Элементы.Добавить(ФильтрПоПредставлению())
    
    для ПроизвольныйФильтр из ПроизвольныеФильтры
        для Элемент из ПроизвольныйФильтр.Элементы.Фильтровать(Фильтр-> Фильтр.Активен)
            ФильтрыТаблицы.Элементы.Добавить(Элемент.Фильтр)
        ;
    ;
    
    для Элемент из ДанныеКомпонента.ОписаниеПолейФильтра
        ФильтрыТаблицы.Элементы.Добавить(Элемент.ЭлементФильтра)
    ;
    возврат  ФильтрыТаблицы 
;

@НаСервере @ДоступноСКлиента
статический метод ОписаниеПолейФильтра(
        ОсновнаяТаблица: ТаблицаДинамическогоСписка,
        ПрисоединенныеТаблицы: Массив<ПрисоединеннаяТаблица>,
        Параметры: Массив<ПараметрДинамическогоСписка>,
        ПоляСФильтром: Массив<ПолеДинамическогоСписка>,
        ДополнительныеНастройкиФильтров: Массив<ФильтрТаблицы.ДополнительныеНастройкиФильтров>): Массив<ОписаниеПоляФильтра>
    
    знч ОписаниеПолей: Массив<ОписаниеПоляФильтра>

    пер ПутиДанныхКолонок: Строка
    для Элемент из ПоляСФильтром
        если Элемент.Псевдоним.Пусто()
            Элемент.Псевдоним = Элемент.Выражение.Заменить(".","")   
        ;
        ПутиДанныхКолонок = ПутиДанныхКолонок +"%{Элемент.Выражение} Как %{Элемент.Псевдоним},"
    ;

    ПутиДанныхКолонок = ПутиДанныхКолонок.ПодстрокаСНачала(ПутиДанныхКолонок.Длина()-1)
    
    пер СоединенияПрисоединенныхКолонок: Строка
    для Элемент из ПрисоединенныеТаблицы
        СоединенияПрисоединенныхКолонок = СоединенияПрисоединенныхКолонок + 
            "Левое Соединение %{Элемент.Таблица} Как %{Элемент.Псевдоним}
            По %{(Элемент.Фильтр.Элементы[0] как ЭлементФильтраВыражение).Выражение}
            "
    ;
    
    пер Запрос = новый ПроизвольныйЗапрос() // текст запроса динамический
    Запрос.Текст = 
        "Выбрать Первые 0
            %ПутиДанныхКолонок
         Из
            %{ОсновнаяТаблица.Таблица} как %{ОсновнаяТаблица.Псевдоним}
            %СоединенияПрисоединенныхКолонок"
    для Элемент из Параметры
        Запрос.УстановитьПараметр(Элемент.Имя, Элемент.Значение)   
    ;
    
    исп Результат = Запрос.Выполнить()
    пер ОписанияКолонок = Результат.ПолучитьОписанияКолонок()
    для Индекс = 0 по ОписанияКолонок.Размер() - 1
        знч ПолеДинамическогоСписка = ПоляСФильтром[Индекс]
        знч ОписаниеКолонки = ОписанияКолонок[Индекс]
        
        пер ТипЗначения: Тип?
        для Элемент из ОписаниеКолонки.Тип.Типы
            если Элемент == Тип<Неопределено> или Элемент == Тип<Null>
                продолжить
            иначе
                ТипЗначения = Элемент
                прервать   
            ;
        ;
        
        пер ВидФильтра: ВидыФильтров?
        пер ЭлементФильтра: ЭлементФильтра|ГруппаЭлементовФильтра?
        пер ОсновнаяТаблицаФильтра: Строка
        пер ПоискПоСтроке: ПоискПоСтроке?
        
        пер ДополнительнаяНастройка: ДополнительныеНастройкиФильтров?        
        если не ПолеДинамическогоСписка.Псевдоним.Пусто()
            ДополнительнаяНастройка = ДополнительныеНастройкиФильтров.Фильтровать(
                Элемент-> Элемент.ПсевдонимПоля == ПолеДинамическогоСписка.Псевдоним).ПервыйИлиУмолчание()
        ;        
        
        выбор ТипЗначения
        когда Тип<Строка>
            ВидФильтра = ВидыФильтров.ФильтрПоЗначению
            ЭлементФильтра = новый ЭлементФильтра(
                Поле = ПолеДинамическогоСписка.Выражение,
                ВидСравнения = ВидСравнения.Содержит,
                Использовать = Ложь)
            если ПолеДинамическогоСписка.ИспользованиеВПоиске == Истина
                ПоискПоСтроке = новый ПоискПоСтроке(ПолеДинамическогоСписка.Выражение, ПолеДинамическогоСписка.Представление)
            ;
        когда Тип<Число>
            ВидФильтра = ВидыФильтров.ФильтрПоЗначению
            ЭлементФильтра = новый ГруппаЭлементовФильтра(
                ВидГруппы = ВидГруппыЭлементовФильтра.ГруппаИ,
                Использовать = Ложь,
                Элементы = [
                    новый ЭлементФильтра(
                    Поле = ПолеДинамическогоСписка.Выражение,
                    ВидСравнения = ВидСравнения.БольшеИлиРавно,
                    Использовать = Ложь),
                    новый ЭлементФильтра(
                    Поле = ПолеДинамическогоСписка.Выражение,
                    ВидСравнения = ВидСравнения.МеньшеИлиРавно,
                    Использовать = Ложь)]
            )
        когда Тип<Момент>, Тип<ДатаВремя>, Тип<Дата>
            ВидФильтра = ВидыФильтров.ФильтрПоПериоду
            
            знч ФильтрПоЗначению = новый ЭлементФильтра(
                Поле = ПолеДинамическогоСписка.Выражение,
                ВидСравнения = ВидСравнения.Равно,
                Использовать = Ложь)
                
            знч ГруппаФильтраПоПериоду = новый ГруппаЭлементовФильтра(
                ВидГруппы = ВидГруппыЭлементовФильтра.ГруппаИ,
                Использовать = Ложь,
                Элементы = [
                    новый ЭлементФильтра(
                    Поле = ПолеДинамическогоСписка.Выражение,
                    ВидСравнения = ВидСравнения.БольшеИлиРавно,
                    Использовать = Истина),
                    новый ЭлементФильтра(
                    Поле = ПолеДинамическогоСписка.Выражение,
                    ВидСравнения = ВидСравнения.МеньшеИлиРавно,
                    Использовать = Истина)]
            )
            
            ЭлементФильтра = новый ГруппаЭлементовФильтра(
                ВидГруппы = ВидГруппыЭлементовФильтра.ГруппаИ,
                Использовать = Истина,
                Элементы = [ФильтрПоЗначению, ГруппаФильтраПоПериоду])
        когда Тип<Булево>
            ВидФильтра = ВидыФильтров.ФильтрБулево
            ЭлементФильтра = новый ЭлементФильтра(
                Поле = ПолеДинамическогоСписка.Выражение,
                ВидСравнения = ВидСравнения.Равно,
                Использовать = Ложь)   
        иначе
            если ТипЗначения.МожетБытьПрисвоенВ([Тип<Справочник.Ссылка>, Тип<Неопределено>])
                ВидФильтра = ВидыФильтров.ФильтрПоСпискуСущностей
                ОсновнаяТаблицаФильтра = ДополнительнаяНастройка?.ВиртуальнаяТаблица ?? МенеджерСущности.ИмяТаблицыПоТипу(ТипЗначения)
                ЭлементФильтра = новый ЭлементФильтра(
                    Поле = ПолеДинамическогоСписка.Выражение,
                    ВидСравнения = ВидСравнения.ВСписке,
                    Использовать = Ложь)
                если ПолеДинамическогоСписка.ИспользованиеВПоиске == Истина
                    ПоискПоСтроке = новый ПоискПоСтроке("%{ПолеДинамическогоСписка.Выражение}.Представление", ПолеДинамическогоСписка.Представление)
                ;
            иначе если ТипЗначения.МожетБытьПрисвоенВ([Тип<Перечисление>, Тип<Неопределено>])
                ВидФильтра = ВидыФильтров.ФильтрПоСпискуПеречислений
                ЭлементФильтра = новый ЭлементФильтра(
                    Поле = ПолеДинамическогоСписка.Выражение,
                    ВидСравнения = ВидСравнения.ВСписке,
                    Использовать = Ложь)
            иначе
                ТипЗначения = Неопределено
            ;
        ;
        
        знч Ид = новый Ууид()
        знч ОписаниеПоляФильтра =
            новый ОписаниеПоляФильтра(
                Ид = Ид, 
                ПолеДинамическогоСписка = ПолеДинамическогоСписка, 
                ЭлементФильтра = ЭлементФильтра, 
                ТипЗначения = ТипЗначения, 
                ВидФильтра = ВидФильтра, 
                ОсновнаяТаблица = ОсновнаяТаблицаФильтра,
                КлючиВиртуальнойТаблицы = новый Соответствие<Сущность.Ключ, Объект>(),
                ЗапретитьВыборНесколькихЗначений = ДополнительнаяНастройка?.ЗапретитьВыборНесколькихЗначений ?? Ложь, 
                ПолеОписанияСтроки = ДополнительнаяНастройка?.ПолеОписанияСтроки,
                Сортировка = ДополнительнаяНастройка?.Сортировка ?? [],
                Активен = ПолеДинамическогоСписка.ОтображатьВПростыхФильтрах, 
                ПоискПоСтроке = ПоискПоСтроке)
        ОписаниеПолей.Добавить(ОписаниеПоляФильтра)
    ;
    возврат ОписаниеПолей
;

метод ЗаполнитьОписанияПолейФильтров()
    
    ДанныеКомпонента.ОписаниеПолейФильтра.Очистить()
    знч Источник = Таблица.Источник
    если Источник.ОсновнаяТаблица.Таблица.Пусто() 
        или Источник.ОсновнаяТаблица.Псевдоним.Пусто()
        возврат
    ;
    
    для Элемент из Источник.ПрисоединенныеТаблицы
        если Элемент.Таблица.Пусто() 
            или Элемент.Псевдоним.Пусто()
            возврат
        ;
        если Элемент.Фильтр.ВидГруппы != ВидГруппыЭлементовФильтра.ГруппаИ
            возврат
        ;
        если Элемент.Фильтр.Элементы.Размер() != 1
            возврат
        ;
        если не (Элемент.Фильтр.Элементы[0] это ЭлементФильтраВыражение)
            возврат
        ;
    ;
    
    знч ПоляСФильтром: Массив<ПолеДинамическогоСписка>
    для Поле из Таблица.Источник.Поля
        если Поле это ПолеДинамическогоСписка
            знч ПолеСписка = Поле как ПолеДинамическогоСписка
            если (ПолеСписка.ОтображатьВПростыхФильтрах или ПолеСписка.ОтображатьВНастройкахФильтров
                или ПолеСписка.ИспользованиеВПоиске == Истина) и не ПолеСписка.Выражение.Пусто()
                ПоляСФильтром.Добавить(ПолеСписка)
            ;
        ;
    ;
    
    ДанныеКомпонента.ОписаниеПолейФильтра.ДобавитьВсе(ОписаниеПолейФильтра(
        ОсновнаяТаблица = Источник.ОсновнаяТаблица, 
        ПрисоединенныеТаблицы = Источник.ПрисоединенныеТаблицы, 
        Параметры = Источник.Параметры,
        ПоляСФильтром = ПоляСФильтром, 
        ДополнительныеНастройкиФильтров = ДополнительныеНастройкиФильтров))
        
    для ОписаниеФильтра из ПроизвольныеФильтры
        для Элемент из ОписаниеФильтра.Элементы
            Элемент.Активен = Элемент.ИспользоватьПоУмолчанию
        ;
    ;
;

метод ЗапомнитьФильтрыТаблицы()
    ДанныеКомпонента.ФильтрыТаблицы.Элементы.Очистить()
    для Элемент из Таблица.Источник.Фильтр.Элементы
        ДанныеКомпонента.ФильтрыТаблицы.Элементы.Добавить(Элемент)
    ;
;

// Контракт ИнициализируемыйКомпонент
@ВПроекте
@Реализация
метод Инициализировать()
    если ИспользоватьПлатформенныйФильтр()
        Таблица.ОтображатьНастройки = Истина
        возврат
    ;
    
    Таблица.ИспользованиеПоиска = Ложь
    Компоненты.КоманднаяПанельИПоиск.Видимость = Истина
    
    ЗапомнитьФильтрыТаблицы()
    ЗаполнитьОписанияПолейФильтров()
    Обновить()
;
// Конец ИнициализируемыйКомпонент

@ВПодсистеме
@НаКлиенте
метод ИспользоватьПлатформенныйФильтр(): Булево
    возврат КлиентскоеУстройство.ВидИнтерфейса == ВидИнтерфейса.Телефон и ИспользоватьПлатформенныйФильтрНаТелефоне
;

метод ЗамещающийТекстПоляПоиска(): Строка
    если ЗамещающийТекстПоляПоиска.Пусто()
        знч ПредставленияПолей: Массив<Строка>
        для Элемент из ДанныеКомпонента.ОписаниеПолейФильтра
            если Элемент.ПоискПоСтроке != Неопределено
                ПредставленияПолей.Добавить(Элемент.ПоискПоСтроке.Представление)
            ;
        ;
        возврат МенеджерСтрок.НачатьСЗаглавной(ПредставленияПолей.Соединить(", "))        
    иначе
        возврат ЗамещающийТекстПоляПоиска   
    ;
;