импорт ОбщиеСтандартные

@НаСервере @НаКлиенте
конст РАЗМЕР_ШРИФТА_ЗНАЧЕНИЯ = 14
@НаСервере @НаКлиенте
конст РАЗМЕР_ШРИФТА_ПРЕДСТАВЛЕНИЯ = 10

@ВПроекте 
перечисление Упорядочивание
    БезУпорядочивания умолчание,
    ПоУбыванию,
    ПоВозрастанию
;

@ВПроекте
@НаСервере @НаКлиенте
перечисление ВидПредставленияЗначения
    ЗначениеИПроцент умолчание,
    ТолькоЗначение,
    ТолькоПроцент,
    БезПредставления
;

@ВПроекте
@НаСервере @НаКлиенте
структура ЗначениеДиаграммы
    обз пер Значение: Число
    обз пер Представление: Строка
    пер Цвет: АбсолютныйЦвет?
;

@НаСервере @НаКлиенте
структура ПараметрыОтображенияЗначения
    обз пер Значение: Число
    обз пер Представление: Строка
    пер Цвет: АбсолютныйЦвет?
    пер Доля: Число
    пер УголНачалаСектора: Число
    пер УголОкончанияСектора: Число
    пер ПредставлениеЗначенияНаДиаграмме: Строка
    пер ПредставлениеЗначенияВЛегенде: Строка
;

@ВПодсистеме
@НаСервере @НаКлиенте
структура ПараметрыОтображения
    пер СуммаЗначений: Число
    пер ВыноскаШирина: Число
    пер ВыноскаВысота: Число
    пер Радиус: Число
    пер ВнутреннийРадиус: Число
    пер РадиусТекста: Число
    пер БазовыйЦвет: АбсолютныйЦвет?
    пер ПредставлениеЗначенияНаДиаграмме: ВидПредставленияЗначения
    пер ПредставлениеЗначенияВЛегенде: ВидПредставленияЗначения
    пер ОтображатьНаименованиеТочек: Булево
    пер ВысотаТекстаЗначения: Число
    пер ВысотаТекстаПредставления: Число
    пер ЦентрХ: Число
    пер ЦентрУ: Число
    пер ПолеГоризонтальное: Число
    пер ПолеВертикальное: Число
    пер Значения: Массив<ПараметрыОтображенияЗначения>
;

метод КартинкаПриНажатии(Источник: Картинка, Событие: СобытиеПриНажатии)
    если ПриНажатии != Неопределено
        ПриНажатии()
    ;
;

метод КольцеваяДиаграммаИзображение(): ДвоичныйОбъект.Ссылка?
    если Значения.Пусто()
        возврат Неопределено
    ;
    возврат КольцеваяДиаграммаИзображение(ПараметрыОтображения())
;

метод ЛегендаСодержимое(): Массив<Компонент>
    знч ЛегендаСодержимое: Массив<Компонент>
    если ОтображатьЛегенду 
        знч ПараметрыОтображения = ПараметрыОтображения()
        если не ПараметрыОтображения.Значения.Пусто()
            для Значение из ПараметрыОтображения.Значения
                знч ЭлементЛегенды = новый ЭлементЛегенды()
                ЭлементЛегенды.НаименованиеТочки = Значение.Представление
                ЭлементЛегенды.ПредставлениеЗначения = Значение.ПредставлениеЗначенияВЛегенде
                ЭлементЛегенды.ЦветТочки = Значение.Цвет
                ЛегендаСодержимое.Добавить(ЭлементЛегенды)
            ;
        ;
    ;
    возврат ЛегендаСодержимое
;

@НаСервере @ДоступноСКлиента
статический метод КольцеваяДиаграммаИзображение(Параметры: ПараметрыОтображения): ДвоичныйОбъект.Ссылка?
    если Параметры.СуммаЗначений == 0
        возврат Неопределено
    ;
    пер ШиринаКартинки = (Параметры.Радиус + Параметры.ПолеГоризонтальное) * 2
    пер ВысотаКартинки = (Параметры.Радиус + Параметры.ПолеВертикальное) * 2
    знч СтильИмпортаRoboto = ИнтерфейсныеКомпоненты.СтильИмпортаRoboto()

    пер КартинкаSvg = 
        "<svg viewBox='0 0 %ШиринаКартинки %ВысотаКартинки' width='%ШиринаКартинки' height='%ВысотаКартинки' xmlns='http://www.w3.org/2000/svg'>
        %СтильИмпортаRoboto
        <style>
            .valfont {font:bold %{РАЗМЕР_ШРИФТА_ЗНАЧЕНИЯ}px Roboto, sans-serif;fill:#303030;}
            .commfont {font: %{РАЗМЕР_ШРИФТА_ПРЕДСТАВЛЕНИЯ}px Roboto, sans-serif;fill:#303030;}
        </style>"
        

    для Значение из Параметры.Значения
        КартинкаSvg += Сектор(Значение, Параметры)
    ;
    для Значение из Параметры.Значения
        КартинкаSvg += Риска(Значение, Параметры)
    ;
    если Параметры.ПредставлениеЗначенияНаДиаграмме != ВидПредставленияЗначения.БезПредставления или Параметры.ОтображатьНаименованиеТочек
        для Значение из Параметры.Значения
            КартинкаSvg += Выноска(Значение, Параметры)
        ;
    ;
    КартинкаSvg += 
        "
        </svg>"
    возврат ОбъектноеХранилище.ЗагрузитьИзСтроки(КартинкаSvg, "image/svg+xml").Ссылка
;

@НаСервере
статический метод Сектор(Значение: ПараметрыОтображенияЗначения, Параметры: ПараметрыОтображения): Строка
    пер Сектор: Строка
    пер Пи = МенеджерЧисел.ЧислоПи()
    пер ЦветСтрокой = БиблиотекаЦветов.ЦветСтрокой(Значение.Цвет)
    знч Радиус = Параметры.Радиус
    знч ВнутреннийРадиус = Параметры.ВнутреннийРадиус
    знч ЦентрХ = Параметры.ЦентрХ
    знч ЦентрУ = Параметры.ЦентрУ

    если Значение.УголНачалаСектора == 0 и Значение.УголОкончанияСектора == 2*Пи
        Сектор = 
            "
            <ellipse cx='%ЦентрХ' cy='%ЦентрУ' rx='%Радиус' ry='%Радиус' fill='%ЦветСтрокой'/>"
        если ВнутреннийРадиус != 0
            Сектор += 
                "
                <ellipse cx='%ЦентрХ' cy='%ЦентрУ' rx='%ВнутреннийРадиус' ry='%ВнутреннийРадиус' fill='#FFFF'/>"
        ;
    иначе
        пер Т1x = ЦентрХ + Радиус*Sin(Значение.УголНачалаСектора)
        пер Т1y = ЦентрУ - Радиус*Cos(Значение.УголНачалаСектора)
        пер Т2x = ЦентрХ + Радиус*Sin(Значение.УголОкончанияСектора)
        пер Т2y = ЦентрУ - Радиус*Cos(Значение.УголОкончанияСектора)
        пер Т3x = ЦентрХ + ВнутреннийРадиус*Sin(Значение.УголОкончанияСектора)
        пер Т3y = ЦентрУ - ВнутреннийРадиус*Cos(Значение.УголОкончанияСектора)
        пер Т4x = ЦентрХ + ВнутреннийРадиус*Sin(Значение.УголНачалаСектора)
        пер Т4y = ЦентрУ - ВнутреннийРадиус*Cos(Значение.УголНачалаСектора)
        пер БольшаяАрка = Значение.УголОкончанияСектора - Значение.УголНачалаСектора > Пи ? 1 : 0
        
        Сектор =
            "
            <path d='M %Т1x %Т1y A %Радиус %Радиус 0 %БольшаяАрка 1 %Т2x %Т2y L %Т3x %Т3y A %ВнутреннийРадиус %ВнутреннийРадиус 0 %БольшаяАрка 0 %Т4x %Т4y Z' fill='%ЦветСтрокой'/>"
    ;
    возврат Сектор
;

@НаСервере
статический метод Выноска(Значение: ПараметрыОтображенияЗначения, Параметры: ПараметрыОтображения): Строка
    пер Выноска: Строка
    пер Пи = МенеджерЧисел.ЧислоПи()
    пер Биссектрисса = (Значение.УголНачалаСектора + Значение.УголОкончанияСектора)/2
    пер ТекстX = Параметры.ЦентрХ + Параметры.РадиусТекста*Sin(Биссектрисса)
    если Биссектрисса > Пи
        ТекстX -= Параметры.ВыноскаШирина
    ;
    пер СкорректированныйРадиусТекста = Параметры.РадиусТекста + (Параметры.Радиус - Параметры.РадиусТекста - 6)*МенеджерЧисел.Модуль(Cos(Биссектрисса))
    пер Текст1y = Параметры.ЦентрУ - СкорректированныйРадиусТекста*Cos(Биссектрисса)
    пер Текст2y = Текст1y + Параметры.ВысотаТекстаЗначения
    пер ВыноскаX = ТекстX - 2
    пер ВыноскаY = (Параметры.ПредставлениеЗначенияНаДиаграмме == ВидПредставленияЗначения.БезПредставления ? Текст1y : Текст2y) + 4 - Параметры.ВыноскаВысота
    пер ЦветВыноски = БиблиотекаЦветов.ЦветСтрокой(БиблиотекаЦветов.Цвет(БиблиотекаЦветов.ВидыЦвета.ФонОкнаПриложения, 0.8))
    Выноска += 
        "
        <rect x='%ВыноскаX' y='%ВыноскаY' width='%{Параметры.ВыноскаШирина}' height='%{Параметры.ВыноскаВысота}'  fill='%ЦветВыноски'/>"
    если Параметры.ОтображатьНаименованиеТочек
        Выноска += 
            "
            <text x='%ТекстX' y='%Текст1y' class='commfont'>%{Значение.Представление}</text>"
    ;
    если Параметры.ПредставлениеЗначенияНаДиаграмме != ВидПредставленияЗначения.БезПредставления
        Выноска += 
            "
            <text x='%ТекстX' y='%Текст2y' class='valfont'>%{Значение.ПредставлениеЗначенияНаДиаграмме}</text>"
    ;
    возврат Выноска
;

@НаСервере
статический метод Риска(Значение: ПараметрыОтображенияЗначения, Параметры: ПараметрыОтображения): Строка
    пер Х2 = Параметры.ЦентрХ + Параметры.Радиус*Sin(Значение.УголОкончанияСектора)
    пер У2 = Параметры.ЦентрУ - Параметры.Радиус*Cos(Значение.УголОкончанияСектора)
    возврат 
        "
        <line x1='%{Параметры.ЦентрХ}' y1='%{Параметры.ЦентрУ}' x2='%Х2' y2='%У2' stroke='white'/>"
;

метод ПараметрыОтображения(): ПараметрыОтображения
    пер Угол: Число
    пер НакопленноеЗначение: Число
    пер Пи = МенеджерЧисел.ЧислоПи()
    пер АльфаКанал = 1
    пер ШагАльфаКанала = 0.15
    пер РазмерШрифта = 14
    пер РазмерШрифтаПредставления = 10
    пер СуммаЗначений: Число
    пер МаксимальноеЗначение: Число
    пер ДлинаПредставления: Число
    пер ПараметрыЗначений: Массив<ПараметрыОтображенияЗначения>
    пер ОбработанныеЗначения: Массив<КольцеваяДиаграмма.ЗначениеДиаграммы>
    
    выбор Упорядочивание
    когда ПоУбыванию
        ОбработанныеЗначения = Значения.СортироватьПо(Значение->Значение.Значение, НаправлениеСортировки.ПоУбыванию)
    когда ПоВозрастанию       
        ОбработанныеЗначения = Значения.СортироватьПо(Значение->Значение.Значение, НаправлениеСортировки.ПоВозрастанию)
    иначе 
        ОбработанныеЗначения = Значения.ВМассив()
    ;
    если КоличествоОтображаемыхЗначений != 0 и КоличествоОтображаемыхЗначений < ОбработанныеЗначения.Граница()
        пер Остальное: Число
        пер УстановитьЦвет: Булево
        пер Индекс = ОбработанныеЗначения.Граница()
        пока Индекс >= КоличествоОтображаемыхЗначений - 1
            Остальное += ОбработанныеЗначения[Индекс].Значение
            если ОбработанныеЗначения[Индекс].Цвет != Неопределено и не УстановитьЦвет
                УстановитьЦвет = Истина
            ;
            ОбработанныеЗначения.УдалитьПоИндексу(Индекс)
            Индекс = Индекс - 1
        ;
        если УстановитьЦвет
            знч ЦветОстального = БиблиотекаЦветов.Цвет(БиблиотекаЦветов.ВидыЦвета.СветлоСерый)
            ОбработанныеЗначения.Добавить(новый ЗначениеДиаграммы(Значение = Остальное, Представление = "Остальное", Цвет = ЦветОстального))
        иначе
            ОбработанныеЗначения.Добавить(новый ЗначениеДиаграммы(Значение = Остальное, Представление = "Остальное"))
        ;
    ;
    для Значение из ОбработанныеЗначения
        СуммаЗначений += Значение.Значение
        МаксимальноеЗначение = Макс<Число>(Значение.Значение, МаксимальноеЗначение)
        ДлинаПредставления = Макс<Число>(Значение.Представление.Длина(), ДлинаПредставления)
    ;
    пер ШиринаСимволаЗначения = РазмерШрифта*0.7
    пер ШиринаСимволаПредставления = РазмерШрифтаПредставления*0.6
    пер ШиринаЗначения: Число
    выбор ПредставлениеЗначенияНаДиаграмме
    когда ЗначениеИПроцент
        ШиринаЗначения = ((МенеджерЧисел.КоличествоЗнаков(МаксимальноеЗначение) + 6) * ШиринаСимволаЗначения).Округлить()
    когда ТолькоЗначение
        ШиринаЗначения = (МенеджерЧисел.КоличествоЗнаков(МаксимальноеЗначение)*ШиринаСимволаЗначения).Округлить()
    когда ТолькоПроцент
        ШиринаЗначения = (5 * ШиринаСимволаЗначения).Округлить()
    когда БезПредставления
        ШиринаЗначения = 0
    ;
    пер ВыноскаШирина = Макс<Число>(ШиринаЗначения, Мин<Число>(ДлинаПредставления, 16) * ШиринаСимволаПредставления) + 8
    пер МаксимальнаяДлинаПредставления = (ВыноскаШирина/ШиринаСимволаПредставления).Округлить()
    пер ДоляСтрокой: Строка
    
    для Значение из ОбработанныеЗначения
        знч ПараметрыЗначения = новый ПараметрыОтображенияЗначения(
            Значение = Значение.Значение,
            Представление = Значение.Представление)
        ПараметрыЗначения.Представление = 
            Значение.Представление.Длина() <= МаксимальнаяДлинаПредставления ? 
            Значение.Представление :
            Значение.Представление.ПодстрокаСНачала(МаксимальнаяДлинаПредставления - 2) + "..."
        ПараметрыЗначения.Доля = Значение.Значение/СуммаЗначений
        ПараметрыЗначения.УголНачалаСектора = Угол
        НакопленноеЗначение += Значение.Значение
        Угол = НакопленноеЗначение/СуммаЗначений*2*Пи
        ПараметрыЗначения.УголОкончанияСектора = Угол
        если Значение.Цвет == Неопределено
            ПараметрыЗначения.Цвет = новый АбсолютныйЦвет(БазовыйЦвет.Красный, БазовыйЦвет.Зеленый, БазовыйЦвет.Синий, АльфаКанал)
            АльфаКанал = Макс(0.05, АльфаКанал - ШагАльфаКанала)
        иначе
            ПараметрыЗначения.Цвет = Значение.Цвет
        ;
        ДоляСтрокой = МенеджерСтрок.ФорматЧисла(ПараметрыЗначения.Доля*100, 0, Ложь, 1) + "%"
        выбор ПредставлениеЗначенияНаДиаграмме
        когда ЗначениеИПроцент 
            ПараметрыЗначения.ПредставлениеЗначенияНаДиаграмме = "%{Значение.Значение} (%ДоляСтрокой)"
        когда ТолькоЗначение
            ПараметрыЗначения.ПредставлениеЗначенияНаДиаграмме = "%{Значение.Значение}"
        когда ТолькоПроцент
            ПараметрыЗначения.ПредставлениеЗначенияНаДиаграмме = ДоляСтрокой
        ;
        выбор ПредставлениеЗначенияВЛегенде
        когда ЗначениеИПроцент 
            ПараметрыЗначения.ПредставлениеЗначенияВЛегенде = "%{Значение.Значение} (%ДоляСтрокой)"
        когда ТолькоЗначение
            ПараметрыЗначения.ПредставлениеЗначенияВЛегенде = "%{Значение.Значение}"
        когда ТолькоПроцент
            ПараметрыЗначения.ПредставлениеЗначенияВЛегенде = ДоляСтрокой
        ;
        ПараметрыЗначений.Добавить(ПараметрыЗначения)
    ;
    пер ВыноскаВысота: Число
    знч ВысотаТекстаЗначения = (РАЗМЕР_ШРИФТА_ЗНАЧЕНИЯ*1.1).Округлить()
    знч ВысотаТекстаПредставления = (РАЗМЕР_ШРИФТА_ПРЕДСТАВЛЕНИЯ*1.1).Округлить()
    выбор 
    когда ПредставлениеЗначенияНаДиаграмме != ВидПредставленияЗначения.БезПредставления и ОтображатьНаименованиеТочек
        ВыноскаВысота = ВысотаТекстаЗначения + ВысотаТекстаПредставления + 6
    когда ПредставлениеЗначенияНаДиаграмме == ВидПредставленияЗначения.БезПредставления и ОтображатьНаименованиеТочек
        ВыноскаВысота = ВысотаТекстаПредставления + 6
    когда ПредставлениеЗначенияНаДиаграмме != ВидПредставленияЗначения.БезПредставления и не ОтображатьНаименованиеТочек
        ВыноскаВысота = ВысотаТекстаЗначения + 6
    ;
    знч РадиусТекста = (Радиус/2).Округлить()
    знч ВыводитьВыноски = ПредставлениеЗначенияНаДиаграмме != ВидПредставленияЗначения.БезПредставления или ОтображатьНаименованиеТочек
    пер ПолеГоризонтальное: Число
    пер ПолеВертикальное: Число
    если ВыводитьВыноски
        ПолеГоризонтальное = Макс<Число>(РадиусТекста + ВыноскаШирина - Радиус, 0)
        ПолеВертикальное = ПредставлениеЗначенияНаДиаграмме == ВидПредставленияЗначения.БезПредставления ? 0 : ВыноскаВысота/2
    ;
    знч Параметры = новый ПараметрыОтображения()
    Параметры.Радиус = Радиус
    Параметры.ВнутреннийРадиус = ВнутреннийРадиус
    Параметры.БазовыйЦвет = БазовыйЦвет
    Параметры.ПредставлениеЗначенияНаДиаграмме = ПредставлениеЗначенияНаДиаграмме
    Параметры.ПредставлениеЗначенияВЛегенде = ПредставлениеЗначенияВЛегенде
    Параметры.ОтображатьНаименованиеТочек = ОтображатьНаименованиеТочек
    Параметры.РадиусТекста = РадиусТекста
    Параметры.СуммаЗначений = СуммаЗначений
    Параметры.ВыноскаШирина = ВыноскаШирина
    Параметры.ВыноскаВысота = ВыноскаВысота
    Параметры.ПолеГоризонтальное = ПолеГоризонтальное
    Параметры.ПолеВертикальное = ПолеВертикальное
    Параметры.ВысотаТекстаЗначения = ВысотаТекстаЗначения
    Параметры.ВысотаТекстаПредставления = ВысотаТекстаПредставления
    Параметры.ЦентрХ = Радиус + ПолеГоризонтальное
    Параметры.ЦентрУ = Радиус + ПолеВертикальное
    Параметры.Значения.ДобавитьВсе(ПараметрыЗначений)
    возврат Параметры
;