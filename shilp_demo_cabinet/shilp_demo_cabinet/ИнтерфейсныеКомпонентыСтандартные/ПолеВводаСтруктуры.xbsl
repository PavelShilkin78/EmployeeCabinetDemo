@Реализация
@ВПроекте
метод Инициализировать()
    Компоненты.РедактируемыйКлюч.СписокВыбора.Очистить()
    для Свойство из Структура.ПолучитьТип().ПолучитьСвойства()
        знч ИмяСвойства = Свойство.Имя.ВСтроку()
        
        пер ЭлементВыбора: ЭлементСпискаЗначений<Строка>
        ЭлементВыбора.Представление = ИмяСвойства
        ЭлементВыбора.Значение = ИмяСвойства
        Компоненты.РедактируемыйКлюч.СписокВыбора.Добавить(ЭлементВыбора)
        
        СвойстваИТипы.Вставить(ИмяСвойства, Свойство.Типы)    
    ;   
    если Компоненты.РедактируемыйКлюч.СписокВыбора.Размер() > 0
        ВыбранныйКлюч = Компоненты.РедактируемыйКлюч.СписокВыбора[0].Значение
        УстановитьДопустимыеТипы()
    ;
;

метод РедактируемыйКлючПриИзменении(Источник: ПолеВвода<Строка>, Событие: СобытиеПриИзменении<Строка>)
    УстановитьДопустимыеТипы()    
;

метод ПолеСтруктурыПриИзменении(Источник: ПолеВвода<Объект?>, Событие: СобытиеПриИзменении<Объект?>)
    ПриИзменении(Событие)
;

метод ПолеСтруктурыБулевоПриИзменении(Источник: Флажок, Событие: СобытиеПриИзменении<Булево?>)
    ПриИзменении(Событие)
;

метод УстановитьДопустимыеТипы()
    Компоненты.ПолеСтруктуры.ДопустимыеТипы.Очистить()
    Компоненты.ПолеСтруктуры.ДопустимыеТипы.ДобавитьВсе(СвойстваИТипы[ВыбранныйКлюч])    
;

метод ВидимостьПолеСтруктурыБулево(): Булево
    знч ТипыКлюча = СвойстваИТипы.ПолучитьИлиУмолчание(ВыбранныйКлюч)
    если ТипыКлюча == Неопределено
        возврат Ложь
    ;
    
    возврат ТипыКлюча.Содержит(Тип<Булево>)
;