импорт Анкетирование
импорт ВебApi
импорт ГрафикОтпусков
импорт ГрафикОтпусковСотрудников
импорт Компания
импорт ОбменДанными
импорт ПодборПерсонала
импорт СтандартноеПриложение
импорт Тестирование

конст apiVersion: Версия = Версия{2.2}
конст formatVersion: Версия = Версия{3.0}

// Контракт ПриложениеОбменСервис
@ВПроекте
@Реализация
метод ТипГруппыКоллекцийДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    возврат ПриложениеОбмен.ТипГруппыКоллекцийДанныхJson(ВерсияФорматаОбмена)
;

@ВПроекте
@Реализация
метод ТипыОбъектовИКоллекцийДанныхJson(ГруппыКоллекцийДанныхJson: Объект): Соответствие<Тип, Объект?>
    если ГруппыКоллекцийДанныхJson это ПриложениеОбмен.ГруппыКоллекцийДанныхJson_V2_0
        возврат ПриложениеОбмен.ТипыОбъектовИКоллекцийДанныхJson(ГруппыКоллекцийДанныхJson как ПриложениеОбмен.ГруппыКоллекцийДанныхJson_V2_0)
    иначе если ГруппыКоллекцийДанныхJson это ПриложениеОбмен.ГруппыКоллекцийДанныхJson_V2_1
        возврат ПриложениеОбмен.ТипыОбъектовИКоллекцийДанныхJson(ГруппыКоллекцийДанныхJson как ПриложениеОбмен.ГруппыКоллекцийДанныхJson_V2_1)
    иначе если ГруппыКоллекцийДанныхJson это ПриложениеОбмен.ГруппыКоллекцийДанныхJson_V2_5
        возврат ПриложениеОбмен.ТипыОбъектовИКоллекцийДанныхJson(ГруппыКоллекцийДанныхJson как ПриложениеОбмен.ГруппыКоллекцийДанныхJson_V2_5)
    иначе если ГруппыКоллекцийДанныхJson это ПриложениеОбмен.ГруппыКоллекцийДанныхJson_V3_0
        возврат ПриложениеОбмен.ТипыОбъектовИКоллекцийДанныхJson(ГруппыКоллекцийДанныхJson как ПриложениеОбмен.ГруппыКоллекцийДанныхJson_V3_0)
    иначе
        возврат ПриложениеОбмен.ТипыОбъектовИКоллекцийДанныхJson(ГруппыКоллекцийДанныхJson как ПриложениеОбмен.ГруппыКоллекцийДанныхJson)
    ;
;

@ВПроекте
@Реализация
метод ОбновитьНомерУспешнойЗагруженнойВерсии(Версия: Число, Отправитель: Объект?)
    //Версии обмена хранит клиент, в сервисе запись не производится
;

@ВПроекте
@Реализация
метод ВерсияApi(): ВебApiСервер.ВерсияApi
    возврат новый ВебApiСервер.ВерсияApi(apiVersion.ВСтроку(), formatVersion.ВСтроку())
;

@ВПроекте
@Реализация
метод ПоддерживаемыеВерсииОбмена(): Множество<Версия>
    возврат {Версия{1.0}, Версия{1.1}, Версия{1.2}, Версия{2.0}, Версия{2.1}, Версия{2.2}, Версия{2.3}, Версия{2.4}, Версия{2.5}, Версия{3.0}}
;

// Конец ПриложениеОбменСервис

// Контракт ПодсистемаПриложения

@ВПроекте
@Реализация
метод ОписаниеПодсистемы(): СтандартноеПриложение.ОписаниеПодсистемы
    возврат новый СтандартноеПриложение.ОписаниеПодсистемы(ПриложениеОбмен.ИД_ПОДСИСТЕМЫ)
;

// Конец ПодсистемаПриложения

// Контракт ОбновляемаяПодсистема

@ВПроекте
@Реализация
метод ОбработчикиЗаполнения(): Массив<СтандартноеПриложение.ОписаниеОбработчикаЗаполнения>
    возврат []
;

@ВПроекте
@Реализация
метод ОбработчикиОбновления(): Массив<СтандартноеПриложение.ОписаниеОбработчикаОбновления>
    пер Обработчики: Массив<СтандартноеПриложение.ОписаниеОбработчикаОбновления>
    пер Сервис = ПриложениеОбменПоставщикВерсииПриложения.ПолучитьСервис()
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
                ПриложениеОбмен.ИД_ПОДСИСТЕМЫ,
                "ПриложениеОбменЗаполнениеСоответствиеИдентификаторовОбъектов",
                &ПриложениеОбмен.ЗаполнениеСоответствиеИдентификаторовОбъектов(),
                Сервис.ПриложениеОбменЗаполнениеСоответствиеИдентификаторовОбъектов()))
    возврат Обработчики
;

// Конец ОбновляемаяПодсистема

// Контракт ГрафикОтпусковРегистрацияИзменений

@Реализация
@ВПроекте
метод ГрафикОтпусковПредприятияТребуетсяРегистрация(Состояние: СостояниеГрафикаОтпусков, ИнформационнаяСистемаИнициаторВидПриложения: ВидПриложения?): Булево
    если РазделительДанныхСборГрафиковОтпусков.ПредопределенныйЭлемент(
                РазделительДанныхСборГрафиковОтпусков.ИД_РАЗДЕЛИТЕЛЬ_СБОР_ГРАФИКОВ_HRM
            ) == Неопределено
        возврат Ложь
    ;
    знч ДанныеИнформационныхСистем = ИнформационныеСистемы.ДанныеИнформационныхСистем()
    для ДанныеИнформационнойСистемы из ДанныеИнформационныхСистем
        // регистрация актуальна для обмена с HR
        если ДанныеИнформационнойСистемы.Значение.ВидПриложения == ВидПриложения.Hr
            возврат ИнформационнаяСистемаИнициаторВидПриложения == ВидПриложения.Hrm
        ;
    ;
    возврат Ложь
;

@Реализация
@ВПроекте
метод ГрафикОтпусковПредприятияРазделитель(Состояние: СостояниеГрафикаОтпусков): РазделительВыгружаемыхДанных.Ссылка?
    возврат РазделительДанныхСборГрафиковОтпусков.ПредопределенныйЭлемент(
                РазделительДанныхСборГрафиковОтпусков.ИД_РАЗДЕЛИТЕЛЬ_СБОР_ГРАФИКОВ_HRM
            )
;

@Реализация
@ВПроекте
метод ГрафикОтпусковПредприятияИдентификатор(ГрафикПредприятия: ГрафикОтпусковПредприятия.Ссылка, Сервисы: ВебApiСервер.СервисыУпаковкиJson): Строка
    возврат Сервисы.ПолучитьИдентификатор(ГрафикПредприятия)
;

@Реализация
@ВПроекте
метод ГрафикОтпусковСтруктурнойЕдиницыТребуетсяРегистрация(Ссылка: ГрафикОтпусковСтруктурнойЕдиницы.Ссылка): Булево
    пер ТребуетсяРегистрацияИзмененийГрафика: Булево
    знч Запрос = Запрос{
        Выбрать
            ГрафикОтпусковСтруктурнойЕдиницы.Ссылка.ЗаменитьNull(Неопределено) Как Ссылка
        Из
            ПодразделенияИСотрудники КАК ПодразделенияИСотрудники
            Левое Соединение ГрафикОтпусковСотрудника КАК ГрафикОтпусковСотрудника
                Внутреннее соединение ГрафикОтпусковСтруктурнойЕдиницы КАК ГрафикОтпусковСтруктурнойЕдиницы
                    Внутреннее соединение ГрафикОтпусковПредприятия КАК ГрафикОтпусковПредприятияСсылка
                        ПО ГрафикОтпусковСтруктурнойЕдиницы.ГрафикОтпусковПредприятия == ГрафикОтпусковПредприятияСсылка.Ссылка
                    ПО ГрафикОтпусковСотрудника.ГрафикОтпусковПодразделения == ГрафикОтпусковСтруктурнойЕдиницы.Ссылка
                ПО ПодразделенияИСотрудники.ФизическоеЛицо == ГрафикОтпусковСотрудника.ФизическоеЛицо
        Где
            ПодразделенияИСотрудники.ФизическоеЛицо != Неопределено
            И ПодразделенияИСотрудники.ОсновноеМестоРаботы
            И ГрафикОтпусковСтруктурнойЕдиницы.Ссылка == %Ссылка
	        И ГрафикОтпусковСтруктурнойЕдиницы.Ответственный.ЗаменитьNull(Неопределено) != Неопределено
        Сгруппировать По
            ГрафикОтпусковСтруктурнойЕдиницы.Ссылка.ЗаменитьNull(Неопределено)
        }
    исп Результат = Запрос.Выполнить()
    для РезультатСтрока из Результат
        если РезультатСтрока.Ссылка != Неопределено
            ТребуетсяРегистрацияИзмененийГрафика = Истина
        ;
    ;
    возврат ТребуетсяРегистрацияИзмененийГрафика
;

@Реализация
@ВПроекте
метод ГрафикОтпусковСтруктурнойЕдиницыРазделитель(ГрафикПредприятия: ГрафикОтпусковПредприятия.Ссылка, Состояние: СостояниеГрафикаОтпусков): РазделительВыгружаемыхДанных.Ссылка?
    возврат ГрафикПредприятия
;

// Конец ГрафикОтпусковРегистрацияИзменений

// Контракт АнкетированиеРегистрацияИзменений

@Реализация
@ВПроекте
метод ШаблоныАнкетТребуетсяРегистрация(): Булево
    возврат Ложь
;

@Реализация
@ВПроекте
метод АнкетыТребуетсяРегистрация(Статус: СтатусыАнкет, УровеньДоступности: УровниДоступностиАнкет?): Булево
    возврат УровеньДоступности == УровниДоступностиАнкет.ВсеПриложения и Статус == СтатусыАнкет.Заполнена
;

@Реализация
@ВПроекте
метод УровеньДоступностиАнкеты(): УровниДоступностиАнкет
    возврат УровниДоступностиАнкет.ТекущееПриложение
;

// Конец АнектированиеРегистрацияИзменений

// Контракт ТестированиеРегистрацияИзменений

@Реализация
@ВПроекте
метод ТестыТребуетсяРегистрация(): Булево
    возврат Ложь
;

@Реализация
@ВПроекте
метод РезультатыТестированияТребуетсяРегистрация(Статус: СостоянияТестирования): Булево
    возврат Статус == СостоянияТестирования.Завершено
;

// Конец ТестированиеРегистрацияИзменений

// Контракт КомпанияРегистрацияИзменений

@Реализация
@ВПроекте
метод ОписаниеРаботодателяТребуетсяРегистрация(): Булево
    возврат Ложь
;

// Конец КомпанияРегистрацияИзменений

// Контракт ПодборПерсоналаРегистрацияИзменений

@Реализация
@ВПроекте
метод НастройкиПодбораПерсоналаТребуетсяРегистрация(): Булево
    возврат Ложь
;

@Реализация
@ВПроекте
метод ОфферыТребуетсяРегистрация(Статус: СтатусОффера, РежимЗагрузкиДанных: Булево): Булево
    возврат не РежимЗагрузкиДанных и {СтатусОффера.ОтправленКандидату, СтатусОффера.Принят, СтатусОффера.Отклонен, СтатусОффера.Отозван}.Содержит(Статус)
;

@Реализация
@ВПроекте
метод ОфферыРазделителиДанных(Статус: СтатусОффера): Массив<РазделительВыгружаемыхДанных.Ссылка?>
    возврат [Неопределено]
;

@Реализация
@ВПроекте
метод ВакансииТребуетсяРегистрация(): Булево
    возврат Ложь
;

@Реализация
@ВПроекте
метод СогласияТребуетсяРегистрация(Статус: СтатусыСогласийНаОбработкуПдн): Булево
    возврат Статус != СтатусыСогласийНаОбработкуПдн.Сформировано
;

@Реализация
@ВПроекте
метод НастройкиПднТребуетсяРегистрация(): Булево
    возврат Ложь
;

@ВПроекте
@Реализация
метод НастройкиАвтоматическогоИзмененияСтатусаТребуетсяРегистрация(): Булево
   возврат Ложь
;
// Конец ПодборПерсоналаРегистрацияИзменений

// Контракт ОбменДаннымиПриложение

@ВПроекте
@Реализация
метод ВидПриложения(): ВидПриложения
    возврат ВидПриложения.Ess
;

// Конец ОбменДаннымиПриложение