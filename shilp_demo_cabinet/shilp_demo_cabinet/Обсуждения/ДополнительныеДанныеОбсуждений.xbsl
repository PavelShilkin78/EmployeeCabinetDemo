импорт КонтрольДоступа
импорт ФизическиеЛица
импорт ОбменДанными
импорт ВебApi
импорт ОбщиеСтандартные
импорт УниверсальныеМеханизмы::Взаимодействия

//Область РазрешенияДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): Массив<РазрешениеДоступа>
    возврат КонтрольДоступа.РазрешенияДоступаТаблицыСФизическимЛицомСПравомУдаления()
;

@Обработчик
метод ВычислитьРазрешенияДоступаДляОбъектов(Элементы: ЧитаемыйМассив<ДополнительныеДанныеОбсуждений.ДанныеРасчетаРазрешений>): ЧитаемоеСоответствие<ДополнительныеДанныеОбсуждений.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    
    знч Разрешения: Соответствие<ДополнительныеДанныеОбсуждений.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    знч Обсуждения: Массив<ДополнительныеДанныеОбсуждений.Ссылка>
    для Элемент из Элементы
        Обсуждения.Добавить(Элемент.Ссылка)
    ;
    знч УчастникиОбсуждений = УчастникиОбсуждений(Обсуждения)
    для Элемент из Элементы
        знч РазрешенияЭлемента: Множество<РазрешениеДоступа>
        знч УчастникиОбсуждения = УчастникиОбсуждений.ПолучитьИлиУмолчание(Элемент.Ссылка, <УчастникВзаимодействия.Ссылка?>[])
        для Участник из УчастникиОбсуждения
            если Участник == Неопределено
                продолжить
            ;
            если Участник это ФизическиеЛица.Ссылка
                РазрешенияЭлемента.ДобавитьВсе(КонтрольДоступа.ЧтениеДанныхСправочниковПерсонально([Участник как ФизическиеЛица.Ссылка]))
            иначе
                для Сервис из ОбсужденияКонтрольДоступаПоставщик.ПолучитьСервисы()
                    РазрешенияЭлемента.ДобавитьВсе(Сервис.РазрешенияДоступаПоУчастникуОбсуждения(Участник))
                ; 
            ;
        ;
        Разрешения.Вставить(Элемент, РазрешенияЭлемента)
    ;
    возврат Разрешения
;

//КонецОбласти

@ВПроекте
метод Найти(ОбъектОбсуждения: ПредметОбсуждения.Ссылка): ДополнительныеДанныеОбсуждений.Ссылка?
    знч Запрос = Запрос{
        Выбрать Первые 1
            Ссылка Как Обсуждение
        Из
            ДополнительныеДанныеОбсуждений
        Где ОбъектОбсуждения == %ОбъектОбсуждения    
    }    
    возврат Запрос.Выполнить().ПервыйИлиУмолчание()?.Обсуждение
;

// JSON

@ВПроекте
метод ТипОбъектаJson(): Строка
    возврат "conversations"
;

@ВПодсистеме
метод ТипДанныхJson(ВерсияФорматаОбмена: Версия?): Тип 
    если ВерсияФорматаОбмена == Неопределено или ВерсияФорматаОбмена < Версия{2.0}
        выбросить новый ИсключениеВыполнения("Неверный формат")
    ;
    если ВерсияФорматаОбмена >= Версия{2.0}
        возврат Тип<ДанныеJson_V2_0>
    ;
;

@ВПроекте
метод ТипКоллекцииДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    если ВерсияФорматаОбмена == Неопределено или ВерсияФорматаОбмена < Версия{2.0}
        выбросить новый ИсключениеВыполнения("Неверный формат")
    ;
    если ВерсияФорматаОбмена >= Версия{2.0}
        возврат Тип<Массив<ДанныеJson_V2_0>>
    ;
;

@ВПроекте
структура ДанныеJson_V2_0
    обз знч ID: Строка
    обз знч name: Строка
    пер key: Строка
    пер presentation: Строка
    пер conversationID: Строка
    пер conversationObj: ОбменДанными.ЭлементКонтрактаСущностиJson?
    пер theme: Строка
    пер dateCreate: Момент?
    пер author: Строка
    пер participants: Массив<Строка>?
;

@ВПодсистеме
метод ЗагрузитьОбъектИзJson(ДанныеJson: ДанныеJson_V2_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    
    исп Транзакции.Начать()

    знч Обсуждение = Сервисы.ПрочитатьОбъект(ДанныеJson.ID, &ДополнительныеДанныеОбсуждений.Объект.новый(Ууид), Тип<ДополнительныеДанныеОбсуждений.Ссылка>) как ДополнительныеДанныеОбсуждений.Объект
    Обсуждение.Наименование = ДанныеJson.name
    Обсуждение.КлючОбсуждения = ДанныеJson.key
    Обсуждение.ПредставлениеОбращения = ДанныеJson.presentation
    Обсуждение.ИдОбсуждения = новый Ууид(ДанныеJson.conversationID)
    Обсуждение.ТемаОбсуждения = ДанныеJson.theme
    если ДанныеJson.dateCreate != Неопределено
        Обсуждение.МоментСоздания = ДанныеJson.dateCreate
    иначе
        Обсуждение.МоментСоздания = Момент.Сейчас()
    ;
    
    знч СервисыКонтракта = ПредметыОбсужденийApi.ПолучитьСервисы()
    пер ВнешняяСсылка: ВебApiСервер.ВнешняяСсылка?
    если ДанныеJson.conversationObj != Неопределено
        для СервисКонтракта из СервисыКонтракта
        ВнешняяСсылка = СервисКонтракта.ВнешняяСсылка(ДанныеJson.conversationObj)
            если ВнешняяСсылка != Неопределено
                Обсуждение.ОбъектОбсуждения = Сервисы.ПолучитьСсылку(ВнешняяСсылка) как ПредметОбсуждения.Ссылка
                прервать
            ;    
        ; 
        если ВнешняяСсылка == Неопределено
            Обсуждение.ОбъектОбсуждения = ОбменДанными.ИдентификаторыЛокальныхОбъектов([ДанныеJson.conversationObj.ID])
                            .ПолучитьИлиУмолчание(ДанныеJson.conversationObj.ID) как ПредметОбсуждения.Ссылка?    
        ;
    ;
    
    Сервисы.ЗаписатьОбъект(новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(Обсуждение, ДанныеJson.ID), Сервисы.ИнструментыМенеджераОбъекта)
;

@ВПодсистеме
метод ГруппаИзмененийВJson(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): ЧитаемоеСоответствие<Строка, Массив<Объект?>>
    возврат {"conversations": ДанныеОбсужденийВJson(Ссылки, Сервисы)}
;

метод ДанныеОбсужденийВJson(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): Массив<Объект?>
    знч Данные: Массив<Объект?>
    для КлючИЗначение из ДанныеОбсуждений(Ссылки)
        Данные.Добавить(ДанныеОбсужденийВJson_V2_0(КлючИЗначение.Значение, Сервисы))
    ;
    возврат Данные
;

метод ДанныеОбсуждений(ОбсужденияСсылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>): ЧитаемоеСоответствие<ДополнительныеДанныеОбсуждений.Ссылка, ЧитаемоеСоответствие<Строка, Объект?>> 
    знч ДанныеОбсуждений: Соответствие<ДополнительныеДанныеОбсуждений.Ссылка, ЧитаемоеСоответствие<Строка, Объект?>> 
    знч Запрос = Запрос{
        Выбрать
            Ссылка,
            Наименование,
            ПредставлениеОбращения,
            ИдОбсуждения,
            ОбъектОбсуждения,
            ТемаОбсуждения,
            МоментСоздания,
            АвторОбсуждения
        Из
            ДополнительныеДанныеОбсуждений
        Где
            Ссылка В (%ОбсужденияСсылки)
    }
    исп Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        ДанныеОбсуждений.Вставить(
            СтрокаРезультата.Ссылка,
            МенеджерЗапросов.СтрокаРезультатаЗапросаВСоответствие(СтрокаРезультата, Результат)
        )
    ;
    возврат ДанныеОбсуждений
;

метод ДанныеОбсужденийВJson_V2_0(ДанныеОбъекта: ЧитаемоеСоответствие<Строка, Объект?>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): ДанныеJson_V2_0
    
    знч ДанныеJson = новый ДанныеJson_V2_0(
        (ДанныеОбъекта["Ссылка"] как ДополнительныеДанныеОбсуждений.Ссылка).Ид.ВСтроку(),
        ДанныеОбъекта["Наименование"] как Строка
    )     
    если ДанныеОбъекта["ОбъектОбсуждения"] != Неопределено
        знч СервисыКонтракта = ПредметыОбсужденийApi.ПолучитьСервисы()
        пер ОписаниеЭлемента: ОбменДанными.ЭлементКонтрактаСущностиJson?
        для СервисКонтракта из СервисыКонтракта
            ОписаниеЭлемента = СервисКонтракта.ОписаниеЭлемента(
                ДанныеОбъекта["ОбъектОбсуждения"] как ПредметОбсуждения.Ссылка,
                Сервисы    
            )
            если ОписаниеЭлемента != Неопределено
                ДанныеJson.conversationObj = ОписаниеЭлемента
            ;
        ;
    ;
    
    ДанныеJson.conversationID = (ДанныеОбъекта["ИдОбсуждения"] как Ууид).ВСтроку()
    ДанныеJson.presentation = ДанныеОбъекта["ПредставлениеОбращения"] как Строка
    ДанныеJson.theme = ДанныеОбъекта["ТемаОбсуждения"] как Строка
    ДанныеJson.dateCreate = ДанныеОбъекта["МоментСоздания"] как Момент?
    // ДанныеJson.author = Сервисы.ПолучитьИдентификатор(ДанныеОбъекта["АвторОбсуждения"] как ФизическиеЛица.Ссылка?)
    // пер Участники: Массив<Строка>
    // для ЭлементУчастников из ДанныеОбъекта["УчастникиОбсуждения"] как Массив<ФизическиеЛица.Ссылка>
    //     Участники.Добавить(Сервисы.ПолучитьИдентификатор(ЭлементУчастников))
    // ;
    // ДанныеJson.participants = Участники
    
    возврат ДанныеJson
;

метод УчастникиОбсуждений(Обсуждения: ЧитаемаяКоллекция<ДополнительныеДанныеОбсуждений.Ссылка>):
    ЧитаемоеСоответствие<ДополнительныеДанныеОбсуждений.Ссылка, ЧитаемыйМассив<УчастникВзаимодействия.Ссылка?>>
    
    знч УчастникиОбсуждений: Соответствие<ДополнительныеДанныеОбсуждений.Ссылка, Массив<УчастникВзаимодействия.Ссылка?>>
    знч Запрос = Запрос{
        Выбрать
            Элемент,
            Владелец
        Из
            ДополнительныеДанныеОбсуждений.УчастникиОбсуждения
        Где
            Владелец в (%Обсуждения)
    }
    
    исп Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        знч Участники = УчастникиОбсуждений.ВставитьЕслиОтсутствует(СтрокаРезультата.Владелец, [])
        Участники.Добавить(СтрокаРезультата.Элемент)
    ;
    
    возврат УчастникиОбсуждений
;