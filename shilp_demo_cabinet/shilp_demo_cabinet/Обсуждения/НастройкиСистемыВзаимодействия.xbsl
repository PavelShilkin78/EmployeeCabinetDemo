импорт КонтрольДоступа
импорт ВебApi
импорт ОбщиеСтандартные

// JSON

@ВПроекте
структура ДанныеJson
    знч botID: Строка
    знч botName: Строка
    знч systemConversationID: Строка
;

@ВПроекте
структура ДанныеJson_V2_0
    пер ID: Строка?
    пер name: Строка?
    пер botID: Строка?
    пер botName: Строка?
    пер systemConversationID: Строка?
    пер openKeyIS: Строка?
    пер privateKeyIS: Строка?
    пер ISAdress: Строка?
    пер email: Строка?
    пер connectionMethod: СпособыПодключенияJson?
    пер appID: Строка?
    пер appOpenKey: Строка?
;

перечисление СпособыПодключенияJson
    localServer,
    dialogServer
;

@ВПроекте
метод ТипДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    если ВерсияФорматаОбмена == Неопределено или ВерсияФорматаОбмена < Версия{2.0}
        возврат Тип<ДанныеJson>
    иначе если ВерсияФорматаОбмена >= Версия{2.0}
        возврат Тип<ДанныеJson_V2_0>
    ;
;

@ВПроекте
метод ТипКоллекцииДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    если ВерсияФорматаОбмена == Неопределено или ВерсияФорматаОбмена < Версия{2.0}
        возврат Тип<Массив<ДанныеJson>>
    иначе если ВерсияФорматаОбмена >= Версия{2.0}
        возврат Тип<Массив<ДанныеJson_V2_0>>
    ;
;

@ВПроекте
метод ТипОбъектаJson(): Строка
    возврат "settings"
;

@ВПроекте
метод ЗагрузитьОбъектИзJson(ДанныеJson: ДанныеJson, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    исп Транзакции.Начать() 

    знч НастройкаОбъект = ОбъектНастройкаСистемыВзаимодействия()
    НастройкаОбъект.ЗаполнитьПоДаннымJson(ДанныеJson, Сервисы)
    Сервисы.ЗаписатьОбъект(новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(НастройкаОбъект, НастройкаОбъект.Ссылка.Ид.ВСтроку()), Сервисы.ИнструментыМенеджераОбъекта)
;

@ВПроекте
метод ЗагрузитьОбъектИзJson(ДанныеJson: ДанныеJson_V2_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    исп Транзакции.Начать() 
    знч НастройкаОбъект = ОбъектНастройкаСистемыВзаимодействия()
    
    если ДанныеJson.botID != Неопределено
        НастройкаОбъект.ИдМаршрутизатораОбсуждений = новый Ууид(ДанныеJson.botID)
    ;
    НастройкаОбъект.ИмяМаршрутизатораОбсуждений = ДанныеJson.botName ?? ""
    если ДанныеJson.systemConversationID != Неопределено
    НастройкаОбъект.ИдСлужебногоОбсуждения = новый Ууид(ДанныеJson.systemConversationID)
    ;
    НастройкаОбъект.Наименование = ДанныеJson.name ?? ""
    НастройкаОбъект.ОткрытыйКлючСВ = ДанныеJson.openKeyIS ?? ""
    НастройкаОбъект.ЗакрытыйКлючСВ = ДанныеJson.privateKeyIS ?? ""
    НастройкаОбъект.АдресСервераСистемыВзаимодействия = ДанныеJson.ISAdress ?? ""
    НастройкаОбъект.Абонент = ДанныеJson.email ?? ""
    если ДанныеJson.connectionMethod != Неопределено
        НастройкаОбъект.СпособПодключения = СпособПодключенияИзJson(ДанныеJson.connectionMethod)
    ; 
    если ДанныеJson.appID != Неопределено
        НастройкаОбъект.ИдПриложения = новый Ууид(ДанныеJson.appID)
    ;
    НастройкаОбъект.ОткрытыйКлючПриложения = ДанныеJson.appOpenKey ?? ""
    Сервисы.ЗаписатьОбъект(новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(НастройкаОбъект, НастройкаОбъект.Ссылка.Ид.ВСтроку()), Сервисы.ИнструментыМенеджераОбъекта)
;

конст СООТВЕТСТВИЕ_СПОСОБЫ_ПОДКЛЮЧЕНИЯ_JSON = {
    СпособыПодключенияJson.localServer: СпособПодключенияСистемыВзаимодействия.ЛокальныйСервер,
    СпособыПодключенияJson.dialogServer: СпособПодключенияСистемыВзаимодействия.СервисДиалог
}


метод СпособПодключенияИзJson(СпособПодключенияJson: СпособыПодключенияJson): СпособПодключенияСистемыВзаимодействия
    возврат СООТВЕТСТВИЕ_СПОСОБЫ_ПОДКЛЮЧЕНИЯ_JSON[СпособПодключенияJson]    
;

метод СпособПодключенияВJson(СпособПодключения: СпособПодключенияСистемыВзаимодействия): СпособыПодключенияJson
    для КлючИЗначение из СООТВЕТСТВИЕ_СПОСОБЫ_ПОДКЛЮЧЕНИЯ_JSON
        если КлючИЗначение.Значение == СпособПодключения
            возврат КлючИЗначение.Ключ
        ;     
    ;     
;

метод ОбъектНастройкаСистемыВзаимодействия(): НастройкиСистемыВзаимодействия.Объект
    пер Настройка = Обсуждения.НастройкаСистемыВзаимодействия()
    если Настройка != Неопределено
        возврат Настройка.Настройка.ЗагрузитьОбъект()
    иначе
        возврат новый НастройкиСистемыВзаимодействия.Объект() 
    ;   
;

@ВПодсистеме
метод ГруппаИзмененийВJson(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): ЧитаемоеСоответствие<Строка, Массив<Объект?>>
    возврат {"settings": НастройкиОбсужденийВJson(Ссылки, Сервисы)}
;

метод НастройкиОбсужденийВJson(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): Массив<Объект?>
    знч Данные: Массив<Объект?>
    для КлючИЗначение из НастройкиОбсуждений(Ссылки)
        Данные.Добавить(НастройкиОбсужденийВJson_V2_0(КлючИЗначение.Значение, Сервисы))
    ;
    возврат Данные
;

метод НастройкиОбсуждений(НастройкиСистемыВзаимодействияСсылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>): ЧитаемоеСоответствие<НастройкиСистемыВзаимодействия.Ссылка, ЧитаемоеСоответствие<Строка, Объект?>>
    
    знч НастройкиОбсуждений: Соответствие<НастройкиСистемыВзаимодействия.Ссылка, ЧитаемоеСоответствие<Строка, Объект?>> 
    
    знч Запрос = Запрос{
        Выбрать
            Ссылка,
            Наименование,
            ОткрытыйКлючСВ,
            ЗакрытыйКлючСВ,
            АдресСервераСистемыВзаимодействия,
            Абонент,
            СпособПодключения,
            ИдПриложения,
            ОткрытыйКлючПриложения,
            ИдМаршрутизатораОбсуждений,
            ИмяМаршрутизатораОбсуждений,
            ИдСлужебногоОбсуждения
        Из
            НастройкиСистемыВзаимодействия
        Где
            Ссылка В (%НастройкиСистемыВзаимодействияСсылки)
    }
    исп Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        НастройкиОбсуждений.Вставить(
            СтрокаРезультата.Ссылка,
            МенеджерЗапросов.СтрокаРезультатаЗапросаВСоответствие(СтрокаРезультата, Результат)
        )        
    ;
    
    возврат НастройкиОбсуждений
;

метод НастройкиОбсужденийВJson_V2_0(ДанныеОбъекта: ЧитаемоеСоответствие<Строка, Объект?>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): ДанныеJson_V2_0
    
    знч ДанныеJson = новый ДанныеJson_V2_0(
        (ДанныеОбъекта["Ссылка"] как НастройкиСистемыВзаимодействия.Ссылка).Ид.ВСтроку(),
        ДанныеОбъекта["Наименование"] как Строка 
    )    
    
    ДанныеJson.botID = (ДанныеОбъекта["ИдМаршрутизатораОбсуждений"] как Ууид).ВСтроку()
    ДанныеJson.botName = ДанныеОбъекта["ИмяМаршрутизатораОбсуждений"] как Строка
    ДанныеJson.systemConversationID = (ДанныеОбъекта["ИдСлужебногоОбсуждения"] как Ууид).ВСтроку()
    ДанныеJson.name = ДанныеОбъекта["Наименование"] как Строка
    ДанныеJson.openKeyIS = ДанныеОбъекта["ОткрытыйКлючСВ"] как Строка
    ДанныеJson.privateKeyIS = ДанныеОбъекта["ЗакрытыйКлючСВ"] как Строка
    ДанныеJson.ISAdress = ДанныеОбъекта["АдресСервераСистемыВзаимодействия"] как Строка
    ДанныеJson.email = ДанныеОбъекта["Абонент"] как Строка
    ДанныеJson.connectionMethod = СпособПодключенияВJson(ДанныеОбъекта["СпособПодключения"] как СпособПодключенияСистемыВзаимодействия)
    ДанныеJson.appID = (ДанныеОбъекта["ИдПриложения"] как Ууид).ВСтроку()
    ДанныеJson.appOpenKey = ДанныеОбъекта["ОткрытыйКлючПриложения"] как Строка
    
    возврат ДанныеJson
;


//конец JSON

//Область РазрешенияДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): Массив<РазрешениеДоступа>
    возврат КонтрольДоступа.РазрешенияДоступаТаблицыСервисныхДанныхАбонента()
;

//КонецОбласти

//Область СлужебныйПрограммныйИнтерфейс