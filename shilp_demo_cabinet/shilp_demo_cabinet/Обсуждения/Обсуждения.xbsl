импорт СтандартноеПриложение
импорт ФизическиеЛица
импорт КонтрольДоступа
импорт ОбщиеСтандартные
импорт УниверсальныеМеханизмы::Взаимодействия
импорт ОбменДанными

@ВПроекте
структура ФункциональныеОпции
    пер Обсуждения: Булево
;

@ВПроекте
@НаКлиенте
метод ПараметрыСеанса(): ПараметрыСеанса
    возврат ПараметрыСеансаСервис.ПолучитьСервис().ПараметрПоКлючу(КЛЮЧ_ПАРАМЕТРОВ_СЕАНСА) как ПараметрыСеанса
;

@ВПодсистеме
конст КЛЮЧ_ПАРАМЕТРОВ_СЕАНСА: Строка = "ОбсужденияПараметрыСеанса" 

@ВПроекте
конст ИД_ПОДСИСТЕМЫ = "Обсуждения"

@ВПроекте
структура ПараметрыСеанса
    пер ПользовательСВАвторизован: Булево
;

@ВПроекте
@НаСервере @НаКлиенте
структура СтруктураСохраненияОбсуждения
    пер Участники: Массив<Ууид>
    пер УчастникиСохраняемые: Массив<УчастникВзаимодействия.Ссылка>
    пер Тема: Строка
    пер Ключ: Строка
    пер Видимость: Булево
    пер Представление: Строка
    пер ДопДанные: Строка
    пер ТекстСообщения: Строка
    пер ПредметОбсуждения: ПредметОбсуждения.Ссылка?
    пер АвторОбсуждения: УчастникВзаимодействия.Ссылка?
;

@ВПроекте
@НаСервере
структура ОбсуждениеПоОбъекту
    пер Ид: Ууид
    пер АвторОбсуждения: УчастникВзаимодействия.Ссылка?
    пер Обсуждение: ДополнительныеДанныеОбсуждений.Ссылка?
    пер ОбъектПереписки: ПредметОбсуждения.Ссылка?
;

@ВПроекте
@НаСервере
структура КонтекстОбсуждения
    пер personID: Строка?
    пер employerID: Строка?
    пер documentID: Строка?  
    пер applicationID: Строка? 
;

@ВПроекте
@НаСервере
структура ПараметрыПодключенияПользователя 
    пер Пользователь: Пользователи.Ссылка?
    пер УуидПользователя: Ууид
    пер ИмяПользователя: Строка
    пер ПолноеИмяПользователя: Строка
;

@НаСервере
структура СоответствиеValue
    пер name: Строка
    пер _Value: Строка
    пер Value: Строка
;

@НаСервере
структура ЗначениеСвойства
    пер Property: Массив<СоответствиеValue>
;

@НаСервере
структура СоответствиеДанныеСообщения
    пер _root: Строка
    пер root: ЗначениеСвойства
;


@ВПроекте
@НаСервере @ДоступноСКлиента
метод НовоеОбсуждениеПоПредмету(ПредметОбсуждения:ПредметОбсуждения.Ссылка?,ТекстСообщения: Строка, ТемаОбсуждения: Строка = ""): ДополнительныеДанныеОбсуждений.Ссылка?
    
    пер СтруктураСохранения: СтруктураСохраненияОбсуждения
    знч Сервисы = ПредметыОбсужденияПоставщик.ПолучитьСервисы()
    для Сервис из Сервисы
        пер СтруктураПоПредмету = Сервис.СтруктураСохраненияОбсуждения(ПредметОбсуждения, ТекстСообщения, ТемаОбсуждения)
        если СтруктураПоПредмету != Неопределено
            СтруктураСохранения = СтруктураПоПредмету
        прервать
        ;
    ;  
    
    знч ИдОбсуждения = СохранитьОбсуждениеСистемыВзаимодействия(СтруктураСохранения)
    СохранитьСообщениеСистемыВзаимодействия(ИдОбсуждения, СтруктураСохранения)
    знч ДополнительныеДанныеОбсуждения = СохранитьДополнительныеДанныеОбсуждения(ИдОбсуждения, СтруктураСохранения)
    
    возврат ДополнительныеДанныеОбсуждения
;

@НаСервере
метод СохранитьОбсуждениеСистемыВзаимодействия(СтруктураСохранения: СтруктураСохраненияОбсуждения): Ууид
    попытка
        исп ПривилегированныйРежим = КонтекстДоступа.Привилегированный() 
        знч ИдОбсуждения = СистемаВзаимодействия.СоздатьОбсуждение(
            СтруктураСохранения.Участники,
            СтруктураСохранения.Тема,
            СтруктураСохранения.Ключ, 
            СтруктураСохранения.Видимость)
        ПривилегированныйРежим.Закрыть() 
        возврат ИдОбсуждения
    поймать Исключение: ИсключениеСистемыВзаимодействия
        выбросить Исключение
    вконце    
    ;
;

@НаСервере
метод СохранитьСообщениеСистемыВзаимодействия(ИдОбсуждения: Ууид, СтруктураСохранения: СтруктураСохраненияОбсуждения): Ууид
    попытка    
        знч ПараметрыПользователя = Обсуждения.ПараметрыПользователя(Пользователи.ТекущийПользователь)  
        знч ИдАвтораСообщения = ИдПользователяСистемыВзаимодействия(ПараметрыПользователя.Пользователь)
        если ИдАвтораСообщения == Неопределено
            выбросить новый ИсключениеВыполнения("Пользователь с таким идентификатором не зарегистрирован!")       
        ;
        
        // Данные сообщения в v8-формате
        знч Данные: Строка = Обсуждения.ДанныеСообщенияДляV8(СтруктураСохранения.ДопДанные)
        возврат СистемаВзаимодействия.СоздатьСообщение(
                ИдОбсуждения,
                ИдАвтораСообщения,
                СтруктураСохранения.ТекстСообщения,
                Данные,
                ТипДанных = "application/vnd.1c.json-internal")
    поймать Исключение: ИсключениеСистемыВзаимодействия
        выбросить Исключение
    ;
;

@НаСервере
метод СохранитьДополнительныеДанныеОбсуждения(ИдОбсуждения: Ууид, СтруктураСохранения: СтруктураСохраненияОбсуждения): ДополнительныеДанныеОбсуждений.Ссылка?
    
    знч ДополнительныеДанныеОбсуждения = новый ДополнительныеДанныеОбсуждений.Объект() 
    
    ДополнительныеДанныеОбсуждения.ОбъектОбсуждения = СтруктураСохранения.ПредметОбсуждения
    ДополнительныеДанныеОбсуждения.ТемаОбсуждения = СтруктураСохранения.Тема
    ДополнительныеДанныеОбсуждения.ТемаОбсужденияДляСписка = СтруктураСохранения.Представление
    ДополнительныеДанныеОбсуждения.ПредставлениеОбращения = СтруктураСохранения.ТекстСообщения 
    ДополнительныеДанныеОбсуждения.ИдОбсуждения = ИдОбсуждения
    ДополнительныеДанныеОбсуждения.МоментСоздания = Момент.Сейчас()
    ДополнительныеДанныеОбсуждения.АвторОбсуждения = СтруктураСохранения.АвторОбсуждения
    ДополнительныеДанныеОбсуждения.УчастникиОбсуждения.ДобавитьВсе(СтруктураСохранения.УчастникиСохраняемые)
    ДополнительныеДанныеОбсуждения.КлючОбсуждения = СтруктураСохранения.Ключ
    
    исп КонтекстДоступа.Привилегированный()
    ДополнительныеДанныеОбсуждения.Записать()
    
    возврат ДополнительныеДанныеОбсуждения.Ссылка      
;

@ВПроекте
@НаСервере
метод УчастникиРаспределяемыхОбсуждений(): Массив<Ууид>?
    знч ИдТекущегоПользователяСВ = Обсуждения.ИдПользователяСистемыВзаимодействия(Пользователи.ТекущийПользователь)
    если ИдТекущегоПользователяСВ == Неопределено
        выбросить новый ИсключениеВыполнения("Пользователь с таким идентификатором не зарегистрирован!")       
    ;

    знч УчастникиОбсуждения: Массив<Ууид>
    УчастникиОбсуждения.Добавить(Обсуждения.НастройкаСистемыВзаимодействияИлиИсключение().ИдМаршрутизатораОбсуждений)
    УчастникиОбсуждения.Добавить(ИдТекущегоПользователяСВ)
      
    возврат УчастникиОбсуждения    
;




@ВПроекте
@НаСервере @ДоступноСКлиента
метод ЗаполнитьУчастниковОбсуждения(ИдОбсуждения: Ууид, ПользователиСВ: Массив<Ууид>, УдалятьЛишних: Булево)
    исп ПривилегированныйРежим = КонтекстДоступа.Привилегированный()
    знч Обсуждение = СистемаВзаимодействия.НайтиОбсуждение(ИдОбсуждения)
    если Обсуждение != Неопределено
        СистемаВзаимодействия.РедактироватьОбсуждение(ИдОбсуждения, ПользователиСВ, Обсуждение.Название)
    ;
    ПривилегированныйРежим.Закрыть()
    
;

@НаСервере
метод ПолучитьСохраненныхПользователейСВ(Пользователи: Массив<Пользователи.Ссылка>): Соответствие<Пользователи.Ссылка, Ууид>
    
    пер ИдыПользователей: Соответствие<Пользователи.Ссылка, Ууид>
    
    исп ПривилегированныйРежим = КонтекстДоступа.Привилегированный()
    знч Запрос = Запрос{
        Выбрать ИдПользователяСистемыВзаимодействия как ИдПользователяСистемыВзаимодействия,
        Пользователь
        Из 
            ПользователиСистемыВзаимодействия как ПользователиСистемыВзаимодействия
        Где 
            ПользователиСистемыВзаимодействия.Пользователь В (%Пользователи)}
        
    исп РезультатЗапроса = Запрос.Выполнить()  
    ПривилегированныйРежим.Закрыть()
    
    для РезультатСтрока из РезультатЗапроса
        ИдыПользователей.Вставить(РезультатСтрока.Пользователь, РезультатСтрока.ИдПользователяСистемыВзаимодействия)
    ;
    
    возврат ИдыПользователей
        
;

@ВПроекте
@НаКлиенте
метод ОткрытьФормуНастроек(Владелец: Компонент)
    НастройкаСистемыВзаимодействия.ОткрытьВМодальномОкне(КлючОбъекта = ВызовСервера.СсылкаНаНастройкиСистемыВзаимодействия())
;

@ВПроекте
@НаКлиенте
метод ДобавленаНастройкаСистемыВзаимодействия(): Булево
    возврат ВызовСервера.ДобавленаНастройкаСистемыВзаимодействия()
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ИспользуютсяОбсуждения(): Булево
    возврат ПолучитьФункциональныеОпции().Обсуждения
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ПолучитьФункциональныеОпции(): ФункциональныеОпции? 
    возврат ИспользуемаяФункциональность.УстановленныеЗначения()
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ЗаписатьФункциональныеОпции(ФункциональныеОпции: ФункциональныеОпции)
    ИспользуемаяФункциональность.ЗаписатьФункциональныеОпции(ФункциональныеОпции)
;

@ВПроекте
@НаСервере
метод ДанныеСообщенияДляV8(СтрокаДанных: Строка): Строка
    пер СоответствиеValue = новый СоответствиеValue()
    СоответствиеValue.name   = "Data"
    СоответствиеValue._Value = "#Value"
    СоответствиеValue.Value  = СтрокаДанных
    
    пер Value = новый Массив<СоответствиеValue>()
    Value.Добавить(СоответствиеValue)
    
    пер ЗначениеСвойства = новый ЗначениеСвойства()
    ЗначениеСвойства.Property = Value
    
    пер СоответствиеДанныеСообщения = новый СоответствиеДанныеСообщения()
    СоответствиеДанныеСообщения._root = "4238019D-7E49-4FC9-91DB-B6B951D5CF8E"
    СоответствиеДанныеСообщения.root  = ЗначениеСвойства
    
    пер РезультатСериализации = СериализацияJson.ЗаписатьОбъект(СоответствиеДанныеСообщения)
    знч СоответствиеСвойств = {
        "_Value": "#Value",
        "_root": "#root"
    }
    для Замена из СоответствиеСвойств
        РезультатСериализации = РезультатСериализации.Заменить(Замена.Ключ, Замена.Значение)
    ;
    возврат РезультатСериализации
;

@ВПодсистеме
@НаСервере
метод ПараметрыТекущегоПользователя(): ПараметрыПодключенияПользователя
    возврат ПараметрыПользователя(Пользователи.ТекущийПользователь)    
;

@ВПроекте
@НаСервере
метод ПараметрыПользователя(Пользователь: Пользователи.Ссылка?): ПараметрыПодключенияПользователя
    если Пользователь == Неопределено
        выбросить новый ИсключениеВыполнения("Текущий пользователь не задан")
    ;    
    исп ПривилегированныйРежим = КонтекстДоступа.Привилегированный() 
    знч Запрос = Запрос{
        Выбрать 
            Представление как Представление
        Из 
            Пользователи как Пользователи
        Где 
            Ссылка == %Пользователь}
        
    исп РезультатЗапроса = Запрос.Выполнить()       
    знч РезультатЗапросаСтрока = новый ЧитаемыйМассив(РезультатЗапроса)[0]
        
    пер ПараметрыПользователя = новый ПараметрыПодключенияПользователя()
    ПараметрыПользователя.ИмяПользователя = РезультатЗапросаСтрока.Представление
    ПараметрыПользователя.ПолноеИмяПользователя = РезультатЗапросаСтрока.Представление
    ПараметрыПользователя.УуидПользователя = Пользователь.Ид
    ПараметрыПользователя.Пользователь = Пользователь
    ПривилегированныйРежим.Закрыть()  
    возврат ПараметрыПользователя    
;

@ВПодсистеме
@НаСервере
метод СсылкаНаНастройкиСистемыВзаимодействия(): НастройкиСистемыВзаимодействия.Ссылка?
    пер НастройкаРезультатЗапроса: НастройкаСистемыВзаимодействия? = НастройкаСистемыВзаимодействия()
    если НастройкаРезультатЗапроса != Неопределено
        возврат НастройкаРезультатЗапроса.Настройка
    ;
    возврат Неопределено
;

@ВПроекте
@НаСервере
метод НастройкаСистемыВзаимодействия(): НастройкаСистемыВзаимодействия?
    исп КонтекстДоступа.Привилегированный()
    знч Запрос = Запрос{
        Выбрать Первые 1
            Ссылка как Настройка,
            ОткрытыйКлючСВ как ОткрытыйКлючСВ,
            ЗакрытыйКлючСВ как ЗакрытыйКлючСВ,
            Абонент как Абонент,
            АдресСервераСистемыВзаимодействия как АдресСервераСистемыВзаимодействия,
            СпособПодключения как СпособПодключения,
            ИдПриложения как ИдПриложения,
            ОткрытыйКлючПриложения как ОткрытыйКлючПриложения,
            ИдМаршрутизатораОбсуждений как ИдМаршрутизатораОбсуждений,
            ИмяМаршрутизатораОбсуждений как ИмяМаршрутизатораОбсуждений,
            ИдСлужебногоОбсуждения как ИдСлужебногоОбсуждения
        Породить НастройкаСистемыВзаимодействия
        Из
            НастройкиСистемыВзаимодействия как НастройкиСистемыВзаимодействия}

    возврат Запрос.Выполнить().ЕдинственныйИлиУмолчание()
;

@ВПроекте
@НаСервере
метод НастройкаСистемыВзаимодействияИлиИсключение(): НастройкаСистемыВзаимодействия
    пер НастройкаСистемыВзаимодействия = НастройкаСистемыВзаимодействия()
    
    если НастройкаСистемыВзаимодействия == Неопределено
        выбросить новый ИсключениеВыполнения("Подключение не может быть выполнено \nНе заполены настройки системы взаимодействия")
    иначе
        возврат НастройкаСистемыВзаимодействия 
    ;         
;


@ВПроекте
@НаСервере @ДоступноСКлиента
метод ОбсужденияТекущегоПользователя():Массив<ДанныеОбсуждений>
    пер ТекФизлицо = ПользователиСистемы.ТекущееФизическоеЛицо() 
    возврат ОбсужденияПользователя(ТекФизлицо)    
;

@НаСервере
метод ОбсужденияПользователя(Физлицо: ФизическиеЛица.Ссылка?):Массив<ДанныеОбсуждений>    

    исп ПривилегированныйРежим = КонтекстДоступа.Привилегированный() 
    пер Обращения: Массив<ДанныеОбсуждений>
    знч Запрос = Запрос{
       Выбрать
            Ссылка как Обсуждение,
            ОбъектОбсуждения,
            МоментСоздания,
            ТемаОбсуждения,
            ТемаОбсужденияДляСписка,
            Ложь как ЭтоНовыйОбъект,
            ПредставлениеОбращения как ПредставлениеОбращения
        Из 
            ДополнительныеДанныеОбсуждений
        Где АвторОбсуждения == %Физлицо
        Упорядочить по МоментСоздания убыв
        }

    
    исп РезультатЗапроса = Запрос.Выполнить() 
    ПривилегированныйРежим.Закрыть()
    для РезультатЗапросаСтрока из РезультатЗапроса
        знч ДанныеСтроки = новый ДанныеОбсуждений()
        
        ДанныеСтроки.ОбъектПереписки = РезультатЗапросаСтрока.ОбъектОбсуждения
        ДанныеСтроки.МоментСоздания = РезультатЗапросаСтрока.МоментСоздания
        ДанныеСтроки.Обсуждение = РезультатЗапросаСтрока.Обсуждение
        ДанныеСтроки.ЗапросДата = МенеджерДат.ФорматМомента(РезультатЗапросаСтрока.МоментСоздания, "дд.ММ ЧЧ:мм")
        ДанныеСтроки.КартинкаЗапроса = Ресурс{Форум.svg}.Ссылка
        ДанныеСтроки.ЭтоНовыйОбъект = РезультатЗапросаСтрока.ЭтоНовыйОбъект
        ДанныеСтроки.ЗапросПредставлениеТемы = 
        РезультатЗапросаСтрока.ТемаОбсужденияДляСписка.Пусто() ? РезультатЗапросаСтрока.ТемаОбсуждения : РезультатЗапросаСтрока.ТемаОбсужденияДляСписка
        ДанныеСтроки.ЗапросПредставлениеСообщения = РезультатЗапросаСтрока.ПредставлениеОбращения
        Обращения.Добавить(ДанныеСтроки)
    ; 

    возврат Обращения
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ОбсуждениеПредмета(ОбъектОбсуждения : ПредметОбсуждения.Ссылка?): ДополнительныеДанныеОбсуждений.Ссылка?
    
    исп КонтекстДоступа = КонтекстДоступа.Привилегированный()
        
    знч Запрос = Запрос{
        Выбрать Первые 1 
            Ссылка как Обсуждение
            Из 
            ДополнительныеДанныеОбсуждений как ДополнительныеДанныеОбсуждений
        Где 
            ДополнительныеДанныеОбсуждений.ОбъектОбсуждения == %ОбъектОбсуждения
        Упорядочить по ДополнительныеДанныеОбсуждений.МоментСоздания Убыв}          
   
    исп РезультатЗапроса = Запрос.Выполнить()    
    КонтекстДоступа.Закрыть()
    
    знч РезультатЗапросаСтроки = новый ЧитаемыйМассив(РезультатЗапроса)
    если (не РезультатЗапросаСтроки.Пусто())
        возврат РезультатЗапросаСтроки[0].Обсуждение
    иначе
        возврат Неопределено
    ;
    
;

@ВПроекте
@НаСервере
метод ОбсуждениеПоОбъекту(Обсуждение: ДополнительныеДанныеОбсуждений.Ссылка?, ОбъектПереписки : ПредметОбсуждения.Ссылка?): ОбсуждениеПоОбъекту?
    знч ПредметПереписки: неизвестно = ОбъектПереписки
    знч ОбъектПерепискиЗадан: Булево = (ОбъектПереписки != Неопределено)
    исп КонтекстДоступа = КонтекстДоступа.Привилегированный()    
    знч Запрос = Запрос{
        Выбрать Первые 1 
            Ссылка как ОбсуждениеПоОбъекту,
            ИдОбсуждения как ИдОбсуждения,
            АвторОбсуждения как АвторОбсуждения,
            ОбъектОбсуждения
            Из 
            ДополнительныеДанныеОбсуждений как ДополнительныеДанныеОбсуждений
        Где 
            ДополнительныеДанныеОбсуждений.ОбъектОбсуждения == %ПредметПереписки и %ОбъектПерепискиЗадан или 
            ДополнительныеДанныеОбсуждений.Ссылка == %Обсуждение
        Упорядочить по ДополнительныеДанныеОбсуждений.МоментСоздания Убыв}          
   
    исп РезультатЗапроса = Запрос.Выполнить()    
    КонтекстДоступа.Закрыть()
    
    знч РезультатЗапросаСтроки = новый ЧитаемыйМассив(РезультатЗапроса)
    если (не РезультатЗапросаСтроки.Пусто())
        возврат новый ОбсуждениеПоОбъекту(РезультатЗапросаСтроки[0].ИдОбсуждения, РезультатЗапросаСтроки[0].АвторОбсуждения, РезультатЗапросаСтроки[0].ОбсуждениеПоОбъекту, РезультатЗапросаСтроки[0].ОбъектОбсуждения)
    иначе
        возврат Неопределено
    ;
;

@ВПодсистеме
@НаСервере
метод АдресСервераСистемыВзаимодействия(): Строка
    возврат НастройкаСистемыВзаимодействияИлиИсключение().АдресСервераСистемыВзаимодействия    
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ПереносНастроекСервер()
    пер Настройка = Обсуждения.НастройкаСистемыВзаимодействия()
    если Настройка != Неопределено и не Настройка.АдресСервераСистемыВзаимодействия.Пусто()
        ОбменДанными.ЗарегистрироватьОтправляемыйДокумент(Настройка!.Настройка, Истина)
        РегистрацияИзменений.ЗарегистрироватьИзменение(Настройка!.Настройка, Неопределено)
        знч ДанныеРегистрации = новый ДанныеРегистрацииПриложенияВзаимодействия(
            Сервер = Настройка.АдресСервераСистемыВзаимодействия,
            ИдПриложения = Настройка.ИдПриложения,
            КлючиПриложения = новый КлючиПриложенияВзаимодействия(Настройка.ОткрытыйКлючСВ, Настройка.ЗакрытыйКлючСВ),
            ОткрытыйКлючСервера = Настройка.ОткрытыйКлючПриложения)

        СистемаВзаимодействия.УстановитьДанныеРегистрацииПриложения(ДанныеРегистрации)
    ;
;

//Пользователи

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ПользователиСВПоПользователямПриложения(Пользователи: Массив<Пользователи.Ссылка>): Массив<Ууид>
    
    знч ПользователиСВ: Массив<Ууид>
    знч СохраненныеИды = ПолучитьСохраненныхПользователейСВ(Пользователи)
 
    для Пользователь из Пользователи
        если СохраненныеИды.СодержитКлюч(Пользователь)
            ПользователиСВ.Добавить(СохраненныеИды.Получить(Пользователь))
        иначе
            пер ПараметрыПодключения = новый ПараметрыПодключенияПользователя(Пользователь)
            ПользователиСВ.Добавить(СохранитьПользователяСистемыВзаимодействия(ПараметрыПодключения.Пользователь))
        ;
    ;
        
    возврат ПользователиСВ
;

@ВПроекте
@НаСервере
метод ИдПользователяСистемыВзаимодействия(Пользователь: Пользователи.Ссылка?): Ууид?
    
    исп ПривилегированныйРежим = КонтекстДоступа.Привилегированный() 
    знч Запрос = Запрос{
            Выбрать ИдПользователяСистемыВзаимодействия как ИдПользователяСистемыВзаимодействия
            Из 
                ПользователиСистемыВзаимодействия как ПользователиСистемыВзаимодействия
            Где 
                Пользователь == %{Пользователь}}
        
    исп РезультатЗапроса = Запрос.Выполнить()  
    ПривилегированныйРежим.Закрыть()    
    знч РезультатЗапросаСтроки = новый ЧитаемыйМассив(РезультатЗапроса)
    если (не РезультатЗапросаСтроки.Пусто()) 
        возврат РезультатЗапросаСтроки[0].ИдПользователяСистемыВзаимодействия 
    иначе
        возврат СохранитьПользователяСистемыВзаимодействия(Пользователь) 
    ;    
;

@ВПроекте
@НаСервере
метод СохранитьПользователяСистемыВзаимодействия(Пользователь: Пользователи.Ссылка?): Ууид
    если Пользователь == Неопределено
        выбросить новый ИсключениеВыполнения("Не указан пользователь для регистрации!")
    ;    
    
    исп ПривилегированныйРежим = КонтекстДоступа.Привилегированный()
    пер ИдПользователя: Ууид
    знч ПользовательСистемыВзаимодействия = СистемаВзаимодействия.ПолучитьПользователяВзаимодействия(Пользователь)
    если ПользовательСистемыВзаимодействия == Неопределено
        ИдПользователя = СистемаВзаимодействия.СоздатьПользователяВзаимодействия(Пользователь = Пользователь)    
    иначе
        ИдПользователя = ПользовательСистемыВзаимодействия.Ид
    ;
    
    знч НаборЗаписейПользователиСВ = новый ПользователиСистемыВзаимодействия.НаборЗаписей() 
    НаборЗаписейПользователиСВ.Фильтр.Установить(Пользователь = Пользователь) 
    НаборЗаписейПользователиСВ.ДобавитьЗапись(Пользователь = Пользователь, ИдПользователяСистемыВзаимодействия = ИдПользователя)  
    попытка 
        НаборЗаписейПользователиСВ.Записать(Истина)
    поймать Ошибка: Исключение
        выбросить Ошибка 
    ; 
    ПривилегированныйРежим.Закрыть()
    возврат ИдПользователя   
;
//Пользователи