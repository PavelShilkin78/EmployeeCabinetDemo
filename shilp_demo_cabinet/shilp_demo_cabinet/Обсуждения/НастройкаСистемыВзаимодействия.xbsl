импорт ИнтерфейсныеКомпонентыСтандартные
импорт ОбщиеСтандартные

@Обработчик
метод ПослеЧтения()
    УстановитьАдресПоСпособуПодключения()
;

метод АдресСервераПризнакОбязательности(): Булево
    возврат АдресСервераДоступность()
;

метод ПриложениеЗарегистрировано(): Булево
    возврат не ЭтоНовый()    
;

метод ПанельОсновнаяЗаписатьИЗакрыть(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    попытка
        если Объект.СпособПодключения == СпособПодключенияСистемыВзаимодействия.ЛокальныйСервер
            Объект.АдресСервераСистемыВзаимодействия = ДополнитьАдресПодключения()
            КодАктивации = КодАктивацииЛокальногоСервера()
        ;
        
        если КодАктивации.Пусто()
            возврат
        ;         
        ЗарегистрироватьПриложениеСистемыВзаимодействия()
        Записать()
        ЗаписьНастроекСистемыВзаимодействия()
        ОбновленыНастройкиСистемыВзаимодействия.Оповестить()
        Закрыть()
    поймать Ошибка: Исключение
        СтандартныеФормы.ПоказатьУведомление("Не зарегистрировано", "Не удалось зарегистрировать приложение в системе взаимодействия", ОценкаИнформации.Отрицательная)    
    ;
;

@НаСервере @ДоступноСКлиента
статический метод ЗаписьНастроекСистемыВзаимодействия()
    ИспользованиеОбсуждений.ПолучитьСервис().ЗаписьНастроекСистемыВзаимодействия() 
;

метод ДополнитьАдресПодключения() :Строка
    пер Адрес = Объект.АдресСервераСистемыВзаимодействия
    если не Адрес.Пусто() и Адрес.Найти("?transport") == -1
        Адрес += "?transport=websocket&version=6"
    ;
    возврат Адрес
;

метод КодАктивацииЛокальногоСервера(): Строка
    возврат МенеджерДат.ФорматДатыВремени(ДатаВремя.Сейчас(), "ггггММддЧЧммсс")
;

метод ПанельОсновнаяОтменить(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    Закрыть()
;

метод ПустойИдПриложения(): Булево
    возврат Объект.ИдПриложения == Неопределено
;

метод ПанельОсновнаяУдалить(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    попытка
        знч Ответ = ЗапросДействия.ОткрытьВМодальномОкне(
            ОжидатьЗакрытия = Истина, 
            Текст = "Данные подключения будут очищены. Для полного отключения обсуждений воспользуйтесь настройками кадровой информационной системы. Продолжить?")
        если Ответ == КнопкиМодальныхДиалогов.Да
            
            УдалитьОбъектыПодсистемы()
            ОтменитьРегистрациюПриложения()
            
            Объект.ИдПриложения = Неопределено
            Объект.Абонент = ""
            Объект.ОткрытыйКлючСВ = ""
            Объект.ЗакрытыйКлючСВ = ""
            Объект.АдресСервераСистемыВзаимодействия = ""
            Объект.ОткрытыйКлючПриложения = ""
            Записать()
            ОбновленыНастройкиСистемыВзаимодействия.Оповестить()
            Закрыть()
        ;
    поймать Ошибка: Исключение
        выбросить Ошибка
    ;
;

@НаСервере @ДоступноСКлиента
статический метод ОтменитьРегистрациюПриложения()
    если СистемаВзаимодействия.ПриложениеЗарегистрировано()
        исп КонтекстДоступа.Привилегированный()
        СистемаВзаимодействия.ОтменитьРегистрациюПриложения()
    ;
;

метод ЗарегистрироватьПриложениеСистемыВзаимодействия()
    знч АдресСервераСВ = Объект.АдресСервераСистемыВзаимодействия
    знч АдресПочты: Строка = Объект.Абонент
    знч ПараметрыПриложения: ВызовСервера.ПараметрыПриложенияСистемыВзаимодействия = ВызовСервера.НовоеПриложение(КодАктивации, АдресПочты, АдресСервераСВ)
    Объект.ИдПриложения = ПараметрыПриложения.ИдПриложения
    Объект.ОткрытыйКлючПриложения = ПараметрыПриложения.ОткрытыйКлючПриложения
    Объект.ОткрытыйКлючСВ = ПараметрыПриложения.ОткрытыйКлючСВ
    Объект.ЗакрытыйКлючСВ = ПараметрыПриложения.ЗакрытыйКлючСВ
    СтандартныеФормы.ПоказатьУведомление("Зарегистрировано", "Приложение зарегистрировано в системе взаимодействия", ОценкаИнформации.Положительная)
;

метод ПолучитьКодАктивацииПриНажатии(Источник: Кнопка, Событие: СобытиеПриНажатии)
    если Объект.СпособПодключения == СпособПодключенияСистемыВзаимодействия.СервисДиалог и Объект.АдресСервераСистемыВзаимодействия == ""
        Объект.АдресСервераСистемыВзаимодействия = АдресСервисаДиалог()
    ;   
    знч АдресСервераСВ = Объект.АдресСервераСистемыВзаимодействия
    знч АдресПочты: Строка = Объект.Абонент
    пер Результат = ВызовСервера.ЗапроситьКодАктивации(АдресСервераСВ, АдресПочты)
    если Результат == Истина
        СтандартныеФормы.ПоказатьУведомление("Код активации", "Отправлен запрос на получение кода активации. Код будет направлен на адрес %АдресПочты.", ОценкаИнформации.Положительная)
        ОтправленКодАктивации = Истина
    иначе
        СтандартныеФормы.ПоказатьУведомление("Код активации", "При запросе кода активации произошла ошибка. Попробуйте повторить попытку позже", ОценкаИнформации.Отрицательная)
        ОтправленКодАктивации = Ложь
    ;   
;

метод ПочтаОриентация(): ОриентацияСодержимого
    возврат КлиентскоеУстройство.ШиринаОкнаПриложения < 440 ? ОриентацияСодержимого.Вертикальная : ОриентацияСодержимого.Горизонтальная
;

метод АдресСервераДоступность(): Булево
    возврат Объект.СпособПодключения == СпособПодключенияСистемыВзаимодействия.ЛокальныйСервер   
;

метод ВыборСпособаПодключенияПриИзменении(Источник: РадиоКнопка, Событие: СобытиеПриИзменении<неизвестно>)
    УстановитьАдресПоСпособуПодключения()
;

метод УстановитьАдресПоСпособуПодключения()
    если Объект.СпособПодключения == СпособПодключенияСистемыВзаимодействия.СервисДиалог
        Объект.АдресСервераСистемыВзаимодействия = АдресСервисаДиалог()
    ;   
;    

метод ПанельОсновнаяИспользованиеЗаписатьИЗакрыть(): Булево
    возврат не Компоненты.КодАктивации.ТекстРедактирования.Пусто()
;

метод АдресСервисаДиалог(): Строка
    возврат "wss://1cdialog.com:443?transport=websocket&version=6"
;

@НаСервере @ДоступноСКлиента
статический метод УдалитьОбъектыПодсистемы()
    исп ПривилегированныйРежим = КонтекстДоступа.Привилегированный()
    исп Транзакции.Начать()
    УдалитьПользователейСистемыВзаимодействия()
    УдалитьОбсуждения()
    ВыключитьИспользованиеОбсуждений()
    ПривилегированныйРежим.Закрыть()    
;

@НаСервере
статический метод ВыключитьИспользованиеОбсуждений()
    пер ФункциональныеОпции = новый Обсуждения.ФункциональныеОпции()
    ФункциональныеОпции.Обсуждения = Ложь
    ИспользуемаяФункциональность.ЗаписатьФункциональныеОпции(ФункциональныеОпции)     
;

@НаСервере
статический метод УдалитьПользователейСистемыВзаимодействия()
    пер НаборЗаписей: ПользователиСистемыВзаимодействия.НаборЗаписей
    НаборЗаписей.Фильтр.Установить()
    НаборЗаписей.Записать(Истина)     
;

@НаСервере
статический метод УдалитьОбсуждения()

    знч Запрос = Запрос{
        Выбрать
        Ссылка
        из ДополнительныеДанныеОбсуждений}
    исп Результат = Запрос.Выполнить()
    
    для РезультатСтрока из Результат
        пер ОбсуждениеОбъект = РезультатСтрока.Ссылка.ЗагрузитьОбъект()
        ОбсуждениеОбъект.Удалить()
    ;    
        
;