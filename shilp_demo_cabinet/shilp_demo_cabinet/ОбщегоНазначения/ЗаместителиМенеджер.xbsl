импорт ОбщиеСтандартные
импорт Отсутствия
импорт ФизическиеЛица

@ВПроекте
метод Заместители(Владелец: ОснованиеОтсутствия.Ссылка|ФизическиеЛица.Ссылка, ТипСсылкиЗамесителя: Тип): Заместители
    пер Заместители: Заместители
    Заместители.Владелец = Владелец как неизвестно
    Заместители.Заместители = ЗаместителиПоВладельцу(Владелец, ТипСсылкиЗамесителя)
    возврат Заместители
;

@ВПроекте 
метод Записать(Заместители: Заместители, КонструкторОбъекта: () -> неизвестно): Заместители
    пер СписокУдаленных: Массив<ЗаместителиСтрока> = новый Массив<ЗаместителиСтрока>()
    для ДанныеЗаместителя из Заместители.Заместители
        если ДанныеЗаместителя.Удален
            пер ЗаместительСсылка: неизвестно = ДанныеЗаместителя.Ссылка
            пер ЗаместительОбъект = ЗаместительСсылка.ЗагрузитьОбъект()
            если ЗаместительОбъект != Неопределено
                ЗаместительОбъект.Удалить()
            ;
            СписокУдаленных.Добавить(ДанныеЗаместителя)
        иначе если ДанныеЗаместителя.Ссылка == Неопределено
            пер ЗаместительОбъект: неизвестно = КонструкторОбъекта()
            ЗаписатьЗаместителя(ЗаместительОбъект, ДанныеЗаместителя, Заместители.Владелец)
            ДанныеЗаместителя.Ссылка = ЗаместительОбъект.Ссылка
        иначе если ДанныеЗаместителя.Модифицированность
            пер ЗаместительСсылка: неизвестно = ДанныеЗаместителя.Ссылка
            пер ЗаместительОбъект = ЗаместительСсылка.ЗагрузитьОбъект()
            ЗаписатьЗаместителя(ЗаместительОбъект, ДанныеЗаместителя, Заместители.Владелец)
        ;
    ;
    для ДанныеЗаместителя из СписокУдаленных
        Заместители.Заместители.Удалить(ДанныеЗаместителя)
    ;
    возврат Заместители
;

метод ЗаместителиПоВладельцу(Владелец: ОснованиеОтсутствия.Ссылка|ФизическиеЛица.Ссылка, ТипСсылкиЗамесителя: Тип): Массив<ЗаместителиСтрока>
    пер КоллекцияДанных = новый Массив<ЗаместителиСтрока>()
    пер ИмяТаблицыЗаместителей = МенеджерСущности.ИмяТаблицыПоТипу(ТипСсылкиЗамесителя)
    пер Запрос = новый ПроизвольныйЗапрос(
        "Выбрать
            Ссылка,
            Заместитель,
            Комментарий
        Из
            %ИмяТаблицыЗаместителей
        Где
            Владелец == &Владелец
        Упорядочить По
            Заместитель")
    Запрос.УстановитьПараметр("Владелец", Владелец)
    исп Контекст = КонтекстДоступа.Привилегированный()
    исп Результат = Запрос.Выполнить()
    Контекст.Закрыть()
    для РезультатСтрока из Результат
        пер НовыеДанные = новый ЗаместителиСтрока()
        НовыеДанные.Ссылка = РезультатСтрока.Ссылка
        НовыеДанные.Заместитель = РезультатСтрока.Заместитель
        НовыеДанные.Комментарий = РезультатСтрока.Комментарий
        КоллекцияДанных.Добавить(НовыеДанные)
    ;
    возврат КоллекцияДанных
;

метод ЗаписатьЗаместителя(ЗаместительОбъект: неизвестно, ДанныеЗаместителя: ЗаместителиСтрока, Владелец: неизвестно)
    ЗаместительОбъект.Заместитель = ДанныеЗаместителя.Заместитель
    ЗаместительОбъект.Комментарий = ДанныеЗаместителя.Комментарий
    ЗаместительОбъект.Владелец = Владелец
    ЗаместительОбъект.Записать()
;

@ВПроекте
метод ТекстПредставленияЗаместителей(Владелец: ОснованиеОтсутствия.Ссылка, ТипСсылкиЗамесителя: Тип): Строка
    пер ТекстЗаместителей = ""
    знч Заместители = ЗаместителиПоВладельцу(Владелец, ТипСсылкиЗамесителя)
    если не Заместители.Пусто()
        если Заместители.Размер() == 1
            ТекстЗаместителей = "Во время моего отсутствия меня будет замещать %{ПредставлениеЗаместителя(Заместители[0])}" 
        иначе
            ТекстЗаместителей = "Во время моего отсутствия меня будут замещать:"
            пер РазделительЗаместителей = ""
            для Заместитель из Заместители
                ТекстЗаместителей = "%ТекстЗаместителей%РазделительЗаместителей\н\т- %{ПредставлениеЗаместителя(Заместитель)}"
                если Заместитель == Заместители[0]
                    РазделительЗаместителей = ";"
                ;
            ;
            ТекстЗаместителей = "%ТекстЗаместителей"
        ;
    ;
    возврат ТекстЗаместителей
;

метод ПредставлениеЗаместителя(Заместитель: ЗаместителиСтрока): Строка
    пер ТекстПредставления = Заместитель.Заместитель.Представление()
    если не Заместитель.Комментарий.Пусто()
        ТекстПредставления = ТекстПредставления + " (" + Заместитель.Комментарий + ")"
    ;
    возврат ТекстПредставления
;