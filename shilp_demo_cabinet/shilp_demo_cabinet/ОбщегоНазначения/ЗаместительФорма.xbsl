импорт ИнтерфейсныеКомпонентыСтандартные
импорт ЛичныеКабинетыПользователей
импорт Компания
импорт ФизическиеЛица

@ВПодсистеме
метод Инициализировать()
    УстановитьДанныеЗаместителя()
;

метод УстановитьДанныеЗаместителя()
    СкопироватьДанныеЗаместителя(РедактируемыеДанные, ИсходныеДанные)
;

метод ЗаместительПриИзменении(Источник: ПолеВвода<ФизическиеЛица.Ссылка?>, Событие: СобытиеПриИзменении<ФизическиеЛица.Ссылка?>)
    ПроверитьЗаполнение()
;

метод ПанельОсновнаяЗаписатьИЗакрыть(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    если не ПроверитьЗаполнение()
        возврат
    ;
    СкопироватьДанныеЗаместителя(ИсходныеДанные, РедактируемыеДанные)
    ИсходныеДанные.Модифицированность = Истина
    Закрыть(ИсходныеДанные)
;

метод ПанельОсновнаяСохранитьЧерновик(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    Закрыть()
;

метод СкопироватьДанныеЗаместителя(ЦелевыеДанныеЗаместителя: ЗаместителиСтрока, ИсходныеДанныеЗаместителя: ЗаместителиСтрока)
    ЦелевыеДанныеЗаместителя.Ссылка = ИсходныеДанныеЗаместителя.Ссылка
    ЦелевыеДанныеЗаместителя.Заместитель = ИсходныеДанныеЗаместителя.Заместитель
    ЦелевыеДанныеЗаместителя.Комментарий = ИсходныеДанныеЗаместителя.Комментарий
    ЦелевыеДанныеЗаместителя.Модифицированность = ИсходныеДанныеЗаместителя.Модифицированность
;

метод ЗаместительФормаВысота(): Число
    возврат 45 * Метрики.РАЗМЕР_ПОЛУИНТЕРВАЛА
;

метод ПанельОсновнаяИспользованиеЗаписатьИЗакрыть(): Булево
    возврат не ТолькоЧтение
;

метод ПроверитьЗаполнение(): Булево
    пер РезультатПроверки = Истина
    ЗаместительСообщениеОбОшибкеВвода = ""
    если Компоненты.Заместитель.Значение == Неопределено
        РезультатПроверки = Ложь
        ЗаместительСообщениеОбОшибкеВвода = "Не указан заместитель"
    иначе если Компоненты.Заместитель.Значение == ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо
            РезультатПроверки = Ложь
            ЗаместительСообщениеОбОшибкеВвода = "Нельзя выбрать себя своим заместителем"
    иначе
        для ДанныеЗаместителя из ТаблицаЗаместители.Заместители
            если Компоненты.Заместитель.Значение == ДанныеЗаместителя.Заместитель
                и ИсходныеДанные != ДанныеЗаместителя
                
                РезультатПроверки = Ложь
                ЗаместительСообщениеОбОшибкеВвода = "Сотрудник уже был выбран ранее"
                прервать
            ;
        ;
    ;
    возврат РезультатПроверки
;

метод ЗаместительРезультатПроверкиДанных(): РезультатПроверкиДанных
    возврат ЗаместительСообщениеОбОшибкеВвода.Пусто() ? РезультатПроверкиДанных.Отсутствует : РезультатПроверкиДанных.Ошибка    
;

метод ЗаместительНастройкиВводаСсылок(): НастройкиВводаСсылок
    возврат Компания.НастройкиВводаВсеФизическиеЛицаСотрудникиКроме(
        ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо)
;