импорт ВебApi
импорт Анкетирование
импорт Анкетирование::Обмен
импорт ОбщиеСтандартные

@ВПроекте
метод ВнешняяСсылка(Идентификатор: Строка): ВебApiСервер.ВнешняяСсылка
    возврат новый ВебApiСервер.ВнешняяСсылка(Идентификатор, (Ууид) -> Тесты.ПолучитьСсылку(Ууид))
;

@ВПроекте
структура Тест_2_0
    @JsonСвойство("ID")
    обз знч Ид: Строка
    @JsonСвойство("name")
    обз знч Наименование: Строка
    @JsonСвойство("questionnaireTemplate")
    обз знч ШаблонАнкеты: Строка
    @JsonСвойство("timeControlType")
    обз знч КонтрольВремени: ВидыКонтроляВремениПриТестированииJson
    @JsonСвойство("testType")
    обз знч ТипТеста: ТипыТестовJson
    @JsonСвойство("answerResults")
    пер ОценкиОтветов: Массив<ОценкаОтветаDto.ОценкаОтвета_2_0>?
    @JsonСвойство("finalGrades")
    пер ИтоговыеОценки: Массив<ИтоговаяОценкаDto.ИтоговаяОценка_2_0>?
    @JsonСвойство("maximumPoints")
    пер КоличествоБаллов: Число?
;

перечисление ВидыКонтроляВремениПриТестированииJson
    noControl,
    testTimeLimit,
    answerTimeLimit,
    testTimeTracking,
    answerTimeTracking    
;

перечисление ТипыТестовJson
    onlyClosedQuestions,
    openedAndClosedQuestions    
;

конст СООТВЕТСТВИЕ_ВИДЫ_КОНТРОЛЯ_ВРЕМЕНИ_ПРИ_ТЕСТИРОВАНИИ_JSON = {
    ВидыКонтроляВремениПриТестированииJson.noControl: ВидыКонтроляВремениПриТестировании.НеВыполняется,
    ВидыКонтроляВремениПриТестированииJson.testTimeLimit: ВидыКонтроляВремениПриТестировании.ОграничениеВремениНаТест,
    ВидыКонтроляВремениПриТестированииJson.answerTimeLimit: ВидыКонтроляВремениПриТестировании.ОграничениеВремениНаОтветы,
    ВидыКонтроляВремениПриТестированииJson.testTimeTracking: ВидыКонтроляВремениПриТестировании.УчетВремениНаТест,
    ВидыКонтроляВремениПриТестированииJson.answerTimeTracking: ВидыКонтроляВремениПриТестировании.УчетВремениНаОтветы    
}

конст СООТВЕТСТВИЕ_ТИПЫ_ТЕСТОВ_JSON = {
    ТипыТестовJson.onlyClosedQuestions: ТипыТестов.ТолькоЗакрытыеВопросы,
    ТипыТестовJson.openedAndClosedQuestions: ТипыТестов.ЗакрытыеИОткрытыеВопросы 
}

метод ВидыКонтроляВремениПриТестированииВJson(ВидКонтроляВремениПриТестировании: ВидыКонтроляВремениПриТестировании): ВидыКонтроляВремениПриТестированииJson
    для КлючИЗначение из СООТВЕТСТВИЕ_ВИДЫ_КОНТРОЛЯ_ВРЕМЕНИ_ПРИ_ТЕСТИРОВАНИИ_JSON
        если КлючИЗначение.Значение == ВидКонтроляВремениПриТестировании
            возврат КлючИЗначение.Ключ
        ;     
    ;       
; 

метод ВидыКонтроляВремениПриТестированииИзJson(ВидКонтроляВремениПриТестированииJson: ВидыКонтроляВремениПриТестированииJson): ВидыКонтроляВремениПриТестировании
    возврат СООТВЕТСТВИЕ_ВИДЫ_КОНТРОЛЯ_ВРЕМЕНИ_ПРИ_ТЕСТИРОВАНИИ_JSON[ВидКонтроляВремениПриТестированииJson]    
;

метод ТипыТестовВJson(ТипТеста: ТипыТестов): ТипыТестовJson
    для КлючИЗначение из СООТВЕТСТВИЕ_ТИПЫ_ТЕСТОВ_JSON
        если КлючИЗначение.Значение == ТипТеста
            возврат КлючИЗначение.Ключ
        ;     
    ;    
;

метод ТипыТестовИзJson(ТипТестаJson: ТипыТестовJson): ТипыТестов
    возврат СООТВЕТСТВИЕ_ТИПЫ_ТЕСТОВ_JSON[ТипТестаJson]    
;

@ВПодсистеме
метод ТипДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    
    если ВерсияФорматаОбмена == Неопределено или ВерсияФорматаОбмена < Версия{2.0}
        выбросить новый ИсключениеВыполнения("Неверный формат")
    ;
    
    если ВерсияФорматаОбмена >= Версия{2.0}
        возврат Тип<Тест_2_0>
    ;
;

@ВПодсистеме
метод ЗагрузитьОбъектИзJson(СериализованныйТест: Тест_2_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)

    исп Транзакции.Начать()
    
    знч Тест = Сервисы.ПрочитатьОбъект(СериализованныйТест.Ид, &Тесты.Объект.новый(Ууид), Тип<Тесты.Ссылка>) как Тесты.Объект 
    Тест.Наименование = СериализованныйТест.Наименование
    Тест.ШаблонАнкеты = Сервисы.ПолучитьСсылку(ШаблоныАнкетDto.ВнешняяСсылка(СериализованныйТест.ШаблонАнкеты)) как ШаблоныАнкет.Ссылка
    Тест.КонтрольВремени = ВидыКонтроляВремениПриТестированииИзJson(СериализованныйТест.КонтрольВремени)
    Тест.ТипТеста = ТипыТестовИзJson(СериализованныйТест.ТипТеста) 
    Тест.ОценкиОтветов.Очистить()
    если СериализованныйТест.ОценкиОтветов != Неопределено
        для ОценкаОтветаJson из СериализованныйТест.ОценкиОтветов
            знч ОценкаОтвета = ОценкаОтветаDto.ЗаполнитьПоJson(ОценкаОтветаJson, Сервисы)
            Тест.ОценкиОтветов.Добавить(ОценкаОтвета)     
        ;        
    ;
    Тест.ИтоговыеОценки.Очистить()
    если СериализованныйТест.ИтоговыеОценки != Неопределено
        для ИтоговаяОценкаJson из СериализованныйТест.ИтоговыеОценки
            знч ИтоговаяОценка = ИтоговаяОценкаDto.ЗаполнитьПоJson(ИтоговаяОценкаJson)
            Тест.ИтоговыеОценки.Добавить(ИтоговаяОценка)    
        ;    
    ;
    Тест.КоличествоБаллов = СериализованныйТест.КоличествоБаллов ?? 0
    
    Сервисы.ЗаписатьОбъект(новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(Тест, СериализованныйТест.Ид), Сервисы.ИнструментыМенеджераОбъекта)
;

@ВПодсистеме
метод ГруппаИзмененийВJson(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): ЧитаемоеСоответствие<Строка, Массив<Объект?>>
    возврат {"tests": ДанныеТестовВJson(Ссылки, Сервисы)}
;

метод ДанныеТестовВJson(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): Массив<Объект?>
    знч Данные: Массив<Объект?>
    для КлючИЗначение из ДанныеТестов(Ссылки)
        Данные.Добавить(ДанныеТестаВJson_V2_0(КлючИЗначение.Значение, Сервисы))
    ;
    возврат Данные
;

метод ДанныеТестов(ТестыСсылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>): ЧитаемоеСоответствие<Тесты.Ссылка, ЧитаемоеСоответствие<Строка, Объект?>>

    знч ДанныеТестов: Соответствие<Тесты.Ссылка, ЧитаемоеСоответствие<Строка, Объект?>>
    если ТестыСсылки.Пусто()
        возврат ДанныеТестов
    ;
    знч ДанныеОценкиОтветов = МенеджерСущности.ЗначениеМножественногоРеквизитаОбъектов(ТестыСсылки, "ОценкиОтветов")
    знч ДанныеИтоговыеОценки = МенеджерСущности.ЗначениеМножественногоРеквизитаОбъектов(ТестыСсылки, "ИтоговыеОценки")
    
    знч Запрос = Запрос{
        Выбрать
            Ссылка,
            Наименование,
            ШаблонАнкеты,
            КонтрольВремени,
            ТипТеста,
            КоличествоБаллов
        Из
            Тесты
        Где
            Ссылка В (%ТестыСсылки)
    }
    исп Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        знч ПоляТеста: Соответствие<Строка, Объект?>
        ПоляТеста.ВставитьВсе(МенеджерЗапросов.СтрокаРезультатаЗапросаВСоответствие(СтрокаРезультата, Результат))
        ПоляТеста.Вставить("ОценкиОтветов", ДанныеОценкиОтветов.ПолучитьИлиУмолчание(СтрокаРезультата.Ссылка, <Объект>[]))
        ПоляТеста.Вставить("ИтоговыеОценки", ДанныеИтоговыеОценки.ПолучитьИлиУмолчание(СтрокаРезультата.Ссылка, <Объект>[]))
        ДанныеТестов.Вставить(
            СтрокаРезультата.Ссылка,
            ПоляТеста
        )    
    ;    
    
    возврат ДанныеТестов    
;

метод ДанныеТестаВJson_V2_0(ДанныеОбъекта: ЧитаемоеСоответствие<Строка, Объект?>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): Тест_2_0
    
    пер СериализованныйТест = новый Тест_2_0(
        (ДанныеОбъекта["Ссылка"] как Тесты.Ссылка).Ид.ВСтроку(),
        ДанныеОбъекта["Наименование"] как Строка,
        Сервисы.ПолучитьИдентификатор(ДанныеОбъекта["ШаблонАнкеты"] как ШаблоныАнкет.Ссылка),
        ВидыКонтроляВремениПриТестированииВJson(ДанныеОбъекта["КонтрольВремени"] как ВидыКонтроляВремениПриТестировании),
        ТипыТестовВJson(ДанныеОбъекта["ТипТеста"] как ТипыТестов)    
    )
    знч ОценкиОтветов: Массив<ОценкаОтветаDto.ОценкаОтвета_2_0>
    для ОценкаОтвета из (ДанныеОбъекта["ОценкиОтветов"] как ЧитаемыйМассив<Объект>)
        ОценкиОтветов.Добавить(ОценкаОтветаDto.ПолучитьJson_V2_0(ОценкаОтвета как ОценкаОтвета))
    ;
    СериализованныйТест.ОценкиОтветов = ОценкиОтветов
    знч ИтоговыеОценки: Массив<ИтоговаяОценкаDto.ИтоговаяОценка_2_0>
    для ИтоговаяОценка из (ДанныеОбъекта["ИтоговыеОценки"] как ЧитаемыйМассив<Объект>)
        ИтоговыеОценки.Добавить(ИтоговаяОценкаDto.ПолучитьJson_V2_0(ИтоговаяОценка как ИтоговаяОценка)) 
    ;   
    СериализованныйТест.ИтоговыеОценки = ИтоговыеОценки
    СериализованныйТест.КоличествоБаллов = ДанныеОбъекта["КоличествоБаллов"] как Число?
    
    возврат СериализованныйТест         
;

@ВПодсистеме
метод ТипОбъектаJson(): Строка
    возврат "test"    
;

// Конец JSON