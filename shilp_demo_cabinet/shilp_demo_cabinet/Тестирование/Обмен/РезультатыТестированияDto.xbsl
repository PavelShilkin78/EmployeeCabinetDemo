импорт Анкетирование
импорт Анкетирование::Обмен
импорт ОбщиеСтандартные
импорт ВебApi

@ВПодсистеме
метод ТипДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    
    если ВерсияФорматаОбмена == Неопределено или ВерсияФорматаОбмена < Версия{2.0}
        выбросить новый ИсключениеВыполнения("Неверный формат")
    ;
    
    если ВерсияФорматаОбмена >= Версия{2.0}
        возврат Тип<РезультатТестирования_2_0>
    ;
;

@ВПроекте
структура РезультатТестирования_2_0
    @JsonСвойство("ID")
    обз знч Ид: Строка
    @JsonСвойство("resultPresentation")
    обз знч ПредставлениеРезультата: Строка
    @JsonСвойство("test")
    обз знч Тест: Строка
    @JsonСвойство("testStatus")
    обз знч Статус: СостоянияТестированияJson
    @JsonСвойство("questionnaire")
    обз знч Анкета: Строка
    @JsonСвойство("pointsScored")
    пер КоличествоБаллов: Число
    @JsonСвойство("finalGrade")
    пер ИтоговаяОценка: ИтоговаяОценкаDto.ИтоговаяОценка_2_0?
;

перечисление СостоянияТестированияJson
    newTest,
    inProgress,
    finished
;

конст СОООТВЕТСТВИЕ_СОСТОЯНИЯ_ТЕСТИРОВАНИЯ_JSON = {
    СостоянияТестированияJson.newTest: СостоянияТестирования.НеНачато,
    СостоянияТестированияJson.inProgress: СостоянияТестирования.Выполняется,
    СостоянияТестированияJson.finished: СостоянияТестирования.Завершено    
}

метод СостоянияТестированияВJson(СостояниеТестирования: СостоянияТестирования): СостоянияТестированияJson
    для КлючИЗначение из СОООТВЕТСТВИЕ_СОСТОЯНИЯ_ТЕСТИРОВАНИЯ_JSON
        если КлючИЗначение.Значение == СостояниеТестирования
            возврат КлючИЗначение.Ключ
        ;     
    ;     
;

@ВПодсистеме
метод ЗагрузитьОбъектИзJson(СериализованныйРезультатТестирования: РезультатТестирования_2_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)

    исп Транзакции.Начать()
    
    знч РезультатТестирования = Сервисы.ПрочитатьОбъект(СериализованныйРезультатТестирования.Ид, &РезультатыТестирования.Объект.новый(Ууид), Тип<РезультатыТестирования.Ссылка>) как РезультатыТестирования.Объект 
    РезультатТестирования.ПредставлениеРезультата = СериализованныйРезультатТестирования.ПредставлениеРезультата
    РезультатТестирования.Тест = Сервисы.ПолучитьСсылку(ТестыDto.ВнешняяСсылка(СериализованныйРезультатТестирования.Тест)) как Тесты.Ссылка
    пер Статус = СостоянияТестированияИзJson(СериализованныйРезультатТестирования.Статус)
    если Статус == СостоянияТестирования.НеНачато
        РезультатТестирования.Статус = СостоянияТестирования.Выполняется
    иначе
        РезультатТестирования.Статус = Статус
    ;
    
    РезультатТестирования.Анкета = Сервисы.ПолучитьСсылку(АнкетыDto.ВнешняяСсылка(СериализованныйРезультатТестирования.Анкета)) как Анкеты.Ссылка
    РезультатТестирования.КоличествоБаллов = СериализованныйРезультатТестирования.КоличествоБаллов
    если СериализованныйРезультатТестирования.ИтоговаяОценка != Неопределено
        знч ИтоговаяОценка = ИтоговаяОценкаDto.ЗаполнитьПоJson(СериализованныйРезультатТестирования.ИтоговаяОценка)
        РезультатТестирования.ИтоговаяОценка = ИтоговаяОценка
    ;
    
    Сервисы.ЗаписатьОбъект(новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(РезультатТестирования, СериализованныйРезультатТестирования.Ид), Сервисы.ИнструментыМенеджераОбъекта)
;

метод СостоянияТестированияИзJson(СостояниеТестированияJson: СостоянияТестированияJson): СостоянияТестирования
    возврат СОООТВЕТСТВИЕ_СОСТОЯНИЯ_ТЕСТИРОВАНИЯ_JSON[СостояниеТестированияJson]    
;

@ВПодсистеме
метод ГруппаИзмененийВJson(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): ЧитаемоеСоответствие<Строка, Массив<Объект?>>
    возврат {"testResults": ДанныеРезультатовТестированияВJson(Ссылки, Сервисы)}
;

метод ДанныеРезультатовТестированияВJson(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): Массив<Объект?>
    знч Данные: Массив<Объект?>
    для КлючИЗначение из ДанныеРезультатовТестирования(Ссылки)
        Данные.Добавить(ДанныеРезультатаТестированияВJson_V2_0(КлючИЗначение.Значение, Сервисы))
    ;
    возврат Данные
;

метод ДанныеРезультатовТестирования(РезультатыСсылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>): ЧитаемоеСоответствие<РезультатыТестирования.Ссылка, ЧитаемоеСоответствие<Строка, Объект?>>

    знч ДанныеРезультатовТестирования: Соответствие<РезультатыТестирования.Ссылка, ЧитаемоеСоответствие<Строка, Объект?>>
    
    знч Запрос = Запрос{
        Выбрать
            Ссылка,
            ПредставлениеРезультата,
            Тест,
            Статус,
            Анкета,
            КоличествоБаллов,
            ИтоговаяОценка
        Из
            РезультатыТестирования
        Где
            Ссылка В (%РезультатыСсылки)
    }
    исп Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        ДанныеРезультатовТестирования.Вставить(
            СтрокаРезультата.Ссылка,
            МенеджерЗапросов.СтрокаРезультатаЗапросаВСоответствие(СтрокаРезультата, Результат)
        )    
    ;    
    
    возврат ДанныеРезультатовТестирования    
;

метод ДанныеРезультатаТестированияВJson_V2_0(ДанныеОбъекта: ЧитаемоеСоответствие<Строка, Объект?>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): РезультатТестирования_2_0
    
    пер СериализованныйРезультатТестирования = новый РезультатТестирования_2_0(
        (ДанныеОбъекта["Ссылка"] как РезультатыТестирования.Ссылка).Ид.ВСтроку(),
        ДанныеОбъекта["ПредставлениеРезультата"] как Строка,
        Сервисы.ПолучитьИдентификатор(ДанныеОбъекта["Тест"] как Тесты.Ссылка),
        СостоянияТестированияВJson(ДанныеОбъекта["Статус"] как СостоянияТестирования),
        Сервисы.ПолучитьИдентификатор(ДанныеОбъекта["Анкета"] как Анкеты.Ссылка)    
    )
    СериализованныйРезультатТестирования.КоличествоБаллов = ДанныеОбъекта["КоличествоБаллов"] как Число
    СериализованныйРезультатТестирования.ИтоговаяОценка = ИтоговаяОценкаDto.ПолучитьJson_V2_0(ДанныеОбъекта["ИтоговаяОценка"] как ИтоговаяОценка)
    
    возврат СериализованныйРезультатТестирования        
;

@ВПодсистеме
метод ТипОбъектаJson(): Строка
    возврат "testResults"
;

// Конец JSON