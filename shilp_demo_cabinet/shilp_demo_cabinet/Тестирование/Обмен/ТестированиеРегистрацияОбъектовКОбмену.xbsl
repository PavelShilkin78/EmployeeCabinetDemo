импорт ОбменДанными
импорт Анкетирование::Обмен
импорт ОбщиеСтандартные

@Подписка(Событие{РезультатыТестирования.Объект.ПослеЗаписи})
метод РезультатыТестированияПослеЗаписи(РезультатыТестирования: РезультатыТестирования.Данные, До: РезультатыТестирования.Данные, ПараметрыЗаписи: РезультатыТестирования.ПараметрыЗаписи)
    исп КонтекстДоступа.Привилегированный()
    
    если РезультатыТестирования.Статус == СостоянияТестирования.Завершено и РезультатыТестирования.Статус != До.Статус
        Тестирование.ОповеститьПодсистемыОЗавершенииТеста(РезультатыТестирования.Ссылка)
    ;
    
    знч СервисРегистрацииИзменений = ТестированиеРегистрацияИзменений.ПолучитьСервис()
    
    если СервисРегистрацииИзменений.РезультатыТестированияТребуетсяРегистрация(РезультатыТестирования.Статус) 
        ОбменДанными.ЗарегистрироватьОтправляемыйДокумент(РезультатыТестирования.Ссылка, Истина)
        РегистрацияИзменений.ЗарегистрироватьИзменение(РезультатыТестирования.Ссылка, Неопределено)
        если СервисРегистрацииИзменений.ТестыТребуетсяРегистрация()
            ОбменДанными.ЗарегистрироватьОтправляемыйДокумент(РезультатыТестирования.Тест, Истина)
            РегистрацияИзменений.ЗарегистрироватьИзменение(РезультатыТестирования.Тест, Неопределено)
        ;
    ;
;

@ВПроекте
метод ЗарегистрироватьТест(Тест: Тесты.Ссылка)
    ОбменДанными.ЗарегистрироватьОтправляемыйДокумент(Тест, Истина)
    РегистрацияИзменений.ЗарегистрироватьИзменение(Тест, Неопределено)    
    АнкетированиеРегистрацияОбъектовКОбмену.ЗарегистрироватьШаблон(МенеджерСущности.ЗначениеРеквизитаОбъекта(Тест, "ШаблонАнкеты"))
;