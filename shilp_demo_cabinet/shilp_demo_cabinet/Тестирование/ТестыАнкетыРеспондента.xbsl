импорт ИнтерфейсныеКомпонентыСтандартные
импорт Анкетирование
импорт ОбщиеСтандартные

@Обработчик
метод ПослеСоздания()
    Инициализировать()
;

метод СостояниеЦветФона(ДанныеЭлемента: СтрокаДинамическогоСписка): Цвет | Авто
    знч Статус = ДанныеЭлемента.Данные["СтатусАнкеты"] как СтатусыАнкет
    возврат БиблиотекаЦветов.Цвет(Анкетирование.ВидЦветаПоСостояниюАнкеты(Статус))
;

метод СостояниеЗаголовок(ДанныеЭлемента: СтрокаДинамическогоСписка):Строка
    если ДанныеЭлемента.Данные["РезультатТестирования"] == Неопределено
        возврат ДанныеЭлемента.Данные["СтатусАнкеты"].Представление()
    иначе
        возврат ДанныеЭлемента.Данные["СтатусТеста"].Представление()
    ;
;

метод ТипАнкетыИзображение(ДанныеЭлемента: СтрокаДинамическогоСписка): ДвоичныйОбъект.Ссылка?
    возврат ДанныеЭлемента.Данные["РезультатТестирования"] == Неопределено ? Ресурс{БукваА.svg}.Ссылка : Ресурс{БукваТ.svg}.Ссылка
;

метод ТипАнкетыЦвет(ДанныеЭлемента: СтрокаДинамическогоСписка): Цвет | Авто
    возврат ДанныеЭлемента.Данные["РезультатТестирования"] == Неопределено ? БиблиотекаЦветов.Цвет(БиблиотекаЦветов.ВидыЦвета.Зеленый, 0.4) : БиблиотекаЦветов.Цвет(БиблиотекаЦветов.ВидыЦвета.Синий, 0.4)
;

метод КоличествоБалловПредставление(ДанныеЭлемента: СтрокаДинамическогоСписка): Строка
    возврат ДанныеЭлемента.Данные["РезультатТестирования"] == Неопределено ? "-" : ДанныеЭлемента.Данные["КоличествоБаллов"].ВСтроку()
;

метод ТипАнкетыПодсказка(ДанныеЭлемента: СтрокаДинамическогоСписка): Строка
    возврат ДанныеЭлемента.Данные["РезультатТестирования"] == Неопределено ? "Анкета" : "Тест"
;

метод ДатаРедактированияПредставление(ДанныеСтроки: СтрокаДинамическогоСписка): Строка
    пер ДатаРедактирования = ДанныеСтроки.Данные["ДатаРедактирования"] как Момент?
    
    возврат ДатаРедактирования == Неопределено ? "" : ДатаРедактирования!.ВДатаВремя(МенеджерДат.ЧасовойПоясТекущий()).Представление("дд.ММ.гггг ЧЧ:мм")   
;

метод ДобавитьОбработчик(Источник: Команда)
    пер РезультатЗакрытия = ВыборТеста.ОткрытьВМодальномОкне(Респондент = Респондент)
    если РезультатЗакрытия != Неопределено
        Инициализировать()
    ;
;

метод ОценкаПредставление(ДанныеЭлемента: СтрокаДинамическогоСписка): Строка
    возврат ДанныеЭлемента.Данные["ИтоговаяОценка"] == Неопределено ? "-" : (ДанныеЭлемента.Данные["ИтоговаяОценка"] как ИтоговаяОценка).Наименование
;

метод АнкетыТестыПриНажатииСтроки(Источник: Список<ДинамическийСписок>, Событие: СобытиеСДанными<СтрокаСписка<СтрокаДинамическогоСписка>>)
    пер ДанныеСтроки = Событие.Данные.ДанныеСтроки
    если ДанныеСтроки.Данные["РезультатТестирования"] == Неопределено
        АнкетаФорма.ОткрытьВМодальномОкне(КлючОбъекта = ДанныеСтроки.Данные["Анкета"] как Анкеты.Ссылка)
    иначе
        РезультатыТестированияФормаОбъекта.ОткрытьВМодальномОкне(КлючОбъекта = ДанныеСтроки.Данные["РезультатТестирования"] как РезультатыТестирования.Ссылка)
    ;
;

@ВПроекте
@Реализация
метод Инициализировать()
    знч ИсточникДанных = Компоненты.АнкетыТесты.Источник
    ЕстьДанныеДляОтображения = МенеджерСущности.ЕстьЭлементыСущностиСФильтром(Тип<Анкеты>, ИсточникДанных.Фильтр)
    Компоненты.АнкетыТесты.Обновить()
;
