импорт ОбщиеСтандартные


@ВПроекте
@НаКлиенте @НаСервере
структура ТокенДоступаПользователя
    обз знч Ид: Строка
    знч Секрет: Строка
    знч Описание: Строка
    @ИменованныеПараметры
    конструктор
;

@ВПроекте
@НаСервере
метод ПолныеПраваНаСправочник(): ЧитаемыйМассив<Сущность.Право>
    возврат [Сущность.Право.Чтение, Сущность.Право.Изменение, Сущность.Право.Создание, Сущность.Право.Удаление]
;

@ВПроекте
@НаСервере
метод ВсеИзмененияСправочника(): ЧитаемыйМассив<Сущность.Право>
    возврат [Сущность.Право.Изменение, Сущность.Право.Создание, Сущность.Право.Удаление]
;

@ВПроекте
@НаСервере
метод ПраваНаСправочникКромеУдаления(): Массив<Сущность.Право>
    возврат [Сущность.Право.Чтение, Сущность.Право.Изменение, Сущность.Право.Создание]
;

@ВПроекте
@НаСервере
метод ПраваНаСправочникТолькоРедактирование(): Массив<Сущность.Право>
    возврат [Сущность.Право.Изменение, Сущность.Право.Создание]
;

@ВПроекте
@НаСервере
метод ПолныеПраваНаРегистрСведений(): ЧитаемыйМассив<Сущность.Право>
    возврат [Сущность.Право.Чтение, Сущность.Право.Изменение]
;

@ВПроекте
@НаСервере
метод ПраваНаРегистрТолькоРедактирование(): Массив<Сущность.Право>
    возврат [Сущность.Право.Изменение]
;

/**
Описание: Запускает пересчет всех ключей доступа всех пользователей. 
*/
@ВПроекте
@НаСервере
метод НачатьПересчетКлючейДоступа()
    МенеджерЗаданий.ПроверитьАвтозапускЗапланированныхЗаданийВключен()
    ЗапланированныеЗадания.Создать(&МенеджерПравДоступа.ПересчитатьКлючиДоступаВсехПользователей)
        .Настроить(Ключ = "ПересчетКлючейДоступа")
        .Запланировать()
;

@ВПроекте
@НаСервере
метод ПересчитатьКлючиДоступаВсехПользователей()
    Пользователи.ПересчитатьКлючиДоступа()
;

/**
Описание: Запускает пересчет дескрипторов доступа всех объектов приложения.
*/
@ВПроекте
@НаСервере
метод НачатьПересчетДескрипторовДоступа()
    МенеджерЗаданий.ПроверитьАвтозапускЗапланированныхЗаданийВключен()
    ЗапланированныеЗадания.Создать(&МенеджерПравДоступа.ПересчитатьРазрешенияДоступа)
        .Настроить(Ключ = "ПересчетДескрипторовДоступа")
        .Запланировать()
;

@ВПроекте
@НаСервере
метод ПересчитатьРазрешенияДоступа(ПересчитыватьДляТаблиц: Булево = Истина, ПересчитыватьДляОбъектов: Булево = Истина)
    если не ПересчитыватьДляТаблиц и не ПересчитыватьДляОбъектов
        возврат
    ;
    для Справочник из Справочники
        если ПересчитыватьДляТаблиц
            Справочник.ПересчитатьРазрешенияДоступа()
        ;
        если ПересчитыватьДляОбъектов
            Справочник.ПересчитатьРазрешенияДоступаДляОбъектов()
        ;
    ;
    для Документ из Документы
        если ПересчитыватьДляТаблиц
            Документ.ПересчитатьРазрешенияДоступа()
        ;
        если ПересчитыватьДляОбъектов
            Документ.ПересчитатьРазрешенияДоступаДляОбъектов()
        ;
    ;
    для РегистрСведений из РегистрыСведений
        если ПересчитыватьДляТаблиц
            РегистрСведений.ПересчитатьРазрешенияДоступа()
        ;
        если ПересчитыватьДляОбъектов
            РегистрСведений.ПересчитатьРазрешенияДоступаДляОбъектов()
        ;
    ;
    если ПересчитыватьДляТаблиц
        для HttpСервис из HttpСервисы
            HttpСервис.ПересчитатьРазрешенияДоступа()
        ;
    ;
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ЭтоАдминистраторПриложения(): Булево
    возврат Пользователи.ТекущийПользователь?.ЗагрузитьОбъект()?.Администратор ?? Ложь
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ПроверитьПраваАдминистратора()
    если Пользователи.ТекущийИдАутентификации == Безопасность.ВстроенныеИдАутентификации.Система
        // это запуск из запланированного задания, проверка должна была быть выполнена перед планированием.
        возврат
    ;
    если не ЭтоАдминистратор()
        выбросить новый ИсключениеВыполнения("Операция выполняется только администратором")
    ;
;

/**
Описание: Определяет наличие прав админстратора приложения или администратора абонента у текущего пользователя. 
 */
@ВПроекте
@НаСервере @ДоступноСКлиента
метод ЭтоАдминистратор(): Булево
    знч Пользователь = Пользователи.ТекущийПользователь?.ЗагрузитьОбъект()
    если Пользователь == Неопределено
        возврат Ложь
    иначе если Пользователь.Администратор
        возврат Истина
    иначе
        возврат ПроверкаПравАдминистратора.ПолучитьСервис()?.ЭтоАдминистраторАбонента(Пользователь) ?? Ложь
    ;
;

/**
Описание: Определяет наличие прав администратора абонента у текущего пользователя. 
 */
@ВПроекте
@НаСервере 
метод ЭтоАдминистраторАбонента(): Булево
    знч Пользователь = Пользователи.ТекущийПользователь?.ЗагрузитьОбъект()
    если Пользователь == Неопределено
        возврат Ложь
    иначе
        возврат ПроверкаПравАдминистратора.ПолучитьСервис()?.ЭтоАдминистраторАбонента(Пользователь) ?? Ложь
    ;
;

@ВПроекте
@НаСервере
метод ВыполнитьПакетноеОбновлениеПравДоступа()
    ПересчитатьКлючиДоступаВсехПользователей()
    ПересчитатьРазрешенияДоступа()    
;