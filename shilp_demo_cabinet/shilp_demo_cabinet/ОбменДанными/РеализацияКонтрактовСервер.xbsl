импорт СтандартноеПриложение
импорт ВебApi

// Контракт ПодсистемаПриложения

@ВПроекте
@Реализация
метод ОписаниеПодсистемы(): СтандартноеПриложение.ОписаниеПодсистемы
    возврат новый СтандартноеПриложение.ОписаниеПодсистемы(ОбменДанными.ИД_ПОДСИСТЕМЫ)
;

// Конец ПодсистемаПриложения

// Контракт ОбновляемаяПодсистема

@ВПроекте
@Реализация
метод ОбработчикиЗаполнения(): Массив<СтандартноеПриложение.ОписаниеОбработчикаЗаполнения>
    возврат [новый СтандартноеПриложение.ОписаниеОбработчикаЗаполнения(
                    ОбменДанными.ИД_ПОДСИСТЕМЫ, 
                    "ТипыDtoОбъектовЗаполнитьПредопределенныеДанные", 
                    &ТипыDtoОбъектов.ЗаполнитьПредопределенныеДанные()
                )
            ]
;

@ВПроекте
@Реализация
метод ОбработчикиОбновления(): Массив<СтандартноеПриложение.ОписаниеОбработчикаОбновления>
    пер Обработчики: Массив<СтандартноеПриложение.ОписаниеОбработчикаОбновления>
    пер Сервис = ОбменДаннымиПоставщикВерсииПриложения.ПолучитьСервис()
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
                ОбменДанными.ИД_ПОДСИСТЕМЫ, 
                "ТипыDtoОбъектовЗаполнитьПредопределенныеДанные", 
                &ТипыDtoОбъектов.ЗаполнитьПредопределенныеДанные(), 
                Сервис.ТипыDtoОбъектовЗаполнитьПредопределенныеДанные()))
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
                ОбменДанными.ИД_ПОДСИСТЕМЫ, 
                "ИнформационныеСистемыЗаполнениеПолучаемыхРесурсов", 
                &ИнформационныеСистемы.ЗаполнениеПолучаемыхРесурсов(), 
                Сервис.ИнформационныеСистемыЗаполнениеПолучаемыхРесурсов()))
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
                ОбменДанными.ИД_ПОДСИСТЕМЫ, 
                "СоответствиеИдентификаторовОбъектовЗаполненияЛокальныхИдентификаторов", 
                &СоответствиеИдентификаторовОбъектов.ОбработчикЗаполненияЛокальныхИдентификаторов(), 
                Сервис.СоответствиеИдентификаторовОбъектовЗаполненияЛокальныхИдентификаторов()))
    возврат Обработчики
;

// Конец ОбновляемаяПодсистема

//Контракт ОбменДаннымиСервис
@ВПроекте
@Реализация
метод Отправитель(): ИнформационныеСистемы.Ссылка?
    возврат ОбменДанными.Отправитель()
;

@ВПроекте
@Реализация
метод ОбновитьСоответствиеИдентификаторов(ВнутренняяСсылка: ВходящиеДанные.Ссылка, ВнешнийИдентификатор: Строка, ОбъектСуществует: Булево)
    ОбменДанными.ОбновитьСоответствиеИдентификаторов(ВнутренняяСсылка, ВнешнийИдентификатор, ОбъектСуществует)
;

@ВПроекте
@Реализация
метод ЗаписатьСоответствиеИдентификаторов(ВнутренняяСсылка: ВходящиеДанные.Ссылка, ВнешнийИдентификатор: Строка, ОбъектСуществует: Булево)
    ОбменДанными.ЗаписатьСоответствиеИдентификаторов(ВнутренняяСсылка, ВнешнийИдентификатор, ОбъектСуществует)
;

@ВПроекте
@Реализация
метод УстановитьБлокировкуНаВнешниеИдентификаторы(ВнешниеИдентификаторы: ЧитаемаяКоллекция<Строка>)
    ОбменДанными.УстановитьБлокировкуНаВнешниеИдентификаторы(ВнешниеИдентификаторы)
;

@ВПроекте
@Реализация
метод ИдентификаторыЛокальныхОбъектов(ВнешниеИдентификаторы: ЧитаемаяКоллекция<Строка>, Тип: Тип? = Неопределено): ЧитаемоеСоответствие<Строка, ВходящиеДанные.Ссылка>
    возврат ОбменДанными.ИдентификаторыЛокальныхОбъектов(ВнешниеИдентификаторы, Тип)
;

@ВПроекте
@Реализация
метод ВнешниеИдентификаторыПоВнутреннимСсылкам(ВнутренниеСсылки: ЧитаемаяКоллекция<ВходящиеДанные.Ссылка>): ЧитаемоеСоответствие<ВходящиеДанные.Ссылка, Строка>
    возврат ОбменДанными.ВнешниеИдентификаторыПоВнутреннимСсылкам(ВнутренниеСсылки)
;

@Реализация
@ВПроекте
метод ЗагрузитьОбъектИзJson(ДанныеJson: неизвестно): ИнформационныеСистемы.ДанныеJson
    возврат ИнформационныеСистемы.ЗагрузитьОбъектИзJson(ДанныеJson как ИнформационныеСистемы.ДанныеJson)
;

@Реализация
@ВПроекте
метод СоздатьЗаписьОбъектыОтложенногоОбновления(ЗаписанныйОбъект: ВходящиеДанные.Ссылка, ЗависимыйОбъект: ВходящиеДанные.Ссылка?, МоментЗагрузки: Момент, Отправитель: Отправитель.Ссылка?, КлючОперации: Строка)
    знч ТипОбновляемогоОбъекта = ЗаписанныйОбъект.ПолучитьТип()
    знч НаборЗаписей = новый ОбъектыОтложенногоОбновления.НаборЗаписей()
        НаборЗаписей.Фильтр.ТипОбновляемогоОбъекта.Установить(ТипОбновляемогоОбъекта)
        НаборЗаписей.Фильтр.ОбновляемыйОбъект.Установить(ЗаписанныйОбъект)
        НаборЗаписей.Фильтр.МоментЗагрузки.Установить(МоментЗагрузки)
        НаборЗаписей.ДобавитьЗапись(
            МоментЗагрузки = МоментЗагрузки,
            ОбновляемыйОбъект = ЗаписанныйОбъект,
            ТипОбновляемогоОбъекта = ТипОбновляемогоОбъекта,
            Отправитель = Отправитель,
            ЗависимыйОбъект = ЗависимыйОбъект,
            КлючОперации = КлючОперации
        )
    НаборЗаписей.Записать()
;

@Реализация
@ВПроекте
метод СоздатьЗапускОбработкиОбъектовОтложенногоОбновленияПоРасписанию()
    ОбъектыОтложенногоОбновления.СоздатьЗапускОбработкиОбъектовОтложенногоОбновленияПоРасписанию()
;

//Конец ОбменДаннымиСервис

//Контракт ДанныеApi
@ВПроекте
@Реализация
метод МассивТипов(Получатель: ВидПриложения?, ВерсияФорматаОбмена: Версия?): Массив<Тип>
    пер Типы: Массив<Тип>
    возврат Типы
;

@ВПроекте
@Реализация
метод ТипДанныхJson(ТипОбъекта: Тип, ВерсияФорматаОбмена: Версия?): Массив<Тип>
    пер Типы: Массив<Тип>
    выбор ТипОбъекта
    когда Тип<ИнформационныеСистемы.Ссылка>
        Типы.Добавить(ИнформационныеСистемы.ТипДанныхJson(ВерсияФорматаОбмена))
    ;
    возврат Типы
;

@ВПроекте
@Реализация
метод ТипКоллекцииДанныхJson(ТипОбъекта: Тип, ВерсияФорматаОбмена: Версия?): Массив<Тип>
    пер Типы: Массив<Тип>
    выбор ТипОбъекта
    когда Тип<ИнформационныеСистемы.Ссылка>
        Типы.Добавить(ИнформационныеСистемы.ТипКоллекцииДанныхJson(ВерсияФорматаОбмена))
    ;
    возврат Типы
;

@ВПроекте
@Реализация
метод ИнструментыМенеджераОбъекта(ТипОбъекта: Тип): Массив<ВебApiСервер.ИнструментыМенеджераОбъекта>
    пер НаборИнструментыМенеджераОбъекта: Массив<ВебApiСервер.ИнструментыМенеджераОбъекта>
    пер ИнструментыМенеджераОбъекта: ВебApiСервер.ИнструментыМенеджераОбъекта
    выбор ТипОбъекта
    когда Тип<ИнформационныеСистемы.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как ИнформационныеСистемы.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    ;
    возврат НаборИнструментыМенеджераОбъекта
;

@ВПроекте
@Реализация
метод ПолучитьДанныеJson(ТипОбъекта: Тип, Ссылка: ВходящиеДанные.Ссылка|ИсходящиеДанные.Ссылка, 
    Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?): Массив<Объект?>
    
    пер ДанныеJson: Массив<Объект?>
    выбор ТипОбъекта
    когда Тип<ИнформационныеСистемы.Ссылка>
        ДанныеJson.Добавить(ИнформационныеСистемы.ПолучитьДанныеJson(Ссылка как ИнформационныеСистемы.Ссылка, Сервисы, ВерсияФорматаОбмена))
    ;
    возврат ДанныеJson
;

@ВПроекте
@Реализация
метод МассивСсылокПоФильтру(ТипОбъекта: Тип, Фильтр: () -> ЧитаемыйМассив<Справочник.Ссылка>): Массив<ЧитаемыйМассив<Справочник.Ссылка>>
    пер МассивСсылок: Массив<ЧитаемыйМассив<Справочник.Ссылка>>
    возврат МассивСсылок
;

@ВПроекте
@Реализация
метод УдалитьОбъекты(ТипОбъекта: Тип, ПараметрыЗапроса: ЧитаемоеСоответствие<Строка, Число|Булево|Ууид|Строка>, Сервисы: ВебApiСервер.СервисыУдаленияОбъектов)
    выбор ТипОбъекта
    когда Тип<ИнформационныеСистемы.Ссылка>
        ИнформационныеСистемы.УдалитьОбъекты(ПараметрыЗапроса, Сервисы)
    ;
;

@ВПроекте
@Реализация
метод ТипОбъектаJson(ТипОбъекта: Тип): Массив<Строка>
    пер ТипОбъектаJson: Массив<Строка>
    выбор ТипОбъекта
    когда Тип<ИнформационныеСистемы.Ссылка>
        ТипОбъектаJson.Добавить(ИнформационныеСистемы.ТипОбъектаJson())
    ;
    возврат ТипОбъектаJson
;

@ВПроекте
@Реализация
метод ЗагрузитьОбъектИзJson(ТипОбъекта: Тип, ТипДанных: Тип, ДанныеJson: Объект?, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
;

@ВПроекте
@Реализация
метод ПослеЗаписиГруппыОбъектов(ТипОбъекта: Тип, МассивОбъектовОтложенногоОбновления: Массив<ВебApiСервер.ОбъектОтложенногоОбновления>)
;

@ВПроекте
@Реализация
метод ИзменитьОбъектИзJson(ТипОбъекта: Тип, ДанныеJson: Объект, Сервисы: ВебApiСервер.СервисыЗагрузкиJson, ЗаданиеМодификации: ВебApiСервер.ЗаданиеМодификации)
;

@ВПроекте
@Реализация
метод ЗавершитьИзменениеОбъектИзJson(ТипОбъекта: Тип, МассивСсылок: ЧитаемыйМассив<ВходящиеДанные.Ссылка>, ЗаданиеМодификации: ВебApiСервер.ЗаданиеМодификации)
;

@ВПроекте
@Реализация
метод ГруппаИзмененийВJson(ТипОбъекта: Тип, Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>,
    Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?): Массив<ЧитаемоеСоответствие<Строка, Массив<Объект?>>>
    
    пер ДанныеJson: Массив<ЧитаемоеСоответствие<Строка, Массив<Объект?>>>
    возврат ДанныеJson
;

//Конец ДанныеApi
