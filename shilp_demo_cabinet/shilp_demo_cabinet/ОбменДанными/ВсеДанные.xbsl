импорт ВебApi
импорт ОбщиеСтандартные

@ВПроекте
структура ОтоборПоОтправляемымТипамДокументов
    обз пер ОтправляемыеТипыДокументов: ЧитаемыйМассив<Тип>
    обз пер ФильтрТолькоПоТипам: Булево
;

@ВПроекте
структура ГруппыИзмененийJsonИВерсияДанных
    обз пер ГруппыИзмененийJson: Соответствие<Строка, Массив<Объект?>|Число>
    обз пер ВерсияДанных: Число
;

@ВПроекте
метод ПолучитьИзменения(Отправитель: ИнформационныеСистемы.Ссылка, ПараметрыЗапроса: ЧитаемоеСоответствие<Строка, Число|Булево|Ууид|Строка>, 
        СервисыУпаковкиJson: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия? = Неопределено): ГруппыИзмененийJsonИВерсияДанных?
    пер ДокументыИВерсии: неизвестно
    пер ОтправляемыеТипыДокументов = ОтправляемыеТипыДокументов(МенеджерСущности.ЗначениеРеквизитаОбъекта(Отправитель, "ВидПриложения"), ВерсияФорматаОбмена)
    пер ПараметрыПолучения = новый ОбменДанными.ПараметрыПолученияВерсийДанныхОбъектов(ПараметрыЗапроса["version"] как Число)
    если ПараметрыЗапроса.СодержитКлюч("limit")
        ПараметрыПолучения.РазмерПорции = ПараметрыЗапроса["limit"] как Число
    ;
    ОбменДанными.ОбновитьВремяПоследнегоОбменаДанными(Отправитель)
    ДокументыИВерсии = ОбменДанными.ИзмененияОбъектовИнформационнойСистемы(Отправитель, ПараметрыПолучения, ОтправляемыеТипыДокументов)
    если ДокументыИВерсии.ИзмененияОбъектовИнформационнойСистемы.Пусто()
        возврат Неопределено
    ;
    СервисыУпаковкиJson.ПолучитьВерсию = метод(Ссылка: ИсходящиеДанные.Ссылка) ->
        возврат ДокументыИВерсии.ИзмененияОбъектовИнформационнойСистемы.Получить(Ссылка).ВерсияИзменения как Число
    ;
    СервисыУпаковкиJson.ПолучитьХарактерИзменения = метод(Ссылка: ИсходящиеДанные.Ссылка) ->
        возврат ДокументыИВерсии.ИзмененияОбъектовИнформационнойСистемы.Получить(Ссылка).ХарактерИзменения как Объект
    ;
    
    знч ГруппыИзмененийJson: Соответствие<Строка, Массив<Объект?>|Число>

    для ТипИДокументы из ТипыИДокументы(ДокументыИВерсии.ИзмененияОбъектовИнформационнойСистемы, ОтправляемыеТипыДокументов.ОтправляемыеТипыДокументов)
        знч Объекты: ЧитаемоеСоответствие<Строка, Массив<Объект?>> = ВебApiСервер.ГруппаИзмененийВJson(ТипИДокументы.Ключ, ТипИДокументы.Значение, СервисыУпаковкиJson, ВерсияФорматаОбмена)
        для ТипОбъекта из Объекты
            если не ТипОбъекта.Значение.Пусто()
                ГруппыИзмененийJson.Вставить(ТипОбъекта.Ключ, ТипОбъекта.Значение)
            ;
        ;
    ;
    ГруппыИзмененийJson.Вставить("version", ДокументыИВерсии.ВерсияДанных)
    
    возврат новый ГруппыИзмененийJsonИВерсияДанных(ГруппыИзмененийJson, ДокументыИВерсии.ВерсияДанных)
;

@ВПодсистеме
метод ПолучитьИзменения(ЗапросHttp: HttpСервисЗапрос, ВерсияФорматаОбмена: Версия? = Неопределено)

    знч ОжидаемыеПараметры = [
        новый СервисыHttp.ОжидаемыйПараметр("version", Истина, СервисыHttp.ТипыПараметраUrl.Число),
        новый СервисыHttp.ОжидаемыйПараметр("limit", Ложь, СервисыHttp.ТипыПараметраUrl.Число, новый СервисыHttp.ДиапазонЗначений(1, 100))
        ]
    знч ПараметрыЗапроса = СервисыHttp.ПараметрыЗапроса(ЗапросHttp, ОжидаемыеПараметры)
    пер ГруппыИзмененийJsonИВерсияДанных: ГруппыИзмененийJsonИВерсияДанных?
    знч Получатель = ОбменДанными.Отправитель()
    попытка
        знч СервисыУпаковкиJson = ВебApiСервер.СервисыУпаковкиJson()
        СервисыУпаковкиJson.ПолучитьИдФайла = &ВебApiСервер.ИдФайла
        ГруппыИзмененийJsonИВерсияДанных = ПолучитьИзменения(Получатель, ПараметрыЗапроса, СервисыУпаковкиJson, ВерсияФорматаОбмена)
    поймать Ошибка: Исключение
        СервисыHttp.ЗаполнитьОтвет(ЗапросHttp, Ошибка)
        возврат
    ;
    если ГруппыИзмененийJsonИВерсияДанных == Неопределено
        СервисыHttp.ЗаполнитьОтвет(ЗапросHttp, СервисыHttp.КодыСостояний.Удалено_204)
        возврат
    ;
    ВебApiСервер.ЗарегистрироватьОтправкуДанных(Получатель, ВерсияФорматаОбмена, ГруппыИзмененийJsonИВерсияДанных!)
    СервисыHttp.УпаковатьДанныеJson(ЗапросHttp, ГруппыИзмененийJsonИВерсияДанных.ГруппыИзмененийJson)
;

метод ТипыИДокументы(ДокументыИВерсии: ЧитаемоеСоответствие<ИсходящиеДанные.Ссылка, Объект>, ОтправляемыеТипыДокументов: ЧитаемыйМассив<Тип>): Соответствие<Тип, Массив<ИсходящиеДанные.Ссылка>>
    знч ТипыИДокументы: Соответствие<Тип, Массив<ИсходящиеДанные.Ссылка>>
    для ТипДокумента из ОтправляемыеТипыДокументов
        ТипыИДокументы.Вставить(ТипДокумента, новый Массив<ИсходящиеДанные.Ссылка>())
    ;
    
    для КлючЗначение из ДокументыИВерсии
        знч Документ = КлючЗначение.Ключ
        знч Тип = Документ.ПолучитьТип()
        если ТипыИДокументы.СодержитКлюч(Тип)
            ТипыИДокументы[Тип].Добавить(Документ)
        ;
    ;
    возврат ТипыИДокументы
;

метод ОтправляемыеТипыДокументов(Получатель: ВидПриложения?, ВерсияФорматаОбмена: Версия?): ОтоборПоОтправляемымТипамДокументов
    пер Типы: Массив<Тип>
    знч Сервисы = ДанныеApi.ПолучитьСервисы()
    для Сервис из Сервисы
        Типы.ДобавитьВсе(Сервис.МассивТипов(Получатель, ВерсияФорматаОбмена))
    ;
    возврат новый ОтоборПоОтправляемымТипамДокументов(Типы, Ложь)
;

@ВПодсистеме
метод ЗагрузитьИзменения(ЗапросHttp: HttpСервисЗапрос, ВерсияФорматаОбмена: Версия? = Неопределено)
    ВебApiСервер.ЗагрузитьГруппыОбъектов(ЗапросHttp, ВерсияФорматаОбмена)
;