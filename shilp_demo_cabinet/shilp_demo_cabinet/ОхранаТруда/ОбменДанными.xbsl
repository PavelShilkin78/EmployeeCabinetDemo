импорт ВебApi
импорт Компания

//Контракт ОбменДаннымиТипыDtoОбъектовСервис

@ВПроекте
@Реализация
метод ЗаполнитьПредопределенныеТипыDtoОбъектов()
    ОхранаТруда.ДобавитьТипDtoОбъекта()
;

//Конец ОбменДаннымиТипыDtoОбъектовСервис

//Контракт ДанныеApi
@ВПроекте
@Реализация
метод ТипДанныхJson(ТипОбъекта: Тип, ВерсияФорматаОбмена: Версия?): Массив<Тип>
    знч Типы: Массив<Тип>
    выбор ТипОбъекта
    когда Тип<РабочиеМестаОхраныТруда.Ссылка>
        Типы.Добавить(РабочиеМестаОхраныТрудаDto.ТипДанныхJson(ВерсияФорматаОбмена))
    ;
    возврат Типы
;

@ВПроекте
@Реализация
метод ТипКоллекцииДанныхJson(ТипОбъекта: Тип, ВерсияФорматаОбмена: Версия?): Массив<Тип>
    знч Типы: Массив<Тип>
    выбор ТипОбъекта
    когда Тип<РабочиеМестаОхраныТруда.Ссылка>
        Типы.Добавить(РабочиеМестаОхраныТрудаDto.ТипКоллекцииДанныхJson(ВерсияФорматаОбмена))
    ;
    возврат Типы
;

@ВПроекте
@Реализация
метод ПолучитьДанныеJson(ТипОбъекта: Тип, Ссылка: ВходящиеДанные.Ссылка|ИсходящиеДанные.Ссылка,
    Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?): Массив<Объект?>
    возврат []
;

@ВПроекте
@Реализация
метод МассивСсылокПоФильтру(ТипОбъекта: Тип, Фильтр: () -> ЧитаемыйМассив<Справочник.Ссылка>): Массив<ЧитаемыйМассив<Справочник.Ссылка>>
    возврат []
;

@ВПроекте
@Реализация
метод УдалитьОбъекты(ТипОбъекта: Тип, ПараметрыЗапроса: ЧитаемоеСоответствие<Строка, Число|Булево|Ууид|Строка>,
    Сервисы: ВебApiСервер.СервисыУдаленияОбъектов)
;

@ВПроекте
@Реализация
метод ТипОбъектаJson(ТипОбъекта: Тип): Массив<Строка>
    знч ТипОбъектаJson: Массив<Строка>
    выбор ТипОбъекта
    когда Тип<РабочиеМестаОхраныТруда.Ссылка>
        ТипОбъектаJson.Добавить(РабочиеМестаОхраныТрудаDto.ТипОбъектаJson())
    ;
    возврат ТипОбъектаJson
;

@ВПроекте
@Реализация
метод ЗагрузитьОбъектИзJson(ТипОбъекта: Тип, ТипДанных: Тип, ДанныеJson: Объект?, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    выбор ТипОбъекта
    когда Тип<РабочиеМестаОхраныТруда.Ссылка>
        РабочиеМестаОхраныТрудаDto.ЗагрузитьОбъектИзJson(ТипДанных, ДанныеJson, Сервисы)
    ;
;

@ВПроекте
@Реализация
метод ПослеЗаписиГруппыОбъектов(ТипОбъекта: Тип, МассивОбъектовОтложенногоОбновления: Массив<ВебApiСервер.ОбъектОтложенногоОбновления>)
;

@ВПроекте
@Реализация
метод ИзменитьОбъектИзJson(ТипОбъекта: Тип, ДанныеJson: Объект, Сервисы: ВебApiСервер.СервисыЗагрузкиJson, ЗаданиеМодификации: ВебApiСервер.ЗаданиеМодификации)
;

@ВПроекте
@Реализация
метод ЗавершитьИзменениеОбъектИзJson(ТипОбъекта: Тип, МассивСсылок: ЧитаемыйМассив<ВходящиеДанные.Ссылка>, ЗаданиеМодификации: ВебApiСервер.ЗаданиеМодификации)
;

@ВПроекте
@Реализация
метод ГруппаИзмененийВJson(ТипОбъекта: Тип, Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>,
    Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?): Массив<ЧитаемоеСоответствие<Строка, Массив<Объект?>>>
    возврат []
;

@ВПроекте
@Реализация
метод МассивТипов(Получатель: ВидПриложения?, ВерсияФорматаОбмена: Версия?): Массив<Тип>
    возврат []
;

@ВПроекте
@Реализация
метод ИнструментыМенеджераОбъекта(ТипОбъекта: Тип): Массив<ВебApiСервер.ИнструментыМенеджераОбъекта>
    знч НаборИнструментыМенеджераОбъекта: Массив<ВебApiСервер.ИнструментыМенеджераОбъекта>
    знч ИнструментыМенеджераОбъекта: ВебApiСервер.ИнструментыМенеджераОбъекта
    выбор ТипОбъекта
    когда Тип<РабочиеМестаОхраныТруда.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как РабочиеМестаОхраныТруда.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    ;
    возврат НаборИнструментыМенеджераОбъекта
;
//Конец ДанныеApi

@ВПодсистеме
@НаСервере
метод ЗагрузитьУсловияТрудаСотрудникаИзJson(ДанныеJson: Сотрудники.Сотрудник_3_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson, Владелец: Сотрудники.Ссылка)

    знч НаборЗаписей: УсловияТрудаСотрудников.НаборЗаписей
    НаборЗаписей.Фильтр.Сотрудник.Установить(Владелец)
    
    знч Запись: УсловияТрудаСотрудников.Запись
    Запись.Сотрудник = Владелец
    если ДанныеJson.РабочееМесто != Неопределено
        знч ВнешниеСсылки: Множество<ВебApiСервер.ВнешняяСсылка>
        ВнешниеСсылки.Добавить(РабочиеМестаОхраныТрудаDto.ВнешняяСсылка(ДанныеJson.РабочееМесто))
        Сервисы.ПолучитьСсылки(ВнешниеСсылки)
        Запись.РабочееМесто = Сервисы.ПолучитьСсылку(
            РабочиеМестаОхраныТрудаDto.ВнешняяСсылка(ДанныеJson.РабочееМесто)) как РабочиеМестаОхраныТруда.Ссылка
    ;
    Запись.КлассУсловийТруда = КлассУсловийТрудаИзJson(ДанныеJson.КлассУсловийТруда)
    
    НаборЗаписей.Добавить(Запись)
    НаборЗаписей.Записать()

;

метод КлассУсловийТрудаИзJson(КлассJson: Строка?): КлассыУсловийТрудаПоРезультатамСпециальнойОценки?
    пер Класс: КлассыУсловийТрудаПоРезультатамСпециальнойОценки?
    выбор КлассJson
    когда "optimal"
        Класс = КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Оптимальный
    когда "acceptable"
        Класс = КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Допустимый
    когда "harmful1"
        Класс = КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный1
    когда "harmful2"
        Класс = КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный2
    когда "harmful3"
        Класс = КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный3
    когда "harmful4"
        Класс = КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный4
    когда "dangerous"
        Класс = КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Опасный
    ;
    возврат Класс
;
