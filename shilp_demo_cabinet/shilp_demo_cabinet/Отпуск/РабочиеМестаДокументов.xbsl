импорт ФизическиеЛица
импорт Компания
импорт КонтрольДоступа
импорт Отсутствия

//Область РазрешенияДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): Массив<РазрешениеДоступа>
    возврат КонтрольДоступа.РазрешенияДоступаТаблицыСФизическимЛицомСПравомУдаления()
;

@Обработчик
метод ВычислитьРазрешенияДоступаДляОбъектов(Элементы: ЧитаемыйМассив<РабочиеМестаДокументов.ДанныеРасчетаРазрешений>): ЧитаемоеСоответствие<РабочиеМестаДокументов.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    знч Разрешения: Соответствие<РабочиеМестаДокументов.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    для Элемент из Элементы
        Разрешения.Вставить(Элемент, КонтрольДоступа.РазрешенияДоступаОбъекта(Элемент.Владелец))
    ;
    возврат Разрешения
;

//КонецОбласти

@ВПодсистеме
метод РабочиеМеста(ФизическоеЛицо: ФизическиеЛица.Ссылка): РабочиеМеста
    пер РабочиеМестаЗаявления = новый РабочиеМеста()
    пер МестаЗаявления = новый Массив<РабочееМесто>()
    пер ДанныеСотрудников = Сотрудники.СотрудникиФизическогоЛицаОрганизации(ФизическоеЛицо)
    для ДанныеСотрудника из ДанныеСотрудников
        пер ДанныеРабочегоМеста = новый РабочееМесто()
        ДанныеРабочегоМеста.РабочееМесто = ДанныеСотрудника.Сотрудник
        ДанныеРабочегоМеста.Основное = ДанныеСотрудника.Основной
        ДанныеРабочегоМеста.Позиция = ДанныеСотрудника.Позиция
        ДанныеРабочегоМеста.МестоВСтруктуреПредприятия = ДанныеСотрудника.МестоВСтруктуреПредприятия
        ДанныеРабочегоМеста.Должность = ДанныеСотрудника.Должность
        ДанныеРабочегоМеста.Организация = ДанныеСотрудника.Организация
        МестаЗаявления.Добавить(ДанныеРабочегоМеста)
    ;
    РабочиеМестаЗаявления.РабочиеМеста = МестаЗаявления
    возврат РабочиеМестаЗаявления
;

@ВПодсистеме
метод РабочиеМестаЗаявления(Заявление: ДокументПоРабочимМестам.Ссылка): РабочиеМеста
    пер МестаЗаявлений = РабочиеМестаЗаявлений([Заявление как Справочник.Ссылка])
    если МестаЗаявлений.СодержитКлюч(Заявление)
        возврат МестаЗаявлений[Заявление]
    ;
    возврат новый РабочиеМеста()
;

@ВПодсистеме
метод РабочиеМестаЗаявлений(ЗаявленияСсылки: ЧитаемаяКоллекция<Справочник.Ссылка>): Соответствие<ДокументПоРабочимМестам.Ссылка, РабочиеМеста>
    знч Заявления: Массив<ДокументПоРабочимМестам.Ссылка>
    для Заявление из ЗаявленияСсылки
        Заявления.Добавить(Заявление как ДокументПоРабочимМестам.Ссылка)
    ;
    пер МестаЗаявлений: Соответствие<ДокументПоРабочимМестам.Ссылка, РабочиеМеста>
    знч ФункциональныеОпции = Отсутствия.ПолучитьФункциональныеОпции()
    если ФункциональныеОпции.ЗапросМестаРаботыВЗаявлениях
        знч Запрос = Запрос{
            Выбрать
                РабочиеМестаДокументов.Владелец Как Владелец,
                РабочиеМестаДокументов.Ссылка Как Ссылка,
                РабочиеМестаДокументов.РабочееМесто Как РабочееМесто,
                РабочиеМестаДокументов.Основное Как Основное,
                КомпанияСотрудники.Позиция.ЗаменитьNull(Неопределено) Как Позиция, 
                КомпанияСотрудники.МестоВСтруктуреПредприятия.ЗаменитьNull(Неопределено) Как МестоВСтруктуреПредприятия, 
                КомпанияСотрудники.Должность.ЗаменитьNull(Неопределено) Как Должность,
                КомпанияСотрудники.Организация.ЗаменитьNull(Неопределено) Как Организация, 
                РабочиеМестаДокументов.Оформление Как Оформление
            Из
                РабочиеМестаДокументов Как РабочиеМестаДокументов
                    Левое Соединение Сотрудники Как КомпанияСотрудники
                    По РабочиеМестаДокументов.РабочееМесто == КомпанияСотрудники.Ссылка
            Где
                РабочиеМестаДокументов.Владелец В (%Заявления)}
        исп Результат = Запрос.Выполнить()
        для РезультатСтрока из Результат
            пер МестаЗаявления: РабочиеМеста
            если МестаЗаявлений.СодержитКлюч(РезультатСтрока.Владелец)
                МестаЗаявления = МестаЗаявлений.Получить(РезультатСтрока.Владелец)
            иначе
                МестаЗаявления.Владелец = РезультатСтрока.Владелец
            ;
            пер ДанныеРабочегоМеста = новый РабочееМесто()
            ДанныеРабочегоМеста.Ссылка = РезультатСтрока.Ссылка
            ДанныеРабочегоМеста.РабочееМесто = РезультатСтрока.РабочееМесто
            ДанныеРабочегоМеста.Основное = РезультатСтрока.Основное
            ДанныеРабочегоМеста.Позиция = РезультатСтрока.Позиция
            ДанныеРабочегоМеста.МестоВСтруктуреПредприятия = РезультатСтрока.МестоВСтруктуреПредприятия
            ДанныеРабочегоМеста.Должность = РезультатСтрока.Должность
            ДанныеРабочегоМеста.Оформление = РезультатСтрока.Оформление
            ДанныеРабочегоМеста.Организация = РезультатСтрока.Организация
            МестаЗаявления.РабочиеМеста.Добавить(ДанныеРабочегоМеста)
            МестаЗаявлений.Вставить(РезультатСтрока.Владелец, МестаЗаявления)
        ;
    ; 
    возврат МестаЗаявлений
;

@ВПодсистеме
метод ЗаписатьРабочиеМеста(ТаблицаРабочиеМеста: РабочиеМеста)
    пер МестаЗаявления = РабочиеМестаЗаявления(ТаблицаРабочиеМеста.Владелец)
    для РабочееМесто из ТаблицаРабочиеМеста.РабочиеМеста
        пер ОбъектРабочегоМеста: РабочиеМестаДокументов.Объект? 
        если РабочееМесто.Ссылка == Неопределено
            ОбъектРабочегоМеста = новый РабочиеМестаДокументов.Объект()
        иначе
            ОбъектРабочегоМеста = РабочееМесто.Ссылка.ЗагрузитьОбъект()
        ;  
        ОбъектРабочегоМеста.Владелец = ТаблицаРабочиеМеста.Владелец
        ОбъектРабочегоМеста.Основное = РабочееМесто.Основное
        ОбъектРабочегоМеста.РабочееМесто = РабочееМесто.РабочееМесто
        ОбъектРабочегоМеста.Оформление = РабочееМесто.Оформление
        ОбъектРабочегоМеста.Записать()
        для МестоЗаявления из МестаЗаявления.РабочиеМеста
            если МестоЗаявления.Ссылка == РабочееМесто.Ссылка
                МестаЗаявления.РабочиеМеста.Удалить(МестоЗаявления)
                прервать
            ;
        ;
    ;
    для  МестоЗаявления из МестаЗаявления.РабочиеМеста
        пер ОбъектРабочегоМеста = МестоЗаявления.Ссылка.ЗагрузитьОбъект()
        если ОбъектРабочегоМеста != Неопределено
            ОбъектРабочегоМеста.Удалить()
        ;
    ;
;
