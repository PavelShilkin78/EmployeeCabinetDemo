импорт ИнтерфейсныеКомпонентыСтандартные
импорт Компания

@ВПроекте
@Реализация
метод Инициализировать()
    пер ОрганизацииРабочихМест = новый Массив<Организации.Ссылка>()
    для РабочееМесто из ТаблицаРабочихМест.РабочиеМеста
        если не ОрганизацииРабочихМест.Содержит(РабочееМесто.Организация)
            ОрганизацииРабочихМест.Добавить(РабочееМесто.Организация)
        ;
    ;
    ПоказыватьОрганизацию = ОрганизацииРабочихМест.Размер() > 1
    если не ТаблицаРабочихМест.РабочиеМеста.Пусто()
        ОсновноеРабочееМесто = ТаблицаРабочихМест.РабочиеМеста.Первый()
    ;
    УстановитьОтметки()
    СобственнаяМодифицированность = Ложь
;

метод ТаблицаИсточникДанные(): Массив<РабочееМесто?>
    пер Данные: Массив<РабочееМесто?>
    Данные.ДобавитьВсе(ТаблицаРабочихМест.РабочиеМеста)
    возврат Данные
;

метод ПриНажатииСтроки(Источник: Список<ИсточникДанныхМассив<РабочееМесто?>>, 
                                 Событие: СобытиеСДанными<СтрокаСписка<РабочееМесто?>>)
        ПриИзмененииЗначения(новый СобытиеКомпонента())  
;

метод ОформлениеПриИзменении(Источник: Флажок, Событие: СобытиеПриИзменении<Булево?>, ДанныеСтроки: РабочееМесто?)
    если ДанныеСтроки != Неопределено
        если ДанныеСтроки.Выбрано
            ДанныеСтроки.Оформление = ОформленияЗаявленийНаОтпуск.Оформлять
        иначе
            ДанныеСтроки.Оформление = ОформленияЗаявленийНаОтпуск.НеОформлять
        ;
    ;
;

метод РабочееМестоПредставление(ДанныеЭлемента: РабочееМесто?): Строка
    пер РабочееМестоПредставление: Строка
    если ДанныеЭлемента != Неопределено
        РабочееМестоПредставление = Сотрудники.ПредставлениеРабочегоМеста(
                                                ДанныеЭлемента.Позиция, 
                                                ДанныеЭлемента.Должность, 
                                                ДанныеЭлемента.МестоВСтруктуреПредприятия, 
                                                ДанныеЭлемента.Организация, 
                                                ПоказыватьОрганизацию)
    ;
    возврат РабочееМестоПредставление
;

метод ОсновноеРабочееМестоВидимость(): Булево
    возврат ВыделятьОсновноеРабочееМесто и не ТолькоЧтение
;

метод УстановитьОтметки()
    для РабочееМесто из Компоненты.ВыборОрганизаций.Источник.Данные
        если ВыделятьОсновноеРабочееМесто и РабочееМесто.Основное
            или РабочееМесто.Оформление == ОформленияЗаявленийНаОтпуск.Оформлять
            РабочееМесто.Выбрано = Истина
        иначе
            РабочееМесто.Выбрано = Ложь
        ;
    ;
;

@ВПодсистеме
метод УстановитьОформление()
    знч ВыбранныеСтроки = ПолучитьОтмеченныеСтроки()
    для РабочееМесто из Компоненты.ВыборОрганизаций.Источник.Данные
        если ВыделятьОсновноеРабочееМесто и РабочееМесто.Основное или ВыбранныеСтроки.Содержит(РабочееМесто)
            если РабочееМесто.Оформление != ОформленияЗаявленийНаОтпуск.Оформлять
                РабочееМесто.Оформление = ОформленияЗаявленийНаОтпуск.Оформлять
                СобственнаяМодифицированность = Истина
            ;
        иначе
            если РабочееМесто.Оформление != ОформленияЗаявленийНаОтпуск.НеОформлять
                РабочееМесто.Оформление = ОформленияЗаявленийНаОтпуск.НеОформлять
                СобственнаяМодифицированность = Истина
            ;
        ;
    ;
;

метод ПолучитьОтмеченныеСтроки(): Массив<РабочееМесто>
    знч ОтмеченныеСтроки = новый Массив<РабочееМесто>()
    для РабочееМесто из Компоненты.ВыборОрганизаций.Источник.Данные
        если РабочееМесто.Оформление == ОформленияЗаявленийНаОтпуск.Оформлять
            ОтмеченныеСтроки.Добавить(РабочееМесто)
        ;
    ;
    возврат ОтмеченныеСтроки
;

метод ВыборОрганизацийПослеСозданияСтроки(Источник: Список<ИсточникДанныхМассив<РабочееМесто?>>, Событие: СобытиеСДанными<СтрокаСписка<РабочееМесто?>>)
    если ТолькоЧтение
        если Событие.Данные.ДанныеСтроки.Оформление == ОформленияЗаявленийНаОтпуск.НеОформлять
            Событие.Данные.Видимость = Ложь
        ;
    иначе
        если ВыделятьОсновноеРабочееМесто
            и не ТаблицаРабочихМест.РабочиеМеста.Пусто()
            и ТаблицаРабочихМест.РабочиеМеста.Первый() == Событие.Данные.ДанныеСтроки
            
            Событие.Данные.Видимость = Ложь
        ;
    ;
;

@ВПодсистеме
метод ПроверитьЗаполнение(): Булево
    если ПолучитьОтмеченныеСтроки().Пусто()
        СообщениеОбОшибке = "Необходимо выбрать рабочее место"
        возврат Ложь
    ;
    СообщениеОбОшибке = ""
    возврат Истина
;

@ВПодсистеме
метод ОтмеченныеРабочиеМеста(): Массив<РабочееМесто>
    возврат ПолучитьОтмеченныеСтроки()
;