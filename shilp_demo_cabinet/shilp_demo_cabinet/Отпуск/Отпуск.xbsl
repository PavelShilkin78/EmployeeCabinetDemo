импорт УниверсальныеМеханизмы
импорт СтандартноеПриложение
импорт ОбщегоНазначения
импорт Отсутствия
импорт Компания 
импорт Компания::Согласования
импорт ФизическиеЛица
импорт ОбменДанными
импорт Уведомления
импорт КонтрольДоступа
импорт ВладельцыКабинетов
импорт Документы

@ВПодсистеме
структура СотрудникиОрганизации
    обз пер Сотрудник: Сотрудники.Ссылка
    обз пер Организация: Организации.Ссылка
;

@ВПроекте
структура ДанныеЗаполненияОтпуска
    пер ЗаСвойСчет: Булево
    пер ДатаНачала: Дата?
    пер ДатаОкончания: Дата?
;

@ВПроекте
структура ДлительностьОтпуска
    пер КалендарныхДней: Число
    пер ПраздничныхДней: Число
;

@ВПроекте
@НаКлиенте
структура КомпонентФормыРаздела
    обз пер Наименование: Строка
    обз пер Компонент: Компонент
;

@ВПроекте конст ИД_РАЗДЕЛА_ОТПУСК = "Отпуск"
@ВПодсистеме конст ИМЯ_РАЗДЕЛА_ОТПУСК = "Отпуск"
@ВПодсистеме конст ВИД_СОГЛАСОВАНИЯ_ОТПУСКОВ = "Отпуск"
@ВПроекте конст ПОДСИСТЕМА_ОТПУСК = "Отпуск"
@ВПодсистеме конст ШАБЛОН_ЗАЯВЛЕНИЯ_НА_ОТПУСК = "ШаблонЗавяленияНаОтпуск"
@ВПодсистеме конст ШАБЛОН_ЗАЯВЛЕНИЯ_НА_КОМПЕНСАЦИЮ_ОТПУСКА = "ШаблонЗавяленияНаКомпенсациюОтпуска"
@ВПодсистеме конст ШАБЛОН_ЗАЯВЛЕНИЯ_НА_ПЕРЕНОС_ОТПУСКА = "ШаблонЗаявленияНаПереносОтпуска"
@ВПодсистеме конст ШАБЛОН_ЗАЯВЛЕНИЯ_НА_ОТМЕНУ_ОТПУСКА = "ШаблонЗаявленияНаОтменуОтпуска"

@ВПроекте конст ШАБЛОН_ЗАЯВЛЕНИЯ_НА_СПРАВКУ_ОБ_ОСТАТКАХ = "ШаблонЗаявленияНаСправкуОбОстатках"

@ВПроекте
конст ИД_ПОДСИСТЕМЫ = "Отпуск"

@ВПодсистеме конст ГРУППА_РЕСУРСОВ_ОТПУСК = "Отпуск"

@ВПроекте
конст ТИП_DTO_ИНФОРМАЦИЯ_ОБ_ОТПУСКЕ = "ИнформацияОбОтпуске"

@ВПодсистеме
@НаСервере
метод ДобавитьТипDtoОбъекта()
    ДобавитьТипDtoОбъектаИнформацияОбОтпуске()
;

@НаСервере
метод ДобавитьТипDtoОбъектаИнформацияОбОтпуске()
    ТипыDtoОбъектов.ДобавитьТипDtoОбъекта(
        "Информация Об Отпуске",
        ТИП_DTO_ИНФОРМАЦИЯ_ОБ_ОТПУСКЕ
    )
;

@ВПроекте
структура ФункциональныеОпции
  
    пер Отпуск: Булево = Истина
    пер ОтпускЗаСвойСчет: Булево = Истина
    пер ИнформацияОбОтпусках: Булево = Истина
    пер ИнформацияОГрафикеОтпусков: Булево = Истина
    пер ИнформацияОбОстаткахОтпусков: Булево = Истина
    пер ЗаявленияНаКомпенсациюОтпуска: Булево
    пер ИспользоватьЕдиновременнуюВыплатуКОтпуску: Булево
    пер ИспользоватьМатериальнуюПомощьПриОтпуске: Булево
    пер ОстаткиОтпусковПоРабочимМестам: Булево
    пер ЗаявленияНаПереносОтпуска: Булево
    пер ЗаявленияНаОтменуОтпуска: Булево
    
;

@НаСервере 
структура ДанныеЗаявления
    обз пер ДатаДокумента: Дата
    обз пер Представление: Строка
    пер ДатаНачала: Дата?
    пер ДатаОкончания: Дата?
;

конст ПОЛНОМОЧИЕ_РЕДАКТИРОВАНИЕ_ОТПУСКОВ = "ПолномочиеРедактированиеОтпусков"
конст ПОЛНОМОЧИЕ_ПРОСМОТР_ОТПУСКОВ = "ПолномочиеПросмотрОтпусков"
конст РОЛЬ_СОГЛАСОВАНИЕ_ОТПУСКОВ = "СогласованиеОтпусков"

@ВПроекте
@НаСервере
метод ДобавитьРоли()
    ДобавитьРольСогласованиеОтпусков()
;

@НаСервере
метод ДобавитьРольСогласованиеОтпусков()
    КонтрольДоступа.ДобавитьРоль(
        "Согласование отпусков",
        РОЛЬ_СОГЛАСОВАНИЕ_ОТПУСКОВ,
        [
            ПолномочиеПросмотрОтпусков(),
            КонтрольДоступа.ПолномочиеПросмотрЛичныхДанных()
        ]
    )
;

@ВПодсистеме
@НаСервере
метод РольСогласованиеОтпусков(): Роли.Ссылка
    возврат КонтрольДоступа.Роль(РОЛЬ_СОГЛАСОВАНИЕ_ОТПУСКОВ)
;

@ВПроекте
@НаСервере
метод ДобавитьПолномочия()
    ДобавитьПолномочиеРедактированиеОтпусков()
    ДобавитьПолномочиеПросмотрОтпусков()
;

@НаСервере
метод ДобавитьПолномочиеРедактированиеОтпусков()
    КонтрольДоступа.ДобавитьПолномочие(
        "Редактирование отпусков",
        ПОЛНОМОЧИЕ_РЕДАКТИРОВАНИЕ_ОТПУСКОВ,
        "",
        КонтрольДоступа.ТипАтрибутаДоступаФизическиеЛица())
;

@НаСервере
метод ДобавитьПолномочиеПросмотрОтпусков()
    КонтрольДоступа.ДобавитьПолномочие(
        "Просмотр Отпусков",
        ПОЛНОМОЧИЕ_ПРОСМОТР_ОТПУСКОВ,
        "",
        КонтрольДоступа.ТипАтрибутаДоступаФизическиеЛица())
;

@ВПроекте
@НаСервере
метод ПолномочиеРедактированиеОтпусков(): Полномочия.Ссылка
    возврат КонтрольДоступа.Полномочие(ПОЛНОМОЧИЕ_РЕДАКТИРОВАНИЕ_ОТПУСКОВ)
;

@ВПроекте
@НаСервере
метод ПолномочиеПросмотрОтпусков(): Полномочия.Ссылка
    возврат КонтрольДоступа.Полномочие(ПОЛНОМОЧИЕ_ПРОСМОТР_ОТПУСКОВ)
;

@ВПроекте
@НаСервере
метод ПолучитьФункциональныеОпции(): ФункциональныеОпции?
    возврат ИспользуемаяФункциональность.ФункциональныеОпции()
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ЗаписатьФункциональныеОпции(ФункциональныеОпции: ФункциональныеОпции)
    ИспользуемаяФункциональность.ЗаписатьФункциональныеОпции(ФункциональныеОпции)
;

@ВПроекте
@НаКлиенте
метод ПараметрыСеанса(): ПараметрыСеанса
    возврат ПараметрыСеансаСервис.ПолучитьСервис().ПараметрПоКлючу(КЛЮЧ_ПАРАМЕТРОВ_СЕАНСА) как ПараметрыСеанса
;

@ВПодсистеме
@НаСервере @ДоступноСКлиента
метод ПредставленияЗаявленийФизлица(ФизическоеЛицо: ФизическиеЛица.Ссылка?, ТолькоОтсутствия: Булево, ВыводитьБудущие: Булево, ВыводитьПрошлые: Булево, ВыводитьКомпенсацию = Истина): ЧитаемаяКоллекция<СостояниеДокументаКомпонентДанных>
    пер ПредставленияЗаявленийФизлица: Массив<СостояниеДокументаКомпонентДанных>
    если ФизическоеЛицо == Неопределено
        возврат ПредставленияЗаявленийФизлица
    ;
    если не ВыводитьБудущие и не ВыводитьПрошлые
        возврат ПредставленияЗаявленийФизлица
    ;
    знч ФункциональныеОпции = ПолучитьФункциональныеОпции()
    знч ИспользоватьКомпенсациюОтпуска = не ТолькоОтсутствия и ФункциональныеОпции.ЗаявленияНаКомпенсациюОтпуска и ВыводитьКомпенсацию
    пер ТекущаяДата: Дата = Дата.Сейчас()
    пер ДатаФильтра: Дата = ТекущаяДата
    пер ДатаФильтраКомпенсации: Дата = ТекущаяДата
    если ИспользоватьКомпенсациюОтпуска
        ДатаФильтраКомпенсации = ТекущаяДата - 30д
    ;
    знч Запрос = Запрос{
        Выбрать
            Заявления.Документ Как Документ,
            Заявления.ДатаДокумента Как ДатаДокумента,
            Заявления.ДатаНачала Как ДатаНачала,
            Заявления.ДатаОкончания Как ДатаОкончания,
            Заявления.Представление Как Представление
        Из (Выбрать
                Ссылка Как Документ,
                Дата Как ДатаДокумента,
                ДатаНачала Как ДатаНачала,
                ДатаОкончания Как ДатаОкончания,
                ПредставлениеВидаОтсутствия Как Представление,
                МоментСоздания Как МоментСоздания
            Из ЗаявлениеНаОтпуск
            Где ФизическоеЛицо == %ФизическоеЛицо
            И %ВыводитьБудущие
            И %ВыводитьПрошлые
            Объединить Все
            Выбрать
                Ссылка,
                Дата,
                ДатаНачала,
                ДатаОкончания,
                ПредставлениеВидаОтсутствия,
                МоментСоздания
            Из ЗаявлениеНаОтпуск
            Где ФизическоеЛицо == %ФизическоеЛицо
            И %ВыводитьБудущие
            И Не %ВыводитьПрошлые
            И ДатаОкончания >=| %ДатаФильтра
            Объединить Все
            Выбрать
                Ссылка,
                Дата,
                ДатаНачала,
                ДатаОкончания,
                ПредставлениеВидаОтсутствия,
                МоментСоздания
            Из ЗаявлениеНаОтпуск
            Где ФизическоеЛицо == %ФизическоеЛицо
            И Не %ВыводитьБудущие
            И %ВыводитьПрошлые
            И ДатаОкончания <| %ДатаФильтра
            Объединить Все
            Выбрать
                Ссылка Как Документ,
                Дата Как ДатаДокумента,
                ДатаНачала Как ДатаНачала,
                ДатаОкончания Как ДатаОкончания,
                выбор 
                когда ЗаСвойСчет == Истина
                    Тогда "Перенос отпуска за свой счет"
                иначе 
                    "Перенос отпуска" 
                Конец Как Представление,
                МоментСоздания Как МоментСоздания
            Из ЗаявлениеНаПереносОтпуска
            Где ФизическоеЛицо == %ФизическоеЛицо
            И %ВыводитьБудущие
            И %ВыводитьПрошлые
            Объединить Все
            Выбрать
                Ссылка,
                Дата,
                ДатаНачала,
                ДатаОкончания,
                выбор 
                когда ЗаСвойСчет == Истина
                    Тогда "Перенос отпуска за свой счет"
                иначе 
                    "Перенос отпуска" 
                Конец,
                МоментСоздания
            Из ЗаявлениеНаПереносОтпуска
            Где ФизическоеЛицо == %ФизическоеЛицо
            И %ВыводитьБудущие
            И Не %ВыводитьПрошлые
            И ДатаОкончания >=| %ДатаФильтра
            Объединить Все
            Выбрать
                Ссылка,
                Дата,
                ДатаНачала,
                ДатаОкончания,
                выбор 
                когда ЗаСвойСчет == Истина
                    Тогда "Перенос отпуска за свой счет"
                иначе 
                    "Перенос отпуска" 
                Конец,
                МоментСоздания
            Из ЗаявлениеНаПереносОтпуска
            Где ФизическоеЛицо == %ФизическоеЛицо
            И Не %ВыводитьБудущие
            И %ВыводитьПрошлые
            И ДатаОкончания <| %ДатаФильтра
            Объединить Все
            Выбрать
                Ссылка,
                Дата,
                Неопределено,
                Неопределено,
                ПредставлениеДокумента,
                МоментСоздания
            Из ЗаявлениеНаКомпенсациюОтпуска
            Где ФизическоеЛицо == %ФизическоеЛицо
            И %ИспользоватьКомпенсациюОтпуска
            И %ВыводитьБудущие
            И %ВыводитьПрошлые
            Объединить Все
            Выбрать
                Ссылка,
                Дата,
                Неопределено,
                Неопределено,
                ПредставлениеДокумента,
                МоментСоздания
            Из ЗаявлениеНаКомпенсациюОтпуска
            Где ФизическоеЛицо == %ФизическоеЛицо
            И %ИспользоватьКомпенсациюОтпуска
            И %ВыводитьБудущие
            И %ВыводитьПрошлые
            Объединить Все
            Выбрать
                Ссылка,
                Дата,
                Неопределено,
                Неопределено,
                ПредставлениеДокумента,
                МоментСоздания
            Из ЗаявлениеНаКомпенсациюОтпуска
            Где ФизическоеЛицо == %ФизическоеЛицо
            И %ИспользоватьКомпенсациюОтпуска
            И %ВыводитьБудущие
            И Не %ВыводитьПрошлые
            И Дата >=| %ДатаФильтраКомпенсации
            Объединить Все
            Выбрать
                Ссылка,
                Дата,
                Неопределено,
                Неопределено,
                ПредставлениеДокумента,
                МоментСоздания
            Из ЗаявлениеНаКомпенсациюОтпуска
            Где ФизическоеЛицо == %ФизическоеЛицо
            И %ИспользоватьКомпенсациюОтпуска
            И Не %ВыводитьБудущие
            И %ВыводитьПрошлые
             И Дата <| %ДатаФильтраКомпенсации
            Объединить Все
            Выбрать
                АннулированияЗаявлений.Ссылка,
                АннулированияЗаявлений.Дата,
                Неопределено,
                Неопределено,
                выбор 
                когда ОснованиеОтпуска.ЗаСвойСчет == Истина
                    Тогда "Отмена отпуска за свой счет"
                иначе 
                    "Отмена отпуска" 
                Конец,
                АннулированияЗаявлений.МоментСоздания
            Из АннулированияЗаявлений как АннулированияЗаявлений
            Левое соединение Аннулирование как Аннулирование
            по АннулированияЗаявлений.Ссылка == Аннулирование.АннулирующийДокумент
            Внутреннее соединение ОснованиеОтпуска как ОснованиеОтпуска
            по Аннулирование.АннулируемыйДокумент == ОснованиеОтпуска.Ссылка
            Где АннулированияЗаявлений.ФизическоеЛицо == %ФизическоеЛицо
            И не %ТолькоОтсутствия
            И %ВыводитьБудущие
            И %ВыводитьПрошлые
            Объединить Все
            Выбрать
                АннулированияЗаявлений.Ссылка,
                АннулированияЗаявлений.Дата,
                Неопределено,
                Неопределено,
                выбор 
                когда ОснованиеОтпуска.ЗаСвойСчет == Истина
                    Тогда "Отмена отпуска за свой счет"
                иначе 
                    "Отмена отпуска" 
                Конец,
                АннулированияЗаявлений.МоментСоздания
            Из АннулированияЗаявлений как АннулированияЗаявлений
            Левое соединение Аннулирование как Аннулирование
            по АннулированияЗаявлений.Ссылка == Аннулирование.АннулирующийДокумент
            Внутреннее соединение ОснованиеОтпуска как ОснованиеОтпуска
            по Аннулирование.АннулируемыйДокумент == ОснованиеОтпуска.Ссылка
            Где АннулированияЗаявлений.ФизическоеЛицо == %ФизическоеЛицо
            И не %ТолькоОтсутствия
            И %ВыводитьБудущие
            И Не %ВыводитьПрошлые
            И АннулированияЗаявлений.Дата >=| %ДатаФильтра
            Объединить Все
            Выбрать
                АннулированияЗаявлений.Ссылка,
                АннулированияЗаявлений.Дата,
                Неопределено,
                Неопределено,
                выбор 
                когда ОснованиеОтпуска.ЗаСвойСчет == Истина
                    Тогда "Отмена отпуска за свой счет"
                иначе 
                    "Отмена отпуска" 
                Конец,
                АннулированияЗаявлений.МоментСоздания
            Из АннулированияЗаявлений как АннулированияЗаявлений
            Левое соединение Аннулирование как Аннулирование
            по АннулированияЗаявлений.Ссылка == Аннулирование.АннулирующийДокумент
            Внутреннее соединение ОснованиеОтпуска как ОснованиеОтпуска
            по Аннулирование.АннулируемыйДокумент == ОснованиеОтпуска.Ссылка
            Где АннулированияЗаявлений.ФизическоеЛицо == %ФизическоеЛицо
            И не %ТолькоОтсутствия
            И Не %ВыводитьБудущие
            И %ВыводитьПрошлые
            И АннулированияЗаявлений.Дата <| %ДатаФильтра) Как Заявления
        Упорядочить по Заявления.МоментСоздания Убыв}
    ПредставленияЗаявленийФизлица = ДанныеПредставлений(Запрос)
    возврат ПредставленияЗаявленийФизлица
;

@ВПодсистеме
@НаСервере @ДоступноСКлиента
метод ПредставленияЗаявленийФизлица(ФизическоеЛицо: ФизическиеЛица.Ссылка?, ТолькоОтсутствия: Булево, ВыводитьБудущие: Булево, ВыводитьПрошлые: Булево, КоличествоЭлементов: Число): ЧитаемаяКоллекция<СостояниеДокументаКомпонентДанных>
    пер ПредставленияЗаявленийФизлица: Массив<СостояниеДокументаКомпонентДанных>
    если ФизическоеЛицо == Неопределено
        возврат ПредставленияЗаявленийФизлица
    ;
    если не ВыводитьБудущие и не ВыводитьПрошлые
        возврат ПредставленияЗаявленийФизлица
    ;
    знч ФункциональныеОпции = ПолучитьФункциональныеОпции()
    знч ИспользоватьКомпенсациюОтпуска = не ТолькоОтсутствия и ФункциональныеОпции.ЗаявленияНаКомпенсациюОтпуска
    пер ТекущаяДата: Дата = Дата.Сейчас()
    пер ДатаФильтра: Дата = ТекущаяДата
    если не ТолькоОтсутствия
        знч СмещениеДатыВДнях = 30
        ДатаФильтра = ТекущаяДата.ДобавитьДни(ВыводитьБудущие ? -СмещениеДатыВДнях : СмещениеДатыВДнях)
    ;
    знч Запрос = Запрос{
        Выбрать Первые %КоличествоЭлементов
            Заявления.Документ Как Документ,
            Заявления.ДатаДокумента Как ДатаДокумента,
            Заявления.ДатаНачала Как ДатаНачала,
            Заявления.ДатаОкончания Как ДатаОкончания,
            Заявления.Представление Как Представление
        Из (Выбрать Первые %КоличествоЭлементов
                Ссылка Как Документ,
                Дата Как ДатаДокумента,
                ДатаНачала Как ДатаНачала,
                ДатаОкончания Как ДатаОкончания,
                ПредставлениеВидаОтсутствия Как Представление,
                МоментСоздания Как МоментСоздания
            Из ЗаявлениеНаОтпуск
            Где ФизическоеЛицо == %ФизическоеЛицо
            И %ВыводитьБудущие
            И %ВыводитьПрошлые
            Объединить Все
            Выбрать Первые %КоличествоЭлементов
                Ссылка,
                Дата,
                ДатаНачала,
                ДатаОкончания,
                ПредставлениеВидаОтсутствия,
                МоментСоздания
            Из ЗаявлениеНаОтпуск
            Где ФизическоеЛицо == %ФизическоеЛицо
            И %ВыводитьБудущие
            И Не %ВыводитьПрошлые
            И ДатаОкончания >=| %ДатаФильтра
            Объединить Все
            Выбрать Первые %КоличествоЭлементов
                Ссылка,
                Дата,
                ДатаНачала,
                ДатаОкончания,
                ПредставлениеВидаОтсутствия,
                МоментСоздания
            Из ЗаявлениеНаОтпуск
            Где ФизическоеЛицо == %ФизическоеЛицо
            И Не %ВыводитьБудущие
            И %ВыводитьПрошлые
            И ДатаОкончания <| %ДатаФильтра
            Объединить Все
            Выбрать Первые %КоличествоЭлементов
                Ссылка Как Документ,
                Дата Как ДатаДокумента,
                ДатаНачала Как ДатаНачала,
                ДатаОкончания Как ДатаОкончания,
                выбор 
                когда ЗаСвойСчет == Истина 
                    Тогда "Перенос отпуска за свой счет"     
                иначе 
                    "Перенос отпуска" 
                Конец Как Представление,
                МоментСоздания Как МоментСоздания
            Из ЗаявлениеНаПереносОтпуска
            Где ФизическоеЛицо == %ФизическоеЛицо
            И %ВыводитьБудущие
            И %ВыводитьПрошлые
            Объединить Все
            Выбрать Первые %КоличествоЭлементов
                Ссылка,
                Дата,
                ДатаНачала,
                ДатаОкончания,
                выбор 
                когда ЗаСвойСчет == Истина
                    Тогда "Перенос отпуска за свой счет"
                иначе 
                    "Перенос отпуска" 
                Конец,
                МоментСоздания
            Из ЗаявлениеНаПереносОтпуска
            Где ФизическоеЛицо == %ФизическоеЛицо
            И %ВыводитьБудущие
            И Не %ВыводитьПрошлые
            И ДатаОкончания >=| %ДатаФильтра
            Объединить Все
            Выбрать Первые %КоличествоЭлементов
                Ссылка,
                Дата,
                ДатаНачала,
                ДатаОкончания,
                выбор 
                когда ЗаСвойСчет == Истина
                    Тогда "Перенос отпуска за свой счет"
                иначе 
                    "Перенос отпуска" 
                Конец,
                МоментСоздания
            Из ЗаявлениеНаПереносОтпуска
            Где ФизическоеЛицо == %ФизическоеЛицо
            И Не %ВыводитьБудущие
            И %ВыводитьПрошлые
            И ДатаОкончания <| %ДатаФильтра
            Объединить Все
            Выбрать Первые %КоличествоЭлементов
                Ссылка,
                Дата,
                Неопределено,
                Неопределено,
                ПредставлениеДокумента,
                МоментСоздания
            Из ЗаявлениеНаКомпенсациюОтпуска
            Где ФизическоеЛицо == %ФизическоеЛицо
            И %ИспользоватьКомпенсациюОтпуска
            И %ВыводитьБудущие
            И %ВыводитьПрошлые
            Объединить Все
            Выбрать Первые %КоличествоЭлементов
                Ссылка,
                Дата,
                Неопределено,
                Неопределено,
                ПредставлениеДокумента,
                МоментСоздания
            Из ЗаявлениеНаКомпенсациюОтпуска
            Где ФизическоеЛицо == %ФизическоеЛицо
            И %ИспользоватьКомпенсациюОтпуска
            И %ВыводитьБудущие
            И Не %ВыводитьПрошлые
            И Дата >=| %ДатаФильтра
            Объединить Все
            Выбрать Первые %КоличествоЭлементов
                Ссылка,
                Дата,
                Неопределено,
                Неопределено,
                ПредставлениеДокумента,
                МоментСоздания
            Из ЗаявлениеНаКомпенсациюОтпуска
            Где ФизическоеЛицо == %ФизическоеЛицо
            И %ИспользоватьКомпенсациюОтпуска
            И Не %ВыводитьБудущие
            И %ВыводитьПрошлые
            И Дата <| %ДатаФильтра
            Объединить Все
            Выбрать Первые %КоличествоЭлементов
                АннулированияЗаявлений.Ссылка,
                АннулированияЗаявлений.Дата,
                Неопределено,
                Неопределено,
                выбор 
                когда ОснованиеОтпуска.ЗаСвойСчет == Истина
                    Тогда "Отмена отпуска за свой счет"
                иначе 
                    "Отмена отпуска" 
                Конец,
                АннулированияЗаявлений.МоментСоздания
            Из АннулированияЗаявлений как АннулированияЗаявлений
            Левое соединение Аннулирование как Аннулирование
            по АннулированияЗаявлений.Ссылка == Аннулирование.АннулирующийДокумент
            Внутреннее соединение ОснованиеОтпуска как ОснованиеОтпуска
            по Аннулирование.АннулируемыйДокумент == ОснованиеОтпуска.Ссылка
            Где АннулированияЗаявлений.ФизическоеЛицо == %ФизическоеЛицо
                И не %ТолькоОтсутствия
                И %ВыводитьБудущие
                И %ВыводитьПрошлые
            Объединить Все
            Выбрать Первые %КоличествоЭлементов
                АннулированияЗаявлений.Ссылка,
                АннулированияЗаявлений.Дата,
                Неопределено,
                Неопределено,
                выбор 
                когда ОснованиеОтпуска.ЗаСвойСчет == Истина
                    Тогда "Отмена отпуска за свой счет"
                иначе 
                    "Отмена отпуска" 
                Конец,
                АннулированияЗаявлений.МоментСоздания
            Из АннулированияЗаявлений как АннулированияЗаявлений
            Левое соединение Аннулирование как Аннулирование
            по АннулированияЗаявлений.Ссылка == Аннулирование.АннулирующийДокумент
            Внутреннее соединение ОснованиеОтпуска как ОснованиеОтпуска
            по Аннулирование.АннулируемыйДокумент == ОснованиеОтпуска.Ссылка
            Где АннулированияЗаявлений.ФизическоеЛицо == %ФизическоеЛицо
                И не %ТолькоОтсутствия
                И %ВыводитьБудущие
                И Не %ВыводитьПрошлые
                И АннулированияЗаявлений.Дата >=| %ДатаФильтра
            Объединить Все
            Выбрать Первые %КоличествоЭлементов
                АннулированияЗаявлений.Ссылка,
                АннулированияЗаявлений.Дата,
                Неопределено,
                Неопределено,
                выбор 
                когда ОснованиеОтпуска.ЗаСвойСчет == Истина
                    Тогда "Отмена отпуска за свой счет"
                иначе 
                    "Отмена отпуска" 
                Конец,
                АннулированияЗаявлений.МоментСоздания
            Из АннулированияЗаявлений как АннулированияЗаявлений
            Левое соединение Аннулирование как Аннулирование
            по АннулированияЗаявлений.Ссылка == Аннулирование.АннулирующийДокумент
            Внутреннее соединение ОснованиеОтпуска как ОснованиеОтпуска
            по Аннулирование.АннулируемыйДокумент == ОснованиеОтпуска.Ссылка
            Где АннулированияЗаявлений.ФизическоеЛицо == %ФизическоеЛицо
                И не %ТолькоОтсутствия
                И Не %ВыводитьБудущие
                И %ВыводитьПрошлые
                И АннулированияЗаявлений.Дата <| %ДатаФильтра) Как Заявления
        Упорядочить по Заявления.МоментСоздания Убыв}
    ПредставленияЗаявленийФизлица = ДанныеПредставлений(Запрос)
    возврат ПредставленияЗаявленийФизлица
;

@НаСервере
метод ДанныеПредставлений(Запрос: ТипизированныйЗапрос<неизвестно>): Массив<СостояниеДокументаКомпонентДанных>
    пер ПредставленияЗаявленийФизлица: Массив<СостояниеДокументаКомпонентДанных>
    знч ЗаявленияФизлица: Массив<ДокументИмеющийСостояние.Ссылка>
    знч ДанныеЗаявлений: Соответствие<ДокументИмеющийСостояние.Ссылка, ДанныеЗаявления>
    исп РезультатЗапроса = Запрос.Выполнить()
    для СтрокаРезультата из РезультатЗапроса
        ЗаявленияФизлица.Добавить(СтрокаРезультата.Документ)
        ДанныеЗаявлений.Вставить(СтрокаРезультата.Документ, новый ДанныеЗаявления(СтрокаРезультата.ДатаДокумента, СтрокаРезультата.Представление, СтрокаРезультата.ДатаНачала, СтрокаРезультата.ДатаОкончания))
    ;
    ПредставленияЗаявленийФизлица = СостДокументов.СостоянияДокументов(ЗаявленияФизлица)
    для Компонент из ПредставленияЗаявленийФизлица
        Компонент.ДатаДокумента = ДанныеЗаявлений[Компонент.Документ].ДатаДокумента
        Компонент.Представление = ДанныеЗаявлений[Компонент.Документ].Представление
        Компонент.ДополнительноеПредставление = СостДокументов.ПредставлениеПериодаДокумента(ДанныеЗаявлений[Компонент.Документ].ДатаДокумента, Неопределено, Неопределено, Неопределено, ДанныеЗаявлений[Компонент.Документ].ДатаНачала, ДанныеЗаявлений[Компонент.Документ].ДатаОкончания)
    ;
    знч Сервисы = СостояниеДокументовПоставщик.ПолучитьСервисы()
    для Сервис из Сервисы
        Сервис.ЗаполнитьКартинкиДокументов(ПредставленияЗаявленийФизлица)
    ;
    возврат ПредставленияЗаявленийФизлица
;

@ВПодсистеме
@НаКлиенте
метод СписокВидовЗаявлений(): ЧитаемыйМассив<ЭлементСпискаЗначений<Клиент.ВидыЗаявленийНаОтпуск>>
    пер СписокВидовЗаявлений: Массив<ЭлементСпискаЗначений<Клиент.ВидыЗаявленийНаОтпуск>>
    пер ФункциональныеОпции: Отпуск.ФункциональныеОпции = Отпуск.ПараметрыСеанса().ФункциональныеОпции
    пер СтрокаСписка: ЭлементСпискаЗначений<Клиент.ВидыЗаявленийНаОтпуск>
    если ФункциональныеОпции.Отпуск
        СтрокаСписка = новый ЭлементСпискаЗначений<Клиент.ВидыЗаявленийНаОтпуск>()
        СтрокаСписка.Значение = Клиент.ВидыЗаявленийНаОтпуск.Отпуск
        СтрокаСписка.Представление = "Отпуск"
        СписокВидовЗаявлений.Добавить(СтрокаСписка)
    ;
    если ФункциональныеОпции.ОтпускЗаСвойСчет
        СтрокаСписка = новый ЭлементСпискаЗначений<Клиент.ВидыЗаявленийНаОтпуск>()
        СтрокаСписка.Значение = Клиент.ВидыЗаявленийНаОтпуск.ОтпускЗаСвойСчет
        СтрокаСписка.Представление = "Отпуск за свой счет"
        СписокВидовЗаявлений.Добавить(СтрокаСписка)
    ;
    если ФункциональныеОпции.ЗаявленияНаКомпенсациюОтпуска
        если Клиент.КомпенсацияОтпускаДоступна()
            СтрокаСписка = новый ЭлементСпискаЗначений<Клиент.ВидыЗаявленийНаОтпуск>()
            СтрокаСписка.Значение = Клиент.ВидыЗаявленийНаОтпуск.КомпенсацияОтпуска
            СтрокаСписка.Представление = "Денежная компенсация дней отпуска"
            СписокВидовЗаявлений.Добавить(СтрокаСписка)
        ;
    ;
    возврат новый ЧитаемыйМассив<ЭлементСпискаЗначений<Клиент.ВидыЗаявленийНаОтпуск>>(СписокВидовЗаявлений)
;

@ВПодсистеме
конст КЛЮЧ_ПАРАМЕТРОВ_СЕАНСА: Строка = "ОтпускПараметрыСеанса" 

@ВПроекте
структура НастройкиОтпусков
    пер КонтролироватьКоличествоДнейДоНачалаОтпуска: Булево
    пер ДопустимоеКоличествоДнейДоНачалаОтпуска: Число
    пер КонтролироватьНаличиеОтпускаНеМенее14Дней: Булево
    пер ОграничиватьКоличествоДнейОтпускаАвансом: Булево
    пер МаксимальноеКоличествоДнейОтпускаАвансом: Число
    пер ПроверятьНаличиеРабочихДнейВОтпуске: Булево
    пер ДоступенПереносОтпуска: Булево
    пер КоличествоДнейДоИзмененияОтпуска: Число
;

@ВПроекте
структура НапоминанияОГрафикеОтпусков
    пер НапоминатьОГрафикеОтпусков: Булево
    пер НапоминаниеОГрафикеОтпусковЧислоДней: Число
    пер НапоминатьОГрафикеОтпусковПодчиненных: Булево
    пер НапоминаниеОГрафикеОтпусковПодчиненныхЧислоДней: Число
;

@ВПроекте
структура ПараметрыСеанса
    пер ОстатокОтпуска: Число?
    пер ДатаНачалаПредыдущегоОтпуска: Дата?
    пер ДатаОкончанияПредыдущегоОтпуска: Дата?
    пер ДнейПредыдущегоОтпуска: Число
    пер ПояснениеПредыдущегоОтпуска: Строка
    пер ДатаНачалаСледующегоОтпуска: Дата?
    пер ДатаОкончанияСледующегоОтпуска: Дата?
    пер ДнейСледующегоОтпуска: Число
    пер ПояснениеСледующегоОтпуска: Строка
    пер КоличествоДнейКомпенсации: Число
    пер ДопустимаяПродолжнительностьОтпускаМенее14Дней: Число
    пер ПараметрыИнициализированы: Булево
    пер ФункциональныеОпции: ФункциональныеОпции
    пер ОстаткиОтпусковСотрудников: Массив<ОстаткиОтпусковПоСотрудникам>
;

@ВПроекте
структура ОстаткиОтпусковПоСотрудникам
    пер РабочееМесто: Сотрудники.Ссылка?
    пер ОсновноеМестоРаботы: Булево
    пер ОстатокОтпуска: Число
    пер КоличествоДнейКомпенсации: Число
    пер ВидыОтпусков: Массив<ОстаткиПоВидамОтпусков>
;

@ВПроекте
структура ОстаткиПоВидамОтпусков
    пер ВидОтпуска: ВидыОтпусков.Ссылка?
    пер ОстатокОтпуска: Число
;

@ВПроекте
@НаСервере
метод ДанныеОстатковОтпусковСотрудников(ФизическоеЛицо: ФизическиеЛица.Ссылка): Массив<ОстаткиОтпусковПоСотрудникам>
    пер ДанныеОстатковОтпусков: Массив<ОстаткиОтпусковПоСотрудникам>
    знч ИнформацияОбОтпускеСотрудников = ИнформацияОбОтпуске.ДанныеИнформацииОбОтпускеСотрудников(ФизическоеЛицо)
    знч ОстаткиОтпусковСотрудников = ОстаткиОтпусков.ДанныеОстатковОтпусков(ФизическоеЛицо)
    для ИнформацияОбОтпускеСотрудника из ИнформацияОбОтпускеСотрудников
        пер ОстаткиОтпусковСотрудника: ОстаткиОтпусковПоСотрудникам
        ОстаткиОтпусковСотрудника.РабочееМесто = ИнформацияОбОтпускеСотрудника.Ключ
        ОстаткиОтпусковСотрудника.ОсновноеМестоРаботы = ИнформацияОбОтпускеСотрудника.Значение["ОсновноеМестоРаботы"] как Булево
        ОстаткиОтпусковСотрудника.ОстатокОтпуска = ИнформацияОбОтпускеСотрудника.Значение["ОстатокОтпуска"] как Число
        ОстаткиОтпусковСотрудника.КоличествоДнейКомпенсации = ИнформацияОбОтпускеСотрудника.Значение["КоличествоДнейКомпенсации"] как Число
        ОстаткиОтпусковСотрудника.ВидыОтпусков = ОстаткиОтпусковСотрудников.ПолучитьИлиУмолчание(
            Ключ = ОстаткиОтпусковСотрудника.РабочееМесто,
            Умолчание = ВидыОтпусков.ВидыОтпусковПоУмолчанию().Преобразовать(ВидОтпуска -> новый ОстаткиПоВидамОтпусков(ВидОтпуска))
        )
        ДанныеОстатковОтпусков.Добавить(ОстаткиОтпусковСотрудника)
    ;
    возврат ДанныеОстатковОтпусков
;

@ВПроекте
@НаКлиенте
метод ПроверитьКоличествоДнейДоНачалаОтпуска(ПериодОтсутствия: ЗакрытыйДиапазон<Дата>, НастройкиОтпусков: НастройкиОтпусков): Булево
    пер РезультатПроверки = Истина
    если не НастройкиОтпусков.КонтролироватьКоличествоДнейДоНачалаОтпуска
        возврат РезультатПроверки
    ;
    пер ТекущаяДата: Дата = Дата.Сейчас()
    пер КоличествоДней = (ПериодОтсутствия.От - ТекущаяДата).ВДнях()
    РезультатПроверки = КоличествоДней >= НастройкиОтпусков.ДопустимоеКоличествоДнейДоНачалаОтпуска
    возврат РезультатПроверки
;

@ВПроекте
@НаКлиенте
метод ПроверитьПродолжительностьОтпуска(ПериодОтсутствия: ЗакрытыйДиапазон<Дата>, НастройкиОтпусков: НастройкиОтпусков, ПраздничныеДни: Соответствие<Число, Массив<Дата>>, ДопустимаяПродолжнительностьОтпускаМенее14Дней: Число): Булево
    пер РезультатПроверки = Истина
    если не НастройкиОтпусков.КонтролироватьНаличиеОтпускаНеМенее14Дней
        возврат РезультатПроверки
    ;
    если ДопустимаяПродолжнительностьОтпускаМенее14Дней == 14
        возврат РезультатПроверки
    ;
    пер ПродолжительностьОтпуска = ПродолжительностьОтпуска(ПериодОтсутствия.От, ПериодОтсутствия.До, ПраздничныеДни)
    пер ДнейОтпускаБезПраздников = ПродолжительностьОтпуска.КалендарныхДней - ПродолжительностьОтпуска.ПраздничныхДней
    если ДнейОтпускаБезПраздников >= 14
        возврат РезультатПроверки
    ;
    РезультатПроверки = ДнейОтпускаБезПраздников <= ДопустимаяПродолжнительностьОтпускаМенее14Дней
    возврат РезультатПроверки
;

@ВПроекте
@НаКлиенте
метод ПроверитьНаличиеРабочихДнейВОтпуске(ПериодОтсутствия: ЗакрытыйДиапазон<Дата>, НастройкиОтпусков: НастройкиОтпусков, ФизическоеЛицо: ФизическиеЛица.Ссылка?): Булево
    пер РезультатПроверки = Истина
    если не НастройкиОтпусков.ПроверятьНаличиеРабочихДнейВОтпуске
        возврат РезультатПроверки
    ;
    РезультатПроверки = ВызовСервера.ЕстьРабочиеДниВПериоде(ФизическоеЛицо,
        ПериодОтсутствия.От, ПериодОтсутствия.До)
        
    возврат РезультатПроверки
;

@ВПроекте
@НаКлиенте @НаСервере
метод ПродолжительностьОтпуска(ДатаНачала: Дата?, ДатаОкончания: Дата?, ПраздничныеДни: Соответствие<Число, Массив<Дата>>): ДлительностьОтпуска
    пер ДлительностьОтпуска: ДлительностьОтпуска
    если ДатаНачала != Неопределено и ДатаОкончания != Неопределено
        пер ДатаНачалаБезЧасовойЗоны: Дата = ДатаНачала
        пер ДатаОкончанияБезЧасовойЗоны: Дата = ДатаОкончания
        если ДатаНачала! <= ДатаОкончания!
            пер КоличествоПраздников: Число
            пер Длительность: Длительность = ДатаОкончанияБезЧасовойЗоны - ДатаНачалаБезЧасовойЗоны + 1д
            ДлительностьОтпуска.КалендарныхДней = Длительность.ВДнях()
            если не ПраздничныеДни.Пусто()
                если ПраздничныеДни.СодержитКлюч(ДатаНачалаБезЧасовойЗоны.Год)
                    пер Праздники: Массив<Дата> = ПраздничныеДни[ДатаНачалаБезЧасовойЗоны.Год]
                    для Праздник из Праздники
                        если Праздник >= ДатаНачала! и Праздник <= ДатаОкончания!
                            КоличествоПраздников += 1
                        ;
                    ;
                ;
                если ДатаНачалаБезЧасовойЗоны.Год != ДатаОкончанияБезЧасовойЗоны.Год и ПраздничныеДни.СодержитКлюч(ДатаОкончанияБезЧасовойЗоны.Год)
                    пер Праздники: Массив<Дата> = ПраздничныеДни[ДатаОкончанияБезЧасовойЗоны.Год]
                    для Праздник из Праздники
                        если Праздник >= ДатаНачала! и Праздник <= ДатаОкончания!
                            КоличествоПраздников += 1
                        ;
                    ;
                ;
            ;
            ДлительностьОтпуска.ПраздничныхДней = КоличествоПраздников
        ;
    ;
    возврат ДлительностьОтпуска
;

@ВПроекте
@НаСервере
метод ПраздничныеДни(ФизическоеЛицо: ФизическиеЛица.Ссылка?): Соответствие<Число, Массив<Дата>>
    пер ПраздничныеДниГрафикаРаботы: Соответствие<Число, Массив<Дата>>
    если ФизическоеЛицо != Неопределено
        пер ГрафикРаботы: ГрафикиРаботы.Ссылка? = ОрганизационнаяСтруктура.ГрафикРаботыФизическогоЛица(ФизическоеЛицо!)
        ПраздничныеДниГрафикаРаботы = ГрафикиРаботы.ПраздничныеДниГрафикаРаботы(ГрафикРаботы)
    ;
    возврат ПраздничныеДниГрафикаРаботы
;

@ВПроекте
@НаСервере
метод ТекущиеНастройкиОтпусков(): НастройкиОтпусков
    
    пер ТекущиеНастройки: НастройкиОтпусков
    
    знч Запрос = Запрос{
        Выбрать 
            КонтролироватьКоличествоДнейДоНачалаОтпуска, 
            ДопустимоеКоличествоДнейДоНачалаОтпуска,
            КонтролироватьНаличиеОтпускаНеМенее14Дней, 
            ОграничиватьКоличествоДнейОтпускаАвансом,
            МаксимальноеКоличествоДнейОтпускаАвансом,
            ПроверятьНаличиеРабочихДнейВОтпуске
            
        Из 
            НастройкиОтпусков}
        
    исп РезультатЗапроса = Запрос.Выполнить() 
    для СтрокаРезультатаЗапроса из РезультатЗапроса
        ТекущиеНастройки.КонтролироватьКоличествоДнейДоНачалаОтпуска = СтрокаРезультатаЗапроса.КонтролироватьКоличествоДнейДоНачалаОтпуска
        ТекущиеНастройки.ДопустимоеКоличествоДнейДоНачалаОтпуска = СтрокаРезультатаЗапроса.ДопустимоеКоличествоДнейДоНачалаОтпуска
        ТекущиеНастройки.КонтролироватьНаличиеОтпускаНеМенее14Дней = СтрокаРезультатаЗапроса.КонтролироватьНаличиеОтпускаНеМенее14Дней
        ТекущиеНастройки.ОграничиватьКоличествоДнейОтпускаАвансом = СтрокаРезультатаЗапроса.ОграничиватьКоличествоДнейОтпускаАвансом
        ТекущиеНастройки.МаксимальноеКоличествоДнейОтпускаАвансом = СтрокаРезультатаЗапроса.МаксимальноеКоличествоДнейОтпускаАвансом
        ТекущиеНастройки.ПроверятьНаличиеРабочихДнейВОтпуске = СтрокаРезультатаЗапроса.ПроверятьНаличиеРабочихДнейВОтпуске
    ;
    возврат ТекущиеНастройки
;

@ВПодсистеме
метод ПредставлениеРабочегоМеста(Позиция: ШтатноеРасписание.Ссылка?, Должность: Должности.Ссылка, МестоВСтруктуреПредприятия: СтруктураПредприятия.Ссылка,
    Организация: Организации.Ссылка, ПоказыватьОрганизацию: Булево): Строка
    
    пер Представление: Строка
    если Позиция != Неопределено
        Представление = Позиция.Представление()
    ;
    если Представление.Пусто()
        Представление = "%{Должность.Представление()} (%{МестоВСтруктуреПредприятия.Представление()})"
    ;
    если ПоказыватьОрганизацию
        Представление = "%Представление (%{Организация.Представление()})"
    ;
    возврат Представление
;

@ВПодсистеме
@НаСервере @ДоступноСКлиента
статический метод РабочиеМестаФизическогоЛица(ФизическоеЛицо: ФизическиеЛица.Ссылка?): Массив<РабочееМесто>
    пер РабочиеМеста = новый Массив<РабочееМесто>()
    если ФизическоеЛицо == Неопределено
        возврат РабочиеМеста
    ;
    пер ДанныеСотрудников = Сотрудники.СотрудникиФизическогоЛицаОрганизации(ФизическоеЛицо)
    для ДанныеСотрудника из ДанныеСотрудников
        пер ДанныеРабочегоМеста = новый РабочееМесто()
        ДанныеРабочегоМеста.РабочееМесто = ДанныеСотрудника.Сотрудник
        ДанныеРабочегоМеста.Основное = ДанныеСотрудника.Основной
        ДанныеРабочегоМеста.Позиция = ДанныеСотрудника.Позиция
        ДанныеРабочегоМеста.МестоВСтруктуреПредприятия = ДанныеСотрудника.МестоВСтруктуреПредприятия
        ДанныеРабочегоМеста.Должность = ДанныеСотрудника.Должность
        ДанныеРабочегоМеста.Организация = ДанныеСотрудника.Организация
        РабочиеМеста.Добавить(ДанныеРабочегоМеста)
    ;
    возврат РабочиеМеста
;

@ВПодсистеме
метод НазваниеПредставления(): Строка
    возврат "Заявление"
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ОстатокОтпускаФизическогоЛицаНаДату(ФизическоеЛицо: ФизическиеЛица.Ссылка, ДатаАктуальности: Дата): Число?
    
    знч ФункциональныеОпции = ПолучитьФункциональныеОпции()
    если ФункциональныеОпции.ОстаткиОтпусковПоРабочимМестам
        пер ОстатокОтпуска: Число?
        знч ДанныеСотрудников = Сотрудники.СотрудникиФизическогоЛицаОрганизации(ФизическоеЛицо)
        если не ДанныеСотрудников.Пусто()
            знч ОстатокОтпускаСотрудников = ОстатокОтпускаСотрудниковНаДату(ФизическоеЛицо, ДатаАктуальности)
            знч Сотрудник = ДанныеСотрудников.Первый().Сотрудник
            если ОстатокОтпускаСотрудников.СодержитКлюч(Сотрудник)
                ОстатокОтпуска = ОстатокОтпускаСотрудников.Получить(Сотрудник)
            ;
        ;
        возврат ОстатокОтпуска
    ;
    
    знч Запрос = Запрос{
        Выбрать Первые 1
            БудущиеИзменения.ОстатокОтпуска Как ОстатокОтпуска
        Из
            БудущиеИзмененияОстатковОтпуска Как БудущиеИзменения
        Где
            БудущиеИзменения.ФизическоеЛицо == %ФизическоеЛицо
            И БудущиеИзменения.Дата <| %ДатаАктуальности
        Упорядочить По
            БудущиеИзменения.Дата Убыв}
    
    исп Результат = Запрос.Выполнить() 
    знч РезультатСтроки = новый ЧитаемыйМассив(Результат)
    если (не РезультатСтроки.Пусто())
        возврат РезультатСтроки[0].ОстатокОтпуска
    ;
    
    возврат Неопределено

;

@НаСервере
метод ОбластьВТОстаткиВидовОтпусков(ФизическоеЛицо: ФизическиеЛица.Ссылка, ДатаАктуальности: Дата)
    знч Запрос = Запрос{
        Выбрать 
            ОстаткиОтпусков.РабочееМесто,
            ОстаткиОтпусков.ВидОтпуска,
            ОстаткиОтпусков.ОстатокОтпуска
        Поместить ВТТекущиеОстатки
        Из
            ОстаткиОтпусков Как ОстаткиОтпусков
        Где 
            ОстаткиОтпусков.ФизическоеЛицо == %ФизическоеЛицо
        ;
        Выбрать 
            БудущиеИзменения.РабочееМесто Как РабочееМесто,
            БудущиеИзменения.ВидОтпуска Как ВидОтпуска,
            Максимум(БудущиеИзменения.Дата) Как Дата
        Поместить ВТМаксимальныеДаты
        Из
            БудущиеИзмененияОстатковОтпуска Как БудущиеИзменения
        Где
            БудущиеИзменения.ФизическоеЛицо == %ФизическоеЛицо
            И БудущиеИзменения.РабочееМесто != Неопределено
            И БудущиеИзменения.Дата <| %ДатаАктуальности
        Сгруппировать По
            БудущиеИзменения.РабочееМесто,
            БудущиеИзменения.ВидОтпуска
        ;            
        Выбрать
            БудущиеИзменения.РабочееМесто Как РабочееМесто,
            БудущиеИзменения.ВидОтпуска Как ВидОтпуска,
            БудущиеИзменения.ОстатокОтпуска Как ОстатокОтпуска
        Поместить ВТОстаткиВидовОтпусков
        Из
            БудущиеИзмененияОстатковОтпуска Как БудущиеИзменения
            Внутреннее Соединение ВТМаксимальныеДаты Как МаксимальныеДаты
                По БудущиеИзменения.РабочееМесто == МаксимальныеДаты.РабочееМесто
                И БудущиеИзменения.ВидОтпуска == МаксимальныеДаты.ВидОтпуска
                И БудущиеИзменения.Дата == МаксимальныеДаты.Дата
        Объединить Все
        Выбрать
            ТекущиеОстатки.РабочееМесто,
            ТекущиеОстатки.ВидОтпуска,
            ТекущиеОстатки.ОстатокОтпуска
        Из
            ВТТекущиеОстатки Как ТекущиеОстатки
            Левое Соединение ВТМаксимальныеДаты Как МаксимальныеДаты
                По ТекущиеОстатки.РабочееМесто == МаксимальныеДаты.РабочееМесто
                И ТекущиеОстатки.ВидОтпуска == МаксимальныеДаты.ВидОтпуска
        Где
            МаксимальныеДаты.РабочееМесто Есть Null}
    Запрос.Выполнить()
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ОстатокОтпускаСотрудниковНаДату(ФизическоеЛицо: ФизическиеЛица.Ссылка, ДатаАктуальности: Дата): ЧитаемоеСоответствие<Сотрудники.Ссылка, Число>
    пер ОстатокОтпускаСотрудников: Соответствие<Сотрудники.Ссылка, Число>
    знч Запрос = Запрос{
        Выбрать
            ОстаткиОтпусков.РабочееМесто Как РабочееМесто,
            Сумма(ОстаткиОтпусков.ОстатокОтпуска) Как ОстатокОтпуска
        Из
            ВТОстаткиВидовОтпусков Как ОстаткиОтпусков
        Сгруппировать По
            ОстаткиОтпусков.РабочееМесто}
    исп ОбластьВидимостиВременныхТаблиц.Открыть(Ложь)
    ОбластьВТОстаткиВидовОтпусков(ФизическоеЛицо, ДатаАктуальности)
    исп Результат = Запрос.Выполнить() 
    для РезультатСтрока из Результат
        ОстатокОтпускаСотрудников.Вставить(РезультатСтрока.РабочееМесто, РезультатСтрока.ОстатокОтпуска)
    ;
    возврат ОстатокОтпускаСотрудников
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ОстаткиВидовОтпускаСотрудниковНаДату(ФизическоеЛицо: ФизическиеЛица.Ссылка, ДатаАктуальности: Дата): ЧитаемоеСоответствие<Сотрудники.Ссылка, Массив<ОстаткиПоВидамОтпусков>>
    пер ДанныеОстатков: Соответствие<Сотрудники.Ссылка, Массив<Отпуск.ОстаткиПоВидамОтпусков>>
    знч Запрос = Запрос{
        Выбрать
            ОстаткиОтпусков.РабочееМесто Как РабочееМесто,
            ОстаткиОтпусков.ВидОтпуска Как ВидОтпуска,
            ОстаткиОтпусков.ОстатокОтпуска Как ОстатокОтпуска
        Из
            ВТОстаткиВидовОтпусков Как ОстаткиОтпусков
            Внутреннее Соединение ВидыОтпусков Как ВидыОтпусков
                По ОстаткиОтпусков.ВидОтпуска == ВидыОтпусков.Ссылка
        Упорядочить По
            ОстаткиОтпусков.РабочееМесто,
            ВидыОтпусков.Основной Убыв,
            ОстаткиОтпусков.ВидОтпуска}
    исп ОбластьВидимостиВременныхТаблиц.Открыть(Ложь)
    ОбластьВТОстаткиВидовОтпусков(ФизическоеЛицо, ДатаАктуальности)
    исп Результат = Запрос.Выполнить() 
    для РезультатСтрока из Результат
        пер ОстаткиПоВидуОтпуска: ОстаткиПоВидамОтпусков
        ОстаткиПоВидуОтпуска.ВидОтпуска = РезультатСтрока.ВидОтпуска
        ОстаткиПоВидуОтпуска.ОстатокОтпуска = РезультатСтрока.ОстатокОтпуска
        пер ДанныеОстатковСотрудника: Массив<ОстаткиПоВидамОтпусков>
        если ДанныеОстатков.СодержитКлюч(РезультатСтрока.РабочееМесто)
            ДанныеОстатковСотрудника = ДанныеОстатков.Получить(РезультатСтрока.РабочееМесто)
        ;
        ДанныеОстатковСотрудника.Добавить(ОстаткиПоВидуОтпуска)
        ДанныеОстатков.Вставить(РезультатСтрока.РабочееМесто, ДанныеОстатковСотрудника)
    ;
    возврат ДанныеОстатков
;

@ВПодсистеме
@НаСервере
метод ДатаОтпускаСотрудниковПоДлительности(ФизическоеЛицо: ФизическиеЛица.Ссылка, КоличествоДнейОтпуска: Число): ЧитаемоеСоответствие<Сотрудники.Ссылка, Дата?>
    пер ДатаОтпускаСотрудников: Соответствие<Сотрудники.Ссылка, Дата?>
    пер ОстатокСотрудников = ИнформацияОбОтпуске.ОстатокОтпускаСотрудников(ФизическоеЛицо)
    пер ЧасовойПояс: ЧасовойПояс = ВладельцыКабинетов.ЧасовойПоясФизическогоЛица(ФизическоеЛицо)
    для КлючИЗначение из ОстатокСотрудников
        если КлючИЗначение.Значение >= КоличествоДнейОтпуска
            ДатаОтпускаСотрудников.Вставить(КлючИЗначение.Ключ, Дата.Сейчас(ЧасовойПояс))
        ;
    ;
    знч Запрос = Запрос{
        Выбрать
            БудущиеИзменения.РабочееМесто Как РабочееМесто,
            БудущиеИзменения.Дата Как Дата,
            БудущиеИзменения.ВидОтпуска Как ВидОтпуска,
            БудущиеИзменения.ОстатокОтпуска Как ОстатокОтпуска
         Из
            БудущиеИзмененияОстатковОтпуска Как БудущиеИзменения
         Где
            БудущиеИзменения.ФизическоеЛицо == %ФизическоеЛицо
            И БудущиеИзменения.РабочееМесто != Неопределено
            И БудущиеИзменения.РабочееМесто не В(%{ДатаОтпускаСотрудников.Ключи()})
         Упорядочить По
            БудущиеИзменения.РабочееМесто,
            БудущиеИзменения.Дата}
    исп Результат = Запрос.Выполнить() 
    пер ОстаткиВидовОтпусков: Соответствие<ВидыОтпусков.Ссылка, Число>
    пер ТекущиеОстатки = ОстаткиОтпусков.ДанныеОстатковОтпусков(ФизическоеЛицо)
    пер ТекущийСотрудник: Сотрудники.Ссылка?
    для РезультатСтрока из Результат
        если ТекущийСотрудник != РезультатСтрока.РабочееМесто
            ОстаткиВидовОтпусков.Очистить()
            если ТекущиеОстатки.СодержитКлюч(РезультатСтрока.РабочееМесто)
                пер ТекущиеОстаткиСотрудника = ТекущиеОстатки.Получить(РезультатСтрока.РабочееМесто)
                для ОстаткиПоВидуОтпуска из ТекущиеОстаткиСотрудника
                    ОстаткиВидовОтпусков.Вставить(ОстаткиПоВидуОтпуска.ВидОтпуска, ОстаткиПоВидуОтпуска.ОстатокОтпуска)
                ;
            ;
        ;
        ТекущийСотрудник = РезультатСтрока.РабочееМесто
        если ДатаОтпускаСотрудников.СодержитКлюч(РезультатСтрока.РабочееМесто)
            продолжить
        ;
        ОстаткиВидовОтпусков.Вставить(РезультатСтрока.ВидОтпуска, РезультатСтрока.ОстатокОтпуска)
        пер ОстатокОтпуска: Число
        для КлючИЗначение из ОстаткиВидовОтпусков
            ОстатокОтпуска += КлючИЗначение.Значение.ЦелаяЧасть()
        ;
        если ОстатокОтпуска >= КоличествоДнейОтпуска
            ДатаОтпускаСотрудников.Вставить(РезультатСтрока.РабочееМесто, РезультатСтрока.Дата.ДобавитьДни(1))
        ;
    ;
    возврат ДатаОтпускаСотрудников
;

@ВПроекте
@НаКлиенте
метод ИспользуетсяНесколькоВидовОтпусков(): Булево
    пер НесколькоВидовОтпусков: Булево
    знч ОстаткиОтпусковСотрудников = Отпуск.ПараметрыСеанса().ОстаткиОтпусковСотрудников
    для ДанныеСотрудника из ОстаткиОтпусковСотрудников
        если ДанныеСотрудника.ВидыОтпусков.Размер() > 1
            НесколькоВидовОтпусков = Истина
            прервать
        ;
    ;
    возврат НесколькоВидовОтпусков
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод РаспределениеДнейОтпускаЗаявления(ФизическоеЛицо: ФизическиеЛица.Ссылка, ДатаНачала: Дата, ДатаОкончания: Дата, РабочиеМеста: Массив<РабочееМесто>, ПраздничныеДни: Соответствие<Число, Массив<Дата>>): Массив<ПериодыОтпускаСтрока>
    пер РаспределениеДнейОтпуска: Массив<ПериодыОтпускаСтрока>
    знч ОстатокОтпускаСотрудников = ОстаткиВидовОтпускаСотрудниковНаДату(ФизическоеЛицо, ДатаНачала)
    знч ДанныеОтпуска = ПродолжительностьОтпуска(ДатаНачала, ДатаОкончания, ПраздничныеДни)
    знч ПродолжительностьОтпуска = ДанныеОтпуска.КалендарныхДней - ДанныеОтпуска.ПраздничныхДней
    для РабочееМесто из РабочиеМеста
        знч ОстаткиВидовОтпускаСотрудника = ОстатокОтпускаСотрудников.ПолучитьИлиУмолчание(РабочееМесто.РабочееМесто)
        если ОстаткиВидовОтпускаСотрудника == Неопределено или ОстаткиВидовОтпускаСотрудника.Пусто()
            продолжить
        ;
        знч ОсновнойОтпуск = ОстаткиВидовОтпускаСотрудника.Первый().ВидОтпуска
        знч УпорядоченныеОтпуска: Массив<ОстаткиПоВидамОтпусков>
        УпорядоченныеОтпуска.Добавить(ОстаткиВидовОтпускаСотрудника.Первый())
        УпорядоченныеОтпуска.ДобавитьВсе(ОстаткиВидовОтпускаСотрудника.ПодМассив(1).СортироватьПо(Элемент -> Элемент.ОстатокОтпуска, НаправлениеСортировки.ПоУбыванию))
        пер СуммаДней: Число
        для ОстаткиВидаОтпуска из УпорядоченныеОтпуска
            если ОстаткиВидаОтпуска.ОстатокОтпуска > 0
                СуммаДней += ОстаткиВидаОтпуска.ОстатокОтпуска
            ;
        ;
        пер ДниОсновногоОтпуска: Число
        если СуммаДней < ПродолжительностьОтпуска
            ДниОсновногоОтпуска = ПродолжительностьОтпуска - СуммаДней
        ;
        пер Начало = ДатаНачала
        пер ДнейВсего: Число
        для ОстаткиВидаОтпуска из УпорядоченныеОтпуска
            пер ОстатокОтпуска = ОстаткиВидаОтпуска.ОстатокОтпуска
            если ОстаткиВидаОтпуска.ВидОтпуска == ОсновнойОтпуск
                ОстатокОтпуска = ОстатокОтпуска <= 0 ? ДниОсновногоОтпуска : ОстатокОтпуска + ДниОсновногоОтпуска
            ;
            если ОстатокОтпуска <= 0
                продолжить
            ;
            пер ДнейВидаОтпуска = ПродолжительностьОтпуска - ДнейВсего
            если ДнейВидаОтпуска > ОстатокОтпуска
                ДнейВидаОтпуска = ОстатокОтпуска.ЦелаяЧасть()
            ;
            если ДнейВидаОтпуска <= 0
                прервать
            ;
            пер Окончание = Начало.ДобавитьДни(ДнейВидаОтпуска - 1)
            если ДнейВидаОтпуска == ПродолжительностьОтпуска - ДнейВсего
                Окончание = ДатаОкончания
            иначе
                пер ДанныеВидаОтпуска = ПродолжительностьОтпуска(Начало, Окончание, ПраздничныеДни)
                пока ДанныеВидаОтпуска.КалендарныхДней - ДанныеВидаОтпуска.ПраздничныхДней < ДнейВидаОтпуска
                    Окончание = Окончание.ДобавитьДни(1)
                    ДанныеВидаОтпуска = ПродолжительностьОтпуска(Начало, Окончание, ПраздничныеДни)
                ;
            ;
            пер СтрокаОтпуска = новый ПериодыОтпускаСтрока()
            СтрокаОтпуска.ДатаНачала = Начало
            СтрокаОтпуска.ДатаОкончания = Окончание
            СтрокаОтпуска.РабочееМесто = РабочееМесто.РабочееМесто
            СтрокаОтпуска.ВидОтпуска = ОстаткиВидаОтпуска.ВидОтпуска
            СтрокаОтпуска.Использовать = Истина
            РаспределениеДнейОтпуска.Добавить(СтрокаОтпуска)
            ДнейВсего += ДнейВидаОтпуска
            если ДнейВсего == ПродолжительностьОтпуска
                прервать
            ;
            Начало = Окончание.ДобавитьДни(1)
        ;
    ;
    возврат РаспределениеДнейОтпуска
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод РаспределениеДнейКомпенсацииЗаявления(ФизическоеЛицо: ФизическиеЛица.Ссылка, ОстаткиОтпусковСотрудников: Массив<Отпуск.ОстаткиОтпусковПоСотрудникам>, РабочиеМеста: Массив<РабочееМесто>, КоличествоДнейКомпенсации: Число): Массив<ПериодыОтпускаСтрока>
    пер РаспределениеДнейКомпенсации: Массив<ПериодыОтпускаСтрока>
    если КоличествоДнейКомпенсации == 0
        возврат РаспределениеДнейКомпенсации
    ;
    для РабочееМесто из РабочиеМеста
        пер ОстаткиОтпусковСотрудника = ОстаткиОтпусковСотрудников.Фильтровать(Элемент -> Элемент.РабочееМесто == РабочееМесто.РабочееМесто)
        если ОстаткиОтпусковСотрудника.Пусто()
            продолжить
        ;
        пер ОстаткиВидовОтпускаСотрудника = ОстаткиОтпусковСотрудника.Первый()
        если ОстаткиВидовОтпускаСотрудника.ВидыОтпусков.Пусто()
            продолжить
        ;
        пер ОсновнойОтпуск = ОстаткиВидовОтпускаСотрудника.ВидыОтпусков.Первый().ВидОтпуска
        пер СуммаДней: Число
        для ОстаткиВидаОтпуска из ОстаткиВидовОтпускаСотрудника.ВидыОтпусков
            если ОстаткиВидаОтпуска.ВидОтпуска == ОсновнойОтпуск
                продолжить
            ;
            знч ОстатокВидаОтпуска = ОстаткиВидаОтпуска.ОстатокОтпуска.ЦелаяЧасть()
            если ОстатокВидаОтпуска > 0
                пер ДнейКомпенсации = Мин(КоличествоДнейКомпенсации - СуммаДней, ОстатокВидаОтпуска)
                пер СтрокаОтпуска = новый ПериодыОтпускаСтрока()
                СтрокаОтпуска.РабочееМесто = РабочееМесто.РабочееМесто
                СтрокаОтпуска.ВидОтпуска = ОстаткиВидаОтпуска.ВидОтпуска
                СтрокаОтпуска.КомпенсацияОтпуска = Истина
                СтрокаОтпуска.КоличествоДнейКомпенсации = ДнейКомпенсации
                РаспределениеДнейКомпенсации.Добавить(СтрокаОтпуска)
                СуммаДней += ДнейКомпенсации
            ;
            если СуммаДней == КоличествоДнейКомпенсации
                прервать
            ;
        ;
        если СуммаДней < КоличествоДнейКомпенсации
            пер СтрокаОтпуска = новый ПериодыОтпускаСтрока()
            СтрокаОтпуска.РабочееМесто = РабочееМесто.РабочееМесто
            СтрокаОтпуска.ВидОтпуска = ОсновнойОтпуск
            СтрокаОтпуска.КомпенсацияОтпуска = Истина
            СтрокаОтпуска.КоличествоДнейКомпенсации = КоличествоДнейКомпенсации - СуммаДней
            РаспределениеДнейКомпенсации.Добавить(СтрокаОтпуска)
        ;
    ;
    возврат РаспределениеДнейКомпенсации
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ВидСогласуемогоЗаявленияОтпуск(): ВидыСогласуемыхЗаявлений.Ссылка
    возврат ВидыСогласуемыхЗаявлений.НайтиПредопределенное(ВИД_СОГЛАСОВАНИЯ_ОТПУСКОВ)
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ПредставлениеОтпуска(Ссылка: ОснованиеОтпуска.Ссылка): Строка

    знч Реквизиты = Запрос{
    Выбрать
        ДатаНачала,
        ДатаОкончания,
        ФизическоеЛицо, 
        ПредставлениеВидаОтсутствия
    Из
        ОснованиеОтпуска
    Где Ссылка == %Ссылка
    }.Выполнить().ПервыйИлиУмолчание()

    возврат "%{Реквизиты.ПредставлениеВидаОтсутствия} с %{Реквизиты.ДатаНачала.Представление()} по %{Реквизиты.ДатаОкончания.Представление()}"

;

@ВПодсистеме
@НаСервере @ДоступноСКлиента
метод ДанныеОснованияОтпуска(ЗаявлениеСсылка: ОснованиеОтпуска.Ссылка): ДанныеОснованияОтпуска
    
    знч Запрос = Запрос{
        Выбрать
            Ссылка, 
            ДатаНачала,
            ДатаОкончания,
            Дата,
            СпособСвязи,
            ЗаСвойСчет,
            ПредоставитьМатериальнуюПомощьПриОтпуске,
            ПредоставитьЕдиновременнуюВыплатуКОтпуску,
            КоличествоДнейКомпенсации,
            КомпенсацияОтпуска,
            Комментарий,
            ФизическоеЛицо,
            ПредставлениеВидаОтсутствия
        Породить ДанныеОснованияОтпуска
        Из 
            ОснованиеОтпуска 
        Где 
            Ссылка == %ЗаявлениеСсылка}

    возврат Запрос.Выполнить().Единственный()
    
;

// Область СтроковыеРесурсы
@ВПроекте 
@НаСервере
перечисление ШаблонСообщения
    СогласованиеОтпуска,
    УведомлениеОбОтпуске,
    УведомлениеОПодписании,
    УведомлениеРуководителюОбОтпуске,
    ОтпускСогласован,
    ОтпускНеСогласован,
    ОтпускНеСогласованКадровойСлужбой
;

@ВПроекте 
@НаСервере
перечисление ШаблонСообщенияПереносОтпуска
    СогласованиеПереносаОтпуска,
    УведомлениеОПереносеОтпуска,
    УведомлениеОПодписанииПереносаОтпуска,
    УведомлениеРуководителюОПереносеОтпуска,
    ПереносОтпускаСогласован,
    ПереносОтпускаНеСогласован,
    ПереносОтпускаНеСогласованКадровойСлужбой
;

@НаСервере
метод СоздатьСтроковыеРесурсы(ТекстПисьма: Строка, ТемаПисьма: Строка, ТекстSms: Строка, ТекстPush: Строка): Массив<УниверсальныеМеханизмы.СтроковыйРесурс>
    пер СтроковыеРесурсы = новый Массив<УниверсальныеМеханизмы.СтроковыйРесурс>()
    СтроковыеРесурсы.Добавить(новый УниверсальныеМеханизмы.СтроковыйРесурс(Уведомления.ВидыТекстов.ТекстПисьма.ВСтроку(), ТекстПисьма, "Текст письма"))
    СтроковыеРесурсы.Добавить(новый УниверсальныеМеханизмы.СтроковыйРесурс(Уведомления.ВидыТекстов.ТемаПисьма.ВСтроку(), ТемаПисьма, "Тема письма"))
    СтроковыеРесурсы.Добавить(новый УниверсальныеМеханизмы.СтроковыйРесурс(Уведомления.ВидыТекстов.ТекстSms.ВСтроку(), ТекстSms, "Sms"))
    СтроковыеРесурсы.Добавить(новый УниверсальныеМеханизмы.СтроковыйРесурс(Уведомления.ВидыТекстов.ТекстPush.ВСтроку(), ТекстPush, "Push"))
    возврат СтроковыеРесурсы
;

@ВПроекте
@НаСервере
метод ОбновитьСтроковыеРесурсы()
    УниверсальныеМеханизмы.ЗаписатьЗначенияРесурсов(
        Отпуск.ИД_ПОДСИСТЕМЫ, ШаблонСообщения.СогласованиеОтпуска.ВСтроку(), "Запрос на согласование отпуска",
        СоздатьСтроковыеРесурсы(
            СодержимоеПисьмаЗапросОбОтпуске(),
            "Согласование отпуска для \%СотрудникФио\%",
            "\%СотрудникФио\%: прошу согласовать отпуск \%ЗаСвойСчет\% \%ПредставлениеПериода\%",
            "\%СотрудникФио\%: прошу согласовать отпуск \%ЗаСвойСчет\% \%ПредставлениеПериода\%"
        )
    )
    УниверсальныеМеханизмы.ЗаписатьЗначенияРесурсов(
        Отпуск.ИД_ПОДСИСТЕМЫ, ШаблонСообщения.УведомлениеОбОтпуске.ВСтроку(), "Уведомление об отпуске",
        СоздатьСтроковыеРесурсы(
            СодержимоеПисьмаУведомлениеОбОтпуске(),
            "Уведомление об отпуске - \%СотрудникФио\%",
            "\%СотрудникФио\%: буду в отпуске \%ПредставлениеПериода\%",
            "\%СотрудникФио\%: буду в отпуске \%ПредставлениеПериода\%"
        )
    )
    УниверсальныеМеханизмы.ЗаписатьЗначенияРесурсов(
        Отпуск.ИД_ПОДСИСТЕМЫ, ШаблонСообщения.УведомлениеРуководителюОбОтпуске.ВСтроку(), "Уведомление руководителю об отпуске",
        СоздатьСтроковыеРесурсы(
            СодержимоеПисьмаУведомлениеРуководителюОбОтпуске(),
            "Отпуск согласован - \%СотрудникФио\%",
            "\%СотрудникФио\%: отпуск \%ПредставлениеПериода\% согласован кадровой службой",
            "\%СотрудникФио\%: отпуск \%ПредставлениеПериода\% согласован кадровой службой"
        )
    )
    УниверсальныеМеханизмы.ЗаписатьЗначенияРесурсов(
        Отпуск.ИД_ПОДСИСТЕМЫ, ШаблонСообщения.ОтпускСогласован.ВСтроку(), "Ваш отпуск согласован",
        СоздатьСтроковыеРесурсы(
            СодержимоеПисьмаОтпускСогласован(),
            "Ваш отпуск согласован",
            "Отпуск \%ПредставлениеПериода\% \%ЗаСвойСчет\% согласован кадровой службой",
            "Отпуск \%ПредставлениеПериода\% \%ЗаСвойСчет\% согласован кадровой службой"
        )
    )
    УниверсальныеМеханизмы.ЗаписатьЗначенияРесурсов(
        Отпуск.ИД_ПОДСИСТЕМЫ, ШаблонСообщения.ОтпускНеСогласованКадровойСлужбой.ВСтроку(), "Ваш отпуск не согласован кадровой службой",
        СоздатьСтроковыеРесурсы(
            СодержимоеПисьмаОтпускНеСогласованКадровойСлужбой(),
            "Ваш отпуск не согласован кадровой службой",
            "Отпуск \%ПредставлениеПериода\% \%ЗаСвойСчет\% не согласован кадровой службой",
            "Отпуск \%ПредставлениеПериода\% \%ЗаСвойСчет\% не согласован кадровой службой. \%КомментарийПриОтказе\%"
        )
    )
    УниверсальныеМеханизмы.ЗаписатьЗначенияРесурсов(
        Отпуск.ИД_ПОДСИСТЕМЫ, ШаблонСообщения.ОтпускНеСогласован.ВСтроку(), "Ваш отпуск не согласован",
        СоздатьСтроковыеРесурсы(
            СодержимоеПисьмаОтпускНеСогласован(),
            "Ваш отпуск не согласован",
            "Отпуск \%ПредставлениеПериода\% \%ЗаСвойСчет\% не согласован",
            "Отпуск \%ПредставлениеПериода\% \%ЗаСвойСчет\% не согласован. \%КомментарийПриОтказе\%"
        )
    )
    УниверсальныеМеханизмы.ЗаписатьЗначенияРесурсов(
        Отпуск.ИД_ПОДСИСТЕМЫ, ШаблонСообщения.УведомлениеОПодписании.ВСтроку(), "Заявление на отпуск подписано",
        СоздатьСтроковыеРесурсы(
            СодержимоеПисьмаЗаявлениеНаОтпуск(),
            "Ваше заявление на отпуск подписано",
            "Ваше заявление на отпуск \%ЗаСвойСчет\% подписано",
            "Ваше заявление на отпуск \%ЗаСвойСчет\% подписано"
        )
    )
;
@ВПроекте
@НаСервере
метод ОбновитьСтроковыеРесурсыПереносОтпуска()
    УниверсальныеМеханизмы.ЗаписатьЗначенияРесурсов(
        Отпуск.ИД_ПОДСИСТЕМЫ, ШаблонСообщенияПереносОтпуска.СогласованиеПереносаОтпуска.ВСтроку(), "Запрос на согласование переноса отпуска",
        СоздатьСтроковыеРесурсы(
            СодержимоеПисьмаЗапросОПереносеОтпуска(),
            "Согласование переноса отпуска для \%СотрудникФио\%",
            "\%СотрудникФио\%: прошу согласовать перенос отпуска \%ЗаСвойСчет\% \%ПредставлениеПериода\%",
            "\%СотрудникФио\%: прошу согласовать перенос отпуска \%ЗаСвойСчет\% \%ПредставлениеПериода\%"
        )
    )
    УниверсальныеМеханизмы.ЗаписатьЗначенияРесурсов(
        Отпуск.ИД_ПОДСИСТЕМЫ, ШаблонСообщенияПереносОтпуска.УведомлениеОПереносеОтпуска.ВСтроку(), "Уведомление о переносе отпуска",
        СоздатьСтроковыеРесурсы(
            СодержимоеПисьмаУведомлениеОПереносеОтпуска(),
            "Уведомление о переносе отпуска - \%СотрудникФио\%",
            "\%СотрудникФио\%: буду в отпуске \%ПредставлениеПериода\%",
            "\%СотрудникФио\%: буду в отпуске \%ПредставлениеПериода\%"
        )
    )
    УниверсальныеМеханизмы.ЗаписатьЗначенияРесурсов(
        Отпуск.ИД_ПОДСИСТЕМЫ, ШаблонСообщенияПереносОтпуска.УведомлениеРуководителюОПереносеОтпуска.ВСтроку(), "Уведомление руководителю о переносе отпуска",
        СоздатьСтроковыеРесурсы(
            СодержимоеПисьмаУведомлениеРуководителюОПереносеОтпуска(),
            "Перенос отпуска согласован - \%СотрудникФио\%",
            "\%СотрудникФио\%: перенос отпуска на \%ПредставлениеПериода\% согласован кадровой службой",
            "\%СотрудникФио\%: перенос отпуска на \%ПредставлениеПериода\% согласован кадровой службой"
        )
    )
    УниверсальныеМеханизмы.ЗаписатьЗначенияРесурсов(
        Отпуск.ИД_ПОДСИСТЕМЫ, ШаблонСообщенияПереносОтпуска.ПереносОтпускаСогласован.ВСтроку(), "Ваш перенос отпуска согласован",
        СоздатьСтроковыеРесурсы(
            СодержимоеПисьмаПереносОтпускаСогласован(),
            "Ваш перенос отпуска согласован",
            "Перенос отпуска на \%ПредставлениеПериода\% \%ЗаСвойСчет\% согласован кадровой службой",
            "Перенос отпуска на \%ПредставлениеПериода\% \%ЗаСвойСчет\% согласован кадровой службой"
        )
    )
    УниверсальныеМеханизмы.ЗаписатьЗначенияРесурсов(
        Отпуск.ИД_ПОДСИСТЕМЫ, ШаблонСообщенияПереносОтпуска.ПереносОтпускаНеСогласованКадровойСлужбой.ВСтроку(), "Ваш перенос отпуска не согласован кадровой службой",
        СоздатьСтроковыеРесурсы(
            СодержимоеПисьмаПереносОтпускаНеСогласованКадровойСлужбой(),
            "Ваш перенос отпуска не согласован кадровой службой",
            "Перенос отпуска \%ПредставлениеПериода\% \%ЗаСвойСчет\% не согласован кадровой службой",
            "Перенос отпуска \%ПредставлениеПериода\% \%ЗаСвойСчет\% не согласован кадровой службой. \%КомментарийПриОтказе\%"
        )
    )
    УниверсальныеМеханизмы.ЗаписатьЗначенияРесурсов(
        Отпуск.ИД_ПОДСИСТЕМЫ, ШаблонСообщенияПереносОтпуска.ПереносОтпускаНеСогласован.ВСтроку(), "Ваш перенос отпуска не согласован",
        СоздатьСтроковыеРесурсы(
            СодержимоеПисьмаПереносОтпускаНеСогласован(),
            "Ваш перенос отпуска не согласован",
            "Перенос отпуска на \%ПредставлениеПериода\% \%ЗаСвойСчет\% не согласован.",
            "Перенос отпуска на \%ПредставлениеПериода\% \%ЗаСвойСчет\% не согласован. \%КомментарийПриОтказе\%"
        )
    )
    УниверсальныеМеханизмы.ЗаписатьЗначенияРесурсов(
        Отпуск.ИД_ПОДСИСТЕМЫ, ШаблонСообщенияПереносОтпуска.УведомлениеОПодписанииПереносаОтпуска.ВСтроку(), "Заявление на перенос отпуска подписано",
        СоздатьСтроковыеРесурсы(
            СодержимоеПисьмаЗаявлениеНаПереносОтпуска(),
            "Ваше заявление на перенос отпуска подписано",
            "Ваше заявление на перенос отпуска \%ЗаСвойСчет\% подписано",
            "Ваше заявление на перенос отпуска \%ЗаСвойСчет\% подписано"
        )
    )
;

@НаСервере
метод СодержимоеПисьмаЗапросОбОтпуске(): Строка
    знч ПисьмоПриглашение =
    "<html lang='ru-RU'>
        <head><meta charset='utf-8'></head>
        <body style='font-family:Arial;background:lightgrey: text-align: center'>
            <div style='min-width: 280px;max-width: 680px; margin: 0 auto'>
            <div style='height: 48px; background: whitesmoke;'>
                <p style='text-align: center;color:darkgray; padding: 16px;'><b>Запрос на согласование в 1С:Кабинет сотрудника</b></p>
            </div>
            <div style='background:white; padding: 8px 24px;'>
                <h2>\%ИмяОтчество\%!</h2> 
                <p>Вам поступил запрос на согласование отпуска \%ЗаСвойСчет\% для сотрудника: <b>\%СотрудникФио\%</b></p>
                Период отпуска: <b>\%ПредставлениеПериода\%</b>
                <p style='font-size: small; color: Gray'>Вы назначены согласующим, для согласования отпуска сотрудника. Перейдите на страницу приложения Кабинет сотрудника для согласования или используйте мобильное приложение.</p>
                <p style='text-align: center'><a style='text-decoration: none' href='\%СсылкаСЛогином\%'><img style='width: 80px' src='\%ЛоготипПриложения\%'></a></p>
                <p style='text-align: center;'><a style='text-decoration: none' href='\%СсылкаСЛогином\%'><b>ПЕРЕЙТИ В КАБИНЕТ СОТРУДНИКА</b></a></p></br>
            </div>
        </body>
    </html>"
    возврат ПисьмоПриглашение
;

@НаСервере
метод СодержимоеПисьмаУведомлениеОбОтпуске(): Строка
    знч ПисьмоПриглашение =
    "<html lang='ru-RU'>
        <head><meta charset='utf-8'></head>
        <body style='font-family:Arial;background:lightgrey: text-align: center'>
            <div style='min-width: 280px;max-width: 680px;margin: 0 auto'>
            <div style='height: 48px; background: whitesmoke;'>
                <p style='text-align: center;color:darkgray; padding: 16px;'><b>Отпуск сотрудника - \%СотрудникФио\%</b></p>
            </div>
            <div style='background:white; padding: 8px 24px;'>
                <p><b>\%СотрудникФио\%:</b> буду в отпуске в период - <b>\%ПредставлениеПериода\%</b>
                <p style='font-size: small; color: Gray'>\%ИмяОтчество\%, Вы получили это письмо, потому что включены в список уведомления об отпуске сотрудника.</p>
            </div>
        </body>
    </html>"
    возврат ПисьмоПриглашение
;

@НаСервере
метод СодержимоеПисьмаУведомлениеРуководителюОбОтпуске(): Строка
    знч ПисьмоПриглашение =
    "<html lang='ru-RU'>
        <head><meta charset='utf-8'></head>
        <body style='font-family:Arial;background:lightgrey: text-align: center'>
            <div style='min-width: 280px;max-width: 680px;margin: 0 auto'>
            <div style='height: 48px; background: whitesmoke;'>
                <p style='text-align: center;color:darkgray; padding: 16px;'><b>Согласован отпуск сотрудника</b></p>
            </div>
            <div style='background:white; padding: 8px 24px;'>
                <p><b>\%СотрудникФио\%:</b> отпуск - <b>\%ПредставлениеПериода\% согласован кадровой службой.</b>
                <p style='font-size: small; color: Gray'>\%ИмяОтчество\%, Вы получили это письмо, потому что включены в список уведомления об отпуске сотрудника.</p>
            </div>
        </body>
    </html>"
    возврат ПисьмоПриглашение
;

@НаСервере
метод СодержимоеПисьмаОтпускСогласован(): Строка
    знч ПисьмоПриглашение =
    "<html lang='ru-RU'>
        <head><meta charset='utf-8'></head>
        <body style='font-family:Arial;background:lightgrey: text-align: center'>
            <div style='min-width: 280px;max-width: 680px;margin: 0 auto'>
            <div style='height: 48px; background: whitesmoke;'>
                <p style='text-align: center;color:darkgray; padding: 16px;'><b>Отпуск согласован</b></p>
            </div>
            <div style='background:white; padding: 8px 24px;'>
                <h2>\%ИмяОтчество\%!</h2> 
                <p>Ваш отпуск \%ЗаСвойСчет\% согласован.</p>
            </div>
        </body>
    </html>"
    возврат ПисьмоПриглашение
;

@НаСервере
метод СодержимоеПисьмаОтпускНеСогласован(): Строка
    знч ПисьмоПриглашение =
    "<html lang='ru-RU'>
        <head><meta charset='utf-8'></head>
        <body style='font-family:Arial;background:lightgrey: text-align: center'>
            <div style='min-width: 280px;max-width: 680px;margin: 0 auto'>
            <div style='height: 48px; background: whitesmoke;'>
                <p style='text-align: center;color:darkgray; padding: 16px;'><b>Отпуск не согласован</b></p>
            </div>
            <div style='background:white; padding: 8px 24px;'>
                <h2>\%ИмяОтчество\%!</h2> 
                <p>Ваш отпуск \%ЗаСвойСчет\% не согласован. \%КомментарийПриОтказе\%</p>
            </div>
        </body>
    </html>"
    возврат ПисьмоПриглашение
;

@НаСервере
метод СодержимоеПисьмаОтпускНеСогласованКадровойСлужбой(): Строка
    знч ПисьмоПриглашение =
    "<html lang='ru-RU'>
        <head><meta charset='utf-8'></head>
        <body style='font-family:Arial;background:lightgrey: text-align: center'>
            <div style='min-width: 280px;max-width: 680px;margin: 0 auto'>
            <div style='height: 48px; background: whitesmoke;'>
                <p style='text-align: center;color:darkgray; padding: 16px;'><b>Отпуск не согласован</b></p>
            </div>
            <div style='background:white; padding: 8px 24px;'>
                <h2>\%ИмяОтчество\%!</h2> 
                <p>Ваш отпуск \%ЗаСвойСчет\% не согласован кадровой службой. \%КомментарийПриОтказе\%</p>
            </div>
        </body>
    </html>"
    возврат ПисьмоПриглашение
;

@НаСервере
метод СодержимоеПисьмаЗаявлениеНаОтпуск(): Строка
    знч ПисьмоПриглашение =
    "<html lang='ru-RU'>
        <head><meta charset='utf-8'></head>
        <body style='font-family:Arial;background:lightgrey: text-align: center'>
            <div style='min-width: 280px;max-width: 680px;margin: 0 auto'>
            <div style='height: 48px; background: whitesmoke;'>
                <p style='text-align: center;color:darkgray; padding: 16px;'><b>Заявление подписано</b></p>
            </div>
            <div style='background:white; padding: 8px 24px;'>
                <h2>\%ИмяОтчество\%!</h2> 
                <p>Ваше заявление на отпуск подписано и направлено для согласования в кадровую службу.</p>
            </div>
        </body>
    </html>"
    возврат ПисьмоПриглашение
;

@НаСервере
метод СодержимоеПисьмаЗапросОПереносеОтпуска(): Строка
    знч ПисьмоПриглашение =
    "<html lang='ru-RU'>
        <head><meta charset='utf-8'></head>
        <body style='font-family:Arial;background:lightgrey: text-align: center'>
            <div style='min-width: 280px;max-width: 680px; margin: 0 auto'>
            <div style='height: 48px; background: whitesmoke;'>
                <p style='text-align: center;color:darkgray; padding: 16px;'><b>Запрос на согласование в 1С:Кабинет сотрудника</b></p>
            </div>
            <div style='background:white; padding: 8px 24px;'>
                <h2>\%ИмяОтчество\%!</h2> 
                <p>Вам поступил запрос на согласование переноса отпуска \%ЗаСвойСчет\% для сотрудника: <b>\%СотрудникФио\%</b></p>
                Период отпуска: <b>\%ПредставлениеПериода\%</b>
                <p style='font-size: small; color: Gray'>Вы назначены согласующим, для согласования переноса отпуска сотрудника. Перейдите на страницу приложения Кабинет сотрудника для согласования или используйте мобильное приложение.</p>
                <p style='text-align: center'><a style='text-decoration: none' href='\%СсылкаСЛогином\%'><img style='width: 80px' src='\%ЛоготипПриложения\%'></a></p>
                <p style='text-align: center;'><a style='text-decoration: none' href='\%СсылкаСЛогином\%'><b>ПЕРЕЙТИ В КАБИНЕТ СОТРУДНИКА</b></a></p></br>
            </div>
        </body>
    </html>"
    возврат ПисьмоПриглашение
;

@НаСервере
метод СодержимоеПисьмаУведомлениеОПереносеОтпуска(): Строка
    знч ПисьмоПриглашение =
    "<html lang='ru-RU'>
        <head><meta charset='utf-8'></head>
        <body style='font-family:Arial;background:lightgrey: text-align: center'>
            <div style='min-width: 280px;max-width: 680px;margin: 0 auto'>
            <div style='height: 48px; background: whitesmoke;'>
                <p style='text-align: center;color:darkgray; padding: 16px;'><b>перенос отпуск сотрудника - \%СотрудникФио\%</b></p>
            </div>
            <div style='background:white; padding: 8px 24px;'>
                <p><b>\%СотрудникФио\%:</b> буду в отпуске в период - <b>\%ПредставлениеПериода\%</b>
                <p style='font-size: small; color: Gray'>\%ИмяОтчество\%, Вы получили это письмо, потому что включены в список уведомления о переносе отпуска сотрудника.</p>
            </div>
        </body>
    </html>"
    возврат ПисьмоПриглашение
;

@НаСервере
метод СодержимоеПисьмаУведомлениеРуководителюОПереносеОтпуска(): Строка
    знч ПисьмоПриглашение =
    "<html lang='ru-RU'>
        <head><meta charset='utf-8'></head>
        <body style='font-family:Arial;background:lightgrey: text-align: center'>
            <div style='min-width: 280px;max-width: 680px;margin: 0 auto'>
            <div style='height: 48px; background: whitesmoke;'>
                <p style='text-align: center;color:darkgray; padding: 16px;'><b>Согласован перенос отпуск сотрудника</b></p>
            </div>
            <div style='background:white; padding: 8px 24px;'>
                <p><b>\%СотрудникФио\%:</b> перенос отпуска на - <b>\%ПредставлениеПериода\% согласован кадровой службой.</b>
                <p style='font-size: small; color: Gray'>\%ИмяОтчество\%, Вы получили это письмо, потому что включены в список уведомления о переносе отпуска сотрудника.</p>
            </div>
        </body>
    </html>"
    возврат ПисьмоПриглашение
;

@НаСервере
метод СодержимоеПисьмаПереносОтпускаСогласован(): Строка
    знч ПисьмоПриглашение =
    "<html lang='ru-RU'>
        <head><meta charset='utf-8'></head>
        <body style='font-family:Arial;background:lightgrey: text-align: center'>
            <div style='min-width: 280px;max-width: 680px;margin: 0 auto'>
            <div style='height: 48px; background: whitesmoke;'>
                <p style='text-align: center;color:darkgray; padding: 16px;'><b>Отпуск согласован</b></p>
            </div>
            <div style='background:white; padding: 8px 24px;'>
                <h2>\%ИмяОтчество\%!</h2> 
                <p>Ваш перенос отпуска \%ЗаСвойСчет\% согласован.</p>
            </div>
        </body>
    </html>"
    возврат ПисьмоПриглашение
;

@НаСервере
метод СодержимоеПисьмаПереносОтпускаНеСогласован(): Строка
    знч ПисьмоПриглашение =
    "<html lang='ru-RU'>
        <head><meta charset='utf-8'></head>
        <body style='font-family:Arial;background:lightgrey: text-align: center'>
            <div style='min-width: 280px;max-width: 680px;margin: 0 auto'>
            <div style='height: 48px; background: whitesmoke;'>
                <p style='text-align: center;color:darkgray; padding: 16px;'><b>Перенос отпуска не согласован</b></p>
            </div>
            <div style='background:white; padding: 8px 24px;'>
                <h2>\%ИмяОтчество\%!</h2> 
                <p>Ваш перенос отпуска \%ЗаСвойСчет\% не согласован. \%КомментарийПриОтказе\%</p>
            </div>
        </body>
    </html>"
    возврат ПисьмоПриглашение
;

@НаСервере
метод СодержимоеПисьмаПереносОтпускаНеСогласованКадровойСлужбой(): Строка
    знч ПисьмоПриглашение =
    "<html lang='ru-RU'>
        <head><meta charset='utf-8'></head>
        <body style='font-family:Arial;background:lightgrey: text-align: center'>
            <div style='min-width: 280px;max-width: 680px;margin: 0 auto'>
            <div style='height: 48px; background: whitesmoke;'>
                <p style='text-align: center;color:darkgray; padding: 16px;'><b>Перенос отпуска не согласован</b></p>
            </div>
            <div style='background:white; padding: 8px 24px;'>
                <h2>\%ИмяОтчество\%!</h2> 
                <p>Ваш перенос отпуска \%ЗаСвойСчет\% не согласован кадровой службой. \%КомментарийПриОтказе\%</p>
            </div>
        </body>
    </html>"
    возврат ПисьмоПриглашение
;

@НаСервере
метод СодержимоеПисьмаЗаявлениеНаПереносОтпуска(): Строка
    знч ПисьмоПриглашение =
    "<html lang='ru-RU'>
        <head><meta charset='utf-8'></head>
        <body style='font-family:Arial;background:lightgrey: text-align: center'>
            <div style='min-width: 280px;max-width: 680px;margin: 0 auto'>
            <div style='height: 48px; background: whitesmoke;'>
                <p style='text-align: center;color:darkgray; padding: 16px;'><b>Заявление подписано</b></p>
            </div>
            <div style='background:white; padding: 8px 24px;'>
                <h2>\%ИмяОтчество\%!</h2> 
                <p>Ваше заявление на перенос отпуска подписано и направлено для согласования в кадровую службу.</p>
            </div>
        </body>
    </html>"
    возврат ПисьмоПриглашение
;
