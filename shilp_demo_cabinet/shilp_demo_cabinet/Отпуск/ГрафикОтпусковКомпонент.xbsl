импорт ИнтерфейсныеКомпонентыСтандартные
импорт УниверсальныеМеханизмы
импорт Компания
импорт Отсутствия
импорт ОбщиеСтандартные
импорт СтандартноеПриложение
импорт ФизическиеЛица
импорт ВладельцыКабинетов
импорт ЛичныеКабинетыПользователей

@Обработчик
метод ПослеСоздания()
    ИнтерфейсныеКомпоненты.ИнициализироватьТаблицу(Таблица = Компоненты.ГрафикОтпусков)
    ПрочитатьГрафикОтпусков()
    МенеджерГлобальныхКлиентскихСобытий.ПодключитьОбработчик(метод (Источник, Параметры) ->
        выбор Источник
        когда ФизЛица.ТРЕБУЕТСЯ_ОБНОВЛЕНИЕ_ДАННЫХ_ФИЗИЧЕСКОГО_ЛИЦА, СостДокументов.ИЗМЕНЕНО_СОСТОЯНИЕ_ДОКУМЕНТА
            ПрочитатьГрафикОтпусков()
        ;
        возврат
    ;)
;

метод ПрочитатьГрафикОтпусков()
    пер Источник = КоллекцияИсточникаГрафикОтпусков()
    Источник.Очистить()
    пер ДанныеГрафика = ГрафикОтпусков(ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо!, 
        РазделРуководителю, Компания.ПараметрыСеанса().ПодразделенияРуководителя)
    для Элемент из ДанныеГрафика
        если Элемент.ДанныеДляПредставления.Изображение == Неопределено
            Элемент.ДанныеДляПредставления.Изображение = СтандартноеПриложение.ПараметрыСеанса().АватарПоУмолчанию
        ;
    ;
    Источник.ДобавитьВсе(ДанныеГрафика)
    
    ЕстьДанные = не КоллекцияИсточникаГрафикОтпусков().Пусто()
;

метод КоллекцияИсточникаГрафикОтпусков(): Массив<ГрафикОтпусковКомпонентДанных>
    возврат Компоненты.ГрафикОтпусков.Источник.Данные
;

// Область Методы обслуживания ТаблицаРасширенная 

метод ГрафикОтпусковПриНажатииСтроки(Источник: Список<ИсточникДанныхМассив<ГрафикОтпусковКомпонентДанных>>, Событие: СобытиеСДанными<СтрокаСписка<ГрафикОтпусковКомпонентДанных>>)
    знч График: ГрафикОтпусковКомпонентДанных = Событие.Данные.ДанныеСтроки
    если РазделРуководителю или График.ФизическоеЛицо != ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо
        возврат
    ;
    пер ДанныеЗаполнения: Отпуск.ДанныеЗаполненияОтпуска
    если График.Заявление == Неопределено
        ДанныеЗаполнения.ДатаНачала = График.ДатаНачала
        ДанныеЗаполнения.ДатаОкончания = График.ДатаОкончания
    ;
    ЗаявлениеНаОтпускФормаДокумента.ОткрытьВМодальномОкне(
                КлючОбъекта = График.Заявление,
                ДанныеЗаполнения = ДанныеЗаполнения)
;

метод СтрокаСпискаСМиниатюройКомпонентДанных(ДанныеЭлемента: ГрафикОтпусковКомпонентДанных): СтрокаСпискаСМиниатюройКомпонентДанных
    возврат ДанныеЭлемента.ДанныеДляПредставления
;


// КонецОбласти Методы обслуживания ТаблицаРасширенная 

@НаСервере @ДоступноСКлиента
статический метод ГрафикОтпусков(ФизическоеЛицо: ФизическиеЛица.Ссылка, РазделРуководителю: Булево, Подразделения: ЧитаемыйМассив<СтруктураПредприятия.Ссылка>): Массив<ГрафикОтпусковКомпонентДанных>
    пер Данные = новый Массив<ГрафикОтпусковКомпонентДанных>()
    пер СписокФизическихЛиц: Множество<ФизическиеЛица.Ссылка>
    если РазделРуководителю
        СписокФизическихЛиц.ДобавитьВсе(ОрганизационнаяСтруктура.ПодчиненныеРуководителя(ФизическоеЛицо, Подразделения))
    иначе
        СписокФизическихЛиц.Добавить(ФизическоеЛицо)
    ;
    
    пер ЧасовойПояс: ЧасовойПояс = ВладельцыКабинетов.ЧасовойПоясФизическогоЛица(ФизическоеЛицо)
    знч Запрос = Запрос{
        Выбрать
            ГрафикОтпусков.ФизическоеЛицо Как ФизическоеЛицо,
            ГрафикОтпусков.ДатаНачала Как ДатаНачала,
            ГрафикОтпусков.ДатаОкончания Как ДатаОкончания,
            ГрафикОтпусков.ФизическоеЛицо.Представление.ЗаменитьNull("") Как ФизическоеЛицоПредставление,
            ГрафикОтпусков.ФизическоеЛицо.Миниатюра.ЗаменитьNull(Неопределено) Как Миниатюра,
            ЗаявлениеНаОтпуск.Ссылка.ЗаменитьNull(Неопределено) Как Заявление,
            СостояниеДокументов.Состояние.ЗаменитьNull(%{СостоянияДокумента.Черновик}) Как Состояние
        Из
            ГрафикОтпусков Как ГрафикОтпусков
                Левое Соединение ЗаявлениеНаОтпуск Как ЗаявлениеНаОтпуск
                По ГрафикОтпусков.ФизическоеЛицо == ЗаявлениеНаОтпуск.ФизическоеЛицо
                    И ГрафикОтпусков.ДатаНачала == ЗаявлениеНаОтпуск.ДатаНачала
                    И ГрафикОтпусков.ДатаОкончания <=| ЗаявлениеНаОтпуск.ДатаОкончания
                    И (ГрафикОтпусков.ДатаНачала >| %{Дата.Сейчас(ЧасовойПояс)})
                    И (ГрафикОтпусков.ФизическоеЛицо В(%СписокФизическихЛиц))
                Левое Соединение СостояниеДокументов Как СостояниеДокументов
                По (ЗаявлениеНаОтпуск.Ссылка == СостояниеДокументов.Документ)
        Где
            ГрафикОтпусков.ДатаНачала >| %{Дата.Сейчас(ЧасовойПояс)}
            И ГрафикОтпусков.ФизическоеЛицо В(%СписокФизическихЛиц)
        Упорядочить По
            ГрафикОтпусков.ДатаНачала,
            ГрафикОтпусков.ДатаОкончания,
            ГрафикОтпусков.ФизическоеЛицо}
    
    пер ПриоритетСостояний: Соответствие<СостоянияДокумента, Число>
    ПриоритетСостояний.Вставить(СостоянияДокумента.Выполнен, 3)
    ПриоритетСостояний.Вставить(СостоянияДокумента.Подготовлен, 2)
    ПриоритетСостояний.Вставить(СостоянияДокумента.Черновик, 1)
    ПриоритетСостояний.Вставить(СостоянияДокумента.ПолученОтказ, 0)
    
    пер Сотрудник: ФизическиеЛица.Ссылка?
    пер ДатаНачала: Дата?
    пер ДатаОкончания: Дата?
    
    исп Результат = Запрос.Выполнить() 
    для РезультатСтрока из Результат
        если Сотрудник != РезультатСтрока.ФизическоеЛицо
            или ДатаНачала != РезультатСтрока.ДатаНачала
            или ДатаОкончания != РезультатСтрока.ДатаОкончания
            пер Элемент = новый ГрафикОтпусковКомпонентДанных()
            Элемент.ФизическоеЛицо = РезультатСтрока.ФизическоеЛицо
            Элемент.ДатаНачала = РезультатСтрока.ДатаНачала
            Элемент.ДатаОкончания = РезультатСтрока.ДатаОкончания
            Элемент.Заявление = РезультатСтрока.Заявление
            пер ДанныеПредставления = новый СтрокаСпискаСМиниатюройКомпонентДанных()
            ДанныеПредставления.Представление = РезультатСтрока.ФизическоеЛицоПредставление
            ДанныеПредставления.ДополнительноеПредставление =
                Отсутствия.ПредставлениеОтсутствия(РезультатСтрока.ДатаНачала, РезультатСтрока.ДатаОкончания, Неопределено)
                 
            ДанныеПредставления.Изображение = ФизическиеЛица.ФотографияИзФайла(РезультатСтрока.Миниатюра)
            Элемент.ДанныеДляПредставления = ДанныеПредставления
            Данные.Добавить(Элемент)
            Сотрудник = РезультатСтрока.ФизическоеЛицо
            ДатаНачала = РезультатСтрока.ДатаНачала
            ДатаОкончания = РезультатСтрока.ДатаОкончания
        иначе
            пер Элемент = Данные.Последний()
            Элемент.Заявление = РезультатСтрока.Заявление
        ;
    ;
    возврат Данные
;