импорт ИнтерфейсныеКомпонентыСтандартные
импорт СтандартноеПриложение
импорт УправлениеПерсоналом
импорт ОбщиеСтандартные
импорт ФизическиеЛица


метод ФотографияКандидата(ДанныеСтроки: СтрокаДинамическогоСписка): ДвоичныйОбъект.Ссылка?
    пер Фотография = ДанныеСтроки.Данные["Фотография"] как ДвоичныйОбъект.Ссылка?
    если Фотография == Неопределено
         Фотография = СтандартноеПриложение.ПараметрыСеанса().АватарПоУмолчанию   
    ;
    возврат Фотография
;

метод Возраст(ДанныеСтроки: СтрокаДинамическогоСписка): Строка
    возврат ФизЛица.ПолныхЛетСтрокой(ДанныеСтроки.Данные["ДатаРождения"] как Дата)
;

метод ЗарплатныеОжидания(ДанныеСтроки: СтрокаДинамическогоСписка): Строка
    знч ЗарплатныеОжидания = ДанныеСтроки.Данные["ЗарплатныеОжидания"] как ОписаниеОплаты
    возврат ЗарплатныеОжидания.ПредставлениеОплаты()
;

метод ЦветСтатуса(ДанныеСтроки: СтрокаДинамическогоСписка): Цвет | Авто
    
    знч Вид = ДанныеСтроки.Данные["ВидПричиныПрекращенияРассмотрения"] как ВидыПрекращенияРассмотрения?
    если Вид == Неопределено
        возврат БиблиотекаЦветов.Цвет(БиблиотекаЦветов.ВидыЦвета.Серый)
    иначе
        выбор Вид
        когда ВидыПрекращенияРассмотрения.ОтказКандидата
            возврат БиблиотекаЦветов.Цвет(БиблиотекаЦветов.ВидыЦвета.Оранжевый)
        когда ВидыПрекращенияРассмотрения.ОтклонениеКандидата
            возврат БиблиотекаЦветов.Цвет(БиблиотекаЦветов.ВидыЦвета.Болотный)
        иначе
            возврат БиблиотекаЦветов.Цвет(БиблиотекаЦветов.ВидыЦвета.Серый)
        ;
    ;
;

метод ПредставлениеСтатуса(ДанныеСтроки: СтрокаДинамическогоСписка): Строка
    знч Вид = ДанныеСтроки.Данные["ВидПричиныПрекращенияРассмотрения"] как ВидыПрекращенияРассмотрения?
    если Вид == Неопределено
        возврат ДанныеСтроки.Данные["СтатусПредставление"] как Строка
    иначе
        возврат Вид.Представление()
    ;
;

@Обработчик
метод ПослеСоздания()
    ПриСозданииРассматриваемогоКандидата.ПодключитьОбработчик(()->Компоненты.Таблица.Обновить())
    ИнтерфейсныеКомпоненты.ИнициализироватьПодчиненныеКомпоненты(Компоненты)
;

метод ИзменитьСтатус(Команда: КомандаСПараметром<Массив<Сущность.Ключ>>, Параметр: Массив<Сущность.Ключ>)
    знч Статус = ФормаВыбораСтатуса.ОткрытьВМодальномОкне(
        ОжидатьЗакрытия = Истина,
        ЗначениеПоУмолчанию = СтатусыКандидата.Зарегистрирован,
        ДопустимыеТипы = {Тип<Неопределено>, Тип<СтатусыВоронки.Ссылка>})
    если Статус != Неопределено
        знч Кандидаты = новый Массив<РассматриваемыеКандидаты.Ссылка>()
        для Элемент из Параметр
            Кандидаты.Добавить(Элемент как РассматриваемыеКандидаты.Ссылка)
        ;
        
        знч КандидатыКИзмененению = РассматриваемыеКандидаты.ОтобратьСВозможностьюИзмененияСтатуса(Кандидаты, Статус как СтатусыВоронки.Ссылка)
        знч КоличествоКандидатов = КандидатыКИзмененению.Размер()
        знч ТекстКоличествоКандидатов = МенеджерСтрок.ФормаПредметаИсчисления(КоличествоКандидатов, "кандидата", "кандидатов", "кандидатов")
        
        если КандидатыКИзмененению.Размер() != Кандидаты.Размер()
            если Диалог.Вопрос(
                Заголовок = "Предупреждение",
                Текст = "Возможно изменение статуса %{КандидатыКИзмененению.Размер()} %ТекстКоличествоКандидатов из %{Кандидаты.Размер()}. Продолжить?",
                Кнопки = [КнопкаДиалога.Да, КнопкаДиалога.Нет]) != КнопкаДиалога.Да
                возврат
            ;
        ;
        
        СтатусыРассматриваемыхКандидатов.Установить(КандидатыКИзмененению, Статус как СтатусыВоронки.Ссылка)        
        СтандартныеФормы.ПоказатьУведомление(
                "Статусы кандидатов",
                "Изменены статусы %{КоличествоКандидатов} %ТекстКоличествоКандидатов")
                
        Компоненты.Таблица.Обновить()
    ;
    Компоненты.Таблица.ОчиститьОтмеченныеСтроки()
;

метод ПриНажатииСтроки(Источник: Список<ДинамическийСписок>, Событие: СобытиеСДанными<СтрокаСписка<СтрокаДинамическогоСписка>>)
    КарточкаРассматриваемогоКандидата.ОткрытьЗамещающуюФорму(Событие.Данные.ДанныеСтроки.Ключ как РассматриваемыеКандидаты.Ссылка, ФормаВладелец)
;

метод ВыражениеВозраст(): Строка
    знч Сейчас = Дата.Сейчас().Представление("гггг-ММ-дд")
    возврат 
    "выбор 
        когда ДатаРождения == Дата{}
            тогда Неопределено
        когда ДатаРождения.Месяц > Дата{%Сейчас}.Месяц или (ДатаРождения.Месяц == Дата{%Сейчас}.Месяц и ДатаРождения.День > Дата{%Сейчас}.День)
            тогда Дата{%Сейчас}.Год - ДатаРождения.Год - 1
        иначе Дата{%Сейчас}.Год - ДатаРождения.Год
    конец"
;