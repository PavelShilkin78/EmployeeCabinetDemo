импорт ОбщиеСтандартные
импорт УниверсальныеМеханизмы
импорт УправлениеПерсоналом
импорт ФизическиеЛица

@Обработчик
@ВыполнятьПриЗагрузкеДанных
метод ПередЗаписью(До: Кандидаты.Данные, ПараметрыЗаписи: Кандидаты.ПараметрыЗаписи)
    Наименование = "%Фамилия %Имя %Отчество"
    ЗаписатьПредставлениеОпытаРаботы()
    ЗаполнитьДополнительныеСвойства(ПараметрыЗаписи)
;

метод ЗаполнитьДополнительныеСвойства(ПараметрыЗаписи: Кандидаты.ПараметрыЗаписи)
    ПараметрыЗаписи.ДополнительныеСвойства = новый Кандидаты.ДополнительныеСвойства()
    ЗаписатьФотографию(ПараметрыЗаписи)
;

метод ЗаписатьФотографию(ПараметрыЗаписи: Кандидаты.ПараметрыЗаписи)
    если не ПараметрыЗаписи.РежимЗагрузкиДанных и ПараметрыЗаписи.Фотография != Неопределено
        если ПараметрыЗаписи.Фотография.Удален == Истина
            Фотография = Неопределено
        иначе если Фотография == Неопределено
            ПараметрыЗаписи.ДополнительныеСвойства.ЗагружаемаяФотографияСсылка = Файлы.ПолучитьСсылку(новый Ууид())
            Фотография = ПараметрыЗаписи.ДополнительныеСвойства.ЗагружаемаяФотографияСсылка
        иначе
            ПараметрыЗаписи.ДополнительныеСвойства.ЗагружаемаяФотографияСсылка = Фотография
        ;
    ;
;

@Обработчик
@ВыполнятьПриЗагрузкеДанных
метод ПослеЗаписи(До: Кандидаты.Данные, ПараметрыЗаписи: Кандидаты.ПараметрыЗаписи)
    исп КонтекстДоступа.Привилегированный()
    если не ПараметрыЗаписи.РежимЗагрузкиДанных и ЭтоНовый()
        СтатусыКандидатов.Установить(Ссылка, СтатусыКандидата.Зарегистрирован)
    ;
    ЗаписатьКонтактнуюИнформацию(ПараметрыЗаписи)
    ЗаполнитьДополнительныеСвойстваПродолжение(ПараметрыЗаписи)
    Кандидаты.ПослеЗаписиДополнение(Ссылка, не ПараметрыЗаписи.РежимЗагрузкиДанных)
    Кандидаты.ПересчитатьРазрешенияЗависимыхОбъектов([новый Кандидаты.ДанныеРасчетаРазрешений(этот)])
;

метод ЗаполнитьДополнительныеСвойстваПродолжение(ПараметрыЗаписи: Кандидаты.ПараметрыЗаписи)
    ЗаписатьФотографиюПродолжение(ПараметрыЗаписи)
    если ПараметрыЗаписи.СертификатыРезюме != Неопределено
        СертификатыРезюме.ЗаписатьСертификатыВладельца(Ссылка, ПараметрыЗаписи.СертификатыРезюме)
    ;
    если ПараметрыЗаписи.ПортфолиоРезюме != Неопределено
        ПортфолиоРезюме.ЗаписатьПортфолиоВладельца(Ссылка, ПараметрыЗаписи.ПортфолиоРезюме)
    ;
;

метод ЗаписатьФотографиюПродолжение(ПараметрыЗаписи: Кандидаты.ПараметрыЗаписи)
    если не ПараметрыЗаписи.РежимЗагрузкиДанных и ПараметрыЗаписи.Фотография != Неопределено
        если ПараметрыЗаписи.Фотография.Удален
            ПараметрыЗаписи.Фотография.Ссылка?.ЗагрузитьОбъект().Удалить() 
        иначе если ПараметрыЗаписи.Фотография.Хранилище != Неопределено
            пер ФайлОбъект: Файлы.Объект?
            если МенеджерСущности.СсылкаСуществует(ПараметрыЗаписи.ДополнительныеСвойства.ЗагружаемаяФотографияСсылка)
                ФайлОбъект = ПараметрыЗаписи.ДополнительныеСвойства.ЗагружаемаяФотографияСсылка.ЗагрузитьОбъект()
            иначе
                ФайлОбъект = новый Файлы.Объект(Ид = ПараметрыЗаписи.ДополнительныеСвойства.ЗагружаемаяФотографияСсылка.Ид).Заполнить()
            ;
            Файлы.ПоместитьДанныеВФайл(ФайлОбъект, ПараметрыЗаписи.Фотография.Хранилище.Загрузить())
            ФайлОбъект.ВидФайла = ВидыФайла.Вложение
            ФайлОбъект.Владелец = Ссылка
            ФайлОбъект.Наименование = ПараметрыЗаписи.Фотография.Наименование
            ФайлОбъект.Расширение = ПараметрыЗаписи.Фотография.Расширение
            ФайлОбъект.Размер = ПараметрыЗаписи.Фотография.Размер
            ФайлОбъект.Записать()
        ;
    ;
;

метод ЗаписатьКонтактнуюИнформацию(ПараметрыЗаписи: Кандидаты.ПараметрыЗаписи)
    если не ПараметрыЗаписи.РежимЗагрузкиДанных и ПараметрыЗаписи.КонтактнаяИнформация != Неопределено
        ЛичныеКонтакты.ЗаписатьКонтактыВладельца(Ссылка, ПараметрыЗаписи.КонтактнаяИнформация)
    ;
;

метод ЗаписатьПредставлениеОпытаРаботы()
    ПредставлениеОпытаРаботы = УправлениеПерсоналом.ПредставлениеДлительностиРаботы(ОпытРаботы)
;

@Обработчик
@ВыполнятьПриЗагрузкеДанных
метод ПослеУдаления(ПараметрыУдаления: Кандидаты.ПараметрыУдаления)
    исп КонтекстДоступа.Привилегированный()
    Кандидаты.ПослеУдаленияДополнение(Ссылка, не  ПараметрыУдаления.РежимЗагрузкиДанных)
;

@ВПроекте
@Реализация
метод Аватар(): ДвоичныйОбъект.Ссылка?
    если Фотография != Неопределено
        возврат Файлы.ДвоичныеДанныеФайла(Фотография).Ссылка
    ;
    возврат Неопределено
;