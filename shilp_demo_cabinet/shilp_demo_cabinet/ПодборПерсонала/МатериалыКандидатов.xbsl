импорт УниверсальныеМеханизмы
импорт КонтрольДоступа
импорт ОбщиеСтандартные
импорт ВебApi
импорт ОбменДанными

@ВПроекте
@НаСервере @ДоступноСКлиента
метод УдалитьМатериал(Ссылка: МатериалыКандидатов.Ссылка)
    Ссылка.ЗагрузитьОбъект().Удалить()    
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод СохранитьСсылкуКандидата(Кандидат: Кандидаты.Ссылка, СсылкаКандидата: Строка, Описание: Строка)
    СохранитьМатериалКандидата(Кандидат, СсылкаКандидата, Описание, ВидыМатериаловКандидата.Ссылка)
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод СохранитьФайлКандидата(
        Кандидат: Кандидаты.Ссылка,
        ФайлКандидата: Файлы.Ссылка,
        ВидФайла: ВидыМатериаловКандидата = ВидыМатериаловКандидата.Файл,
        Описание: Строка = "")
    если ВидФайла == ВидыМатериаловКандидата.Ссылка 
        возврат
    ;
    СохранитьМатериалКандидата(Кандидат, ФайлКандидата, Описание, ВидФайла)
;

@НаСервере
метод СохранитьМатериалКандидата(Кандидат: Кандидаты.Ссылка, Материал: Файлы.Ссылка|Строка, Описание: Строка, ВидМатериала: ВидыМатериаловКандидата)
    пер МатериалКандидата: МатериалыКандидатов.Объект
    МатериалКандидата.Кандидат = Кандидат
    МатериалКандидата.ВидДокумента = ВидМатериала
    МатериалКандидата.Материал = Материал
    МатериалКандидата.Описание = Описание
    МатериалКандидата.Дата = ДатаВремя.Сейчас()
    МатериалКандидата.Записать()    
;

// Область КонтрольДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): ЧитаемаяКоллекция<РазрешениеДоступа>
    возврат КонтрольДоступа.РазрешенияДоступаТаблицыСФизическимЛицомСПравомУдаления()
;

@Обработчик
метод ВычислитьРазрешенияДоступаДляОбъектов(Объекты: ЧитаемыйМассив<МатериалыКандидатов.ДанныеРасчетаРазрешений>): ЧитаемоеСоответствие<МатериалыКандидатов.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    возврат ПодборПерсоналаКонтрольДоступаПоставщик.ПолучитьСервис().ВычислитьРазрешенияДоступаДляМатериаловКандидатов(Объекты)
;

// Конец КонтрольДоступа

// JSON

@ВПроекте
структура МатериалКандидата_3_0
    @JsonСвойство(Имя = "ID")
    обз знч Идентификатор: Строка
    @JsonСвойство(Имя = "material")
    обз знч Материал: Строка|МенеджерФайлов.ДанныеФайлаJson
    @JsonСвойство(Имя = "candidate")
    обз знч Кандидат: Строка
    @JsonСвойство(Имя = "materialType")
    пер ВидДокумента: ВидыМатериаловКандидатаJson?
    @JsonСвойство(Имя = "name")
    пер Наименование: Строка?
    @JsonСвойство(Имя = "date")
    пер Дата: ДатаВремя?
    @JsonСвойство(Имя = "description")
    пер Описание: Строка?
;

перечисление ВидыМатериаловКандидатаJson
    file,
    link,
    passport,
    recordOfService,
    insuranceNumber,
    militaryID,
    educationDocument,
    workPermit,
    taxID,
    form2NDFL,
    marriageSertificate,
    divorceSertificate       
;

конст СООТВЕТСТВИЕ_ВИДЫ_МАТЕРИАЛОВ_КАНДИДАТА_JSON = {
    ВидыМатериаловКандидатаJson.file: ВидыМатериаловКандидата.Файл,
    ВидыМатериаловКандидатаJson.link: ВидыМатериаловКандидата.Ссылка,
    ВидыМатериаловКандидатаJson.passport: ВидыМатериаловКандидата.Паспорт,
    ВидыМатериаловКандидатаJson.recordOfService: ВидыМатериаловКандидата.ТрудоваяКнижка,
    ВидыМатериаловКандидатаJson.insuranceNumber: ВидыМатериаловКандидата.СНИЛС,
    ВидыМатериаловКандидатаJson.militaryID: ВидыМатериаловКандидата.ВоенныйБилет,
    ВидыМатериаловКандидатаJson.educationDocument: ВидыМатериаловКандидата.ДокументОбОбразовании,
    ВидыМатериаловКандидатаJson.workPermit: ВидыМатериаловКандидата.РазрешениеНаРаботу,
    ВидыМатериаловКандидатаJson.taxID: ВидыМатериаловКандидата.ИНН,
    ВидыМатериаловКандидатаJson.form2NDFL: ВидыМатериаловКандидата.Справка2Ндфл,
    ВидыМатериаловКандидатаJson.marriageSertificate: ВидыМатериаловКандидата.СвидетельствоОБраке,
    ВидыМатериаловКандидатаJson.divorceSertificate: ВидыМатериаловКандидата.СвидетельствоОРазводе    
}

метод ВидыМатериаловКандадатаВJson(ВидыМатериаловКандидата: ВидыМатериаловКандидата): ВидыМатериаловКандидатаJson
    для КлючИЗначение из СООТВЕТСТВИЕ_ВИДЫ_МАТЕРИАЛОВ_КАНДИДАТА_JSON
        если КлючИЗначение.Значение == ВидыМатериаловКандидата
            возврат КлючИЗначение.Ключ
        ;    
    ;         
;

метод ВидыМатериаловКандидатаИзJson(ВидыМатериаловКандидатаJson: ВидыМатериаловКандидатаJson): ВидыМатериаловКандидата
    возврат СООТВЕТСТВИЕ_ВИДЫ_МАТЕРИАЛОВ_КАНДИДАТА_JSON[ВидыМатериаловКандидатаJson]    
;

@ВПодсистеме
метод ТипДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    
    если ВерсияФорматаОбмена == Неопределено или ВерсияФорматаОбмена < Версия{3.0}
        выбросить новый ИсключениеВыполнения("Неверный формат")
    ;
    
    возврат Тип<МатериалКандидата_3_0>
;

@ВПроекте
метод ТипОбъектаJson(): Строка
    возврат "candidateMaterials"
;

@ВПодсистеме
метод ЗагрузитьОбъектИзJson(МатериалКандидата: МатериалКандидата_3_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    исп Транзакции.Начать()
    знч ЗагружаемыйОбъект = Сервисы.ПрочитатьОбъект(МатериалКандидата.Идентификатор,
        &МатериалыКандидатов.Объект.новый(Ууид), Тип<МатериалыКандидатов.Ссылка>) как МатериалыКандидатов.Объект
   
    ЗагружаемыйОбъект.Кандидат = Сервисы.ПолучитьСсылку(Кандидаты.ВнешняяСсылка(МатериалКандидата.Кандидат)) как Кандидаты.Ссылка
    если МатериалКандидата.Материал это МенеджерФайлов.ДанныеФайлаJson
        знч ФайлМатериала = Файлы.ВложенияИзJson([МатериалКандидата.Материал как МенеджерФайлов.ДанныеФайлаJson], Сервисы, ЗагружаемыйОбъект.Кандидат)[0]
        ЗагружаемыйОбъект.Материал = ФайлМатериала.Ссылка
        Файлы.ЗаписатьФайлыПоВладельцу([ФайлМатериала], ЗагружаемыйОбъект.Кандидат, Ложь) 
    иначе если МатериалКандидата.Материал это Строка
        ЗагружаемыйОбъект.Материал = МатериалКандидата.Материал как Строка
    ;
    ЗагружаемыйОбъект.Наименование = МатериалКандидата.Наименование
    ЗагружаемыйОбъект.ВидДокумента = ВидыМатериаловКандидатаИзJson(МатериалКандидата.ВидДокумента)
    ЗагружаемыйОбъект.Описание = МатериалКандидата.Описание
    ЗагружаемыйОбъект.Дата = МатериалКандидата.Дата
    
    Сервисы.ЗаписатьОбъект(новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(ЗагружаемыйОбъект, МатериалКандидата.Идентификатор), Сервисы.ИнструментыМенеджераОбъекта)
             
;

@ВПодсистеме
метод ГруппаИзмененийВJson(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): ЧитаемоеСоответствие<Строка, Массив<Объект?>>
    возврат {"candidateMaterials": ДанныеМатериаловВJson(Ссылки, Сервисы)}
;

метод ДанныеМатериаловВJson(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): Массив<Объект?>
    знч Данные: Массив<Объект?>
    для КлючИЗначение из ДанныеМатериалов(Ссылки)
        Данные.Добавить(ДанныеМатериаловВJson_V3_0(КлючИЗначение.Значение, Сервисы))
    ;
    возврат Данные
;

метод ДанныеМатериалов(МатериалыСсылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>): ЧитаемоеСоответствие<МатериалыКандидатов.Ссылка, ЧитаемоеСоответствие<Строка, Объект?>>
    
    знч ДанныеМатериалов: Соответствие<МатериалыКандидатов.Ссылка, ЧитаемоеСоответствие<Строка, Объект?>> 
    исп КонтекстДоступа.Привилегированный()
    знч Запрос = Запрос{
        Выбрать
            Ссылка,
            Наименование,
            Кандидат,
            ВидДокумента,
            Дата,
            Материал,
            Описание
        Из
            МатериалыКандидатов
        Где
            Ссылка В (%МатериалыСсылки)        
    }
    исп Результат = Запрос.Выполнить() 
    для СтрокаРезультата из Результат
        ДанныеМатериалов.Вставить(
            СтрокаРезультата.Ссылка,
            МенеджерЗапросов.СтрокаРезультатаЗапросаВСоответствие(СтрокаРезультата, Результат)
        )
    ;
    
    возврат ДанныеМатериалов    
;

метод ДанныеМатериаловВJson_V3_0(ДанныеОбъекта: ЧитаемоеСоответствие<Строка, Объект?>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): МатериалКандидата_3_0
    исп КонтекстДоступа.Привилегированный()
    пер Материал: Строка|МенеджерФайлов.ДанныеФайлаJson = ""
    если ДанныеОбъекта["Материал"] это Строка 
        Материал = ДанныеОбъекта["Материал"] как Строка
    иначе 
        Материал = Файлы.ДанныеФайлаJson(ДанныеОбъекта["Материал"] как Файлы.Ссылка, Сервисы)
    ; 
    
    пер МатериалКандидата = новый МатериалКандидата_3_0(
        (ДанныеОбъекта["Ссылка"] как МатериалыКандидатов.Ссылка).Ид.ВСтроку(),
        Материал,
        Сервисы.ПолучитьИдентификатор(ДанныеОбъекта["Кандидат"] как Кандидаты.Ссылка)
    )
    если ДанныеОбъекта["ВидДокумента"] != Неопределено
        МатериалКандидата.ВидДокумента = ВидыМатериаловКандадатаВJson(ДанныеОбъекта["ВидДокумента"] как ВидыМатериаловКандидата)
    ;
    МатериалКандидата.Наименование = ДанныеОбъекта["Наименование"] как Строка
    МатериалКандидата.Дата = ДанныеОбъекта["Дата"] как ДатаВремя
    МатериалКандидата.Описание = ДанныеОбъекта["Описание"] как Строка
    
    возврат МатериалКандидата        
;

// Конец JSON

@ВПодсистеме
метод ПослеУдаленияДополнение(Ссылка: МатериалыКандидатов.Ссылка, ТребуетсяРегистрацияИзменений: Булево)
    РегистрацияИзменений.ЗарегистрироватьУдаление(Ссылка)
;