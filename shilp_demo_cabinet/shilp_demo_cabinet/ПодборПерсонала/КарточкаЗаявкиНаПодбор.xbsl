импорт ИнтерфейсныеКомпонентыСтандартные
импорт Компания::Согласования
импорт КонтрольДоступа
импорт Криптография
импорт ОбщиеСтандартные
импорт СтандартноеПриложение
импорт ФизическиеЛица

@ВПроекте
@Реализация
метод Заголовок(): Строка
    возврат ДанныеФормы?.ЗаголовокФормы
;

@ВПроекте
@Реализация
метод КомандыСоздания(): Команда|ГруппаКомандногоИнтерфейса<Команда>|Неопределено
    возврат Неопределено
;

@ВПроекте
@Реализация
метод ДополнительныеКоманды(): ФрагментКомандногоИнтерфейса<Команда>?
    если РежимМобильногоУстройства
        возврат новый ФрагментКомандногоИнтерфейса<Команда>(Элементы = ДоступныеДействияСОбъектом())
    иначе
        возврат Неопределено
    ;
;

@ВПроекте
@Реализация
метод ОсновнаяКоманда(): Команда?
    возврат Неопределено
;

@ВПроекте
@Реализация
метод ОбычныеКоманды(): ФрагментКомандногоИнтерфейса<Команда>?
    возврат Неопределено
;

@ВПодсистеме
@НаСервере @НаКлиенте
структура ДанныеФормы
    обз знч Реквизиты: РеквизитыОбъекта
    обз знч ДанныеСогласования: ДанныеСогласования
    обз знч РуководителиПодбора: Множество<ФизическиеЛица.Ссылка>
    обз знч СрочностьПоУмолчанию: СрочностьВакансии.Ссылка?
    обз знч ДоступныеДействия: Множество<ЗаявкиНаПодбор.ДоступныеДействия>
    обз знч ЗаголовокФормы: Строка
;

@ВПодсистеме
@НаСервере @НаКлиенте
структура ДанныеСогласования
    пер Согласующие: Согласующие
    пер ДанныеСогласующего: Согласования.ДанныеСогласующего?
    пер ПричинаОтклонения: Строка
;

@НаСервере @ДоступноСКлиента
статический метод ДанныеФормы(Ссылка: ЗаявкиНаПодбор.Ссылка): ДанныеФормы
    знч РеквизитыОбъекта = РеквизитыОбъекта(Ссылка)
    возврат новый ДанныеФормы(
        Реквизиты = РеквизитыОбъекта,
        ДанныеСогласования = ДанныеСогласования(РеквизитыОбъекта),
        РуководителиПодбора = новый Множество<ФизическиеЛица.Ссылка>(КонтрольДоступа.ФизическиеЛицаПоПолномочию(ПодборПерсонала.ПолномочиеЗапускСогласованияЗаявкиНаПодбор())),
        СрочностьПоУмолчанию = СрочностьВакансии.СрочностьПоУмолчанию(),
        ДоступныеДействия = ЗаявкиНаПодбор.ДоступныеДействия(Ссылка, РеквизитыОбъекта.Статус, РеквизитыОбъекта.Автор),
        ЗаголовокФормы = ЗаявкиНаПодбор.ПредставлениеЗаявкиНаПодбор(Ссылка))
;

@НаСервере
статический метод ДанныеСогласования(РеквизитыОбъекта: РеквизитыОбъекта): ДанныеСогласования
    исп КонтекстДоступа.Привилегированный()
    знч ДанныеСогласования: ДанныеСогласования
    знч ТекущееФизическоеЛицо = ПользователиСистемы.ТекущееФизическоеЛицо()
    если РеквизитыОбъекта.МаршрутСогласования != Неопределено 
            и ТекущееФизическоеЛицо != Неопределено   
            
        ДанныеСогласования.Согласующие = Согласования.ВсеСогласующие(РеквизитыОбъекта.Ссылка, РеквизитыОбъекта.МаршрутСогласования)           
        знч Согласовавшие: Массив<ФизическиеЛица.Ссылка>
        пер НомерШагаСогласования = 1
        для Согласующий из ДанныеСогласования.Согласующие.Согласующие
            если Согласующий.УчастникСогласования != Неопределено
                и Согласующий.Результат != РезультатыСогласования.НаСогласовании
                Согласовавшие.Добавить(Согласующий.УчастникСогласования)
                НомерШагаСогласования = Макс(НомерШагаСогласования, Согласующий.НомерШагаСогласования)
            ;
        ;
        ДанныеСогласования.ДанныеСогласующего = Согласования.ДанныеСогласующего(
                        ТекущееФизическоеЛицо,
                        РеквизитыОбъекта.МаршрутСогласования,
                        НомерШагаСогласования,
                        Согласовавшие)
    ;
    
    если РеквизитыОбъекта.Статус == СтатусыЗаявкиНаПодбор.Доработка
        исп РезультатПричиныОтклонения = Запрос{
            Выбрать Первые 1
                УчастникСогласованияСтрокой, 
                Комментарий
            Из
                СогласованияДокументов
            Где 
                Документ == %{РеквизитыОбъекта.Ссылка}
                И Результат == %{РезультатыСогласования.Отказано}   
            }.Выполнить()
        
        знч ПричиныОтклонения = РезультатПричиныОтклонения.ЕдинственныйИлиУмолчание()
        пер ПричинаОтклонения = ПричиныОтклонения?.Комментарий ?? ""
        если ПричинаОтклонения.Пусто()
            ПричинаОтклонения = "не указана"
        ;  
        если ПричиныОтклонения != Неопределено
            ДанныеСогласования.ПричинаОтклонения = 
            "Заявку отклонил %{ПричиныОтклонения.УчастникСогласованияСтрокой}. Причина отклонения: %ПричинаОтклонения." 
        ;
    ;

    возврат ДанныеСогласования
;

@НаСервере
статический метод РеквизитыОбъекта(Ссылка: ЗаявкиНаПодбор.Ссылка): РеквизитыОбъекта
    исп Привилегированный = КонтекстДоступа.Привилегированный()
    исп Результат =  Запрос{
        выбрать
            ЗаявкиНаПодбор.Ссылка как Ссылка,
            ЗаявкиНаПодбор.Номер как Номер,
            ЗаявкиНаПодбор.Дата как Дата,
            ЗаявкиНаПодбор.ПлановаяДатаЗакрытия как ПлановаяДатаЗакрытия,
            ЗаявкиНаПодбор.Должность как Должность,
            ЗаявкиНаПодбор.Подразделение как Подразделение,
            ЗаявкиНаПодбор.Срочность как Срочность,
            ЗаявкиНаПодбор.Инициатор как Инициатор,
            ЗаявкиНаПодбор.Рекрутер как Рекрутер,
            ЗаявкиНаПодбор.ОпытРаботы как ОпытРаботы,
            ЗаявкиНаПодбор.ЗаработнаяПлата как ЗаработнаяПлата,
            ЗаявкиНаПодбор.ГрафикРаботы как ГрафикРаботы,
            ЗаявкиНаПодбор.ТипЗанятости как ТипЗанятости,
            ЗаявкиНаПодбор.СпособТрудоустройства как СпособТрудоустройства,
            ЗаявкиНаПодбор.КоличествоШтатныхЕдиниц как КоличествоШтатныхЕдиниц,
            ЗаявкиНаПодбор.НаселенныеПунктыПредставление как НаселенныеПунктыПредставление,
            ЗаявкиНаПодбор.Требования как Требования,
            ЗаявкиНаПодбор.Обязанности как Обязанности,
            ЗаявкиНаПодбор.Условия как Условия,
            ЗаявкиНаПодбор.Обоснование как Обоснование,
            ЗаявкиНаПодбор.МаршрутСогласования как МаршрутСогласования,
            ПравилаСогласования.ВидСогласуемогоЗаявления.ЗаменитьNull(Неопределено) как ВидСогласуемогоЗаявления,
            ЗаявкиНаПодбор.Автор как Автор,
            СтатусыЗаявокНаПодбор.Статус.ЗаменитьNull(Неопределено) как Статус,
            СтатусыЗаявокНаПодбор.Комментарий.ЗаменитьNull("") как КомментарийСтатуса
        породить РеквизитыОбъекта
        из 
            ЗаявкиНаПодбор как ЗаявкиНаПодбор
            Левое Соединение СтатусыЗаявокНаПодбор как СтатусыЗаявокНаПодбор
                По СтатусыЗаявокНаПодбор.Заявка == ЗаявкиНаПодбор.Ссылка
            Левое Соединение ПравилаСогласования как ПравилаСогласования
                По ЗаявкиНаПодбор.МаршрутСогласования == ПравилаСогласования.Ссылка
        где 
            ЗаявкиНаПодбор.Ссылка == %Ссылка
    }.Выполнить()
    Привилегированный.Закрыть()
    возврат Результат.Единственный()
;

@ВПроекте
@НаКлиенте
статический метод Показать(Ссылка: ЗаявкиНаПодбор.Ссылка, ФормаВладелец: ЗамещаемаяФорма? = Неопределено)
    знч Форма = новый КарточкаЗаявкиНаПодбор(Ссылка = Ссылка)
    Форма.ПрочитатьДанныеФормы()
    если ФормаВладелец == Неопределено
        Форма.Открыть()
    иначе
        ИнтерфейсныеКомпоненты.ОткрытьЗамещающуюФорму(ФормаВладелец, Форма)
    ;
;

метод Редактировать()
    ЗаявкиНаПодборФормаОбъекта.Показать(Ссылка, этот)
;

метод Копировать()
    ЗаявкиНаПодборФормаОбъекта.ПоказатьКопию(Ссылка, этот)
;

метод ОтправитьНаПроверку()
    если не (ЗаявкиНаПодбор.ПодтвердитьОтправкуНаПроверку() и ЗаявкиНаПодбор.ПроверитьЗаполнение(Ссылка, СтатусыЗаявкиНаПодбор.Проверка))
        возврат
    ;
    СтатусыЗаявокНаПодбор.Установить(Ссылка, СтатусыЗаявкиНаПодбор.Проверка)
    ЗаявкиНаПодбор.УведомитьОбОтправкеНаПроверку()
    ПрочитатьДанныеФормы()
;

метод ОтправитьНаСогласование()
    знч МаршрутСогласования = ЗаявкиНаПодбор.ЗапроситьМаршрутСогласованияУПользователя(ДанныеФормы.Реквизиты.МаршрутСогласования)   
    если МаршрутСогласования == Неопределено
        возврат
    ;
    если не ЗаявкиНаПодбор.ПроверитьЗаполнение(Ссылка, СтатусыЗаявкиНаПодбор.Проверка)
        возврат
    ;
    
    ЗаявкиНаПодбор.ОтправитьНаСогласование(Ссылка, МаршрутСогласования) 
    ЗаявкиНаПодбор.УведомитьОбОтправкеНаСогласование(МаршрутСогласования)
    ЗаявкаНаПодборПослеИзменения.Оповестить(Ссылка)
    ПрочитатьДанныеФормы()
;

метод СоздатьВакансию()
    знч Рекрутер = ЗаявкиНаПодбор.ЗапроситьРекрутера(ДанныеФормы?.Реквизиты.Рекрутер)
    если Рекрутер == Неопределено
        возврат
    ;
    
    если не ЗаявкиНаПодбор.ПроверитьЗаполнение(Ссылка, СтатусыЗаявкиНаПодбор.Проверка)
        возврат
    ;
    
    попытка
        знч Вакансия = Вакансии.СоздатьВакансиюИзЗаявкиНаПодбор(Ссылка, Рекрутер!)
        ЗаявкиНаПодбор.УведомитьОСозданииВакансии(Вакансия)
    поймать Исключение: ПроверкаЗаполнения.ИсключениеПроверкиЗаполнения
        ПроверкаЗаполнения.ОбработатьОшибкиЗаполнения(Исключение, {:})
    ;    
    ПрочитатьДанныеФормы()
;

метод ВернутьНаДоработку()
    если не ЗаявкиНаПодбор.ПодтвердитьВозвратНаДоработку()
        возврат
    ;
    СтатусыЗаявокНаПодбор.Установить(Ссылка, СтатусыЗаявкиНаПодбор.Доработка)
    ЗаявкиНаПодбор.УведомитьОВозвратеНаДоработку()
    ПрочитатьДанныеФормы()
;

метод Удалить()
    если ЗаявкиНаПодбор.ПодтвердитьУдаление()
        ЗаявкиНаПодбор.Удалить(Ссылка)
        ЗаявкаНаПодборПослеУдаления.Оповестить(Ссылка)
        ИнтерфейсныеКомпоненты.ЗакрытьЗамещающуюФорму(этот)
    ;
;

метод Отменить()
    если ЗаявкиНаПодбор.Отменить(Ссылка)
        ИнтерфейсныеКомпоненты.ЗакрытьЗамещающуюФорму(этот)
    ;
;

перечисление СтильДействия
    Обычное умолчание,
    Основное,
    Опасное
;

метод ОсновныеКомандыНадОбъектомДесктоп(): Массив<Компонент>
    знч Действия: Массив<Компонент>
    если не РежимМобильногоУстройства
        для Команда из ДоступныеДействияСОбъектом()
            знч Кнопка = новый Кнопка(Команды = Команда)
            выбор Команда.Важность
            когда Высокая
                Кнопка.Вид = ВидКнопки.Основная
            ;        
            Действия.Добавить(Кнопка)
        ;
    ;
    возврат Действия
;

метод ДоступныеДействияСОбъектом(): Массив<Команда>
    знч Команды = новый Массив<Команда>()
    для Действие из ДанныеФормы.ДоступныеДействия
        выбор Действие
        когда ОтправкаНаПроверку
            знч Важность = ДанныеФормы.Реквизиты.Статус == СтатусыЗаявкиНаПодбор.Черновик ? ВажностьКоманды.Высокая: ВажностьКоманды.Обычная
            Команды.Добавить(
                новый ОбычнаяКоманда(
                    Представление = "На проверку",
                    Важность = Важность,
                    Обработчик = (Источник) -> ОтправитьНаПроверку()))
        когда ОтправкаНаСогласование
            знч Важность = ДанныеФормы.Реквизиты.Статус == СтатусыЗаявкиНаПодбор.Проверка ? ВажностьКоманды.Высокая: ВажностьКоманды.Обычная
            Команды.Добавить(
                новый ОбычнаяКоманда(
                    Представление = "На согласование",
                    Важность = Важность,
                    Обработчик = (Источник) -> ОтправитьНаСогласование()))
        когда СозданиеВакансии
            Команды.Добавить(
                новый ОбычнаяКоманда(
                    Представление = "Создать вакансию",
                    Обработчик = (Источник) -> СоздатьВакансию()))
        когда ВозвратНаДоработку
            Команды.Добавить(
                новый ОбычнаяКоманда(
                    Представление = "Вернуть на доработку",
                    Обработчик = (Источник) -> ВернутьНаДоработку()))
        когда Редактирование
            Команды.Добавить(
                новый ОбычнаяКоманда(
                    Представление = "Редактировать",
                    Изображение = Ресурс{Иконки/Редактировать.svg}.Ссылка,
                    Обработчик = (Источник) -> Редактировать()))
            Команды.Добавить(
                новый ОбычнаяКоманда(
                    Представление = "Копировать",
                    Изображение = Ресурс{Иконки/Копировать.svg}.Ссылка,
                    Обработчик = (Источник) -> Копировать()))
        когда Удаление
            Команды.Добавить(
                новый ОбычнаяКоманда(
                    Представление = "Удалить",
                    Изображение = Ресурс{МусорнаяКорзинаКонтур.svg}.Ссылка,
                    ОпасностьДействия = ОпасностьДействия.Высокая,
                    Обработчик = (Источник) -> Удалить()))
        когда Отмена
            Команды.Добавить(
                новый ОбычнаяКоманда(
                    Представление = "Отменить",
                    ОпасностьДействия = ОпасностьДействия.Высокая,
                    Обработчик = (Источник) -> Отменить()))
        ;
    ;
    возврат Команды
;

метод ПрочитатьДанныеФормы()
    если Ссылка != Неопределено
        ДанныеФормы = ДанныеФормы(Ссылка)
    ;
;

метод ЗаявкаНаПодборПослеУдаления(УдаленнаяЗаявка: ЗаявкиНаПодбор.Ссылка)
    если УдаленнаяЗаявка == Ссылка
        ИнтерфейсныеКомпоненты.ЗакрытьЗамещающуюФорму(этот)
    ;
;

@Обработчик
метод ПослеСоздания()
    если Ссылка != Неопределено и ДанныеФормы == Неопределено
        ПрочитатьДанныеФормы()
    иначе
        Закрыть()
    ;
    ЗаявкаНаПодборПослеИзменения.ПодключитьОбработчик(&ПослеИзмененияЗаявкиНаПодбор)
    ЗаявкаНаПодборПослеУдаления.ПодключитьОбработчик(&ЗаявкаНаПодборПослеУдаления)
    ИнтерфейсныеКомпоненты.ИнициализироватьПодчиненныеКомпоненты(Компоненты)
;

метод ПослеИзмененияЗаявкиНаПодбор(ИзмененнаяЗаявка: ЗаявкиНаПодбор.Ссылка)
    если ИзмененнаяЗаявка == Ссылка
        ПрочитатьДанныеФормы()
    ;
;

метод СогласованиеДанные(): Массив<СогласующиеСтрока>
    знч Данные: Массив<СогласующиеСтрока>
    если ДанныеФормы != Неопределено
        Данные.ДобавитьВсе(ДанныеФормы.ДанныеСогласования.Согласующие.Согласующие)
    ;
    возврат Данные
;

метод СогласованиеМиниатюра(ДанныеСтроки: СогласующиеСтрока): ДвоичныйОбъект.Ссылка
    возврат ДанныеСтроки.Миниатюра ?? СтандартноеПриложение.ПараметрыСеанса().АватарПоУмолчанию
;

метод СогласованиеОценкаИнформацииЗначка(ДанныеСтроки: СогласующиеСтрока): ОценкаИнформации
    выбор ДанныеСтроки.Результат
    когда Отказано
        возврат ОценкаИнформации.Отрицательная
    когда Согласовано
        возврат ОценкаИнформации.Положительная
    иначе
        возврат ОценкаИнформации.Предупреждающая
    ;
;

метод ОбоснованиеВидимость(): Булево
    возврат не (ДанныеФормы?.Реквизиты.Обоснование.Пусто() ?? Истина)
;

метод ПричинаОтменыВидимость(): Булево
    возврат ДанныеФормы?.Реквизиты.Статус == СтатусыЗаявкиНаПодбор.Отменена
        и не ДанныеФормы?.Реквизиты.КомментарийСтатуса.Пусто()
;

метод КнопкиСогласоватьВидимость(): Булево
    возврат
        ПодборПерсоналаКомпонентыИнтерфейса.ПолучитьСервис().ВидимостьКнопокСогласования() 
        и ДанныеФормы.Реквизиты.Статус == СтатусыЗаявкиНаПодбор.Согласование 
        и ДанныеФормы?.ДанныеСогласования.ДанныеСогласующего != Неопределено  
;

метод ПанельСогласованияВыполненоСогласование(Источник: КоманднаяПанельСогласования, Событие: СобытиеКомпонента)
    ПрочитатьДанныеФормы()
;

метод ПанельСогласованияОшибкаПриВыполненииКоманды(Источник: КоманднаяПанельСогласования, Событие: СобытиеСДанными<Исключение>)
     ПоказатьОшибку(Событие.Данные)
;

метод ПоказатьОшибку(Ошибка: Исключение)
    пер ОписаниеОшибки: Строка
    пер ТипОшибки: Тип = Ошибка.ПолучитьТип()
    пер ТипПричиныОшибки: Тип = Ошибка.Причина.ПолучитьТип()
    выбор
     когда ТипОшибки == Тип<Согласования.ИсключениеДокументУжеПодписан> или
            ТипПричиныОшибки == Тип<Согласования.ИсключениеДокументУжеПодписан>
        ОписаниеОшибки = "Отзыв невозможен - заявление уже подписано."
    когда ТипОшибки == Тип<Криптография.ИсключениеПодписанныйДокументОтсутствует> или
            ТипПричиныОшибки == Тип<Криптография.ИсключениеПодписанныйДокументОтсутствует>
        ОписаниеОшибки = "Заявка на подбор не согласована, потому что была удалена."
    ;
    СтандартныеФормы.ПоказатьУведомление("Согласование", ОписаниеОшибки, ОценкаИнформации.Предупреждающая)
;

метод ОсновнаяОриентацияФормы(): ОриентацияСодержимого
    возврат РежимМобильногоУстройства ? ОриентацияСодержимого.Вертикальная : ОриентацияСодержимого.Горизонтальная
;

статический метод РежимМобильногоУстройстваПоУмолчанию(): Булево
    возврат КлиентскоеУстройство.ВидИнтерфейса == ВидИнтерфейса.Телефон 
;

метод ОписаниеЗаголовок(): Строка
    возврат РежимМобильногоУстройства ? "Основная информация" : "Описание"
;

метод ДеталиЗаявкиМаксимальнаяШирина(): Число
    если РежимМобильногоУстройства
        возврат 0
    иначе
        возврат ОсновнойИнтерфейс.ШиринаОсновногоОкнаПриложения() / 3
    ;
;

метод ЦветСтатуса(): Цвет|Авто
    знч Статус = ДанныеФормы?.Реквизиты.Статус
    если Статус == Неопределено
        возврат Авто
    иначе
        возврат Статус!.Цвет()
    ;    
;

метод СрокПодбораПредставление(): Строка
    знч ЧастиПредставления: Массив<Строка>
    знч СрокаЗакрытияПредставление = СрочностьВакансии.ПредставлениеСрокаЗакрытия(ДанныеФормы?.Реквизиты.Срочность)
    если не СрокаЗакрытияПредставление.Пусто()
        ЧастиПредставления.Добавить(СрокаЗакрытияПредставление)
    ;
    знч ПлановаяДатаЗакрытияПредставление = ДанныеФормы.Реквизиты.ПлановаяДатаЗакрытия == Дата{} ? "" : "до ${ДанныеФормы.Реквизиты.ПлановаяДатаЗакрытия}"
    если не ПлановаяДатаЗакрытияПредставление.Пусто()
        ЧастиПредставления.Добавить(ПлановаяДатаЗакрытияПредставление)
    ;
    если ЧастиПредставления.Пусто()
        возврат "Не указан"
    иначе
        возврат ЧастиПредставления.Соединить(", ")
    ;
;