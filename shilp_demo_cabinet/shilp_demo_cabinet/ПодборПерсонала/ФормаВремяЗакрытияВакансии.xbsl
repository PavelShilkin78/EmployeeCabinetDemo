импорт ФизическиеЛица

метод КомпонентыОтчетов(): Множество<ПросмотрОтчета>
    знч ПанельОтчетов = новый Множество<ПросмотрОтчета>()
    ПанельОтчетов.Добавить(Компоненты.ОтчетВремяЗакрытияВакансий)
    возврат ПанельОтчетов
;

метод КомандаВыгрузитьОтчет(Команда: ОбычнаяКоманда)
    знч Фильтр = Компоненты.КомпонетФильтрОтчетов
    знч ОтборОт = (Фильтр.ПериодОтбора == Неопределено) ? Неопределено : Фильтр.ПериодОтбора.От
    знч ОтборДо = (Фильтр.ПериодОтбора == Неопределено) ? Неопределено : Фильтр.ПериодОтбора.До

    знч ФайлВыгрузки = ВыгрузитьВФормате(Фильтр.Рекрутер, Фильтр.Вакансия, ОтборОт, ОтборДо, Фильтр.СтатусЗакрытия)
    ВыгрузкаФайлов.НачатьВыгрузку(ФайлВыгрузки, "МакетВремяЗакрытияВакансии${Дата.Сейчас()}.xls") 
;

@НаСервере @ДоступноСКлиента
статический метод ВыгрузитьВФормате(Рекрутер: ФизическиеЛица.Ссылка?, Вакансия: Вакансии.Ссылка?, ПериодОт: Дата?, ПериодДо: Дата?, СтатусЗакрытия: Булево): ДвоичныйОбъект.Ссылка
    пер БайтыТаблицы = СформироватьОтчет(Рекрутер, Вакансия, ПериодОт, ПериодДо, СтатусЗакрытия).ЭкспортироватьВБайты(ФорматЭкспортаТабличногоДокумента.Xls)
    
    пер СвойстваДвоичногоОбъекта = новый ДвоичныйОбъект.Свойства("ПричиныОтказа").Временные()
    знч Результат = ОбъектноеХранилище.ЗагрузитьИзБайт(Байты = БайтыТаблицы, Свойства = СвойстваДвоичногоОбъекта)
    возврат Результат.Ссылка
;

@НаСервере
статический метод СформироватьОтчет(Рекрутер: ФизическиеЛица.Ссылка?, Вакансия: Вакансии.Ссылка?, ПериодОт: Дата?, ПериодДо: Дата?, СтатусЗакрытия: Булево): ТабличныйДокумент
    знч СтатистикаПоВакансиям = СтатистикаВремениЗакрытияВакансий(Рекрутер, ПериодОт, ПериодДо, СтатусЗакрытия)
    исп МакетДанные = Ресурс{МакетВремяЗакрытияВакансии.mxl}.ОткрытьПотокЧтения()
    знч Макет = ТабличныйДокумент.Прочитать(МакетДанные)
    
    знч ШапакаТаблицы = Макет.ПолучитьОбласть("ШапакаТаблицы")
    знч Шапка = Макет.ПолучитьОбласть("Шапка")
    знч СтрокаРекрутер = Макет.ПолучитьОбласть("СтрокаСтатистики")
   
    пер ТабличныйДокумент = новый ТабличныйДокумент()
    знч Писатель = ТабличныйДокумент.Запись
    Писатель.ВывестиВертикально(
        Шапка.ВВыводимуюОбласть().ЗаполнитьПараметры({"ДатаВремя": ДатаВремя.Сейчас().Представление()})
    )
    Писатель.ВывестиВертикально(
        ШапакаТаблицы.ВВыводимуюОбласть()
    )
    для СтатистикаПоВакансии из СтатистикаПоВакансиям
        знч ДатаОткрытия = СтатистикаПоВакансии.ДатаОткрытия.ВДатаВремя(ЧасовойПояс{UTC}).НачалоДня()
        знч ДатаПлановогоЗакрытия = новый ДатаВремя(СтатистикаПоВакансии.ДатаПланЗакрытия)
        знч ПланДней = ДатаПлановогоЗакрытия - ДатаОткрытия

        пер ДатаФактическогоЗакрытия = "-"
        пер ФактДней = "0"
        пер Разница = "0"
        если СтатистикаПоВакансии.ДатаФактЗакрытия != Неопределено
            знч ДатаЗакрытия = СтатистикаПоВакансии.ДатаФактЗакрытия!.ВДатаВремя(ЧасовойПояс{UTC}).НачалоДня()
            ДатаФактическогоЗакрытия = ДатаЗакрытия.Представление("дд-ММ-гггг")
            знч ПериодВакансии = (ДатаЗакрытия - ДатаОткрытия)
            ФактДней = ПериодВакансии.Представление("д")
            Разница = (ПериодВакансии - ПланДней).Представление("д")
        ;
      
        Писатель.ВывестиВертикально(
            СтрокаРекрутер.ВВыводимуюОбласть()
            .ЗаполнитьПараметры({"ИдВакансии": СтатистикаПоВакансии.Ид})
            .ЗаполнитьПараметры({"НаименованиеВакансии": СтатистикаПоВакансии.Наименование})
            .ЗаполнитьПараметры({"КоличествоШЕ": СтатистикаПоВакансии.КоличествоШЕ})
            .ЗаполнитьПараметры({"Город": СтатистикаПоВакансии.Город})
            .ЗаполнитьПараметры({"Подразделение": СтатистикаПоВакансии.Подразделение})
            .ЗаполнитьПараметры({"Рекрутер": СтатистикаПоВакансии.Рекрутер})
            .ЗаполнитьПараметры({"ПланДней": ПланДней.Представление("д")})
            .ЗаполнитьПараметры({"ФактДней": ФактДней})
            .ЗаполнитьПараметры({"ДатаОткрытия": ДатаОткрытия.Представление("дд-ММ-гггг")})
            .ЗаполнитьПараметры({"ПлановаяДатаЗакрытия": ДатаПлановогоЗакрытия.Представление("дд-ММ-гггг")})
            .ЗаполнитьПараметры({"ФактДатаЗакрытия": ДатаФактическогоЗакрытия})
            .ЗаполнитьПараметры({"Разница": Разница})
        )
    ;
    возврат ТабличныйДокумент
;

@НаСервере
статический метод СтатистикаВремениЗакрытияВакансий(ФизЛицоРекрутера: ФизическиеЛица.Ссылка?, ПериодОт: Дата?, ПериодДо: Дата?, СтатусЗакрытия: Булево): Массив<СтатистикаВремениЗакрытияВакансии>
    знч Запрос = Запрос{
        Выбрать
            ВремяЗакрытияВакансии.ИдВакансии как Ид,
            ВремяЗакрытияВакансии.Вакансия.Наименование как Наименование,
            ВремяЗакрытияВакансии.КоличествоШтатныхЕдиниц как КоличествоШЕ,
            ВремяЗакрытияВакансии.Город как Город,
            ВремяЗакрытияВакансии.Подразделение.Наименование как Подразделение,
            ВремяЗакрытияВакансии.Рекрутер.Наименование как Рекрутер,
            ВремяЗакрытияВакансии.ДатаОткрытияВакансии как ДатаОткрытия,
            ВремяЗакрытияВакансии.ПлановаяДатаЗакрытия как ДатаПланЗакрытия,
            ВремяЗакрытияВакансии.ДатаФактическогоЗакрытия.ЗаменитьNull(Неопределено) как ДатаФактЗакрытия
        Породить
            СтатистикаВремениЗакрытияВакансии
        Из
            ДанныеВремениЗакрытияВакансий(%ФизЛицоРекрутера, %СтатусЗакрытия, %ПериодОт, %ПериодДо) как ВремяЗакрытияВакансии
        Сгруппировать По
            ВремяЗакрытияВакансии.ИдВакансии,
            ВремяЗакрытияВакансии.Вакансия,
            ВремяЗакрытияВакансии.КоличествоШтатныхЕдиниц,
            ВремяЗакрытияВакансии.Город,
            ВремяЗакрытияВакансии.Подразделение,
            ВремяЗакрытияВакансии.Рекрутер,
            ВремяЗакрытияВакансии.ДатаОткрытияВакансии,
            ВремяЗакрытияВакансии.ПлановаяДатаЗакрытия,
            ВремяЗакрытияВакансии.ДатаФактическогоЗакрытия
    }
    знч Результат = Запрос.Выполнить().ВМассив()
    возврат Результат
;