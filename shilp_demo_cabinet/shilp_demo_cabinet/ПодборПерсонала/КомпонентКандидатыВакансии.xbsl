импорт ИнтерфейсныеКомпонентыСтандартные
импорт СтандартноеПриложение
импорт ФизическиеЛица
импорт УниверсальныеМеханизмы

@НаСервере @ДоступноСКлиента
статический метод СписокКандидатовВакансии(Вакансия: Вакансии.Ссылка?) : Массив<ПодборПерсонала.ДеталиВакансииДанныеСтроки>
    
    знч Запрос = Запрос{
        ВЫБРАТЬ 
            КандидатыВакансии.Кандидат КАК Кандидат,
            СтатусыРассматриваемыхКандидатов.Статус.ЗаменитьNull(Неопределено) КАК Статус,
            Кандидаты.Фотография.ЗаменитьNull(Неопределено) КАК Фотография,
            Кандидаты.Представление.ЗаменитьNull("") КАК КандидатПредставление,
            Кандидаты.ДатаРождения.ЗаменитьNull(Неопределено) КАК ДатаРождения,
            Кандидаты.Пол.ЗаменитьNull(Неопределено) КАК Пол
        ИЗ
        РассматриваемыеКандидаты КАК КандидатыВакансии   
        ЛЕВОЕ СОЕДИНЕНИЕ Кандидаты КАК Кандидаты
            ПО КандидатыВакансии.Кандидат == Кандидаты.Ссылка
        ЛЕВОЕ СОЕДИНЕНИЕ СтатусыРассматриваемыхКандидатов КАК СтатусыРассматриваемыхКандидатов
            ПО КандидатыВакансии.Кандидат == СтатусыРассматриваемыхКандидатов.Кандидат
        ГДЕ КандидатыВакансии.Вакансия == %Вакансия
    }
        
    исп Результат = Запрос.Выполнить()
    знч ДанныеСписка = новый  Массив<ПодборПерсонала.ДеталиВакансииДанныеСтроки>()
    
    для Элемент из Результат 
        пер Фотография: ДвоичныйОбъект.Ссылка? 
        если Элемент.Фотография != Неопределено
            Фотография = Файлы.ДвоичныеДанныеФайла(Элемент.Фотография).Ссылка
        ;
        
        знч Возраст = ФизЛица.ПолныхЛетСтрокой(Элемент.ДатаРождения)
        ДанныеСписка.Добавить(новый ПодборПерсонала.ДеталиВакансииДанныеСтроки(
        Идентификатор = Элемент.Кандидат,
        ЭтоГруппа = Ложь,
        Изображение = Фотография,
        ИзображениеФигура = Фигура.Круглая,
        ОсновнойЗаголовок = Элемент.КандидатПредставление,
        ДополнительныйЗаголовок = "%{Элемент.Пол.Представление()}, Возраст - %Возраст",
        Статус = Элемент.Статус.Представление(),
        СтатусТочкой = Ложь,
        СтатусЦвет = Неопределено
    ))
    ;
    
    возврат ДанныеСписка
    
;

@Обработчик
метод ПослеСоздания()
    ИнтерфейсныеКомпоненты.ИнициализироватьТаблицу(Таблица = Компоненты.Список)
    ЗаполнитьСписок()    
;

метод ЗаполнитьСписок()
    
    знч ДанныеСписка = Компоненты.Список.Источник.Данные
    ДанныеСписка.Очистить()
    если Вакансия != Неопределено
        для Элемент из СписокКандидатовВакансии(Вакансия)
            если Элемент.Изображение == Неопределено
                Элемент.Изображение = СтандартноеПриложение.ПараметрыСеанса().АватарПоУмолчанию
            ;
            ДанныеСписка.Добавить(Элемент)
        ;
    ;
;

метод СписокПриНажатииСтроки(Источник: Список<ИсточникДанныхМассив<ПодборПерсонала.ДеталиВакансииДанныеСтроки>>, Событие: СобытиеСДанными<СтрокаСписка<ПодборПерсонала.ДеталиВакансииДанныеСтроки>>)
    знч ТекущийКандидат = Событие.Данные.ДанныеСтроки.Идентификатор
    Компоненты.ДеталиКандидата.ТекущийКандидат = ТекущийКандидат как РассматриваемыеКандидаты.Ссылка?
    Компоненты.ДеталиКандидата.Инициализировать()  
;