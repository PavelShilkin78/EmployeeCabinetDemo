импорт КонтрольДоступа
импорт ОбщиеСтандартные
импорт УниверсальныеМеханизмы
импорт ОбменДанными
импорт ИнтерфейсныеКомпонентыСтандартные


@ВПроекте
@НаСервере @НаКлиенте
структура ДанныеСобеседования
    обз пер Собеседование: Собеседования.Ссылка
    обз пер Кандидат: РассматриваемыеКандидаты.Ссылка
    обз пер ДатаПроведения: ДатаВремя
    обз пер Наименование: Строка
    обз пер Формат: ФорматСобеседования
    обз пер МестоПроведения: МестаПроведенияСобеседований.Ссылка?
    обз пер АдресДляПодключения: Строка
    пер Участники: Массив<СтрокаСпискаСМиниатюройКомпонентДанных>
    пер Комментарии: Массив<ДанныеКомментария>
    пер ПрисоединенныеФайлы: ПрисоединенныеФайлы
;

метод ВидимостьКнопкаРедактировать(): Булево
    возврат не (РежимКандидата или ТолькоЧтение или ФизлицоТекущегоПользователя == Неопределено)
;

метод ВидимостьОнлайнФормата(): Булево
    возврат Данные.Формат == ФорматСобеседования.Онлайн и не Данные.АдресДляПодключения.Пусто()
;

метод ВидимостьОффлайнФормата(): Булево
    возврат Данные.Формат == ФорматСобеседования.Оффлайн и Данные.МестоПроведения != Неопределено
;

метод ИзображениеФорматСобеседования(): ДвоичныйОбъект.Ссылка
    знч Формат= Данные.Формат
    возврат Формат.Изображение()
;

метод АдресДляПодключения(): Строка
    возврат Данные.АдресДляПодключения
;

метод МестоПроведения(): Строка
    возврат Данные.МестоПроведения.Представление()
;

метод ДатаПроведения(): Строка
    возврат МенеджерДат.ФорматДатыВремени(Данные.ДатаПроведения)
;

метод АдресДляПодключенияПриНажатии(Источник: Надпись, Событие: СобытиеПриНажатии)
    ПерейтиПоСсылке(Данные.АдресДляПодключения, Истина)
;

метод РедактироватьПриНажатии(Команда: ОбычнаяКоманда)
    знч ФормаСобеседования = новый ФормаСобеседования()
    ФормаСобеседования.Прочитать(Данные.Собеседование)
    ФормаСобеседования.ОткрытьВМодальномОкне()
;

метод ДобавитьКомментарий()
    если Данные == Неопределено или ФизлицоТекущегоПользователя == Неопределено
        возврат
    ;
    если ТекстКомментария.Пусто()
        СтандартныеФормы.ПоказатьУведомление("Ошибка", "Комментарий не может быть пустым")
        возврат  
    ;
    
    Комментарии.Добавить(
        ВладелецКомментария = Данные.Собеседование,
        Автор = ФизлицоТекущегоПользователя,
        Комментарий = ТекстКомментария)
        ПриДобавленииКомментария(новый СобытиеКомпонента())
;

метод КнопкаОтправитьПриНажатии(Источник: Кнопка, Событие: СобытиеПриНажатии)
    ДобавитьКомментарий()
;

метод КомментарийПриНажатииВвода(Источник: ПолеВвода<Строка>, Событие: СобытиеКомпонента)
    ДобавитьКомментарий()
;

@Обработчик
метод ПослеСоздания()
    ФизлицоТекущегоПользователя = КонтрольДоступа.ПараметрыСеанса().ФизлицоТекущегоПользователя
    ОбновитьСписокФайлов(Данные)
;

метод ПрисоединенныеФайлыЗавершенаЗагрузкаФайлов(Источник: ПрисоединенныеФайлыКомпонент, Событие: СобытиеКомпонента)
    пер СобеседованиеДанные = Данные
    ЗаписатьПрисоединенныеФайлы(СобеседованиеДанные.ПрисоединенныеФайлы)
    ОбновитьСписокФайлов(СобеседованиеДанные)
;

метод ОбновитьСписокФайлов(Данные: ДанныеСобеседования)
    Данные.ПрисоединенныеФайлы = ПолучитьФайлы(Данные.Собеседование)
;

метод ПрисоединенныеФайлыУдалить(Источник: ПрисоединенныеФайлыКомпонент, Событие: СобытиеСДанными<ПрисоединенныйФайл>)
    пер СобеседованиеДанные = Данные
    ЗаписатьПрисоединенныеФайлы(СобеседованиеДанные.ПрисоединенныеФайлы)
    СобеседованиеДанные.ПрисоединенныеФайлы.Файлы.Удалить(Событие.Данные)
;

@НаСервере @ДоступноСКлиента
статический метод ЗаписатьПрисоединенныеФайлы(ПрисоединенныеФайлы: ПрисоединенныеФайлы)
    ПрисоединенныеФайлыМенеджер.Записать(ПрисоединенныеФайлы) 
    ОбменДанными.ЗарегистрироватьОтправляемыйДокумент(ПрисоединенныеФайлы.Владелец как Собеседования.Ссылка, Истина)
    РегистрацияИзменений.ЗарегистрироватьИзменение(ПрисоединенныеФайлы.Владелец как Собеседования.Ссылка, Неопределено)
;

@НаСервере @ДоступноСКлиента
статический метод ПолучитьФайлы(Собеседование: Собеседования.Ссылка): ПрисоединенныеФайлы
    возврат ПрисоединенныеФайлыМенеджер.ПрисоединенныеФайлы(Собеседование)
;