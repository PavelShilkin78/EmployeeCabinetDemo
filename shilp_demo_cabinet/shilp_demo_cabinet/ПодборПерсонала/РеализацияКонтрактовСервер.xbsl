импорт СтандартноеПриложение
импорт ВебApi
импорт Анкетирование
импорт Компания
импорт Компания::Согласования
импорт ФизическиеЛица
импорт КонтрольДоступа
импорт УниверсальныеМеханизмы
импорт ОбменДанными
импорт Тестирование
импорт Обсуждения
импорт Уведомления
импорт УниверсальныеМеханизмы::Заметки

// Контракт ЛичныеКонтактыПоставщикОграничений

@ВПроекте
@Реализация
метод РазрешенияДоступаЛичныхКонтактов(Элементы: ЧитаемыйМассив<ЛичныеКонтакты.ДанныеРасчетаРазрешений>): Соответствие<ЛичныеКонтакты.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    знч РазрешенияДоступа: Соответствие<ЛичныеКонтакты.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    знч ЛичныеКонтакты: Массив<ЛичныеКонтакты.ДанныеРасчетаРазрешений>
    для Элемент из Элементы
        если Элемент.Владелец это Кандидаты.Ссылка
            или Элемент.Владелец это Отклики.Ссылка
            
            ЛичныеКонтакты.Добавить(Элемент)
        ;
    ; 
    
    если ЛичныеКонтакты.Пусто()
        возврат РазрешенияДоступа
    ;
    
    для Элемент из ЛичныеКонтакты
        РазрешенияДоступа.Вставить(Элемент, КонтрольДоступа.РазрешенияДоступаОбъекта(Элемент.Владелец))
    ;
    возврат РазрешенияДоступа
;
// Конец ЛичныеКонтактыПоставщикОграничений

//Контракт КонтрольДоступаПоПолномочиямСервис

@ВПроекте
@Реализация
метод ЗаполнитьПредопределенныеПолномочия()
    ПодборПерсонала.ДобавитьПолномочия()
;

@ВПроекте
@Реализация
метод ЗаполнитьПредопределенныеРоли()
    ПодборПерсонала.ДобавитьРоли()
;

@ВПроекте
@Реализация
метод ЗаполнитьПредопределенныеТипыАтрибутов()
    Кандидаты.ДобавитьТипАтрибутаДоступаКандидаты()
    Отклики.ДобавитьТипАтрибутаДоступаОтклики()
;

@ВПроекте
@Реализация
метод СоздатьНаборыОграниченийДоступа()
;

@ВПроекте
@Реализация
метод ТипыАтрибутовПоТипамЗначений(): ЧитаемоеСоответствие<Тип, ТипыАтрибутов.Ссылка>
    возврат {
        Тип<Отклики.Ссылка>: Отклики.ТипАтрибутаДоступаОтклики(),
        Тип<Кандидаты.Ссылка>: Кандидаты.ТипАтрибутаДоступаКандидаты()
    }
;

//Конец КонтрольДоступаПоПолномочиямСервис

// Контракт ПараметрыСеансаПоставщик
@ВПроекте
@Реализация
метод КоллекцияПараметровСеанса(МобильныйИнтерфейс: Булево): Соответствие<Строка, Объект>
    знч ЧтениеВакансии = КонтрольДоступа.ЕстьПравоНаПолномочие(ПодборПерсонала.ПолномочиеЧтениеВакансии())
    знч ЧтениеРассматриваемогоКандидата = КонтрольДоступа.ЕстьПравоНаПолномочие(ПодборПерсонала.ПолномочиеЧтениеРассматриваемогоКандидата())
    знч ЧтениеОтклика = КонтрольДоступа.ЕстьПравоНаПолномочие(ПодборПерсонала.ПолномочиеЧтениеОтклика())
    
    пер ПараметрыСеанса = новый ПодборПерсонала.ПараметрыСеанса(
        ФункциональныеОпции = ИспользуемаяФункциональность.ФункциональныеОпции(),
        ЗапускСогласованияЗаявкиНаПодбор = КонтрольДоступа.ЕстьПравоНаПолномочие(ПодборПерсонала.ПолномочиеЗапускСогласованияЗаявкиНаПодбор()),
        ЧтениеВакансии = ЧтениеВакансии,
        ЧтениеЧДКандидата = КонтрольДоступа.ЕстьПравоНаПолномочие(ПодборПерсонала.ПолномочиеЧтениеЧДКандидата()),
        ЧтениеКИКандидата = КонтрольДоступа.ЕстьПравоНаПолномочие(ПодборПерсонала.ПолномочиеЧтениеКИКандидата()),
        ЧтениеОтклика = ЧтениеОтклика,
        ЧтениеРассматриваемогоКандидата = ЧтениеРассматриваемогоКандидата,
        ЧтениеРезультатовТестирования = КонтрольДоступа.ЕстьПравоНаПолномочие(ПодборПерсонала.ПолномочиеЧтениеРезультатовТестирования()),
        НазначениеТестирования = КонтрольДоступа.ЕстьПравоНаПолномочие(ПодборПерсонала.ПолномочиеНазначениеТестирования()),
        ЧтениеЗаявкиНаПодбор = КонтрольДоступа.ЕстьПравоНаПолномочие(ПодборПерсонала.ПолномочиеЧтениеЗаявкиНаПодбор()),
        ИзменениеЗаявкиНаПодбор = КонтрольДоступа.ЕстьПравоНаПолномочие(ПодборПерсонала.ПолномочиеИзменениеЗаявкиНаПодбор()),
        ВедетсяСборСогласий = НастройкиПерсональныхДанных.ВедетсяСборСогласий(),
        ЕстьХотяБыОдноПолномочие = ПодборПерсонала.ЕстьХотяБыОдноПолномочие())
    возврат {ПодборПерсонала.КЛЮЧ_ПАРАМЕТРОВ_СЕАНСА: ПараметрыСеанса}
;
// Конец ПараметрыСеансаПоставщик


// Контракт ПодсистемаПриложения

@ВПроекте
@Реализация
метод ОписаниеПодсистемы(): СтандартноеПриложение.ОписаниеПодсистемы
    возврат новый СтандартноеПриложение.ОписаниеПодсистемы(
        ПодборПерсонала.ИД_ПОДСИСТЕМЫ,
        {
            Анкетирование.ИД_ПОДСИСТЕМЫ,
            Тестирование.ИД_ПОДСИСТЕМЫ,
            Обсуждения.ИД_ПОДСИСТЕМЫ,
            КонтрольДоступа.ИД_ПОДСИСТЕМЫ,
            Компания.ИД_ПОДСИСТЕМЫ,
            ФизЛица.ИД_ПОДСИСТЕМЫ,
            ОбменДанными.ИД_ПОДСИСТЕМЫ,
            Уведомления.ИД_ПОДСИСТЕМЫ,
            УниверсальныеМеханизмы.ИД_ПОДСИСТЕМЫ
        }
    )
;

// Конец ПодсистемаПриложения
// Контракт ОбновляемаяПодсистема

@ВПроекте
@Реализация
метод ОбработчикиЗаполнения(): Массив<СтандартноеПриложение.ОписаниеОбработчикаЗаполнения>
    пер Обработчики: Массив<СтандартноеПриложение.ОписаниеОбработчикаЗаполнения>

    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаЗаполнения(
                    ПодборПерсонала.ИД_ПОДСИСТЕМЫ, 
                    "ПодборПерсоналаОбновитьСтроковыеРесурсы", 
                    &ПодборПерсонала.ОбновитьСтроковыеРесурсы()))
    возврат Обработчики
;

@ВПроекте
@Реализация
метод ОбработчикиОбновления(): Массив<СтандартноеПриложение.ОписаниеОбработчикаОбновления>
    пер Обработчики: Массив<СтандартноеПриложение.ОписаниеОбработчикаОбновления>
    пер Сервис = ПодборПерсоналаПоставщикВерсииПриложения.ПолучитьСервис()  
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
                ПодборПерсонала.ИД_ПОДСИСТЕМЫ, 
                "ЗарегистрироватьОбъектыКОбмену", 
                &ПодборПерсонала.ЗарегистрироватьОбъектыКОбмену,
                Сервис.ЗарегистрироватьОбъектыКОбмену()))  
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
                ПодборПерсонала.ИД_ПОДСИСТЕМЫ, 
                "ОтменитьРегистрациюНаселенныхПунктов", 
                &ПодборПерсонала.ОтменитьРегистрациюНаселенныхПунктов,
                Сервис.ОтменитьРегистрациюНаселенныхПунктов()))
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
                ПодборПерсонала.ИД_ПОДСИСТЕМЫ, 
                "ПодборПерсоналаОбновитьСтроковыеРесурсы", 
                &ПодборПерсонала.ОбновитьСтроковыеРесурсы(),
                Сервис.ПодборПерсоналаОбновитьСтроковыеРесурсы()))
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
                ПодборПерсонала.ИД_ПОДСИСТЕМЫ, 
                "СоздатьВидЗаявленияЗаявокНаПодборУдалитьНеИспользуемыеВидыЗаявлений", 
                &ПодборПерсонала.СоздатьВидЗаявленияЗаявокНаПодборУдалитьНеИспользуемыеВидыЗаявлений(),
                Сервис.СоздатьВидЗаявленияЗаявокНаПодборУдалитьНеИспользуемыеВидыЗаявлений()))
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
            ПодборПерсонала.ИД_ПОДСИСТЕМЫ, 
            "УбратьДублиМножественныхРеквизитовОткликов", 
            &Отклики.УбратьДублиМножественныхРеквизитовОткликов(),
            Сервис.УбратьДублиМножественныхРеквизитовОткликов()))
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
            ПодборПерсонала.ИД_ПОДСИСТЕМЫ, 
            "ДобавитьНаборыВариантовОтветаАнкетыОСебе", 
            &НаборыВариантовОтвета.ЗаписатьПредопределенныеНаборыВариантов(),
            Сервис.ДобавитьНаборыВариантовОтветаАнкетыОСебе()))
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
            ПодборПерсонала.ИД_ПОДСИСТЕМЫ, 
            "СоздатьНовуюВерсиюАнкетыОСебе", 
            &ПредопределенныеВопросыАнкеты.СоздатьНовуюВерсиюАнкетыОСебе(),
            Сервис.СоздатьНовуюВерсиюАнкетыОСебе()))
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
            ПодборПерсонала.ИД_ПОДСИСТЕМЫ, 
            "СоздатьНовуюВерсиюАнкетыОСебе", 
            &ПодборПерсонала.ЗаполнитьВалютуПоУмолчаниюВОписанииОплаты(),
            Сервис.ЗаполнитьВалютуПоУмолчаниюВОписанииОплаты()))
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
        ПодборПерсонала.ИД_ПОДСИСТЕМЫ, 
        "ЗаявкиНаПодборДобавитьРазделительИнформационныхСистем", 
        &ЗаявкиНаПодбор.ДобавитьРазделительИнформационныхСистем(), 
        Сервис.ЗаявкиНаПодборДобавитьРазделительИнформационныхСистем()))
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
        ПодборПерсонала.ИД_ПОДСИСТЕМЫ, 
        "ЗаявкиНаПодборПересчитатьПлановуюДатуЗакрытия", 
        &ПодборПерсонала.ПересчитатьПлановуюДатуЗакрытия(), 
        Сервис.ПересчитатьПлановуюДатуЗакрытия()))
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
        ПодборПерсонала.ИД_ПОДСИСТЕМЫ, 
        "ОбновитьСтатусыКандидатов", 
        &СтатусыКандидатов.ОбновитьСтатусыВсехКандидатов(),
        Сервис.ОбновитьСтатусыКандидатов()))
           
    возврат Обработчики
;

// Конец ОбновляемаяПодсистема


// Контракт ДанныеApi

@ВПроекте
@Реализация
метод МассивТипов(Получатель: ВидПриложения?, ВерсияФорматаОбмена: Версия?): Массив<Тип>
    пер Типы: Массив<Тип>
    если Получатель == ВидПриложения.Hr
        Типы.Добавить(Тип<МатериалыКандидатов.Ссылка>) 
        Типы.Добавить(Тип<Отклики.Ссылка>)
        Типы.Добавить(Тип<ЗаявкиНаПодбор.Ссылка>)
        Типы.Добавить(Тип<РассматриваемыеКандидаты.Ссылка>)
        Типы.Добавить(Тип<Офферы.Ссылка>)
        Типы.Добавить(Тип<КлючевыеНавыки.Ссылка>)
        Типы.Добавить(Тип<СогласияНаОбработкуПдн.Ссылка>)
    иначе если Получатель == ВидПриложения.Ess
        Типы.Добавить(Тип<СрочностьВакансии.Ссылка>)
        Типы.Добавить(Тип<КомпенсационныеПакеты.Ссылка>)
        Типы.Добавить(Тип<СпособыТрудоустройства.Ссылка>)
        Типы.Добавить(Тип<КлючевыеНавыки.Ссылка>)
        Типы.Добавить(Тип<ЗаявкиНаПодбор.Ссылка>)
        Типы.Добавить(Тип<Вакансии.Ссылка>)
        Типы.Добавить(Тип<Кандидаты.Ссылка>)
        Типы.Добавить(Тип<СтатусыВоронки.Ссылка>)
        Типы.Добавить(Тип<РассматриваемыеКандидаты.Ссылка>)
        Типы.Добавить(Тип<Собеседования.Ссылка>)
        Типы.Добавить(Тип<МестаПроведенияСобеседований.Ссылка>)
        Типы.Добавить(Тип<ОписаниеРаботодателя.Ссылка>)
        Типы.Добавить(Тип<Офферы.Ссылка>)
        Типы.Добавить(Тип<ПричиныОтклонения.Ссылка>)
        Типы.Добавить(Тип<ПричиныОтказа.Ссылка>)
        Типы.Добавить(Тип<Отклики.Ссылка>)
        Типы.Добавить(Тип<НастройкиПодбораПерсонала.Ссылка>)
        Типы.Добавить(Тип<СогласияНаОбработкуПдн.Ссылка>)
        Типы.Добавить(Тип<НастройкиПерсональныхДанных.Ссылка>)
    иначе если Получатель == ВидПриложения.Hrm
        Типы.Добавить(Тип<Офферы.Ссылка>)
    ;
    возврат Типы
;

@ВПроекте
@Реализация
метод ТипДанныхJson(ТипОбъекта: Тип, ВерсияФорматаОбмена: Версия?): Массив<Тип>
    пер Типы: Массив<Тип>
    выбор ТипОбъекта
    когда Тип<Кандидаты.Ссылка>
        Типы.Добавить(Кандидаты.ТипДанныхJson(ВерсияФорматаОбмена))
    когда Тип<НастройкиПодбораПерсонала.Ссылка>
        Типы.Добавить(НастройкиПодбораПерсонала.ТипДанныхJson(ВерсияФорматаОбмена))
    когда Тип<Вакансии.Ссылка>
        Типы.Добавить(Вакансии.ТипДанныхJson(ВерсияФорматаОбмена))
    когда Тип<РассматриваемыеКандидаты.Ссылка>
        Типы.Добавить(РассматриваемыеКандидаты.ТипДанныхJson(ВерсияФорматаОбмена))
    когда Тип<КлючевыеНавыки.Ссылка>
        Типы.Добавить(КлючевыеНавыки.ТипДанныхJson(ВерсияФорматаОбмена))
    когда Тип<Офферы.Ссылка>
        Типы.Добавить(Офферы.ТипДанныхJson(ВерсияФорматаОбмена))
    когда Тип<Собеседования.Ссылка>
        Типы.Добавить(Собеседования.ТипДанныхJson(ВерсияФорматаОбмена))
    когда Тип<МестаПроведенияСобеседований.Ссылка>
        Типы.Добавить(МестаПроведенияСобеседований.ТипДанныхJson(ВерсияФорматаОбмена))
    когда Тип<СрочностьВакансии.Ссылка>
        Типы.Добавить(СрочностьВакансии.ТипДанныхJson(ВерсияФорматаОбмена))
    когда Тип<КомпенсационныеПакеты.Ссылка>
        Типы.Добавить(КомпенсационныеПакеты.ТипДанныхJson(ВерсияФорматаОбмена))
    когда Тип<СпособыТрудоустройства.Ссылка>
        Типы.Добавить(СпособыТрудоустройства.ТипДанныхJson(ВерсияФорматаОбмена))
    когда Тип<ЗаявкиНаПодбор.Ссылка>
        Типы.Добавить(ЗаявкиНаПодбор.ТипДанныхJson(ВерсияФорматаОбмена))
    когда Тип<СтатусыВоронки.Ссылка>
        Типы.Добавить(СтатусыВоронки.ТипДанныхJson(ВерсияФорматаОбмена))
    когда Тип<Отклики.Ссылка>
        Типы.Добавить(Отклики.ТипДанныхJson(ВерсияФорматаОбмена))
    когда Тип<ПричиныОтклонения.Ссылка>
        Типы.Добавить(ПричиныОтклонения.ТипДанныхJson(ВерсияФорматаОбмена))
    когда Тип<ПричиныОтказа.Ссылка>
        Типы.Добавить(ПричиныОтказа.ТипДанныхJson(ВерсияФорматаОбмена))
    когда Тип<СогласияНаОбработкуПдн.Ссылка>
        Типы.Добавить(СогласияНаОбработкуПдн.ТипДанныхJson(ВерсияФорматаОбмена))
    когда Тип<НастройкиПерсональныхДанных.Ссылка>
        Типы.Добавить(НастройкиПерсональныхДанных.ТипДанныхJson(ВерсияФорматаОбмена))
    когда Тип<МатериалыКандидатов.Ссылка>
        Типы.Добавить(МатериалыКандидатов.ТипДанныхJson(ВерсияФорматаОбмена))
    ;
    возврат Типы
;

@ВПроекте
@Реализация
метод ТипКоллекцииДанныхJson(ТипОбъекта: Тип, ВерсияФорматаОбмена: Версия?): Массив<Тип>
    пер Типы: Массив<Тип>
    выбор ТипОбъекта
    когда Тип<Кандидаты.Ссылка>
        Типы.Добавить(Кандидаты.ТипКоллекцииДанныхJson(ВерсияФорматаОбмена))
     когда Тип<СогласияНаОбработкуПдн.Ссылка>
        Типы.Добавить(СогласияНаОбработкуПдн.ТипКоллекцииДанныхJson(ВерсияФорматаОбмена))
    ;
    возврат Типы
;

@ВПроекте
@Реализация
метод ИнструментыМенеджераОбъекта(ТипОбъекта: Тип): Массив<ВебApiСервер.ИнструментыМенеджераОбъекта>
    пер НаборИнструментыМенеджераОбъекта: Массив<ВебApiСервер.ИнструментыМенеджераОбъекта>
    пер ИнструментыМенеджераОбъекта: ВебApiСервер.ИнструментыМенеджераОбъекта
    выбор ТипОбъекта
    когда Тип<Кандидаты.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как Кандидаты.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    когда Тип<СрочностьВакансии.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как СрочностьВакансии.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    когда Тип<КомпенсационныеПакеты.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как КомпенсационныеПакеты.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    когда Тип<СпособыТрудоустройства.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как СпособыТрудоустройства.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    когда Тип<КлючевыеНавыки.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как КлючевыеНавыки.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    когда Тип<ЗаявкиНаПодбор.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как ЗаявкиНаПодбор.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    когда Тип<Вакансии.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как Вакансии.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    когда Тип<РассматриваемыеКандидаты.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как РассматриваемыеКандидаты.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    когда Тип<СтатусыВоронки.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как СтатусыВоронки.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    когда Тип<Собеседования.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как Собеседования.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    когда Тип<МестаПроведенияСобеседований.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как МестаПроведенияСобеседований.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    когда Тип<ОписаниеРаботодателя.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как ОписаниеРаботодателя.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    когда Тип<Отклики.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как Отклики.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    когда Тип<Офферы.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как Офферы.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    когда Тип<ПричиныОтклонения.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как ПричиныОтклонения.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    когда Тип<ПричиныОтказа.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как ПричиныОтказа.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    когда Тип<НастройкиПодбораПерсонала.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как НастройкиПодбораПерсонала.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    когда Тип<СогласияНаОбработкуПдн.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как СогласияНаОбработкуПдн.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    когда Тип<НастройкиПерсональныхДанных.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как НастройкиПерсональныхДанных.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    когда Тип<МатериалыКандидатов.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как МатериалыКандидатов.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    ;
    возврат НаборИнструментыМенеджераОбъекта
;

@ВПроекте
@Реализация
метод ПолучитьДанныеJson(ТипОбъекта: Тип, Ссылка: ВходящиеДанные.Ссылка|ИсходящиеДанные.Ссылка, 
        Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?): Массив<Объект?>
    
    пер ДанныеJson: Массив<Объект?>
    выбор ТипОбъекта
    когда Тип<Офферы.Ссылка>
        ДанныеJson.Добавить(Офферы.ПолучитьДанныеJson(Ссылка как Офферы.Ссылка, Сервисы, ВерсияФорматаОбмена))
    когда Тип<СогласияНаОбработкуПдн.Ссылка>
        ДанныеJson.Добавить(СогласияНаОбработкуПдн.ПолучитьДанныеJson(Ссылка как СогласияНаОбработкуПдн.Ссылка, Сервисы, ВерсияФорматаОбмена))
    ;
    возврат ДанныеJson
;

@ВПроекте
@Реализация
метод МассивСсылокПоФильтру(ТипОбъекта: Тип, Фильтр: () -> ЧитаемыйМассив<Справочник.Ссылка>): Массив<ЧитаемыйМассив<Справочник.Ссылка>>
    пер МассивСсылок: Массив<ЧитаемыйМассив<Справочник.Ссылка>>
    возврат МассивСсылок
;

@ВПроекте
@Реализация
метод УдалитьОбъекты(ТипОбъекта: Тип, ПараметрыЗапроса: ЧитаемоеСоответствие<Строка, Число|Булево|Ууид|Строка>, Сервисы: ВебApiСервер.СервисыУдаленияОбъектов)
    
;

@ВПроекте
@Реализация
метод ТипОбъектаJson(ТипОбъекта: Тип): Массив<Строка>
    пер ТипОбъектаJson: Массив<Строка>
    выбор ТипОбъекта
    когда Тип<Кандидаты.Ссылка>
        ТипОбъектаJson.Добавить(Кандидаты.ТипОбъектаJson())
    когда Тип<СрочностьВакансии.Ссылка>
        ТипОбъектаJson.Добавить(СрочностьВакансии.ТипОбъектаJson())
    когда Тип<КомпенсационныеПакеты.Ссылка>
        ТипОбъектаJson.Добавить(КомпенсационныеПакеты.ТипОбъектаJson())
    когда Тип<СпособыТрудоустройства.Ссылка>
        ТипОбъектаJson.Добавить(СпособыТрудоустройства.ТипОбъектаJson())
    когда Тип<КлючевыеНавыки.Ссылка>
        ТипОбъектаJson.Добавить(КлючевыеНавыки.ТипОбъектаJson())
    когда Тип<ЗаявкиНаПодбор.Ссылка>
        ТипОбъектаJson.Добавить(ЗаявкиНаПодбор.ТипОбъектаJson())
    когда Тип<Вакансии.Ссылка>
        ТипОбъектаJson.Добавить(Вакансии.ТипОбъектаJson())
    когда Тип<РассматриваемыеКандидаты.Ссылка>
        ТипОбъектаJson.Добавить(РассматриваемыеКандидаты.ТипОбъектаJson())
    когда Тип<СтатусыВоронки.Ссылка>
        ТипОбъектаJson.Добавить(СтатусыВоронки.ТипОбъектаJson())
    когда Тип<Собеседования.Ссылка>
        ТипОбъектаJson.Добавить(Собеседования.ТипОбъектаJson())
    когда Тип<МестаПроведенияСобеседований.Ссылка>
        ТипОбъектаJson.Добавить(МестаПроведенияСобеседований.ТипОбъектаJson())
    когда Тип<НастройкиПодбораПерсонала.Ссылка>
        ТипОбъектаJson.Добавить(НастройкиПодбораПерсонала.ТипОбъектаJson())
    когда Тип<Отклики.Ссылка>
        ТипОбъектаJson.Добавить(Отклики.ТипОбъектаJson())
    когда Тип<Офферы.Ссылка>
        ТипОбъектаJson.Добавить(Офферы.ТипОбъектаJson())
    когда Тип<ПричиныОтклонения.Ссылка>
        ТипОбъектаJson.Добавить(ПричиныОтклонения.ТипОбъектаJson())
    когда Тип<ПричиныОтказа.Ссылка>
        ТипОбъектаJson.Добавить(ПричиныОтказа.ТипОбъектаJson())
    когда Тип<СогласияНаОбработкуПдн.Ссылка>
        ТипОбъектаJson.Добавить(СогласияНаОбработкуПдн.ТипОбъектаJson())
    когда Тип<НастройкиПерсональныхДанных.Ссылка>
        ТипОбъектаJson.Добавить(НастройкиПерсональныхДанных.ТипОбъектаJson())
    когда Тип<МатериалыКандидатов.Ссылка>
        ТипОбъектаJson.Добавить(МатериалыКандидатов.ТипОбъектаJson())
    ;
    возврат ТипОбъектаJson
;

@ВПроекте
@Реализация
метод ЗагрузитьОбъектИзJson(ТипОбъекта: Тип, ТипДанных: Тип, ДанныеJson: Объект?, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    выбор ТипОбъекта
    когда Тип<Кандидаты.Ссылка>
        выбор ТипДанных
        когда Тип<Кандидаты.Кандидат_2_0>
            Кандидаты.ЗагрузитьОбъектИзJson(ДанныеJson как Кандидаты.Кандидат_2_0, Сервисы)
        ;
    когда Тип<НастройкиПодбораПерсонала.Ссылка>
        выбор ТипДанных
        когда Тип<НастройкиПодбораПерсонала.НастройкиПодбораПерсонала>
            НастройкиПодбораПерсонала.ЗагрузитьОбъектИзJson(ДанныеJson как НастройкиПодбораПерсонала.НастройкиПодбораПерсонала, Сервисы)
        ;
    когда Тип<Вакансии.Ссылка>
        выбор ТипДанных
        когда Тип<Вакансии.Вакансия_2_0>
            Вакансии.ЗагрузитьОбъектИзJson(ДанныеJson как Вакансии.Вакансия_2_0, Сервисы)
        ;
    когда Тип<РассматриваемыеКандидаты.Ссылка>
        выбор ТипДанных
        когда Тип<РассматриваемыеКандидаты.РассматриваемыйКандидат_2_0>
            РассматриваемыеКандидаты.ЗагрузитьОбъектИзJson(ДанныеJson как РассматриваемыеКандидаты.РассматриваемыйКандидат_2_0, Сервисы)
        ;
    когда Тип<КлючевыеНавыки.Ссылка>
        выбор ТипДанных
        когда Тип<КлючевыеНавыки.КлючевойНавык_2_0>
            КлючевыеНавыки.ЗагрузитьОбъектИзJson(ДанныеJson как КлючевыеНавыки.КлючевойНавык_2_0, Сервисы)
        ;
    когда Тип<Офферы.Ссылка>
        выбор ТипДанных
        когда Тип<Офферы.Оффер_2_0>
            выбросить новый ИсключениеВыполнения("Неверный формат")
        когда Тип<Офферы.Оффер_2_5>
            Офферы.ЗагрузитьОбъектИзJson(ДанныеJson как Офферы.Оффер_2_5, Сервисы)
        ;
    когда Тип<Собеседования.Ссылка>
        выбор ТипДанных
        когда Тип<Собеседования.Собеседование_2_0>
            Собеседования.ЗагрузитьОбъектИзJson(ДанныеJson как Собеседования.Собеседование_2_0, Сервисы)
        ;
    когда Тип<МестаПроведенияСобеседований.Ссылка>
        выбор ТипДанных
        когда Тип<МестаПроведенияСобеседований.МестоПроведенияСобеседований_2_0>
            МестаПроведенияСобеседований.ЗагрузитьОбъектИзJson(ДанныеJson как МестаПроведенияСобеседований.МестоПроведенияСобеседований_2_0, Сервисы)
        ;
    когда Тип<СрочностьВакансии.Ссылка>
        выбор ТипДанных
        когда Тип<СрочностьВакансии.СрочностьВакансии_2_0>
            СрочностьВакансии.ЗагрузитьОбъектИзJson_V2_0(ДанныеJson как СрочностьВакансии.СрочностьВакансии_2_0, Сервисы)
        когда Тип<СрочностьВакансии.СрочностьВакансии_3_0>
            СрочностьВакансии.ЗагрузитьОбъектИзJson_V3_0(ДанныеJson как СрочностьВакансии.СрочностьВакансии_3_0, Сервисы)
        ;
    когда Тип<КомпенсационныеПакеты.Ссылка>
        выбор ТипДанных
        когда Тип<КомпенсационныеПакеты.КомпенсационныйПакет_2_0>
            КомпенсационныеПакеты.ЗагрузитьОбъектИзJson(ДанныеJson как КомпенсационныеПакеты.КомпенсационныйПакет_2_0, Сервисы)
        ;
    когда Тип<СпособыТрудоустройства.Ссылка>
        выбор ТипДанных
        когда Тип<СпособыТрудоустройства.СпособТрудоустройства_2_0>
            СпособыТрудоустройства.ЗагрузитьОбъектИзJson(ДанныеJson как СпособыТрудоустройства.СпособТрудоустройства_2_0, Сервисы)
        ;
    когда Тип<ЗаявкиНаПодбор.Ссылка>
        выбор ТипДанных
        когда Тип<ЗаявкиНаПодбор.ЗаявкаНаПодбор_2_0>
            ЗаявкиНаПодбор.ЗагрузитьОбъектИзJson_V2_0(ДанныеJson как ЗаявкиНаПодбор.ЗаявкаНаПодбор_2_0, Сервисы)
        когда Тип<ЗаявкиНаПодбор.ЗаявкаНаПодбор_3_0>
            ЗаявкиНаПодбор.ЗагрузитьОбъектИзJson_V3_0(ДанныеJson как ЗаявкиНаПодбор.ЗаявкаНаПодбор_3_0, Сервисы)
        ;
    когда Тип<СтатусыВоронки.Ссылка>
        выбор ТипДанных
        когда Тип<СтатусыВоронки.СтатусВоронки_2_0>
            СтатусыВоронки.ЗагрузитьОбъектИзJson(ДанныеJson как СтатусыВоронки.СтатусВоронки_2_0, Сервисы)
        ;
    когда Тип<Отклики.Ссылка>
        выбор ТипДанных
        когда Тип<Отклики.Отклик_2_0>
            Отклики.ЗагрузитьОбъектИзJson(ДанныеJson как Отклики.Отклик_2_0, Сервисы)
        ;
    когда Тип<ПричиныОтклонения.Ссылка>
        выбор ТипДанных
        когда Тип<ПричиныОтклонения.ПричинаОтклонения_2_0>
            ПричиныОтклонения.ЗагрузитьОбъектИзJson(ДанныеJson как ПричиныОтклонения.ПричинаОтклонения_2_0, Сервисы)
        ;
    когда Тип<ПричиныОтказа.Ссылка>
        выбор ТипДанных
        когда Тип<ПричиныОтказа.ПричинаОтказа_2_0>
            ПричиныОтказа.ЗагрузитьОбъектИзJson(ДанныеJson как ПричиныОтказа.ПричинаОтказа_2_0, Сервисы)
        ;
    когда Тип<СогласияНаОбработкуПдн.Ссылка>
        выбор ТипДанных
        когда Тип<СогласияНаОбработкуПдн.ДанныеJson_V3_0>
            СогласияНаОбработкуПдн.ЗагрузитьОбъектИзJson(ДанныеJson как СогласияНаОбработкуПдн.ДанныеJson_V3_0, Сервисы)
        ;
    когда Тип<НастройкиПерсональныхДанных.Ссылка>
        выбор ТипДанных
        когда Тип<НастройкиПерсональныхДанных.НастройкаПерсональныхДанных_3_0>
            НастройкиПерсональныхДанных.ЗагрузитьОбъектИзJson(ДанныеJson как НастройкиПерсональныхДанных.НастройкаПерсональныхДанных_3_0, Сервисы)
        ;
    когда Тип<МатериалыКандидатов.Ссылка>
        выбор ТипДанных
        когда Тип<МатериалыКандидатов.МатериалКандидата_3_0>
            МатериалыКандидатов.ЗагрузитьОбъектИзJson(ДанныеJson как МатериалыКандидатов.МатериалКандидата_3_0, Сервисы)
        ;
    ;
;

@ВПроекте
@Реализация
метод ПослеЗаписиГруппыОбъектов(ТипОбъекта: Тип, МассивОбъектовОтложенногоОбновления: Массив<ВебApiСервер.ОбъектОтложенногоОбновления>)
    выбор ТипОбъекта
    когда Тип<Кандидаты.Ссылка>
        Кандидаты.ПослеЗаписиГруппыОбъектов(МассивОбъектовОтложенногоОбновления)
    ;
;

@ВПроекте
@Реализация
метод ИзменитьОбъектИзJson(ТипОбъекта: Тип, ДанныеJson: Объект, Сервисы: ВебApiСервер.СервисыЗагрузкиJson, ЗаданиеМодификации: ВебApiСервер.ЗаданиеМодификации)
;

@ВПроекте
@Реализация
метод ЗавершитьИзменениеОбъектИзJson(ТипОбъекта: Тип, МассивСсылок: ЧитаемыйМассив<ВходящиеДанные.Ссылка>, ЗаданиеМодификации: ВебApiСервер.ЗаданиеМодификации)
;

@ВПроекте
@Реализация
метод ГруппаИзмененийВJson(ТипОбъекта: Тип, Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>,
    Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?): Массив<ЧитаемоеСоответствие<Строка, Массив<Объект?>>>
    
    пер ДанныеJson: Массив<ЧитаемоеСоответствие<Строка, Массив<Объект?>>>
    выбор ТипОбъекта
    когда Тип<Отклики.Ссылка>
        ДанныеJson.Добавить(Отклики.ГруппаИзмененийВJson(Ссылки, Сервисы))
    когда Тип<МатериалыКандидатов.Ссылка>
        ДанныеJson.Добавить(МатериалыКандидатов.ГруппаИзмененийВJson(Ссылки, Сервисы))
    когда Тип<СрочностьВакансии.Ссылка>
        ДанныеJson.Добавить(СрочностьВакансии.ГруппаИзмененийВJson(Ссылки, Сервисы, ВерсияФорматаОбмена))
    когда Тип<КомпенсационныеПакеты.Ссылка>
        ДанныеJson.Добавить(КомпенсационныеПакеты.ГруппаИзмененийВJson(Ссылки, Сервисы))
    когда Тип<СпособыТрудоустройства.Ссылка>
        ДанныеJson.Добавить(СпособыТрудоустройства.ГруппаИзмененийВJson(Ссылки, Сервисы))
    когда Тип<КлючевыеНавыки.Ссылка>
        ДанныеJson.Добавить(КлючевыеНавыки.ГруппаИзмененийВJson(Ссылки, Сервисы))
    когда Тип<ЗаявкиНаПодбор.Ссылка>
        ДанныеJson.Добавить(ЗаявкиНаПодбор.ГруппаИзмененийВJson(Ссылки, Сервисы, ВерсияФорматаОбмена))
    когда Тип<Вакансии.Ссылка>
        ДанныеJson.Добавить(Вакансии.ГруппаИзмененийВJson(Ссылки, Сервисы))
    когда Тип<Кандидаты.Ссылка>
        ДанныеJson.Добавить(Кандидаты.ГруппаИзмененийВJson(Ссылки, Сервисы))
    когда Тип<РассматриваемыеКандидаты.Ссылка>
        ДанныеJson.Добавить(РассматриваемыеКандидаты.ГруппаИзмененийВJson(Ссылки, Сервисы))
    когда Тип<СтатусыВоронки.Ссылка>
        ДанныеJson.Добавить(СтатусыВоронки.ГруппаИзмененийВJson(Ссылки, Сервисы))
    когда Тип<Собеседования.Ссылка>
        ДанныеJson.Добавить(Собеседования.ГруппаИзмененийВJson(Ссылки, Сервисы))
    когда Тип<МестаПроведенияСобеседований.Ссылка>
        ДанныеJson.Добавить(МестаПроведенияСобеседований.ГруппаИзмененийВJson(Ссылки, Сервисы))
    когда Тип<НастройкиПодбораПерсонала.Ссылка>
        ДанныеJson.Добавить(НастройкиПодбораПерсонала.ГруппаИзмененийВJson(Ссылки, Сервисы))
    когда Тип<Офферы.Ссылка>
        ДанныеJson.Добавить(Офферы.ГруппаИзмененийВJson(Ссылки, Сервисы))
    когда Тип<ПричиныОтклонения.Ссылка>
        ДанныеJson.Добавить(ПричиныОтклонения.ГруппаИзмененийВJson(Ссылки, Сервисы))
    когда Тип<ПричиныОтказа.Ссылка>
        ДанныеJson.Добавить(ПричиныОтказа.ГруппаИзмененийВJson(Ссылки, Сервисы))
    когда Тип<СогласияНаОбработкуПдн.Ссылка>
        знч Согласия: Массив<СогласияНаОбработкуПдн.Ссылка>
            для Ссылка из Ссылки
                Согласия.Добавить(Ссылка как СогласияНаОбработкуПдн.Ссылка)
            ; 
        ДанныеJson.Добавить(СогласияНаОбработкуПдн.ГруппаИзмененийВJson(Согласия, Сервисы, ВерсияФорматаОбмена))
    когда Тип<НастройкиПерсональныхДанных.Ссылка>
        знч Настройки: Массив<НастройкиПерсональныхДанных.Ссылка>
            для Ссылка из Ссылки
                Настройки.Добавить(Ссылка как НастройкиПерсональныхДанных.Ссылка)
            ; 
        ДанныеJson.Добавить(НастройкиПерсональныхДанных.ГруппаИзмененийВJson(Настройки, Сервисы, ВерсияФорматаОбмена))
    ;
    возврат ДанныеJson
;

// Конец ДанныеApi

// Контракт СобытияРезультатыТестирования

@Реализация
@ВПроекте
метод ПриОтправкеРеспонденту(РезультатТестирования: РезультатыТестирования.Ссылка, Респондент: РеспондентАнкетирования.Ссылка?)
    если Респондент это РассматриваемыеКандидаты.Ссылка
        СтатусыРассматриваемыхКандидатов.УстановитьПоТриггеру(Респондент как РассматриваемыеКандидаты.Ссылка, ТриггерыПодбораПерсонала.ПриНазначенииТестирования)
    ;
;

@Реализация
@ВПроекте
метод ПриЗавершении(РезультатТестирования: РезультатыТестирования.Ссылка)
    
;

// Конец СобытияРезультатыТестирования

// Контракт ПриемникОтветов

@Реализация
@ВПроекте
метод ОбластиДанных(): Массив<Анкетирование.ОбластьДанных>
    пер ОбластьДанных: Анкетирование.ОбластьДанных
    ОбластьДанных.ИдОбластиДанных = ПодборПерсонала.ИД_ОБЛАСТИ_ДАННЫХ
    ОбластьДанных.Наименование = "Кандидаты"
    возврат [ОбластьДанных]    
;

@Реализация
@ВПроекте
метод ПредопределенныеВопросы(ИдОбластиДанных: Ууид): ЧитаемыйМассив<ДанныеВопроса>
    если ИдОбластиДанных != ПодборПерсонала.ИД_ОБЛАСТИ_ДАННЫХ 
        возврат []
    ;
    возврат ПредопределенныеВопросыАнкеты.ПредопределенныеВопросы() 
;

@Реализация
@ВПроекте
метод ИмпортированиеОтветов(ИмпортируемыйОтвет: Анкетирование.ИмпортируемыйОтвет)
    если ИмпортируемыйОтвет.ИдОбластиДанных != ПодборПерсонала.ИД_ОБЛАСТИ_ДАННЫХ
        возврат 
    ;
    
    знч Сервисы = СобытияКандидаты.ПолучитьСервисы()
    для Сервис из Сервисы
        Сервис.ЗаполнитьРезюмеПоАнкете(ИмпортируемыйОтвет)    
    ;
;

// Конец ПриемникОтветов

// Контракт ПоставщикНаборовВариантовОтвета

@Реализация
@ВПроекте
метод ОписанияНаборов(): Массив<Анкетирование.ОписаниеНабораВариантов>
    знч ОписанияНаборов: Массив<Анкетирование.ОписаниеНабораВариантов>
    ОписанияНаборов.Добавить(ПредопределенныеВопросыАнкеты.ОписаниеНабораНаселенныеПункты())
    ОписанияНаборов.Добавить(ПредопределенныеВопросыАнкеты.ОписаниеНабораВалюты())
    ОписанияНаборов.Добавить(ПредопределенныеВопросыАнкеты.ОписаниеНабораСтраны())
    ОписанияНаборов.Добавить(ПредопределенныеВопросыАнкеты.ОписаниеНабораИностранныеЯзыки())
    возврат ОписанияНаборов    
;

// Конец ПоставщикНаборовВариантовОтвета

// Контракт ПоставщикЗначенийВариантовответа 

@Реализация
@ВПроекте
метод ЗначенияНабораВариантов(ИдНабора: Ууид): Массив<ДанныеВариантаОтвета>
    знч ЗначенияНабораВариантов: Массив<ДанныеВариантаОтвета>
    выбор ИдНабора
    когда ПредопределенныеВопросыАнкеты.ИД_НАБОРА_ВАРИАНТОВ_ОТВЕТА_НАСЕЛЕННЫЕ_ПУНКТЫ
        ЗначенияНабораВариантов.ДобавитьВсе(ПредопределенныеВопросыАнкеты.ЗначенияНабораВариантовНаселенныеПункты())
    когда ПредопределенныеВопросыАнкеты.ИД_НАБОРА_ВАРИАНТОВ_ОТВЕТА_ВАЛЮТЫ
        ЗначенияНабораВариантов.ДобавитьВсе(ПредопределенныеВопросыАнкеты.ЗначенияНабораВариантовВалюты())
    когда ПредопределенныеВопросыАнкеты.ИД_НАБОРА_ВАРИАНТОВ_ОТВЕТА_СТРАНЫ
        ЗначенияНабораВариантов.ДобавитьВсе(ПредопределенныеВопросыАнкеты.ЗначенияНабораВариантовСтраны())
    когда ПредопределенныеВопросыАнкеты.ИД_НАБОРА_ВАРИАНТОВ_ОТВЕТА_ИНОСТРАННЫЕ_ЯЗЫКИ
        ЗначенияНабораВариантов.ДобавитьВсе(ПредопределенныеВопросыАнкеты.ЗначенияНабораВариантовИностранныеЯзыки())
    ;
    возврат ЗначенияНабораВариантов    
;

// Конец ПоставщикЗначенийВариантовОтвета

// Контракт СогласованияПользователь
@ВПроекте
@Реализация
метод СформироватьПредставленияДокумента(Документ: ПодписываемыйДокумент.Ссылка)
    выбор Документ
    когда это ЗаявкиНаПодбор.Ссылка
    ;
;

@ВПроекте
@Реализация
метод ДокументСогласованияJson(ДанныеОбъекта: ЧитаемоеСоответствие<Строка, Объект?>,
    Сервисы: ВебApiСервер.СервисыУпаковкиJson): СогласованияДокументов.ДокументСогласованияJson?
    
    знч Документ = ДанныеОбъекта["Документ"] как Сущность.Ключ
    выбор Документ
    когда это ЗаявкиНаПодбор.Ссылка 
        возврат новый СогласованияДокументов.ДокументСогласованияJson(
            (ДанныеОбъекта["Документ"] как Документ.Ссылка).Ид.ВСтроку()
        )
    ;
    возврат Неопределено
;

@ВПроекте
@Реализация
метод ПослеПодписанияДокумента(Документ: ПодписываемыйДокумент.Ссылка, ДанныеСогласующего: Согласования.ДанныеСогласующего, ОбновитьПредставление: Булево)
    пер ЭтоДокументПодсистемы = Ложь
    выбор Документ
    когда это ЗаявкиНаПодбор.Ссылка 
        ЭтоДокументПодсистемы = Истина
        ЗаявкиНаПодбор.ПослеПодписания(Документ как ЗаявкиНаПодбор.Ссылка, ДанныеСогласующего)
    ;
    если ЭтоДокументПодсистемы и ОбновитьПредставление
        СформироватьПредставленияДокумента(Документ)
    ;
;

@ВПроекте
@Реализация
метод ОтправлятьСогласование(Документ: ПодписываемыйДокумент.Ссылка): Булево
    выбор Документ
    когда это ЗаявкиНаПодбор.Ссылка 
        возврат Истина
    ;
    
    возврат Ложь
;

@ВПроекте
@Реализация
метод ДокументыНаСогласовании(Согласующий: ФизическиеЛица.Ссылка): ЧитаемыйМассив<ПодписываемыйДокумент.Ссылка>
    возврат новый Массив<ПодписываемыйДокумент.Ссылка>()
;

@ВПроекте
@Реализация
метод ДокументыСогласованные(Согласующий: ФизическиеЛица.Ссылка): ЧитаемыйМассив<ПодписываемыйДокумент.Ссылка>
    знч Документы: Массив<ЗаявкиНаПодбор.Ссылка>
    
    знч Запрос = Запрос{

        Выбрать Различные
            ЗаявкиНаПодбор.Ссылка как Документ
        Из
            ЗаявкиНаПодбор как ЗаявкиНаПодбор
            Внутреннее соединение СтатусыЗаявокНаПодбор как СтатусыЗаявокНаПодбор
                по СтатусыЗаявокНаПодбор.Заявка == ЗаявкиНаПодбор.Ссылка
            Внутреннее соединение СогласующиеЗаявленийСотрудников как СогласующиеЗаявленийСотрудников
                по СогласующиеЗаявленийСотрудников.ПравилоСогласования == ЗаявкиНаПодбор.МаршрутСогласования
                и (СогласующиеЗаявленийСотрудников.Согласующий == %Согласующий
                    или (СогласующиеЗаявленийСотрудников.СпособЗамещения == СпособыЗамещения.ВместеССогласующим)
                        и СогласующиеЗаявленийСотрудников.ПервичныйСогласующий == %Согласующий)
            Левое соединение СогласованияДокументов как СогласованияДокументов
                по СогласованияДокументов.Документ == ЗаявкиНаПодбор.Ссылка
                    и (СогласованияДокументов.НомерШагаСогласования > СогласующиеЗаявленийСотрудников.ШагСогласования
                            или СогласованияДокументов.УчастникСогласования == %Согласующий)
        Где
            СтатусыЗаявокНаПодбор.Статус == СтатусыЗаявкиНаПодбор.Согласована
    }
    
    исп Результат = Запрос.Выполнить()
    для РезультатСтрока из Результат
        Документы.Добавить(РезультатСтрока.Документ)
    ;
    
    возврат Документы
;

@ВПроекте
@Реализация
метод ДокументДляОзнакомления(Документ: ПодписываемыйДокумент.Ссылка): Булево
    возврат Ложь
;

@ВПроекте
@Реализация
метод ПравилаСогласованияПоУмолчанию(): ЧитаемыйМассив<Согласования.ПравилоСогласования>
    возврат []
;

@ВПроекте
@Реализация
метод ЗаполнитьПредопределенныеВидыСогласуемыхЗаявлений()
    ВидыСогласуемыхЗаявлений.ДобавитьПредопределенныйВидСогласуемогоЗаявления(
        "Согласование заявок на подбор",
        "recruitmentApplication",
        ПодборПерсонала.ВИД_СОГЛАСОВАНИЯ_ЗАЯВОК_НА_ПОДБОР,
        Неопределено
    )
;

@ВПроекте
@Реализация
метод ЗаполнитьПредопределенныеРолиПодписантов()
;

@ВПроекте
@Реализация
метод ЗаполнитьПредопределенныеТипыСогласуемыхДокументов()
    Согласования.ДобавитьПредопределенныйТипСогласуемогоДокумента(ЗаявкиНаПодбор.ЗАЯВКИ_НА_ПОДБОР)
;

@ВПроекте
@Реализация
метод ТипСогласуемогоДокумента(ОбъектСогласования: ПодписываемыйДокумент.Ссылка|ВидыСогласуемыхЗаявлений.Ссылка): ТипыСогласуемыхДокументов.Ссылка?
    выбор ОбъектСогласования
    когда это ЗаявкиНаПодбор.Ссылка
        возврат Согласования.НайтиТипСогласуемогоДокумента(ЗаявкиНаПодбор.ЗАЯВКИ_НА_ПОДБОР)
    ;
    
    если ОбъектСогласования == ВидыСогласуемыхЗаявлений.НайтиПредопределенное(ПодборПерсонала.ВИД_СОГЛАСОВАНИЯ_ЗАЯВОК_НА_ПОДБОР)
        возврат Согласования.НайтиТипСогласуемогоДокумента(ЗаявкиНаПодбор.ЗАЯВКИ_НА_ПОДБОР)
    ;
        
    возврат Неопределено
;

@ВПроекте
@Реализация
метод ТипыСогласуемыхДокументовПолучателя(Получатель: ВидПриложения?): Массив<ТипыСогласуемыхДокументов.Ссылка>
    пер Типы: Массив<ТипыСогласуемыхДокументов.Ссылка>
    
    выбор Получатель
    когда ВидПриложения.Hr
        Типы.Добавить(Согласования.НайтиТипСогласуемогоДокумента(ЗаявкиНаПодбор.ЗАЯВКИ_НА_ПОДБОР))
    когда ВидПриложения.Ess
        Типы.Добавить(Согласования.НайтиТипСогласуемогоДокумента(ЗаявкиНаПодбор.ЗАЯВКИ_НА_ПОДБОР))
    ;
    возврат Типы
;

@ВПроекте
@Реализация
метод РольСогласующегоЗаявления(ВидЗаявления: ВидыСогласуемыхЗаявлений.Ссылка): Роли.Ссылка?
    если ВидЗаявления == ВидыСогласуемыхЗаявлений.НайтиПредопределенное(ПодборПерсонала.ВИД_СОГЛАСОВАНИЯ_ЗАЯВОК_НА_ПОДБОР)
        возврат ПодборПерсонала.РольСогласованиеЗаявокНаПодбор()
    ;
    
    возврат Неопределено
;

@ВПроекте
@Реализация
метод ВидСогласуемогоЗаявления(Документ: ПодписываемыйДокумент.Ссылка): ВидыСогласуемыхЗаявлений.Ссылка?
    возврат Неопределено
;

@ВПроекте
@Реализация
метод Согласуемый(Документ: ПодписываемыйДокумент.Ссылка): ФизическиеЛица.Ссылка?
    возврат Неопределено
;

@ВПроекте
@Реализация
метод ИдентификаторыЭлектронныхДокументов(Документ: ПодписываемыйДокумент.Ссылка): ЧитаемыйМассив<Строка>
    возврат []
;

// Конец СогласованияПользователь

// Контракт ПодписываемыйДокументПоставщикОграничений

@ВПроекте
@Реализация
метод РазрешенияДоступаПодписываемыхДокументов(Документы: ЧитаемыйМассив<ПодписываемыйДокумент.Ссылка>): ЧитаемоеСоответствие<ПодписываемыйДокумент.Ссылка, ЧитаемыйМассив<РазрешениеДоступа>>
    знч Разрешения: Соответствие<ПодписываемыйДокумент.Ссылка, ЧитаемыйМассив<РазрешениеДоступа>>
    знч ВладельцыСогласуемыхДокументов: Соответствие<ПодписываемыйДокумент.Ссылка, ЧитаемыйМассив<ФизическиеЛица.Ссылка>>
    знч ДокументыЗаявкиНаПодбор: Массив<ЗаявкиНаПодбор.Ссылка>
    знч ДокументыПодсистемы: Массив<ПодписываемыйДокумент.Ссылка>
    для Документ из Документы
        выбор Документ
        когда это ЗаявкиНаПодбор.Ссылка
            ДокументыЗаявкиНаПодбор.Добавить(Документ как ЗаявкиНаПодбор.Ссылка)
            ДокументыПодсистемы.Добавить(Документ)
        ;
    ;   
         
    ВладельцыСогласуемыхДокументов.ВставитьВсе(ЗаявкиНаПодбор.ФизическиеЛицаДокументов(ДокументыЗаявкиНаПодбор))
    
    знч РуководителиПодбора = КонтрольДоступа.ФизическиеЛицаПоПолномочию(ПодборПерсонала.ПолномочиеЗапускСогласованияЗаявкиНаПодбор())
    для Документ из ДокументыПодсистемы
        знч ФизическиеЛицаСПравомЧтения: Массив<ФизическиеЛица.Ссылка>
        если ВладельцыСогласуемыхДокументов.СодержитКлюч(Документ)
            ФизическиеЛицаСПравомЧтения.ДобавитьВсе(ВладельцыСогласуемыхДокументов.Получить(Документ))
        ;
        ФизическиеЛицаСПравомЧтения.ДобавитьВсе(РуководителиПодбора)
        
        Разрешения.Вставить(Документ, КонтрольДоступа.ЧтениеДанныхСправочниковПерсонально(ФизическиеЛицаСПравомЧтения))
    ;
    
    возврат Разрешения
;

// Конец ПодписываемыйДокументПоставщикОграничений

// Контракт РеспондентыАнкетированияApi

@ВПроекте
@Реализация
метод ВнешняяСсылкаРеспондентАнкетирования(ОписаниеЭлемента: ОбменДанными.ЭлементКонтрактаСущностиJson): ВебApiСервер.ВнешняяСсылка?
    если ОписаниеЭлемента.typeName == Тип<Кандидаты>.Представление()
        возврат Кандидаты.ВнешняяСсылка(ОписаниеЭлемента.ID)
    иначе если ОписаниеЭлемента.typeName == Тип<РассматриваемыеКандидаты>.Представление()
        возврат РассматриваемыеКандидаты.ВнешняяСсылка(ОписаниеЭлемента.ID)
    иначе
        возврат Неопределено
    ;        
;

@ВПроекте
@Реализация
метод ОписаниеЭлементаРеспондентАнкетирования(Ссылка: РеспондентАнкетирования.Ссылка, Сервисы: ВебApiСервер.СервисыУпаковкиJson): ОбменДанными.ЭлементКонтрактаСущностиJson?
    если Ссылка это Кандидаты.Ссылка
        возврат новый ОбменДанными.ЭлементКонтрактаСущностиJson(
            typeName = Тип<Кандидаты>.Представление(),
            ID = Сервисы.ПолучитьИдентификатор(Ссылка как Кандидаты.Ссылка)
        )
    иначе если Ссылка это ФизическиеЛица.Ссылка
        возврат новый ОбменДанными.ЭлементКонтрактаСущностиJson(
            typeName = Тип<ФизическиеЛица>.Представление(),
            ID = Сервисы.ПолучитьИдентификатор(Ссылка как ФизическиеЛица.Ссылка)
        )
    иначе если Ссылка это РассматриваемыеКандидаты.Ссылка
        возврат новый ОбменДанными.ЭлементКонтрактаСущностиJson(
            typeName = Тип<РассматриваемыеКандидаты>.Представление(),
            ID = Сервисы.ПолучитьИдентификатор(Ссылка как РассматриваемыеКандидаты.Ссылка)
        )      
    иначе если Ссылка это Отклики.Ссылка
        возврат новый ОбменДанными.ЭлементКонтрактаСущностиJson(
            typeName = Тип<Отклики>.Представление(),
            ID = (Ссылка как Отклики.Ссылка).Ид.ВСтроку()
        ) 
    иначе
        возврат Неопределено
    ;    
;

// Конец РеспондентыАнкетированияApi

// Контракт ВладельцыКонтактнойИнформацииApi

@ВПроекте
@Реализация
метод ВнешняяСсылкаВладелецКонтактнойИнформации(ОписаниеЭлемента: ОбменДанными.ЭлементКонтрактаСущностиJson): ВебApiСервер.ВнешняяСсылка?
    если ОписаниеЭлемента.typeName == Тип<Кандидаты>.ВСтроку()
        возврат Кандидаты.ВнешняяСсылка(ОписаниеЭлемента.ID)
    иначе
        возврат Неопределено
    ;        
;

@ВПроекте
@Реализация
метод ОписаниеЭлементаВладелецКонтактнойИнформации(Ссылка: ВладелецКонтактнойИнформации.Ссылка, Сервисы: ВебApiСервер.СервисыУпаковкиJson): ОбменДанными.ЭлементКонтрактаСущностиJson?
    если Ссылка это Кандидаты.Ссылка
        возврат новый ОбменДанными.ЭлементКонтрактаСущностиJson(
            typeName = Тип<Кандидаты>.ВСтроку(),
            ID = Сервисы.ПолучитьИдентификатор(Ссылка как Кандидаты.Ссылка)
        )    
    иначе
        возврат Неопределено
    ;    
;

// Конец ВладельцыКонтактнойИнформацииApi

// Контракт ЗаметкиРегистрацияИзменений

@ВПроекте
@Реализация
метод ТребуетсяРегистрация(ОбъектСохраненияЗаметки: ОбъектСохраненияЗаметки.Ссылка): Булево
    если ОбъектСохраненияЗаметки это ЗаявкиНаПодбор.Ссылка
        и СтатусыЗаявокНаПодбор.Получить(ОбъектСохраненияЗаметки как ЗаявкиНаПодбор.Ссылка) != СтатусыЗаявкиНаПодбор.Черновик
            возврат Истина
    иначе если ОбъектСохраненияЗаметки это Вакансии.Ссылка
        или ОбъектСохраненияЗаметки это Кандидаты.Ссылка
        или ОбъектСохраненияЗаметки это Отклики.Ссылка
        возврат Истина
    иначе
        возврат Ложь
    ;
        
;

// Конец ЗаметкиРегистрацияИзменений

//Контракт СубъектыСогласийApi
@ВПроекте
@Реализация
метод ВнешняяСсылкаСубъектыСогласий(ОписаниеЭлемента: ОбменДанными.ЭлементКонтрактаСущностиJson): ВебApiСервер.ВнешняяСсылка?
    если ОписаниеЭлемента.typeName == Тип<Отклики>.Представление()
        возврат Отклики.ВнешняяСсылка(ОписаниеЭлемента.ID)
    иначе если ОписаниеЭлемента.typeName == Тип<Кандидаты>.Представление()
        возврат Кандидаты.ВнешняяСсылка(ОписаниеЭлемента.ID)
    иначе
        возврат Неопределено
    ;
;

@ВПроекте
@Реализация
метод ОписаниеЭлементаСубъектыСогласий(Ссылка: СубъектСогласияНаОбработкуПдн.Ссылка, Сервисы: ВебApiСервер.СервисыУпаковкиJson): ОбменДанными.ЭлементКонтрактаСущностиJson?
    если Ссылка это Кандидаты.Ссылка
        возврат новый ОбменДанными.ЭлементКонтрактаСущностиJson(
            typeName = Тип<Кандидаты>.Представление(),
            ID = Сервисы.ПолучитьИдентификатор(Ссылка как Кандидаты.Ссылка)
        )
    иначе если Ссылка это Отклики.Ссылка
        возврат новый ОбменДанными.ЭлементКонтрактаСущностиJson(
            typeName = Тип<Отклики>.Представление(),
            ID = Сервисы.ПолучитьИдентификатор(Ссылка как Отклики.Ссылка)
        )
    иначе
        возврат Неопределено
    ;
;

//Конец СубъектыСогласийApi



// Контракт ОбъектыСохраненияЗаметокApi

@ВПроекте
@Реализация
метод ВнешняяСсылка(ОписаниеЭлемента: ОбменДанными.ЭлементКонтрактаСущностиJson): ВебApiСервер.ВнешняяСсылка?
    если ОписаниеЭлемента.typeName == Тип<ЗаявкиНаПодбор>.ВСтроку()
        возврат ЗаявкиНаПодбор.ВнешняяСсылка(ОписаниеЭлемента.ID)
    иначе если ОписаниеЭлемента.typeName == Тип<Вакансии>.ВСтроку()
        возврат Вакансии.ВнешняяСсылка(ОписаниеЭлемента.ID)
    иначе если ОписаниеЭлемента.typeName == Тип<Отклики>.ВСтроку()
        возврат Отклики.ВнешняяСсылка(ОписаниеЭлемента.ID)
    иначе если ОписаниеЭлемента.typeName == Тип<Кандидаты>.ВСтроку()
        возврат Кандидаты.ВнешняяСсылка(ОписаниеЭлемента.ID)
    иначе
        возврат Неопределено
    ;
;

@ВПроекте
@Реализация
метод ОписаниеЭлемента(Ссылка: ОбъектСохраненияЗаметки.Ссылка, Сервисы: ВебApiСервер.СервисыУпаковкиJson): ОбменДанными.ЭлементКонтрактаСущностиJson?
    если Ссылка это Кандидаты.Ссылка
        возврат новый ОбменДанными.ЭлементКонтрактаСущностиJson(
            typeName = Тип<Кандидаты>.ВСтроку(),
            ID = Сервисы.ПолучитьИдентификатор(Ссылка как Кандидаты.Ссылка)
        )
    иначе если Ссылка это ЗаявкиНаПодбор.Ссылка
        возврат новый ОбменДанными.ЭлементКонтрактаСущностиJson(
            typeName = Тип<ЗаявкиНаПодбор>.ВСтроку(),
            ID = Сервисы.ПолучитьИдентификатор(Ссылка как ЗаявкиНаПодбор.Ссылка)
        )
    иначе если Ссылка это Вакансии.Ссылка
        возврат новый ОбменДанными.ЭлементКонтрактаСущностиJson(
            typeName = Тип<Вакансии>.ВСтроку(),
            ID = Сервисы.ПолучитьИдентификатор(Ссылка как Вакансии.Ссылка)
        )
    иначе если Ссылка это Отклики.Ссылка
        возврат новый ОбменДанными.ЭлементКонтрактаСущностиJson(
            typeName = Тип<Отклики>.ВСтроку(),
            ID = Сервисы.ПолучитьИдентификатор(Ссылка как Отклики.Ссылка)
        )
    иначе
        возврат Неопределено
    ;
;

// Конец ОбъектыСохраненияЗаметокApi

// Контракт СтроковыеРесурсыПоставщик

@ВПроекте
@Реализация
метод ИменаРесурсовПоГруппеРесурсов(УчитыватьИспользуемуюФункциональность: Булево): Соответствие<Строка, Коллекция<Строка>>
    возврат {
        ПодборПерсонала.ГРУППА_РЕСУРСОВ_ПОДБОР_ПЕРСОНАЛА: [
            ПодборПерсонала.ЗАЯВКА_НА_ПОДБОР_СОЗДАНИЕ_SMS,
            ПодборПерсонала.ЗАЯВКА_НА_ПОДБОР_СОЗДАНИЕ_PUSH,
            ПодборПерсонала.ЗАЯВКА_НА_ПОДБОР_СОЗДАНИЕ_EMAIL,
            ПодборПерсонала.ЗАЯВКА_НА_ПОДБОР_СОЗДАНИЕ_ТЕМА,

            ПодборПерсонала.ЗАЯВКА_НА_ПОДБОР_СОГЛАСОВАНИЕ_SMS,
            ПодборПерсонала.ЗАЯВКА_НА_ПОДБОР_СОГЛАСОВАНИЕ_PUSH,
            ПодборПерсонала.ЗАЯВКА_НА_ПОДБОР_СОГЛАСОВАНИЕ_EMAIL,
            ПодборПерсонала.ЗАЯВКА_НА_ПОДБОР_СОГЛАСОВАНИЕ_ТЕМА,

            ПодборПерсонала.ЗАЯВКА_НА_ПОДБОР_ОТМЕНА_SMS,
            ПодборПерсонала.ЗАЯВКА_НА_ПОДБОР_ОТМЕНА_PUSH,
            ПодборПерсонала.ЗАЯВКА_НА_ПОДБОР_ОТМЕНА_EMAIL,
            ПодборПерсонала.ЗАЯВКА_НА_ПОДБОР_ОТМЕНА_ТЕМА,

            ПодборПерсонала.ЗАЯВКА_НА_ПОДБОР_ВАКАНСИЯ_SMS,
            ПодборПерсонала.ЗАЯВКА_НА_ПОДБОР_ВАКАНСИЯ_PUSH,
            ПодборПерсонала.ЗАЯВКА_НА_ПОДБОР_ВАКАНСИЯ_EMAIL,
            ПодборПерсонала.ЗАЯВКА_НА_ПОДБОР_ВАКАНСИЯ_ТЕМА,

            ПодборПерсонала.ЗАЯВКА_НА_ПОДБОР_ДОРАБОТКА_SMS,
            ПодборПерсонала.ЗАЯВКА_НА_ПОДБОР_ДОРАБОТКА_PUSH,
            ПодборПерсонала.ЗАЯВКА_НА_ПОДБОР_ДОРАБОТКА_EMAIL,
            ПодборПерсонала.ЗАЯВКА_НА_ПОДБОР_ДОРАБОТКА_ТЕМА,

            ПодборПерсонала.ОТКЛИК_НА_ВАКАНСИЮ_SMS,
            ПодборПерсонала.ОТКЛИК_НА_ВАКАНСИЮ_PUSH,
            ПодборПерсонала.ОТКЛИК_НА_ВАКАНСИЮ_EMAIL,
            ПодборПерсонала.ОТКЛИК_НА_ВАКАНСИЮ_ТЕМА,

            ПодборПерсонала.СПИСОК_КАНДИДАТОВ_НА_УТВЕРЖДЕНИЕ_SMS,
            ПодборПерсонала.СПИСОК_КАНДИДАТОВ_НА_УТВЕРЖДЕНИЕ_PUSH,
            ПодборПерсонала.СПИСОК_КАНДИДАТОВ_НА_УТВЕРЖДЕНИЕ_EMAIL,
            ПодборПерсонала.СПИСОК_КАНДИДАТОВ_НА_УТВЕРЖДЕНИЕ_ТЕМА,

            ПодборПерсонала.КАНДИДАТ_УТВЕРЖДЕН_SMS,
            ПодборПерсонала.КАНДИДАТ_УТВЕРЖДЕН_PUSH,
            ПодборПерсонала.КАНДИДАТ_УТВЕРЖДЕН_EMAIL,
            ПодборПерсонала.КАНДИДАТ_УТВЕРЖДЕН_ТЕМА,

            ПодборПерсонала.КАНДИДАТ_ОТКЛОНЕН_SMS,
            ПодборПерсонала.КАНДИДАТ_ОТКЛОНЕН_PUSH,
            ПодборПерсонала.КАНДИДАТ_ОТКЛОНЕН_EMAIL,
            ПодборПерсонала.КАНДИДАТ_ОТКЛОНЕН_ТЕМА,

            ПодборПерсонала.ПРЕДЛОЖЕНИЕ_О_РАБОТЕ_ОТПРАВЛЕНО_SMS,
            ПодборПерсонала.ПРЕДЛОЖЕНИЕ_О_РАБОТЕ_ОТПРАВЛЕНО_PUSH,
            ПодборПерсонала.ПРЕДЛОЖЕНИЕ_О_РАБОТЕ_ОТПРАВЛЕНО_EMAIL,
            ПодборПерсонала.ПРЕДЛОЖЕНИЕ_О_РАБОТЕ_ОТПРАВЛЕНО_ТЕМА,

            ПодборПерсонала.ПРЕДЛОЖЕНИЕ_О_РАБОТЕ_КАНДИДАТУ_EMAIL,
            ПодборПерсонала.ПРЕДЛОЖЕНИЕ_О_РАБОТЕ_КАНДИДАТУ_ТЕМА,

            ПодборПерсонала.ПРЕДЛОЖЕНИЕ_О_РАБОТЕ_ОТКЛОНЕНО_SMS,
            ПодборПерсонала.ПРЕДЛОЖЕНИЕ_О_РАБОТЕ_ОТКЛОНЕНО_PUSH,
            ПодборПерсонала.ПРЕДЛОЖЕНИЕ_О_РАБОТЕ_ОТКЛОНЕНО_EMAIL,
            ПодборПерсонала.ПРЕДЛОЖЕНИЕ_О_РАБОТЕ_ОТКЛОНЕНО_ТЕМА,

            ПодборПерсонала.ПРЕДЛОЖЕНИЕ_О_РАБОТЕ_ПРИНЯТО_SMS,
            ПодборПерсонала.ПРЕДЛОЖЕНИЕ_О_РАБОТЕ_ПРИНЯТО_PUSH,
            ПодборПерсонала.ПРЕДЛОЖЕНИЕ_О_РАБОТЕ_ПРИНЯТО_EMAIL,
            ПодборПерсонала.ПРЕДЛОЖЕНИЕ_О_РАБОТЕ_ПРИНЯТО_ТЕМА,

            ПодборПерсонала.ПРИГЛАШЕНИЕ_НА_СОБЕСЕДОВАНИЕ_SMS,
            ПодборПерсонала.ПРИГЛАШЕНИЕ_НА_СОБЕСЕДОВАНИЕ_PUSH,
            ПодборПерсонала.ПРИГЛАШЕНИЕ_НА_СОБЕСЕДОВАНИЕ_EMAIL,
            ПодборПерсонала.ПРИГЛАШЕНИЕ_НА_СОБЕСЕДОВАНИЕ_ТЕМА,

            ПодборПерсонала.ИЗМЕНЕН_СТАТУС_ВАКАНСИИ_SMS,
            ПодборПерсонала.ИЗМЕНЕН_СТАТУС_ВАКАНСИИ_PUSH,
            ПодборПерсонала.ИЗМЕНЕН_СТАТУС_ВАКАНСИИ_EMAIL,
            ПодборПерсонала.ИЗМЕНЕН_СТАТУС_ВАКАНСИИ_ТЕМА,

            ПодборПерсонала.ПРИБЛИЖЕНИЕ_ДАТЫ_ОКОНЧАНИЯ_ПУБЛИКАЦИИ_ВАКАНСИИ_SMS,
            ПодборПерсонала.ПРИБЛИЖЕНИЕ_ДАТЫ_ОКОНЧАНИЯ_ПУБЛИКАЦИИ_ВАКАНСИИ_PUSH,
            ПодборПерсонала.ПРИБЛИЖЕНИЕ_ДАТЫ_ОКОНЧАНИЯ_ПУБЛИКАЦИИ_ВАКАНСИИ_EMAIL,
            ПодборПерсонала.ПРИБЛИЖЕНИЕ_ДАТЫ_ОКОНЧАНИЯ_ПУБЛИКАЦИИ_ВАКАНСИИ_ТЕМА,

            ПодборПерсонала.ОКОНЧАНИЕ_СРОКА_ПУБЛИКАЦИИ_ВАКАНСИИ_SMS,
            ПодборПерсонала.ОКОНЧАНИЕ_СРОКА_ПУБЛИКАЦИИ_ВАКАНСИИ_PUSH,
            ПодборПерсонала.ОКОНЧАНИЕ_СРОКА_ПУБЛИКАЦИИ_ВАКАНСИИ_EMAIL,
            ПодборПерсонала.ОКОНЧАНИЕ_СРОКА_ПУБЛИКАЦИИ_ВАКАНСИИ_ТЕМА,

            ПодборПерсонала.НАЗНАЧЕНИЕ_ОТВЕТСТВЕННОГО_ЗА_ВАКАНСИЮ_SMS,
            ПодборПерсонала.НАЗНАЧЕНИЕ_ОТВЕТСТВЕННОГО_ЗА_ВАКАНСИЮ_PUSH,
            ПодборПерсонала.НАЗНАЧЕНИЕ_ОТВЕТСТВЕННОГО_ЗА_ВАКАНСИЮ_EMAIL,
            ПодборПерсонала.НАЗНАЧЕНИЕ_ОТВЕТСТВЕННОГО_ЗА_ВАКАНСИЮ_ТЕМА,
        
            ПодборПерсонала.ЗАКРЫТИЕ_ВАКАНСИИ_SMS,
            ПодборПерсонала.ЗАКРЫТИЕ_ВАКАНСИИ_PUSH,
            ПодборПерсонала.ЗАКРЫТИЕ_ВАКАНСИИ_EMAIL,
            ПодборПерсонала.ЗАКРЫТИЕ_ВАКАНСИИ_ТЕМА]
    }
;

// Конец СтроковыеРесурсыПоставщик

// Контракт ВторичныеДанные

@ВПроекте
@Реализация
метод Пересчитать()
    ДанныеВоронкиПодбора.ПересчетВторичныхДанных()
;

// Конец ВторичныеДанные