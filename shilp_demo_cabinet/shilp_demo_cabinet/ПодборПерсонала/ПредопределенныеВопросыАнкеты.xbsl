импорт Анкетирование
импорт Анкетирование::Обмен
импорт УниверсальныеМеханизмы
импорт УправлениеПерсоналом
импорт ФизическиеЛица
импорт ОбменДанными

@ВПодсистеме конст ИД_НАБОРА_ВАРИАНТОВ_ОТВЕТА_НАСЕЛЕННЫЕ_ПУНКТЫ = Ууид{8370a388-8ff5-40c0-931d-09f257da1883}
@ВПодсистеме конст ИД_НАБОРА_ВАРИАНТОВ_ОТВЕТА_ВАЛЮТЫ = Ууид{e8c7d811-38c9-489f-8b96-9e7dfa2fc153}
@ВПодсистеме конст ИД_НАБОРА_ВАРИАНТОВ_ОТВЕТА_СТРАНЫ= Ууид{00878a56-42de-4142-a6a0-fc67942bd6ef}
@ВПодсистеме конст ИД_НАБОРА_ВАРИАНТОВ_ОТВЕТА_ИНОСТРАННЫЕ_ЯЗЫКИ = Ууид{7f86888f-e4c1-4d67-b369-d631ae577e81}

@ВПодсистеме
метод ОписаниеНабораНаселенныеПункты(): Анкетирование.ОписаниеНабораВариантов
    знч ОписаниеНабора: Анкетирование.ОписаниеНабораВариантов
    ОписаниеНабора.Ид = ИД_НАБОРА_ВАРИАНТОВ_ОТВЕТА_НАСЕЛЕННЫЕ_ПУНКТЫ
    ОписаниеНабора.Наименование = "Населенные пункты"
    ОписаниеНабора.ТипЗначений = Тип<НаселенныеПункты.Ссылка>
    возврат ОписаниеНабора    
;

@ВПодсистеме
метод ОписаниеНабораВалюты(): Анкетирование.ОписаниеНабораВариантов
    знч ОписаниеНабора: Анкетирование.ОписаниеНабораВариантов
    ОписаниеНабора.Ид = ИД_НАБОРА_ВАРИАНТОВ_ОТВЕТА_ВАЛЮТЫ
    ОписаниеНабора.Наименование = "Валюты"
    ОписаниеНабора.ТипЗначений = Тип<Валюты.Ссылка>
    ОписаниеНабора.Статический = Истина
    возврат ОписаниеНабора    
;

@ВПодсистеме
метод ОписаниеНабораСтраны(): Анкетирование.ОписаниеНабораВариантов
    знч ОписаниеНабора: Анкетирование.ОписаниеНабораВариантов
    ОписаниеНабора.Ид = ИД_НАБОРА_ВАРИАНТОВ_ОТВЕТА_СТРАНЫ
    ОписаниеНабора.Наименование = "Страны"
    ОписаниеНабора.ТипЗначений = Тип<Страны.Ссылка>
    ОписаниеНабора.Статический = Истина
    возврат ОписаниеНабора    
;

@ВПодсистеме
метод ОписаниеНабораИностранныеЯзыки(): Анкетирование.ОписаниеНабораВариантов
    знч ОписаниеНабора: Анкетирование.ОписаниеНабораВариантов
    ОписаниеНабора.Ид = ИД_НАБОРА_ВАРИАНТОВ_ОТВЕТА_ИНОСТРАННЫЕ_ЯЗЫКИ
    ОписаниеНабора.Наименование = "Иностранные языки"
    ОписаниеНабора.ТипЗначений = Тип<ИностранныеЯзыки.Ссылка>
    ОписаниеНабора.Статический = Истина
    возврат ОписаниеНабора    
;

@ВПодсистеме
метод ЗначенияНабораВариантовНаселенныеПункты(): Массив<ДанныеВариантаОтвета>
    знч ЗначенияНабораВариантов: Массив<ДанныеВариантаОтвета>
    
    знч Запрос = Запрос{
        Выбрать
            Ссылка
        Из
            НаселенныеПункты
    }
    исп РезультатЗапроса = Запрос.Выполнить()
    для СтрокаРезультата из РезультатЗапроса
        знч ДанныеВарианта: ДанныеВариантаОтвета 
        ДанныеВарианта.Вариант = СтрокаРезультата.Ссылка
        ДанныеВарианта.ИдВарианта = СтрокаРезультата.Ссылка.Ид
        ДанныеВарианта.ПредставлениеВарианта = СтрокаРезультата.Ссылка.Представление()
        ЗначенияНабораВариантов.Добавить(ДанныеВарианта)   
    ;
    
    возврат ЗначенияНабораВариантов    
;

@ВПодсистеме
метод ЗначенияНабораВариантовВалюты(): Массив<ДанныеВариантаОтвета>
    знч ЗначенияНабораВариантов: Массив<ДанныеВариантаОтвета>
    знч Запрос = Запрос{
        Выбрать
            Ссылка
        Из
            Валюты
        Упорядочить По 
            Наименование
    }
    исп РезультатЗапроса = Запрос.Выполнить()
    для СтрокаРезультата из РезультатЗапроса
        знч ДанныеВарианта: ДанныеВариантаОтвета 
        ДанныеВарианта.Вариант = СтрокаРезультата.Ссылка
        ДанныеВарианта.ИдВарианта = СтрокаРезультата.Ссылка.Ид
        ДанныеВарианта.ПредставлениеВарианта = СтрокаРезультата.Ссылка.Представление()
        ЗначенияНабораВариантов.Добавить(ДанныеВарианта)   
    ;
    возврат ЗначенияНабораВариантов    
;

@ВПодсистеме
метод ЗначенияНабораВариантовСтраны(): Массив<ДанныеВариантаОтвета>
    знч ЗначенияНабораВариантов: Массив<ДанныеВариантаОтвета>
    знч Запрос = Запрос{
        Выбрать
            Ссылка
        Из
            Страны
        Упорядочить По 
            Наименование
    }
    исп РезультатЗапроса = Запрос.Выполнить()
    для СтрокаРезультата из РезультатЗапроса
        знч ДанныеВарианта: ДанныеВариантаОтвета 
        ДанныеВарианта.Вариант = СтрокаРезультата.Ссылка
        ДанныеВарианта.ИдВарианта = СтрокаРезультата.Ссылка.Ид
        ДанныеВарианта.ПредставлениеВарианта = СтрокаРезультата.Ссылка.Представление()
        ЗначенияНабораВариантов.Добавить(ДанныеВарианта)   
    ;
    возврат ЗначенияНабораВариантов    
;

@ВПодсистеме
метод ЗначенияНабораВариантовИностранныеЯзыки(): Массив<ДанныеВариантаОтвета>
    знч ЗначенияНабораВариантов: Массив<ДанныеВариантаОтвета>
    знч Запрос = Запрос{
        Выбрать
            Ссылка
        Из
            ИностранныеЯзыки
        Упорядочить По 
            Наименование
    }
    исп РезультатЗапроса = Запрос.Выполнить()
    для СтрокаРезультата из РезультатЗапроса
        знч ДанныеВарианта: ДанныеВариантаОтвета 
        ДанныеВарианта.Вариант = СтрокаРезультата.Ссылка
        ДанныеВарианта.ИдВарианта = СтрокаРезультата.Ссылка.Ид
        ДанныеВарианта.ПредставлениеВарианта = СтрокаРезультата.Ссылка.Представление()
        ЗначенияНабораВариантов.Добавить(ДанныеВарианта)   
    ;
    возврат ЗначенияНабораВариантов    
;

// ПредопределенныеВопросыАнкеты

@ВПроекте конст ИД_ВОПРОСА_ФАМИЛИЯ = Ууид{56574a04-acdc-4e6e-ae37-9726243c9e30}
@ВПроекте конст ИД_ВОПРОСА_ИМЯ = Ууид{da0c4186-f9cf-4470-966c-b01ef5d5b843}
@ВПроекте конст ИД_ВОПРОСА_ОТЧЕСТВО = Ууид{1e612686-4a7f-416b-b1b4-d2e5d11aa9a0}
@ВПроекте конст ИД_ВОПРОСА_ПОЛ = Ууид{f9ed3aa9-a66e-45bf-ad27-dc5a2ffbc553}
@ВПроекте конст ИД_ВОПРОСА_ВАШ_ГОРОД = Ууид{6d1a7916-3271-449c-ad8c-76484c7b7df5}
@ВПроекте конст ИД_ВОПРОСА_ДАТА_РОЖДЕНИЯ = Ууид{1ed4e794-ee89-4827-8c27-e3c90a22af4f}
@ВПроекте конст ИД_ВОПРОСА_ЭЛЕКТРОННАЯ_ПОЧТА = Ууид{a6c56e48-298a-4b62-9b3e-3da0c0d26f91}
@ВПроекте конст ИД_ВОПРОСА_ТЕЛЕФОН = Ууид{cbc6225d-f3d3-4d6b-a816-18eda88de4c5}


@ВПроекте конст ИД_ВОПРОСА_ЗАРПЛАТА = Ууид{74d831d0-3b1b-4544-9fb6-94cebe62dd00}
@ВПроекте конст ИД_ВОПРОСА_ВАЛЮТА = Ууид{ec67c7e7-3a10-4962-84bd-16b76169a69a}
@ВПроекте конст ИД_ВОПРОСА_ЖЕЛАЕМЫЙ_УРОВЕНЬ_ЗАРАБОТНОЙ_ПЛАТЫ = Ууид{477eae64-9968-4994-82ea-d7341dc32a66}
@ВПроекте конст ИД_ВОПРОСА_ОБРАЗОВАНИЕ = Ууид{9f1dc304-fd32-4b71-9820-f6b4ef8296c6}
@ВПроекте конст ИД_ВОПРОСА_УРОВЕНЬ_ОБРАЗОВАНИЯ = Ууид{f173fcee-e592-41d8-afbb-06d37d0ee09e}
@ВПроекте конст ИД_ВОПРОСА_МЕСТО_ОБРАЗОВАНИЯ = Ууид{8efe9cce-17e2-4256-ab28-2a4558b5a1a8}
@ВПроекте конст ИД_ВОПРОСА_ГОД_ВЫПУСКА = Ууид{30b04a05-c335-4cbe-a53e-c3578b25712d}
@ВПроекте конст ИД_ВОПРОСА_СПЕЦИАЛЬНОСТЬ = Ууид{682713b2-a122-4bd2-8049-d6ee024c1220}
@ВПроекте конст ИД_ВОПРОСА_ОПЫТ_РАБОТЫ = Ууид{8a5509d8-f474-467f-9726-e8760593011f}
@ВПроекте конст ИД_ВОПРОСА_МЕСТО_РАБОТЫ = Ууид{7badf045-f643-447d-a9df-45b4ed7a356e}
@ВПроекте конст ИД_ВОПРОСА_СФЕРА_ДЕЯТЕЛЬНОСТИ = Ууид{69e2c0f5-828c-401d-a9ae-88fdd3841db8}
@ВПроекте конст ИД_ВОПРОСА_ДОЛЖНОСТЬ = Ууид{5ed3d431-42ee-4edf-8454-ba250b068054}
@ВПроекте конст ИД_ВОПРОСА_ОБЯЗАННОСТИ = Ууид{8d0bc18d-2e42-4bb1-a1f4-68960182141a}
@ВПроекте конст ИД_ВОПРОСА_НАЧАЛО_РАБОТЫ = Ууид{b798f62f-6853-49bb-90c3-e631fa2c6109}
@ВПроекте конст ИД_ВОПРОСА_ОКОНЧАНИЕ_РАБОТЫ = Ууид{7e74b754-3b4e-4f00-b659-55a556e82706}
@ВПроекте конст ИД_ВОПРОСА_ФАЙЛ_РЕЗЮМЕ = Ууид{0392ab35-938f-445a-9c7c-2fa2b188d40f}
@ВПроекте конст ИД_ВОПРОСА_РОДНОЙ_ЯЗЫК = Ууид{f7661d6d-c4c3-495c-890f-9f6db8071dcf}
@ВПроекте конст ИД_ВОПРОСА_НАВЫКИ = Ууид{c1d8358a-faed-4bb9-acd4-2f35e86659e6}
@ВПроекте конст ИД_ВОПРОСА_О_СЕБЕ = Ууид{6f15c784-5c11-4bb6-8aa2-560171384cc5}
@ВПроекте конст ИД_ВОПРОСА_СЕРТИФИКАТЫ = Ууид{dce9e0e0-6471-4d8f-8e76-315687ece483}
@ВПроекте конст ИД_ВОПРОСА_СЕРТИФИКАТЫ_ДАТА_ПОЛУЧЕНИЯ = Ууид{c02026e5-998e-4ff1-9754-327ac2e33d33}
@ВПроекте конст ИД_ВОПРОСА_СЕРТИФИКАТЫ_НАИМЕНОВАНИЕ = Ууид{8bb17f21-b69f-4243-8de9-30628149a4e3}
@ВПроекте конст ИД_ВОПРОСА_СЕРТИФИКАТЫ_ФАЙЛЫ = Ууид{8294e10a-a793-4226-8905-06311cd6a3d7}
@ВПроекте конст ИД_ВОПРОСА_СЕРТИФИКАТ_ФАЙЛ = Ууид{6358adb6-2bc2-4b1c-9079-363758c31f09}
@ВПроекте конст ИД_ВОПРОСА_СЕРТИФИКАТ_ССЫЛКА = Ууид{c542d9e0-9ed0-4c6e-8f3c-3cc1ea435168}
@ВПроекте конст ИД_ВОПРОСА_ПОРТФОЛИО = Ууид{fa23a036-487d-4fb2-85a3-f2b9efd5b198}
@ВПроекте конст ИД_ВОПРОСА_ПОРТФОЛИО_НАИМЕНОВАНИЕ= Ууид{bd46560f-d522-4670-a3d9-5305bdf20b0d}
@ВПроекте конст ИД_ВОПРОСА_ПОРТФОЛИО_ФАЙЛ = Ууид{2f49b257-eb12-42fe-888d-9e7d56668664}
@ВПроекте конст ИД_ВОПРОСА_ПОРТФОЛИО_ССЫЛКА = Ууид{a23701ab-419e-4fba-8cbd-d3fb3539efb1}
@ВПроекте конст ИД_ВОПРОСА_ГРАЖДАНСТВО = Ууид{fa32318d-60bc-4269-b98c-0ce60f01746e}
@ВПроекте конст ИД_ВОПРОСА_ИНОСТРАННЫЙ_ЯЗЫК = Ууид{66e896ec-e622-45de-b5b5-7ae011cfc193}
@ВПроекте конст ИД_ВОПРОСА_УРОВЕНЬ_ВЛАДЕНИЯ_ИНОСТРАННЫМ_ЯЗЫКОМ = Ууид{020a549b-1408-4255-8b42-be8d499803ee}
@ВПроекте конст ИД_ВОПРОСА_ИНОСТРАННЫЕ_ЯЗЫКИ = Ууид{df20f7a7-0aca-4740-8fd5-4f7250d5fc90}

//  УСТАРЕВШИЕ ВОПРОСЫ, ОСТАВЛЕНЫ ДЛЯ ОБРАТНОЙ СОВМЕСТИМОСТИ
@ВПроекте конст ИД_ВОПРОСА_РАЗРЕШЕНИЕ_НА_РАБОТУ = Ууид{08e3a5bd-6df7-4f26-a2e4-aa3cd32aabf3}
@ВПроекте конст ИД_ВОПРОСА_ПОРТФОЛИО_ФАЙЛЫ = Ууид{53001caa-91d4-47cf-9898-bde70899e741}
@ВПроекте конст ИД_ВОПРОСА_ПОРТФОЛИО_ССЫЛКИ = Ууид{86074210-6ac6-4f6d-8cb7-165cf0d8bec3}

@ВПодсистеме
метод ПредопределенныеВопросы(): ЧитаемыйМассив<ДанныеВопроса>
    
    пер ПредопределенныеВопросы: Массив<ДанныеВопроса>
    
    ПредопределенныеВопросы.Добавить(ВопросФамилия())
    ПредопределенныеВопросы.Добавить(ВопросИмя())
    ПредопределенныеВопросы.Добавить(ВопросОтчество())
    ПредопределенныеВопросы.Добавить(ВопросПол())
    ПредопределенныеВопросы.Добавить(ВопросВашГород())
    ПредопределенныеВопросы.Добавить(ВопросДатаРождения())
    ПредопределенныеВопросы.Добавить(ВопросЭлектроннаяПочта())
    ПредопределенныеВопросы.Добавить(ВопросТелефон())
    ПредопределенныеВопросы.Добавить(ВопросГражданство())
    ПредопределенныеВопросы.Добавить(ВопросРазрешениеНаРаботу())
    ПредопределенныеВопросы.Добавить(ВопросЗарплата())
    ПредопределенныеВопросы.Добавить(ВопросВалюта())
    ПредопределенныеВопросы.Добавить(ВопросЖелаемыйУровеньЗаработнойПлаты())
    ПредопределенныеВопросы.Добавить(ВопросОбразование())
    ПредопределенныеВопросы.Добавить(ВопросУровеньОбразования())
    ПредопределенныеВопросы.Добавить(ВопросМестоОбразования())
    ПредопределенныеВопросы.Добавить(ВопросГодВыпуска())
    ПредопределенныеВопросы.Добавить(ВопросСпециальность())
    ПредопределенныеВопросы.Добавить(ВопросОпытРаботы())
    ПредопределенныеВопросы.Добавить(ВопросМестоРаботы())
    ПредопределенныеВопросы.Добавить(ВопросСфераДеятельности())
    ПредопределенныеВопросы.Добавить(ВопросДолжность())
    ПредопределенныеВопросы.Добавить(ВопросОбязанности())
    ПредопределенныеВопросы.Добавить(ВопросНачалоРаботы())
    ПредопределенныеВопросы.Добавить(ВопросОкончаниеРаботы()) 
    ПредопределенныеВопросы.Добавить(ВопросФайлРезюме())
    ПредопределенныеВопросы.Добавить(ВопросРоднойЯзык())
    ПредопределенныеВопросы.Добавить(ВопросИностранныеЯзыки())
    ПредопределенныеВопросы.Добавить(ВопросНавыки())
    ПредопределенныеВопросы.Добавить(ВопросОСебе())
    ПредопределенныеВопросы.Добавить(ВопросСертификаты())
    ПредопределенныеВопросы.Добавить(ВопросПортфолио())
        
    возврат ПредопределенныеВопросы       
;

метод ВопросФамилия(): ДанныеВопроса
    пер ВопросФамилия: ДанныеВопроса
    ВопросФамилия.Формулировка = "Фамилия"
    ВопросФамилия.ТипОтвета = ТипыОтветов.Строка
    ВопросФамилия.ИдПредопределенногоВопроса = ИД_ВОПРОСА_ФАМИЛИЯ
    ВопросФамилия.ОтветОбязателен = Истина
    возврат ВопросФамилия    
;

метод ВопросИмя(): ДанныеВопроса
    пер ВопросИмя: ДанныеВопроса
    ВопросИмя.Формулировка = "Имя"
    ВопросИмя.ТипОтвета = ТипыОтветов.Строка
    ВопросИмя.ИдПредопределенногоВопроса = ИД_ВОПРОСА_ИМЯ
    ВопросИмя.ОтветОбязателен = Истина
    возврат ВопросИмя 
;

метод ВопросОтчество(): ДанныеВопроса
    пер ВопросОтчество: ДанныеВопроса
    ВопросОтчество.Формулировка = "Отчество"
    ВопросОтчество.ТипОтвета = ТипыОтветов.Строка
    ВопросОтчество.ИдПредопределенногоВопроса = ИД_ВОПРОСА_ОТЧЕСТВО
    возврат ВопросОтчество
;

метод ВопросПол(): ДанныеВопроса
       
    пер ВариантыОтветаПол: Массив<ДанныеВариантаОтвета>
    для Пол из (Тип<ПолФизическогоЛица>).Элементы()
        пер ВариантОтвета: ДанныеВариантаОтвета
        ВариантОтвета.ИдВарианта = новый Ууид()
        ВариантОтвета.ПредставлениеВарианта = Пол.Представление()
        ВариантыОтветаПол.Добавить(ВариантОтвета)   
    ;
    
    пер ВопросПол: ДанныеВопроса
    ВопросПол.Формулировка = "Пол"
    ВопросПол.ТипОтвета = ТипыОтветов.ПредопределенныйВариантЕдиничный
    ВопросПол.ИдПредопределенногоВопроса = ИД_ВОПРОСА_ПОЛ
    ВопросПол.ОтветОбязателен = Истина
    ВопросПол.ВариантыОтвета = ВариантыОтветаПол
    
    возврат ВопросПол    
;

метод ВопросВашГород(): ДанныеВопроса
    пер ВопросВашГород: ДанныеВопроса
    ВопросВашГород.Формулировка = "Город проживания"
    ВопросВашГород.ТипОтвета = ТипыОтветов.ПредопределенныйВариантЕдиничный
    ВопросВашГород.ИдПредопределенногоВопроса = ИД_ВОПРОСА_ВАШ_ГОРОД
    ВопросВашГород.ИспользоватьПредопределенныйНабор = Истина
    ВопросВашГород.ИдНабораВариантов = ПредопределенныеВопросыАнкеты.ИД_НАБОРА_ВАРИАНТОВ_ОТВЕТА_НАСЕЛЕННЫЕ_ПУНКТЫ
    ВопросВашГород.НастройкиВопроса.ВидКомпонентаВыбора = ВидыКомпонентаВыбора.ВыпадающийСписок
    возврат ВопросВашГород
;

метод ВопросДатаРождения(): ДанныеВопроса
    пер ВопросДатаРождения: ДанныеВопроса
    ВопросДатаРождения.Формулировка = "Дата рождения"
    ВопросДатаРождения.ТипОтвета = ТипыОтветов.Дата
    ВопросДатаРождения.ИдПредопределенногоВопроса = ИД_ВОПРОСА_ДАТА_РОЖДЕНИЯ
    ВопросДатаРождения.ОтветОбязателен = Истина
    возврат ВопросДатаРождения
;

метод ВопросЭлектроннаяПочта(): ДанныеВопроса
    пер ВопросЭлектроннаяПочта: ДанныеВопроса
    ВопросЭлектроннаяПочта.Формулировка = "Адрес электронной почты"
    ВопросЭлектроннаяПочта.ТипОтвета = ТипыОтветов.Строка
    ВопросЭлектроннаяПочта.ИдПредопределенногоВопроса = ИД_ВОПРОСА_ЭЛЕКТРОННАЯ_ПОЧТА
    возврат ВопросЭлектроннаяПочта    
;

метод ВопросТелефон(): ДанныеВопроса
    пер ВопросТелефон: ДанныеВопроса
    ВопросТелефон.Формулировка = "Мобильный телефон"
    ВопросТелефон.ТипОтвета = ТипыОтветов.Строка
    ВопросТелефон.ИдПредопределенногоВопроса = ИД_ВОПРОСА_ТЕЛЕФОН
    возврат ВопросТелефон
;

метод ВопросГражданство(): ДанныеВопроса
    пер ВопросГражданство: ДанныеВопроса
    ВопросГражданство.Формулировка = "Гражданство"
    ВопросГражданство.ТипОтвета = ТипыОтветов.ПредопределенныйВариантЕдиничный
    ВопросГражданство.ИдПредопределенногоВопроса = ИД_ВОПРОСА_ГРАЖДАНСТВО
    ВопросГражданство.ИспользоватьПредопределенныйНабор = Истина
    ВопросГражданство.ИдНабораВариантов = ПредопределенныеВопросыАнкеты.ИД_НАБОРА_ВАРИАНТОВ_ОТВЕТА_СТРАНЫ
    ВопросГражданство.НастройкиВопроса.ВидКомпонентаВыбора = ВидыКомпонентаВыбора.ВыпадающийСписок
    возврат ВопросГражданство
;

метод ВопросРазрешениеНаРаботу(): ДанныеВопроса
    пер ВопросРазрешениеНаРаботу: ДанныеВопроса
    ВопросРазрешениеНаРаботу.Формулировка = "Разрешение на работу"
    ВопросРазрешениеНаРаботу.ТипОтвета = ТипыОтветов.Строка
    ВопросРазрешениеНаРаботу.ИдПредопределенногоВопроса = ИД_ВОПРОСА_РАЗРЕШЕНИЕ_НА_РАБОТУ
    возврат ВопросРазрешениеНаРаботу
; 

метод ВопросЗарплата(): ДанныеВопроса
    пер ВопросЗарплата: ДанныеВопроса
    ВопросЗарплата.Формулировка = "Зарплата"
    ВопросЗарплата.ТипОтвета = ТипыОтветов.Число
    ВопросЗарплата.ИдПредопределенногоВопроса = ИД_ВОПРОСА_ЗАРПЛАТА
    возврат ВопросЗарплата
;

метод ВопросВалюта(): ДанныеВопроса
    пер ВопросВалюта: ДанныеВопроса
    ВопросВалюта.Формулировка = "Валюта"
    ВопросВалюта.ТипОтвета = ТипыОтветов.ПредопределенныйВариантЕдиничный
    ВопросВалюта.ИдПредопределенногоВопроса = ИД_ВОПРОСА_ВАЛЮТА
    ВопросВалюта.ИспользоватьПредопределенныйНабор = Истина
    ВопросВалюта.ИдНабораВариантов = ПредопределенныеВопросыАнкеты.ИД_НАБОРА_ВАРИАНТОВ_ОТВЕТА_ВАЛЮТЫ
    ВопросВалюта.НастройкиВопроса.ВидКомпонентаВыбора = ВидыКомпонентаВыбора.ВыпадающийСписок
    возврат ВопросВалюта
;

метод ВопросЖелаемыйУровеньЗаработнойПлаты(): ДанныеВопроса
    пер ВопросЖелаемыйУровеньЗаработнойПлаты: ДанныеВопроса
    ВопросЖелаемыйУровеньЗаработнойПлаты.Формулировка = "Желаемый уровень заработной платы"
    ВопросЖелаемыйУровеньЗаработнойПлаты.ТипОтвета = ТипыОтветов.Составной
    ВопросЖелаемыйУровеньЗаработнойПлаты.ИдПредопределенногоВопроса = ИД_ВОПРОСА_ЖЕЛАЕМЫЙ_УРОВЕНЬ_ЗАРАБОТНОЙ_ПЛАТЫ
    ВопросЖелаемыйУровеньЗаработнойПлаты.СоставСтруктурногоОтвета.Добавить(новый ДанныеЭлементаКонструктора(ДанныеВопроса = ВопросЗарплата()))    
    ВопросЖелаемыйУровеньЗаработнойПлаты.СоставСтруктурногоОтвета.Добавить(новый ДанныеЭлементаКонструктора(ДанныеВопроса = ВопросВалюта())) 
    возврат ВопросЖелаемыйУровеньЗаработнойПлаты
;

метод ВопросОбразование(): ДанныеВопроса
    знч ВопросыСтруктурногоОтвета = [
        ВопросУровеньОбразования(),
        ВопросМестоОбразования(),
        ВопросГодВыпуска(),
        ВопросСпециальность()    
    ]
    
    пер ВопросОбразование: ДанныеВопроса
    ВопросОбразование.Формулировка = "Образование"
    ВопросОбразование.ТипОтвета = ТипыОтветов.Составной
    ВопросОбразование.ИдПредопределенногоВопроса = ИД_ВОПРОСА_ОБРАЗОВАНИЕ
    ВопросОбразование.НастройкиВопроса.Множественный = Истина
    для Вопрос из ВопросыСтруктурногоОтвета
        знч ЭлементСтруктурногоОтвета: ДанныеЭлементаКонструктора
        ЭлементСтруктурногоОтвета.ДанныеВопроса = Вопрос
        ВопросОбразование.СоставСтруктурногоОтвета.Добавить(ЭлементСтруктурногоОтвета)    
    ;
    возврат ВопросОбразование    
;

метод ВопросУровеньОбразования(): ДанныеВопроса
    
    пер ВариантыОтветаУровеньОбразования: Массив<ДанныеВариантаОтвета>
    для УровеньОбразования из (Тип<УровниОбразования>).Элементы()
        пер ВариантОтвета: ДанныеВариантаОтвета
        ВариантОтвета.ИдВарианта = новый Ууид()
        ВариантОтвета.ПредставлениеВарианта = УровеньОбразования.Представление()
        ВариантыОтветаУровеньОбразования.Добавить(ВариантОтвета)   
    ;
    
    пер ВопросУровеньОбразования: ДанныеВопроса
    ВопросУровеньОбразования.Формулировка = "Уровень образования"
    ВопросУровеньОбразования.ТипОтвета = ТипыОтветов.ПредопределенныйВариантЕдиничный
    ВопросУровеньОбразования.ИдПредопределенногоВопроса = ИД_ВОПРОСА_УРОВЕНЬ_ОБРАЗОВАНИЯ
    ВопросУровеньОбразования.ВариантыОтвета = ВариантыОтветаУровеньОбразования
    
    возврат ВопросУровеньОбразования
;

метод ВопросМестоОбразования(): ДанныеВопроса
    пер ВопросМестоОбразования: ДанныеВопроса
    ВопросМестоОбразования.Формулировка = "Место обучения"
    ВопросМестоОбразования.ТипОтвета = ТипыОтветов.Строка
    ВопросМестоОбразования.ИдПредопределенногоВопроса = ИД_ВОПРОСА_МЕСТО_ОБРАЗОВАНИЯ
    возврат ВопросМестоОбразования
;

метод ВопросГодВыпуска(): ДанныеВопроса
    пер ВопросГодВыпуска: ДанныеВопроса
    ВопросГодВыпуска.Формулировка = "Год выпуска"
    ВопросГодВыпуска.ТипОтвета = ТипыОтветов.Число
    ВопросГодВыпуска.ИдПредопределенногоВопроса = ИД_ВОПРОСА_ГОД_ВЫПУСКА
    возврат ВопросГодВыпуска
;

метод ВопросСпециальность(): ДанныеВопроса
    пер ВопросСпециальность: ДанныеВопроса
    ВопросСпециальность.Формулировка = "Специальность"
    ВопросСпециальность.ТипОтвета = ТипыОтветов.Строка
    ВопросСпециальность.ИдПредопределенногоВопроса = ИД_ВОПРОСА_СПЕЦИАЛЬНОСТЬ
    возврат ВопросСпециальность
;

метод ВопросОпытРаботы(): ДанныеВопроса
    знч ВопросыСтруктурногоОтвета = [
        ВопросМестоРаботы(),
        ВопросСфераДеятельности(),
        ВопросДолжность(),
        ВопросОбязанности(),
        ВопросНачалоРаботы(),
        ВопросОкончаниеРаботы()    
    ]
        
    пер ВопросОпытРаботы: ДанныеВопроса
    ВопросОпытРаботы.Формулировка = "Опыт работы"
    ВопросОпытРаботы.ТипОтвета = ТипыОтветов.Составной
    ВопросОпытРаботы.ИдПредопределенногоВопроса = ИД_ВОПРОСА_ОПЫТ_РАБОТЫ
    ВопросОпытРаботы.НастройкиВопроса.Множественный = Истина
    для Вопрос из ВопросыСтруктурногоОтвета
        знч ЭлементСтруктурногоОтвета: ДанныеЭлементаКонструктора
        ЭлементСтруктурногоОтвета.ДанныеВопроса = Вопрос
        ВопросОпытРаботы.СоставСтруктурногоОтвета.Добавить(ЭлементСтруктурногоОтвета)    
    ;
    возврат ВопросОпытРаботы
;

метод ВопросМестоРаботы(): ДанныеВопроса
    пер ВопросМестоРаботы: ДанныеВопроса
    ВопросМестоРаботы.Формулировка = "Место работы"
    ВопросМестоРаботы.ТипОтвета = ТипыОтветов.Строка
    ВопросМестоРаботы.ИдПредопределенногоВопроса = ИД_ВОПРОСА_МЕСТО_РАБОТЫ
    возврат ВопросМестоРаботы
;

метод ВопросСфераДеятельности(): ДанныеВопроса
    пер ВопросСфераДеятельности: ДанныеВопроса
    ВопросСфераДеятельности.Формулировка = "Сфера деятельности" 
    ВопросСфераДеятельности.ТипОтвета = ТипыОтветов.Строка
    ВопросСфераДеятельности.ИдПредопределенногоВопроса = ИД_ВОПРОСА_СФЕРА_ДЕЯТЕЛЬНОСТИ
    возврат ВопросСфераДеятельности
;
метод ВопросДолжность(): ДанныеВопроса
    пер ВопросДолжность: ДанныеВопроса
    ВопросДолжность.Формулировка = "Должность"
    ВопросДолжность.ТипОтвета = ТипыОтветов.Строка
    ВопросДолжность.ИдПредопределенногоВопроса = ИД_ВОПРОСА_ДОЛЖНОСТЬ
    возврат ВопросДолжность    
;

метод ВопросОбязанности(): ДанныеВопроса
    пер ВопросОбязанности: ДанныеВопроса
    ВопросОбязанности.Формулировка = "Обязанности"
    ВопросОбязанности.ТипОтвета = ТипыОтветов.Строка
    ВопросОбязанности.ИдПредопределенногоВопроса = ИД_ВОПРОСА_ОБЯЗАННОСТИ
    ВопросОбязанности.НастройкиВопроса.МногострочныйОтвет = Истина
    возврат ВопросОбязанности    
;

метод ВопросНачалоРаботы(): ДанныеВопроса
    пер ВопросНачалоРаботы: ДанныеВопроса
    ВопросНачалоРаботы.Формулировка = "Начало работы"
    ВопросНачалоРаботы.ТипОтвета = ТипыОтветов.Дата
    ВопросНачалоРаботы.ИдПредопределенногоВопроса = ИД_ВОПРОСА_НАЧАЛО_РАБОТЫ
    возврат ВопросНачалоРаботы
;

метод ВопросОкончаниеРаботы(): ДанныеВопроса
    пер ВопросОкончаниеРаботы: ДанныеВопроса
    ВопросОкончаниеРаботы.Формулировка = "Окончание работы"
    ВопросОкончаниеРаботы.ТипОтвета = ТипыОтветов.Дата
    ВопросОкончаниеРаботы.ИдПредопределенногоВопроса = ИД_ВОПРОСА_ОКОНЧАНИЕ_РАБОТЫ
    возврат ВопросОкончаниеРаботы
;

метод ВопросФайлРезюме(): ДанныеВопроса
    пер ВопросФайлРезюме: ДанныеВопроса
    ВопросФайлРезюме.Формулировка = "Файл резюме"
    ВопросФайлРезюме.ТипОтвета = ТипыОтветов.Файл
    ВопросФайлРезюме.ИдПредопределенногоВопроса = ИД_ВОПРОСА_ФАЙЛ_РЕЗЮМЕ
    возврат ВопросФайлРезюме
;

метод ВопросРоднойЯзык(): ДанныеВопроса
    пер ВопросРоднойЯзык: ДанныеВопроса
    ВопросРоднойЯзык.Формулировка = "Родной язык"
    ВопросРоднойЯзык.ТипОтвета = ТипыОтветов.Строка
    ВопросРоднойЯзык.ИдПредопределенногоВопроса = ИД_ВОПРОСА_РОДНОЙ_ЯЗЫК
    возврат ВопросРоднойЯзык
;

метод ВопросИностранныеЯзыкиЯзык(): ДанныеВопроса
    пер Вопрос: ДанныеВопроса
    Вопрос.Формулировка = "Иностранный язык"
    Вопрос.ТипОтвета = ТипыОтветов.ПредопределенныйВариантЕдиничный
    Вопрос.ИдПредопределенногоВопроса = ИД_ВОПРОСА_ИНОСТРАННЫЙ_ЯЗЫК
    Вопрос.ИспользоватьПредопределенныйНабор = Истина
    Вопрос.ИдНабораВариантов = ПредопределенныеВопросыАнкеты.ИД_НАБОРА_ВАРИАНТОВ_ОТВЕТА_ИНОСТРАННЫЕ_ЯЗЫКИ
    Вопрос.НастройкиВопроса.ВидКомпонентаВыбора = ВидыКомпонентаВыбора.ВыпадающийСписок
    возврат Вопрос
; 

метод ВопросИностранныеЯзыкиУровеньВладения(): ДанныеВопроса
    пер ВариантыОтвета: Массив<ДанныеВариантаОтвета>
    для Элемент из (Тип<УровниВладенияИностраннымЯзыком>).Элементы()
        пер ВариантОтвета: ДанныеВариантаОтвета
        ВариантОтвета.ИдВарианта = новый Ууид()
        ВариантОтвета.ПредставлениеВарианта = Элемент.Представление()
        ВариантыОтвета.Добавить(ВариантОтвета)   
    ;
    
    пер ВопросПол: ДанныеВопроса
    ВопросПол.Формулировка = "Уровень владения"
    ВопросПол.ТипОтвета = ТипыОтветов.ПредопределенныйВариантЕдиничный
    ВопросПол.ИдПредопределенногоВопроса = ИД_ВОПРОСА_УРОВЕНЬ_ВЛАДЕНИЯ_ИНОСТРАННЫМ_ЯЗЫКОМ
    ВопросПол.ОтветОбязателен = Истина
    ВопросПол.ВариантыОтвета = ВариантыОтвета
    
    возврат ВопросПол 
;

метод ВопросИностранныеЯзыки(): ДанныеВопроса
    пер ВопросИностранныеЯзыки: ДанныеВопроса
    ВопросИностранныеЯзыки.Формулировка = "Иностранные языки"
    ВопросИностранныеЯзыки.ТипОтвета = ТипыОтветов.Составной
    ВопросИностранныеЯзыки.ИдПредопределенногоВопроса = ИД_ВОПРОСА_ИНОСТРАННЫЕ_ЯЗЫКИ
    ВопросИностранныеЯзыки.НастройкиВопроса.Множественный = Истина
    
    знч ВопросыИностранныеЯзыки = [ВопросИностранныеЯзыкиЯзык(), ВопросИностранныеЯзыкиУровеньВладения()]
    для Вопрос из ВопросыИностранныеЯзыки
        знч ЭлементСтруктурногоОтвета: ДанныеЭлементаКонструктора
        ЭлементСтруктурногоОтвета.ДанныеВопроса = Вопрос
        ВопросИностранныеЯзыки.СоставСтруктурногоОтвета.Добавить(ЭлементСтруктурногоОтвета)
    ;
    возврат ВопросИностранныеЯзыки
;

метод ВопросНавыки(): ДанныеВопроса
    пер ВопросНавыки: ДанныеВопроса
    ВопросНавыки.Формулировка = "Навыки"
    ВопросНавыки.Пояснение = "Укажите навыки через запятую"
    ВопросНавыки.ТипОтвета = ТипыОтветов.Строка
    ВопросНавыки.ИдПредопределенногоВопроса = ИД_ВОПРОСА_НАВЫКИ
    возврат ВопросНавыки
;

метод ВопросОСебе(): ДанныеВопроса
    пер ВопросОСебе: ДанныеВопроса
    ВопросОСебе.Формулировка = "О себе"
    ВопросОСебе.ТипОтвета = ТипыОтветов.Строка
    ВопросОСебе.ИдПредопределенногоВопроса = ИД_ВОПРОСА_О_СЕБЕ
    ВопросОСебе.НастройкиВопроса.МногострочныйОтвет = Истина
    возврат ВопросОСебе
;

метод ВопросСертификатыФайлы(): ДанныеВопроса
    пер ВопросСертификатыФайлы: ДанныеВопроса
    ВопросСертификатыФайлы.Формулировка = "Файлы с сертификатами"
    ВопросСертификатыФайлы.ТипОтвета = ТипыОтветов.Составной
    ВопросСертификатыФайлы.ИдПредопределенногоВопроса = ИД_ВОПРОСА_СЕРТИФИКАТЫ_ФАЙЛЫ
    ВопросСертификатыФайлы.НастройкиВопроса.Множественный = Истина
    
    знч ЭлементСтруктурногоОтвета: ДанныеЭлементаКонструктора
    ЭлементСтруктурногоОтвета.ДанныеВопроса = ВопросСертификатФайл()
    ВопросСертификатыФайлы.СоставСтруктурногоОтвета.Добавить(ЭлементСтруктурногоОтвета)
    
    возврат ВопросСертификатыФайлы
;

метод ВопросСертификатДатаПолучения(): ДанныеВопроса
    пер Вопрос: ДанныеВопроса
    Вопрос.Формулировка = "Дата получения"
    Вопрос.ТипОтвета = ТипыОтветов.Дата
    Вопрос.ИдПредопределенногоВопроса = ИД_ВОПРОСА_СЕРТИФИКАТЫ_ДАТА_ПОЛУЧЕНИЯ
    возврат Вопрос
;

метод ВопросСертификатНаименование(): ДанныеВопроса
    пер Вопрос: ДанныеВопроса
    Вопрос.Формулировка = "Наименование"
    Вопрос.ТипОтвета = ТипыОтветов.Строка
    Вопрос.ИдПредопределенногоВопроса = ИД_ВОПРОСА_СЕРТИФИКАТЫ_НАИМЕНОВАНИЕ
    возврат Вопрос
;

метод ВопросСертификатСсылка(): ДанныеВопроса
    пер ВопросСертификатСсылка: ДанныеВопроса
    ВопросСертификатСсылка.Формулировка = "Ссылка на сертификат"
    ВопросСертификатСсылка.ТипОтвета = ТипыОтветов.Строка
    ВопросСертификатСсылка.ИдПредопределенногоВопроса = ИД_ВОПРОСА_СЕРТИФИКАТ_ССЫЛКА
    возврат ВопросСертификатСсылка
; 

метод ВопросСертификатФайл(): ДанныеВопроса
    пер ВопросСертификатФайл: ДанныеВопроса
    ВопросСертификатФайл.Формулировка = "Файл сертификата"
    ВопросСертификатФайл.ТипОтвета = ТипыОтветов.Файл
    ВопросСертификатФайл.ИдПредопределенногоВопроса = ИД_ВОПРОСА_СЕРТИФИКАТ_ФАЙЛ
    возврат ВопросСертификатФайл
;

метод ВопросСертификаты(): ДанныеВопроса
    пер ВопросСертификаты: ДанныеВопроса
    ВопросСертификаты.Формулировка = "Сертификаты"
    ВопросСертификаты.ТипОтвета = ТипыОтветов.Составной
    ВопросСертификаты.ИдПредопределенногоВопроса = ИД_ВОПРОСА_СЕРТИФИКАТЫ
    ВопросСертификаты.НастройкиВопроса.Множественный = Истина
    
    знч ВопросыСертификаты = [ВопросСертификатНаименование(), ВопросСертификатДатаПолучения(), ВопросСертификатСсылка(), ВопросСертификатФайл()]
    для Вопрос из ВопросыСертификаты
        знч ЭлементСтруктурногоОтвета: ДанныеЭлементаКонструктора
        ЭлементСтруктурногоОтвета.ДанныеВопроса = Вопрос
        ВопросСертификаты.СоставСтруктурногоОтвета.Добавить(ЭлементСтруктурногоОтвета)
    ;
    возврат ВопросСертификаты
;

метод ВопросПортфолиоФайлы(): ДанныеВопроса
    пер ВопросПортфолиоФайлы: ДанныеВопроса
    ВопросПортфолиоФайлы.Формулировка = "Файлы портфолио"
    ВопросПортфолиоФайлы.ТипОтвета = ТипыОтветов.Составной
    ВопросПортфолиоФайлы.ИдПредопределенногоВопроса = ИД_ВОПРОСА_ПОРТФОЛИО_ФАЙЛЫ
    ВопросПортфолиоФайлы.НастройкиВопроса.Множественный = Истина
    
    знч ЭлементСтруктурногоОтвета: ДанныеЭлементаКонструктора
    ЭлементСтруктурногоОтвета.ДанныеВопроса = ВопросПортфолиоФайл()
    ВопросПортфолиоФайлы.СоставСтруктурногоОтвета.Добавить(ЭлементСтруктурногоОтвета)
    
    возврат ВопросПортфолиоФайлы
;

метод ВопросПортфолиоСсылки(): ДанныеВопроса
    пер ВопросПортфолиоСсылки: ДанныеВопроса
    ВопросПортфолиоСсылки.Формулировка = "Ссылки портфолио"
    ВопросПортфолиоСсылки.ТипОтвета = ТипыОтветов.Составной
    ВопросПортфолиоСсылки.ИдПредопределенногоВопроса = ИД_ВОПРОСА_ПОРТФОЛИО_ССЫЛКИ
    ВопросПортфолиоСсылки.НастройкиВопроса.Множественный = Истина
    
    знч ЭлементСтруктурногоОтвета: ДанныеЭлементаКонструктора
    ЭлементСтруктурногоОтвета.ДанныеВопроса = ВопросПортфолиоСсылка()
    ВопросПортфолиоСсылки.СоставСтруктурногоОтвета.Добавить(ЭлементСтруктурногоОтвета)
    
    возврат ВопросПортфолиоСсылки
;

метод ВопросПортфолиоНаименование(): ДанныеВопроса
    пер Вопрос: ДанныеВопроса
    Вопрос.Формулировка = "Наименование"
    Вопрос.ТипОтвета = ТипыОтветов.Строка
    Вопрос.ИдПредопределенногоВопроса = ИД_ВОПРОСА_ПОРТФОЛИО_НАИМЕНОВАНИЕ
    возврат Вопрос
;

метод ВопросПортфолиоСсылка(): ДанныеВопроса
    пер Вопрос: ДанныеВопроса
    Вопрос.Формулировка = "Ссылка на портфолио"
    Вопрос.ТипОтвета = ТипыОтветов.Строка
    Вопрос.ИдПредопределенногоВопроса = ИД_ВОПРОСА_ПОРТФОЛИО_ССЫЛКА
    возврат Вопрос
; 

метод ВопросПортфолиоФайл(): ДанныеВопроса
    пер Вопрос: ДанныеВопроса
    Вопрос.Формулировка = "Файл портфолио"
    Вопрос.ТипОтвета = ТипыОтветов.Файл
    Вопрос.ИдПредопределенногоВопроса = ИД_ВОПРОСА_ПОРТФОЛИО_ФАЙЛ
    возврат Вопрос
;

метод ВопросПортфолио(): ДанныеВопроса
    пер Вопрос: ДанныеВопроса
    Вопрос.Формулировка = "Портфолио"
    Вопрос.ТипОтвета = ТипыОтветов.Составной
    Вопрос.ИдПредопределенногоВопроса = ИД_ВОПРОСА_ПОРТФОЛИО
    Вопрос.НастройкиВопроса.Множественный = Истина
    
    знч ВопросыПортфолио = [ВопросПортфолиоНаименование(), ВопросПортфолиоСсылка(), ВопросПортфолиоФайл()]
    для Элемент из ВопросыПортфолио
        знч ЭлементСтруктурногоОтвета: ДанныеЭлементаКонструктора
        ЭлементСтруктурногоОтвета.ДанныеВопроса = Элемент
        Вопрос.СоставСтруктурногоОтвета.Добавить(ЭлементСтруктурногоОтвета)
    ;
    возврат Вопрос
;

@ВПроекте
метод АнкетаПоУмолчанию(Анкета: ШаблоныАнкет.Ссылка? = Неопределено):  ШаблоныАнкет.Ссылка

    пер ШаблонАнкетыПоУмолчанию: ШаблоныАнкет.Объект
    если Анкета != Неопределено
        Анкетирование.ОчиститьВопросыПредыдущейВерсии(Анкета)
        ШаблонАнкетыПоУмолчанию = Анкета.ЗагрузитьОбъект()
    ;
    
    ШаблонАнкетыПоУмолчанию.Наименование = "О себе"
    ШаблонАнкетыПоУмолчанию.Описание = "Автоматически сформированная анкета кандидата"
    ШаблонАнкетыПоУмолчанию.МоментСоздания = Момент.Сейчас()
    ШаблонАнкетыПоУмолчанию.Предопределенный = Истина
    ШаблонАнкетыПоУмолчанию.КоличествоРазделов = 1
    ШаблонАнкетыПоУмолчанию.Завершение = Истина
    ШаблонАнкетыПоУмолчанию.ТекстЗавершения = "Вы заполнили информацию о себе, она отправлена службе HR."
    ШаблонАнкетыПоУмолчанию.ЗаголовокЗавершения = "Спасибо"
    ШаблонАнкетыПоУмолчанию.КоличествоВопросов = 10
    ШаблонАнкетыПоУмолчанию.СпособОтображенияАнкеты = СпособыОтображенияАнкеты.ВопросыПоРазделам 
    ШаблонАнкетыПоУмолчанию.СохранятьВопросыВПодсистему = Истина
    ШаблонАнкетыПоУмолчанию.ИдОбластиДанных = ПодборПерсонала.ИД_ОБЛАСТИ_ДАННЫХ
    ШаблонАнкетыПоУмолчанию.Записать()
   
    пер СмещениеИндекса = 1
    
    пер РазделОсновнаяИнформация: РазделыАнкет.Объект
    РазделОсновнаяИнформация.Шаблон = ШаблонАнкетыПоУмолчанию.Ссылка
    РазделОсновнаяИнформация.Наименование = "Заполните персональную информацию"
    РазделОсновнаяИнформация.Приоритет = 1
    РазделОсновнаяИнформация.Записать()
    
    знч ВопросыОсновнаяИнформация = [
        ВопросФамилия(),
        ВопросИмя(),
        ВопросОтчество(),
        ВопросПол(),
        ВопросДатаРождения(),
        ВопросЭлектроннаяПочта(),
        ВопросТелефон(),
        ВопросВашГород(),
        ВопросГражданство()
    ]   
    для Индекс = 0 по ВопросыОсновнаяИнформация.Граница() 
        ДобавитьВопросВАнкету(
            ШаблонАнкетыПоУмолчанию.Ссылка,
            РазделОсновнаяИнформация.Ссылка,
            Индекс + СмещениеИндекса,
            ВопросыОсновнаяИнформация[Индекс]    
        )
    ;
    
    СмещениеИндекса = СмещениеИндекса + ВопросыОсновнаяИнформация.Размер()
    
    знч ВопросЖелаемыйУровеньЗаработнойПлаты = ДобавитьВопросВАнкету(
        ШаблонАнкетыПоУмолчанию.Ссылка,
        РазделОсновнаяИнформация.Ссылка,
        СмещениеИндекса + 1,
        ВопросЖелаемыйУровеньЗаработнойПлаты()
    )    
    знч ВопросыЖелаемыйУровеньЗаработнойПлаты = [
        ВопросЗарплата(),
        ВопросВалюта()
    ]    
    для Индекс = 0 по ВопросыЖелаемыйУровеньЗаработнойПлаты.Граница()
        ДобавитьВопросВСоставной(ВопросыЖелаемыйУровеньЗаработнойПлаты[Индекс], ВопросЖелаемыйУровеньЗаработнойПлаты)
    ;
    
    СмещениеИндекса = СмещениеИндекса + 1
    
    
    
    пер РазделРезюме: РазделыАнкет.Объект
    РазделРезюме.Шаблон = ШаблонАнкетыПоУмолчанию.Ссылка
    РазделРезюме.Наименование = "Резюме"
    РазделРезюме.Подсказка = "Вы можете загрузить уже готовое резюме и/или заполнить нашу анкету. При заполнении анкеты вероятность ответа со стороны работодателя значительно вырастает."
    РазделРезюме.Приоритет = 2
    РазделРезюме.Записать()
    
    ДобавитьВопросВАнкету(
            ШаблонАнкетыПоУмолчанию.Ссылка,
            РазделРезюме.Ссылка,
            СмещениеИндекса + 1,
            ВопросФайлРезюме()
    ) 
    СмещениеИндекса = СмещениеИндекса + 1
    
    пер РазделОбразование: РазделыАнкет.Объект
    РазделОбразование.Шаблон = ШаблонАнкетыПоУмолчанию.Ссылка
    РазделОбразование.Наименование = "Укажите свой уровень образования"
    РазделОбразование.Приоритет = 3
    РазделОбразование.Записать()
    
    знч ВопросОбразование = ДобавитьВопросВАнкету(
        ШаблонАнкетыПоУмолчанию.Ссылка,
        РазделОбразование.Ссылка,
        СмещениеИндекса + 1,
        ВопросОбразование()
    )    
    знч ВопросыОбразование = [
        ВопросУровеньОбразования(),
        ВопросМестоОбразования(),
        ВопросГодВыпуска(),
        ВопросСпециальность()
    ]    
    для Индекс = 0 по ВопросыОбразование.Граница()
        ДобавитьВопросВСоставной(ВопросыОбразование[Индекс], ВопросОбразование)
    ;
    СмещениеИндекса = СмещениеИндекса + 1
    
    пер РазделОпытРаботы: РазделыАнкет.Объект
    РазделОпытРаботы.Шаблон = ШаблонАнкетыПоУмолчанию.Ссылка
    РазделОпытРаботы.Наименование = "Заполните опыт работы"
    РазделОпытРаботы.Приоритет = 4
    РазделОпытРаботы.Записать()
    
    знч ВопросОпытРаботы = ДобавитьВопросВАнкету(
        ШаблонАнкетыПоУмолчанию.Ссылка,
        РазделОпытРаботы.Ссылка,
        СмещениеИндекса + 1,
        ВопросОпытРаботы()    
    )
    знч ВопросыОпытРаботы = [
        ВопросНачалоРаботы(),
        ВопросОкончаниеРаботы(),
        ВопросМестоРаботы(),
        ВопросСфераДеятельности(),
        ВопросДолжность(),
        ВопросОбязанности()        
    ]
    для Индекс = 0 по ВопросыОпытРаботы.Граница()
        ДобавитьВопросВСоставной(ВопросыОпытРаботы[Индекс], ВопросОпытРаботы)   
    ;
    СмещениеИндекса = СмещениеИндекса + 1
    
    пер РазделОбщиеДанные: РазделыАнкет.Объект
    РазделОбщиеДанные.Шаблон = ШаблонАнкетыПоУмолчанию.Ссылка
    РазделОбщиеДанные.Наименование = "Укажите навыки и расскажите о себе"
    РазделОбщиеДанные.Приоритет = 5
    РазделОбщиеДанные.Записать()
    
    знч ВопросыОбщиеДанные = [
        ВопросНавыки(),
        ВопросОСебе()
    ]
    для Индекс = 0 по ВопросыОбщиеДанные.Граница()
        ДобавитьВопросВАнкету(
            ШаблонАнкетыПоУмолчанию.Ссылка,
            РазделОбщиеДанные.Ссылка,
            СмещениеИндекса + Индекс,
            ВопросыОбщиеДанные[Индекс]
        )    
    ;
    СмещениеИндекса = СмещениеИндекса + ВопросыОбщиеДанные.Размер()
    
    знч  ВопросИностранныеЯзыки = ДобавитьВопросВАнкету(
        ШаблонАнкетыПоУмолчанию.Ссылка,
        РазделОбщиеДанные.Ссылка,
        СмещениеИндекса + 1,
        ВопросИностранныеЯзыки()    
    )

    знч ВопросыИностранныеЯзыки = [ВопросИностранныеЯзыкиЯзык(), ВопросИностранныеЯзыкиУровеньВладения()]
    для Индекс = 0 по ВопросыИностранныеЯзыки.Граница()
        ДобавитьВопросВСоставной(ВопросыИностранныеЯзыки[Индекс], ВопросИностранныеЯзыки)   
    ;
    СмещениеИндекса = СмещениеИндекса + ВопросыИностранныеЯзыки.Размер()

    знч ВопросСертификаты = ДобавитьВопросВАнкету(
        ШаблонАнкетыПоУмолчанию.Ссылка,
        РазделОбщиеДанные.Ссылка,
        СмещениеИндекса + 1,
        ВопросСертификаты()    
    )
    
    знч ВопросыСертификаты = [ВопросСертификатНаименование(), ВопросСертификатДатаПолучения(), ВопросСертификатСсылка(), ВопросСертификатФайл()]
    для Индекс = 0 по ВопросыСертификаты.Граница()
        ДобавитьВопросВСоставной(ВопросыСертификаты[Индекс], ВопросСертификаты)   
    ;
    СмещениеИндекса = СмещениеИндекса + ВопросыСертификаты.Размер()
      
    знч ВопросПортфолио = ДобавитьВопросВАнкету(
        ШаблонАнкетыПоУмолчанию.Ссылка,
        РазделОбщиеДанные.Ссылка,
        СмещениеИндекса + 1,
        ВопросПортфолио()    
    )
    знч ВопросыПортфолио = [ВопросПортфолиоНаименование(), ВопросПортфолиоСсылка(), ВопросПортфолиоФайл()]
    для Индекс = 0 по ВопросыПортфолио.Граница()
        ДобавитьВопросВСоставной(ВопросыПортфолио[Индекс], ВопросПортфолио)   
    ;
    СмещениеИндекса = СмещениеИндекса + ВопросыПортфолио.Размер()
    
    возврат ШаблонАнкетыПоУмолчанию.Ссылка
;

метод ДобавитьВопросВАнкету(
        ШаблонАнкетыПоУмолчанию: ШаблоныАнкет.Ссылка,
        РазделАнкеты: РазделыАнкет.Ссылка,
        Номер: Число,
        ПредопределенныйВопрос: ДанныеВопроса): Вопросы.Ссылка
    
    пер Вопрос: Вопросы.Объект
    если не ПредопределенныйВопрос.ВариантыОтвета.Пусто()
        Вопрос.НаборВариантов = НаборВариантовОтвета(
            ПредопределенныйВопрос.Формулировка,
            ПредопределенныйВопрос.ВариантыОтвета
        )        
    ;
    если ПредопределенныйВопрос.ИдНабораВариантов != Неопределено
        Вопрос.НаборВариантов = НаборыВариантовОтвета.ПредопределенныйНабор(ПредопределенныйВопрос.ИдНабораВариантов)    
    ;
    Вопрос.Формулировка = ПредопределенныйВопрос.Формулировка
    Вопрос.ТипОтвета = ПредопределенныйВопрос.ТипОтвета
    Вопрос.ИдПредопределенногоВопроса = ПредопределенныйВопрос.ИдПредопределенногоВопроса
    Вопрос.ИспользоватьПредопределенныйНабор = ПредопределенныйВопрос.ИспользоватьПредопределенныйНабор
    Вопрос.НастройкиВопроса = ПредопределенныйВопрос.НастройкиВопроса
    Вопрос.Записать()
        
    пер ВопросШаблона: ВопросыШаблоновАнкет.Объект
    ВопросШаблона.ПредставлениеШаблона = ШаблонАнкетыПоУмолчанию.Представление()
    ВопросШаблона.Приоритет = Номер
    ВопросШаблона.Шаблон = ШаблонАнкетыПоУмолчанию
    ВопросШаблона.НомерРаздела = Номер
    ВопросШаблона.Раздел = РазделАнкеты
    ВопросШаблона.Вопрос = Вопрос.Ссылка
    ВопросШаблона.ОтветОбязателен = ПредопределенныйВопрос.ОтветОбязателен
    ВопросШаблона.Записать()   
    
    возврат Вопрос.Ссылка 
; 

метод ДобавитьВопросВСоставной(ПредопределенныйВопрос: ДанныеВопроса, СоставнойВопрос: Вопросы.Ссылка)
    пер Вопрос: Вопросы.Объект
    если не ПредопределенныйВопрос.ВариантыОтвета.Пусто()
        Вопрос.НаборВариантов = НаборВариантовОтвета(
            ПредопределенныйВопрос.Формулировка,
            ПредопределенныйВопрос.ВариантыОтвета
        )        
    ;
    
    если ПредопределенныйВопрос.ИдНабораВариантов != Неопределено
        Вопрос.НаборВариантов = НаборыВариантовОтвета.ПредопределенныйНабор(ПредопределенныйВопрос.ИдНабораВариантов)    
    ;
    
    Вопрос.Формулировка = ПредопределенныйВопрос.Формулировка
    Вопрос.ТипОтвета = ПредопределенныйВопрос.ТипОтвета
    Вопрос.ИдПредопределенногоВопроса = ПредопределенныйВопрос.ИдПредопределенногоВопроса
    Вопрос.ИспользоватьПредопределенныйНабор = ПредопределенныйВопрос.ИспользоватьПредопределенныйНабор
    Вопрос.НастройкиВопроса = ПредопределенныйВопрос.НастройкиВопроса
    Вопрос.СоставнойВопрос = СоставнойВопрос
    Вопрос.Записать()
;

метод НаборВариантовОтвета(Представление: Строка, ВариантыОтвета: Массив<ДанныеВариантаОтвета>): НаборыВариантовОтвета.Ссылка   
    
    пер НаборВариантаОтвета: НаборыВариантовОтвета.Объект
    НаборВариантаОтвета.Наименование = Представление
    НаборВариантаОтвета.Записать()
    
    для СтруктураВариантаОтвета из ВариантыОтвета
        пер ВариантОтвета: ВариантыОтветов.Объект
        ВариантОтвета.НаборВариантовОтвета = НаборВариантаОтвета.Ссылка
        ВариантОтвета.Наименование = СтруктураВариантаОтвета.ПредставлениеВарианта
        ВариантОтвета.Записать()    
    ;
    
    возврат НаборВариантаОтвета.Ссылка
;

// Конец ПредопределенныеВопросыАнкеты
// ОбработчикиОбновления

@ВПроекте
метод ВыполнитьНачальноеЗаполнение() 
    знч СсылкаНастройкиПодбораПерсонала = НастройкиПодбораПерсонала.СсылкаНастройкиПодбораПерсонала()
    пер НастройкиПодбораПерсонала = СсылкаНастройкиПодбораПерсонала.ЗагрузитьОбъект()
    если НастройкиПодбораПерсонала.АнкетаКандидата != Неопределено
        возврат
    ;
    НастройкиПодбораПерсонала.АнкетаКандидата = АнкетаПоУмолчанию()
    НастройкиПодбораПерсонала.Записать()
    
    знч СервисРегистрацииИзменений = ПодборПерсоналаРегистрацияИзменений.ПолучитьСервис()
    если СервисРегистрацииИзменений.НастройкиПодбораПерсоналаТребуетсяРегистрация()
        ОбменДанными.ЗарегистрироватьОтправляемыйДокумент(СсылкаНастройкиПодбораПерсонала, Истина)
        РегистрацияИзменений.ЗарегистрироватьИзменение(СсылкаНастройкиПодбораПерсонала, Неопределено, ХарактерыИзменений.Изменение)
        АнкетированиеРегистрацияОбъектовКОбмену.ЗарегистрироватьШаблон(НастройкиПодбораПерсонала.АнкетаКандидата)
    ;
;

@ВПроекте
метод СоздатьНовуюВерсиюАнкетыОСебе()
    
    НаборыВариантовОтвета.ЗаписатьПредопределенныеНаборыВариантов()
     
    знч СсылкаНастройкиПодбораПерсонала = НастройкиПодбораПерсонала.СсылкаНастройкиПодбораПерсонала()
    пер НастройкиПодбораПерсонала = СсылкаНастройкиПодбораПерсонала.ЗагрузитьОбъект()
    
    если НастройкиПодбораПерсонала.АнкетаКандидата != Неопределено
        знч АкнетаОбъект = НастройкиПодбораПерсонала.АнкетаКандидата.ЗагрузитьОбъект()
        АкнетаОбъект.Наименование = "%{АкнетаОбъект.Наименование} (устарела)"
        АкнетаОбъект.Записать()
    ;
    
    НастройкиПодбораПерсонала.АнкетаКандидата = АнкетаПоУмолчанию()
    НастройкиПодбораПерсонала.Записать()
    
    знч СервисРегистрацииИзменений = ПодборПерсоналаРегистрацияИзменений.ПолучитьСервис()
    если СервисРегистрацииИзменений.НастройкиПодбораПерсоналаТребуетсяРегистрация()
        ОбменДанными.ЗарегистрироватьОтправляемыйДокумент(НастройкиПодбораПерсонала.Ссылка, Истина)
        РегистрацияИзменений.ЗарегистрироватьИзменение(НастройкиПодбораПерсонала.Ссылка, Неопределено)
        АнкетированиеРегистрацияОбъектовКОбмену.ЗарегистрироватьШаблон(НастройкиПодбораПерсонала.АнкетаКандидата)
    ;
;
// Конец ОбработчикиОбновления

метод ЗаполнитьОбразование(ДанныеОтклика: Отклики.ДанныеОтклика, СтруктураОтвета: Массив<Анкетирование.СтруктураОтвета>)
    знч ОбразованиеУровень: Массив<УровниОбразования?>
    знч ОбразованиеНаименованиеУчебногоЗаведения: Массив<Строка>
    знч ОбразованиеСпециальность: Массив<Строка>
    знч ОбразованиеГодОкончания: Массив<Число>

    для Ответ из СтруктураОтвета
        выбор Ответ.ИдВопроса
        когда ПредопределенныеВопросыАнкеты.ИД_ВОПРОСА_УРОВЕНЬ_ОБРАЗОВАНИЯ
            если не Ответ.Ответ.ЗначенияПредопределенные.Пусто()
                для УровеньОбразования из (Тип<УровниОбразования>).Элементы()
                    если УровеньОбразования.Представление() == Ответ.Ответ.ЗначенияПредопределенные[0].Представление()
                        ОбразованиеУровень.Добавить(УровеньОбразования)
                    ;
                ;
            иначе
                ОбразованиеУровень.Добавить(Неопределено)
            ;
        когда ПредопределенныеВопросыАнкеты.ИД_ВОПРОСА_МЕСТО_ОБРАЗОВАНИЯ
            ОбразованиеНаименованиеУчебногоЗаведения.Добавить(Ответ.Ответ.ЗначениеСтрока)    
        когда ПредопределенныеВопросыАнкеты.ИД_ВОПРОСА_ГОД_ВЫПУСКА
            ОбразованиеГодОкончания.Добавить(Ответ.Ответ.ЗначениеЧисло ?? 0)
        когда ПредопределенныеВопросыАнкеты.ИД_ВОПРОСА_СПЕЦИАЛЬНОСТЬ
            ОбразованиеСпециальность.Добавить(Ответ.Ответ.ЗначениеСтрока)
        ;
    ;

    ДанныеОтклика.Образование.Очистить()
    если не ОбразованиеУровень.Пусто()
        для Индекс = 0 по ОбразованиеУровень.Граница()
            знч МестоОбразования: ОписаниеОбразования
            МестоОбразования.Уровень = ОбразованиеУровень[Индекс]
            МестоОбразования.НаименованиеУчебногоЗаведения = ОбразованиеНаименованиеУчебногоЗаведения[Индекс]
            МестоОбразования.Специальность = ОбразованиеСпециальность[Индекс]
            МестоОбразования.ГодОкончания = ОбразованиеГодОкончания[Индекс]
            
            если не (МестоОбразования.Уровень == Неопределено
                и МестоОбразования.НаименованиеУчебногоЗаведения.Пусто()
                и МестоОбразования.Специальность.Пусто())
                
                ДанныеОтклика.Образование.Добавить(МестоОбразования)
            ;
        ;
    ;
;

метод ЗаполнитьОпытРаботы(ДанныеОтклика: Отклики.ДанныеОтклика, СтруктураОтвета: Массив<Анкетирование.СтруктураОтвета>)
    знч ОпытРаботыМестоРаботы: Массив<Строка>
    знч ОпытРаботыСфераДеятельности: Массив<Строка>
    знч ОпытРаботыДолжность: Массив<Строка>
    знч ОпытРаботыОбязанности: Массив<Строка>
    знч ОпытРаботыНачалоРаботы: Массив<Дата>
    знч ОпытРаботыОкончаниеРаботы: Массив<Дата>

    для Ответ из СтруктураОтвета
        выбор Ответ.ИдВопроса
        когда ПредопределенныеВопросыАнкеты.ИД_ВОПРОСА_МЕСТО_РАБОТЫ
            ОпытРаботыМестоРаботы.Добавить(Ответ.Ответ.ЗначениеСтрока)
        когда ПредопределенныеВопросыАнкеты.ИД_ВОПРОСА_СФЕРА_ДЕЯТЕЛЬНОСТИ
            ОпытРаботыСфераДеятельности.Добавить(Ответ.Ответ.ЗначениеСтрока)
        когда ПредопределенныеВопросыАнкеты.ИД_ВОПРОСА_ДОЛЖНОСТЬ
            ОпытРаботыДолжность.Добавить(Ответ.Ответ.ЗначениеСтрока)
        когда ПредопределенныеВопросыАнкеты.ИД_ВОПРОСА_ОБЯЗАННОСТИ
            ОпытРаботыОбязанности.Добавить(Ответ.Ответ.ЗначениеСтрока)
        когда ПредопределенныеВопросыАнкеты.ИД_ВОПРОСА_НАЧАЛО_РАБОТЫ
            ОпытРаботыНачалоРаботы.Добавить(Ответ.Ответ.ЗначениеДата)
        когда ПредопределенныеВопросыАнкеты.ИД_ВОПРОСА_ОКОНЧАНИЕ_РАБОТЫ
            ОпытРаботыОкончаниеРаботы.Добавить(Ответ.Ответ.ЗначениеДата)
        ;
    ;

    ДанныеОтклика.ОпытРаботы.Очистить()
    если не ОпытРаботыМестоРаботы.Пусто()
        для Индекс = 0 по ОпытРаботыМестоРаботы.Граница()
            знч МестоРаботы: ОписаниеМестаРаботы
            МестоРаботы.НаименованиеОрганизации = ОпытРаботыМестоРаботы[Индекс]
            МестоРаботы.Специальность = ОпытРаботыДолжность[Индекс]
            МестоРаботы.Обязанности = ОпытРаботыОбязанности[Индекс]
            МестоРаботы.НачалоРаботы = ОпытРаботыНачалоРаботы[Индекс]
            если ОпытРаботыОкончаниеРаботы[Индекс] == Дата{}
                МестоРаботы.ПоНастоящееВремя = Истина
            иначе
                МестоРаботы.ОкончаниеРаботы = ОпытРаботыОкончаниеРаботы[Индекс]
            ;
            
            если не (МестоРаботы.НаименованиеОрганизации.Пусто()
                и МестоРаботы.Специальность.Пусто()
                и МестоРаботы.Обязанности.Пусто())
                    ДанныеОтклика.ОпытРаботы.Добавить(МестоРаботы)
            ;
        ;
    ;
;

метод ЗаполнитьСертификаты(ДанныеОтклика: Отклики.ДанныеОтклика, СтруктураОтвета: Массив<Анкетирование.СтруктураОтвета>)
    знч СертификатыДатаПолучения: Массив<Дата>
    знч СертификатыНаименование: Массив<Строка>
    знч СертификатыUrl: Массив<Строка>
    знч СертификатыФайл: Массив<ПрисоединенныйФайл?>

    для Ответ из СтруктураОтвета
        выбор Ответ.ИдВопроса
        когда ИД_ВОПРОСА_СЕРТИФИКАТЫ_НАИМЕНОВАНИЕ
            СертификатыНаименование.Добавить(Ответ.Ответ.ЗначениеСтрока)
        когда ИД_ВОПРОСА_СЕРТИФИКАТЫ_ДАТА_ПОЛУЧЕНИЯ
            СертификатыДатаПолучения.Добавить(Ответ.Ответ.ЗначениеДата)
        когда ИД_ВОПРОСА_СЕРТИФИКАТ_ССЫЛКА
            СертификатыUrl.Добавить(Ответ.Ответ.ЗначениеСтрока)
        когда ИД_ВОПРОСА_СЕРТИФИКАТ_ФАЙЛ
            СертификатыФайл.Добавить(Ответ.Ответ.ЗначениеПрисоединенныйФайл)
        ;
    ;

    ДанныеОтклика.Сертификаты.Очистить()
    если не СертификатыДатаПолучения.Пусто()
        для Индекс = 0 по СертификатыДатаПолучения.Граница()
            знч ДанныеРезюме = новый СертификатыРезюме.ДанныеСертификатаРезюме(
            Наименование = СертификатыНаименование[Индекс],
            ДатаПолучения = СертификатыДатаПолучения[Индекс],
            Url = СертификатыUrl[Индекс],
            Файл = СертификатыФайл[Индекс])
            ДанныеОтклика.Сертификаты.Добавить(ДанныеРезюме)
        ;
    ;
;

метод ЗаполнитьПортфолио(ДанныеОтклика: Отклики.ДанныеОтклика, СтруктураОтвета: Массив<Анкетирование.СтруктураОтвета>)
    знч ПортфолиоНаименование: Массив<Строка>
    знч ПортфолиоUrl: Массив<Строка>
    знч ПортфолиоФайл: Массив<ПрисоединенныйФайл?>

    для Ответ из СтруктураОтвета
        выбор Ответ.ИдВопроса
        когда ИД_ВОПРОСА_ПОРТФОЛИО_НАИМЕНОВАНИЕ
            ПортфолиоНаименование.Добавить(Ответ.Ответ.ЗначениеСтрока)
        когда ИД_ВОПРОСА_ПОРТФОЛИО_ССЫЛКА
            ПортфолиоUrl.Добавить(Ответ.Ответ.ЗначениеСтрока)
        когда ИД_ВОПРОСА_ПОРТФОЛИО_ФАЙЛ
            ПортфолиоФайл.Добавить(Ответ.Ответ.ЗначениеПрисоединенныйФайл)
        ;
    ;

    ДанныеОтклика.Портфолио.Очистить()
    если не ПортфолиоНаименование.Пусто()
        для Индекс = 0 по ПортфолиоНаименование.Граница()
            знч ДанныеРезюме: ПортфолиоРезюме.ДанныеПортфолиоРезюме
            ДанныеРезюме.Наименование = ПортфолиоНаименование[Индекс]
            ДанныеРезюме.Url = ПортфолиоUrl[Индекс]
            ДанныеРезюме.Файл = ПортфолиоФайл[Индекс]
            ДанныеОтклика.Портфолио.Добавить(ДанныеРезюме)
        ;
    ;
;

метод ЗаполнитьИностранныеЯзыки(ДанныеОтклика: Отклики.ДанныеОтклика, СтруктураОтвета: Массив<Анкетирование.СтруктураОтвета>)
    знч ИностранныйЯзык: Массив<ИностранныеЯзыки.Ссылка?>
    знч УровеньВладенияЯзыком: Массив<УровниВладенияИностраннымЯзыком?>

    для Ответ из СтруктураОтвета
        выбор Ответ.ИдВопроса
        когда ИД_ВОПРОСА_ИНОСТРАННЫЙ_ЯЗЫК
            если не Ответ.Ответ.ЗначенияПредопределенные.Пусто()
                ИностранныйЯзык.Добавить(ИностранныеЯзыки.ПолучитьСсылку(Ответ.Ответ.ЗначенияПредопределенные[0].Ид))
            иначе
                ИностранныйЯзык.Добавить(Неопределено)
            ;
        когда ИД_ВОПРОСА_УРОВЕНЬ_ВЛАДЕНИЯ_ИНОСТРАННЫМ_ЯЗЫКОМ
            если Ответ.Ответ.ЗначенияПредопределенные.Пусто()
                УровеньВладенияЯзыком.Добавить(Неопределено)
            иначе
                пер УровеньВладения: УровниВладенияИностраннымЯзыком?
                для Элемент из УровниВладенияИностраннымЯзыком.Элементы()
                    если Элемент.Представление() == Ответ.Ответ.ЗначенияПредопределенные[0].Представление()
                        УровеньВладения = Элемент
                        прервать
                    ;
                ;
                УровеньВладенияЯзыком.Добавить(УровеньВладения)
            ;
        ;
    ;

    ДанныеОтклика.ИностранныеЯзыки.Очистить()
    если не ИностранныйЯзык.Пусто()
        для Индекс = 0 по ИностранныйЯзык.Граница()
            знч Язык = ИностранныйЯзык[Индекс]
            знч УровеньВладения = УровеньВладенияЯзыком[Индекс]
            если Язык != Неопределено и УровеньВладения != Неопределено
                    ДанныеОтклика.ИностранныеЯзыки.Добавить(
                        новый ОписаниеВладенияИностраннымЯзыком(Язык, УровеньВладения))
                ;
        ;
    ;
;

@ВПроекте
метод ЗаполнитьДанныеОткликаИзАнкеты(ДанныеОтклика: Отклики.ДанныеОтклика, СтруктураОтвета: Массив<Анкетирование.СтруктураОтвета>)
    
    знч ЗарплатныеОжидания: ОписаниеОплаты
    знч КлючевыеНавыкиСтрока: Множество<Строка>

    для Ответ из СтруктураОтвета
        выбор Ответ.ИдВопроса
        когда ПредопределенныеВопросыАнкеты.ИД_ВОПРОСА_ФАМИЛИЯ
            ДанныеОтклика.Фамилия = Ответ.Ответ.ЗначениеСтрока
        когда ПредопределенныеВопросыАнкеты.ИД_ВОПРОСА_ИМЯ
            ДанныеОтклика.Имя = Ответ.Ответ.ЗначениеСтрока
        когда ПредопределенныеВопросыАнкеты.ИД_ВОПРОСА_ОТЧЕСТВО
            ДанныеОтклика.Отчество = Ответ.Ответ.ЗначениеСтрока
        когда ПредопределенныеВопросыАнкеты.ИД_ВОПРОСА_ПОЛ
            если не Ответ.Ответ.ЗначенияПредопределенные.Пусто()
                для Пол из (Тип<ПолФизическогоЛица>).Элементы()
                    если Пол.Представление() == Ответ.Ответ.ЗначенияПредопределенные[0].Представление()
                        ДанныеОтклика.Пол = Пол
                    ;
                ;
            ;
        когда ПредопределенныеВопросыАнкеты.ИД_ВОПРОСА_ДАТА_РОЖДЕНИЯ
            ДанныеОтклика.ДатаРождения = Ответ.Ответ.ЗначениеДата
        когда ПредопределенныеВопросыАнкеты.ИД_ВОПРОСА_ЭЛЕКТРОННАЯ_ПОЧТА
            ДанныеОтклика.ЭлектроннаяПочта.Добавить(Ответ.Ответ.ЗначениеСтрока)
        когда ПредопределенныеВопросыАнкеты.ИД_ВОПРОСА_ТЕЛЕФОН
            ДанныеОтклика.Телефон.Добавить(Ответ.Ответ.ЗначениеСтрока)
        когда ПредопределенныеВопросыАнкеты.ИД_ВОПРОСА_ВАШ_ГОРОД
            если не Ответ.Ответ.ЗначенияПредопределенные.Пусто()
                ДанныеОтклика.НаселенныйПункт = НаселенныеПункты.ПолучитьСсылку(Ответ.Ответ.ЗначенияПредопределенные[0].Ид)
            ;
        когда ПредопределенныеВопросыАнкеты.ИД_ВОПРОСА_ФАЙЛ_РЕЗЮМЕ
            ДанныеОтклика.ФайлРезюме = Ответ.Ответ.ЗначениеФайл
        когда ПредопределенныеВопросыАнкеты.ИД_ВОПРОСА_ЗАРПЛАТА
            ЗарплатныеОжидания.СуммаОт = Ответ.Ответ.ЗначениеЧисло ?? 0
            ЗарплатныеОжидания.СуммаДо = Ответ.Ответ.ЗначениеЧисло ?? 0
        когда ПредопределенныеВопросыАнкеты.ИД_ВОПРОСА_ВАЛЮТА
            если не Ответ.Ответ.ЗначенияПредопределенные.Пусто()
                ЗарплатныеОжидания.Валюта = Валюты.ПолучитьСсылку(Ответ.Ответ.ЗначенияПредопределенные[0].Ид)
            ;
        когда ПредопределенныеВопросыАнкеты.ИД_ВОПРОСА_О_СЕБЕ
            ДанныеОтклика.ОСебе = Ответ.Ответ.ЗначениеСтрока
        когда ПредопределенныеВопросыАнкеты.ИД_ВОПРОСА_ГРАЖДАНСТВО
            если не Ответ.Ответ.ЗначенияПредопределенные.Пусто()
                ДанныеОтклика.Гражданство = Страны.ПолучитьСсылку(Ответ.Ответ.ЗначенияПредопределенные[0].Ид)
            ;
        когда ПредопределенныеВопросыАнкеты.ИД_ВОПРОСА_НАВЫКИ
            если не Ответ.Ответ.ЗначениеСтрока.Пусто()
                КлючевыеНавыкиСтрока.ДобавитьВсе(Ответ.Ответ.ЗначениеСтрока.Разделить(","))
            ;
        ;
    ;

    ДанныеОтклика.ЗарплатныеОжидания = ЗарплатныеОжидания

    ЗаполнитьОбразование(ДанныеОтклика, СтруктураОтвета)
    ЗаполнитьОпытРаботы(ДанныеОтклика, СтруктураОтвета)
    ЗаполнитьСертификаты(ДанныеОтклика, СтруктураОтвета)
    ЗаполнитьПортфолио(ДанныеОтклика, СтруктураОтвета)
    ЗаполнитьИностранныеЯзыки(ДанныеОтклика, СтруктураОтвета)

;