импорт ВебApi
импорт ФизическиеЛица

// КонтрольДоступа
@Обработчик
метод ВычислитьРазрешенияДоступа(): ЧитаемаяКоллекция<РазрешениеДоступа>
    возврат ПодборПерсоналаКонтрольДоступаПоставщик.ПолучитьСервис().ВычислитьРазрешенияДоступаПричиныПрекращенияРассмотрения()
;
// КонтрольДоступа

@ВПроекте
@НаСервере @НаКлиенте
структура Состояние
    обз знч Вид: ВидыПрекращенияРассмотрения
    обз знч Причина: ПричиныОтказа.Ссылка|ПричиныОтклонения.Ссылка|?
    обз знч ПричинаПредставление: Строка
    обз знч Комментарий: Строка
    обз знч Сотрудник: ФизическиеЛица.Ссылка? 
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод Получить(Кандидат: РассматриваемыеКандидаты.Ссылка): Состояние?
     знч Запрос = Запрос{
        выбрать
            ПричиныПрекращенияРассмотрения.Вид как Вид,
            ПричиныПрекращенияРассмотрения.Причина как Причина,
            ПричиныПрекращенияРассмотрения.Причина.Представление.ЗаменитьNull("") как ПричинаПредставление,
            ПричиныПрекращенияРассмотрения.Комментарий как Комментарий,
            ПричиныПрекращенияРассмотрения.Сотрудник как Сотрудник
        из
            ПричиныПрекращенияРассмотрения как ПричиныПрекращенияРассмотрения
        где
            ПричиныПрекращенияРассмотрения.Кандидат == %Кандидат 
    }
    исп РезультатЗапроса = Запрос.Выполнить()
    знч Запись = РезультатЗапроса.ЕдинственныйИлиУмолчание() 
    если Запись == Неопределено
        возврат Неопределено
    иначе
        возврат новый Состояние(
            Запись.Вид, 
            Запись.Причина,
            Запись.ПричинаПредставление,
            Запись.Комментарий,
            Запись.Сотрудник)
    ;
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод Установить(Кандидат: РассматриваемыеКандидаты.Ссылка, 
        Вид: ВидыПрекращенияРассмотрения, 
        Причина: ПричиныОтказа.Ссылка|ПричиныОтклонения.Ссылка|?,
        Комментарий: Строка,
        Сотрудник: ФизическиеЛица.Ссылка?)
        
    исп КонтекстДоступа.Привилегированный()
        
    знч НаборЗаписей = новый ПричиныПрекращенияРассмотрения.НаборЗаписей()
    НаборЗаписей.Фильтр.Кандидат.Установить(Кандидат)
    НаборЗаписей.Добавить(
        новый ПричиныПрекращенияРассмотрения.Запись(
            Кандидат = Кандидат,
            Вид = Вид,
            Причина = Причина,
            Комментарий = Комментарий,
            Сотрудник = Сотрудник))      
    НаборЗаписей.Записать(Замещать = Истина)
    
    СтатусыКандидатов.УстановитьАктуальныйСтатус(Кандидат)
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод Очистить(Кандидат: РассматриваемыеКандидаты.Ссылка)
    
    исп КонтекстДоступа.Привилегированный()
    знч НаборЗаписей = новый ПричиныПрекращенияРассмотрения.НаборЗаписей()
    НаборЗаписей.Фильтр.Кандидат.Установить(Кандидат)      
    НаборЗаписей.Записать(Замещать = Истина)
    
    СтатусыКандидатов.УстановитьАктуальныйСтатус(Кандидат)
;

// JSON

@ВПодсистеме
структура ПричинаПрекращенияРассмотрения_2_0
    @JsonСвойство(Имя = "reasonKind")
    обз знч Вид: ПодборПерсонала.ВидыПрекращенияРассмотренияJson
    @JsonСвойство(Имя = "reason")
    обз знч Причина: Строка?
    @JsonСвойство(Имя = "comment")
    обз знч Комментарий: Строка
    @JsonСвойство(Имя = "employeeId")
    обз знч Сотрудник: Строка?
;

@ВПодсистеме
метод СтатусыВJson_V2_0(Кандидат: РассматриваемыеКандидаты.Ссылка?, Сервисы: ВебApiСервер.СервисыУпаковкиJson): ПричинаПрекращенияРассмотрения_2_0?
    знч Состояние = Получить(Кандидат)
    если Состояние == Неопределено
        возврат Неопределено
    иначе
        пер Причина: Строка? = Неопределено
        если Состояние.Причина != Неопределено
            Причина = Сервисы.ПолучитьИдентификатор(Состояние.Причина)
        ;
        
        пер Сотрудник: Строка?
        если Состояние.Сотрудник != Неопределено
            Сотрудник = Сервисы.ПолучитьИдентификатор(Состояние.Сотрудник)
        ;
        
        возврат новый ПричинаПрекращенияРассмотрения_2_0(
            Вид = ПодборПерсонала.ВидПрекращенияРассмотренияВJson(Состояние.Вид),
            Причина = Причина,
            Комментарий = Состояние.Комментарий,
            Сотрудник = Сотрудник)
    ;
;

@ВПодсистеме
метод ЗаписатьСтатусыJson_V2_0(Кандидат: РассматриваемыеКандидаты.Ссылка, Данные: ПричинаПрекращенияРассмотрения_2_0?, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    если Данные == Неопределено
        Очистить(Кандидат)
    иначе
        пер Вид = ПодборПерсонала.ВидПрекращенияРассмотренияИзJson(Данные.Вид)
        пер Причина : ПричиныОтказа.Ссылка|ПричиныОтклонения.Ссылка|? = Неопределено
        пер Сотрудник: ФизическиеЛица.Ссылка?
        если Данные.Сотрудник != Неопределено
            Сотрудник = Сервисы.ПолучитьСсылку(ФизическиеЛица.ВнешняяСсылка(Данные.Сотрудник)) как ФизическиеЛица.Ссылка
        ;
        если Данные.Причина != Неопределено
            выбор Вид
            когда ВидыПрекращенияРассмотрения.ОтказКандидата 
                Причина = Сервисы.ПолучитьСсылку(ПричиныОтказа.ВнешняяСсылка(Данные.Причина)) как ПричиныОтказа.Ссылка
            когда ВидыПрекращенияРассмотрения.ОтклонениеКандидата
                Причина = Сервисы.ПолучитьСсылку(ПричиныОтклонения.ВнешняяСсылка(Данные.Причина)) как ПричиныОтклонения.Ссылка   
            ;
        ;        
        
        Установить(Кандидат, Вид, Причина, Данные.Комментарий, Сотрудник)
    ;        
;
// JSON