импорт СтандартноеПриложение
импорт ФизическиеЛица
импорт УниверсальныеМеханизмы

@ВПроекте
@Реализация
метод Инициализировать()
    
    ЗаполнитьДанныеВакансии()
;

@НаКлиенте
@НаСервере
структура ДеталиКандидата
    пер Фотография: ДвоичныйОбъект.Ссылка?
    пер ОсновнойЗаголовок: Строка
    пер ДополнительныйЗаголовок: Строка
    пер СтатусПредставление: Строка
;

@НаСервере @ДоступноСКлиента
статический метод ДанныеКандидата(Кандидат: РассматриваемыеКандидаты.Ссылка): Кандидаты.Объект

    исп Результат= Запрос{ВЫБРАТЬ 
        РассматриваемыеКандидаты.Кандидат КАК Кандидат
    ИЗ
        РассматриваемыеКандидаты КАК РассматриваемыеКандидаты
    ГДЕ
        РассматриваемыеКандидаты.Ссылка == %Кандидат}.Выполнить()
    
    знч РассматриваемыйКандидат = Результат.ЕдинственныйИлиУмолчание()?.Кандидат
    возврат РассматриваемыйКандидат!.ЗагрузитьОбъект()
;

метод ПрочитатьДанныеКандидата()
    если не ТекущийКандидат == Неопределено
        ДанныеКандидата = ДанныеКандидата(ТекущийКандидат)
    ;
;

@НаСервере @ДоступноСКлиента
статический метод ЗаписатьДанныеКандидата(ДанныеКандидата: Кандидаты.Объект)
    ДанныеКандидата.Записать()
;

метод ЗаписатьДанныеКандидата()
    ЗаписатьДанныеКандидата(ДанныеКандидата)
;

метод ЗаполнитьДанныеВакансии()
    ЗагрузкаЗавершена = Ложь
    если не ТекущийКандидат == Неопределено
        знч ДанныеВакансии = ДанныеВакансии(ТекущийКандидат)
    
         если ДанныеВакансии.Фотография == Неопределено
            Фотография = СтандартноеПриложение.ПараметрыСеанса().АватарПоУмолчанию
        иначе
            Фотография = ДанныеВакансии.Фотография
        ;
        
        ОсновнойЗаголовок = ДанныеВакансии.ОсновнойЗаголовок
        ДополнительныйЗаголовок = ДанныеВакансии.ДополнительныйЗаголовок
        СтатусПредставление = ДанныеВакансии.СтатусПредставление
        ПрочитатьДанныеКандидата()      
        ЗагрузкаЗавершена = Истина 
    ;
      
;

@НаСервере @ДоступноСКлиента
статический метод ДанныеВакансии(Кандидат: РассматриваемыеКандидаты.Ссылка): ДеталиКандидата
    
    знч Запрос = Запрос{
        ВЫБРАТЬ 
            КандидатыВакансии.Кандидат КАК Кандидат,
            СтатусыРассматриваемыхКандидатов.Статус.ЗаменитьNull(Неопределено) КАК Статус,
            Кандидаты.Фотография.ЗаменитьNull(Неопределено) КАК Фотография,
            Кандидаты.Представление.ЗаменитьNull("") КАК КандидатПредставление,
            Кандидаты.ДатаРождения.ЗаменитьNull(Неопределено) КАК ДатаРождения,
            Кандидаты.Пол.ЗаменитьNull(Неопределено) КАК Пол
        ИЗ
        РассматриваемыеКандидаты КАК КандидатыВакансии   
        ЛЕВОЕ СОЕДИНЕНИЕ Кандидаты КАК Кандидаты
            ПО КандидатыВакансии.Кандидат == Кандидаты.Ссылка
        ЛЕВОЕ СОЕДИНЕНИЕ СтатусыРассматриваемыхКандидатов КАК СтатусыРассматриваемыхКандидатов
            ПО КандидатыВакансии.Кандидат == СтатусыРассматриваемыхКандидатов.Кандидат
        ГДЕ КандидатыВакансии.Ссылка == %Кандидат
    }
    знч ДеталиКандидата = новый ДеталиКандидата()
    знч Результат = Запрос.Выполнить().ЕдинственныйИлиУмолчание()
    если Результат == Неопределено
        возврат ДеталиКандидата
    ;
    
    пер Фотография: ДвоичныйОбъект.Ссылка? 
    если Результат.Фотография != Неопределено
        Фотография = Файлы.ДвоичныеДанныеФайла(Результат.Фотография).Ссылка
    ;
        
    
    знч Возраст = ФизЛица.ПолныхЛетСтрокой(Результат.ДатаРождения)
    ДеталиКандидата.Фотография = Фотография
    ДеталиКандидата.ОсновнойЗаголовок = Результат.КандидатПредставление
    ДеталиКандидата.ДополнительныйЗаголовок = "%{Результат.Пол.Представление()}, Возраст - %Возраст"
    ДеталиКандидата.СтатусПредставление = Результат.Статус.Представление()

    возврат ДеталиКандидата
;

метод РедактироватьПриНажатии(Источник: Кнопка, Событие: СобытиеПриНажатии)
    РежимПросмотра = Ложь
;

метод СохранитьПриНажатии(Источник: Кнопка, Событие: СобытиеПриНажатии)
    ЗаписатьДанныеКандидата()
    РежимПросмотра = Истина
;

метод ОтменитьПриНажатии(Источник: Кнопка, Событие: СобытиеПриНажатии)
    ПрочитатьДанныеКандидата()
    РежимПросмотра = Истина
;

метод ПредставлениеДатыРождения(): Строка
    возврат ДанныеКандидата.ДатаРождения.Представление()
;