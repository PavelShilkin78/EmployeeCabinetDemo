
// КонтрольДоступа
@Обработчик
метод ВычислитьРазрешенияДоступа(): ЧитаемаяКоллекция<РазрешениеДоступа>
    возврат ПодборПерсоналаКонтрольДоступаПоставщик.ПолучитьСервис().ВычислитьРазрешенияДоступаСтатусыОффера()
;
// КонтрольДоступа


@ВПроекте
@НаСервере @ДоступноСКлиента
метод Получить(Оффер: Офферы.Ссылка): СтатусОффера?
    знч Запрос = Запрос{
        ВЫБРАТЬ
            СтатусыОффера.Статус КАК Статус
        ИЗ 
            СтатусыОффера.СрезПоследних КАК СтатусыОффера
        ГДЕ 
            СтатусыОффера.Оффер == %Оффер
    }
    исп РезультатЗапроса = Запрос.Выполнить()
    возврат РезультатЗапроса.ЕдинственныйИлиУмолчание()?.Статус ?? СтатусОффера.Черновик
;

@ВПроекте
@НаСервере
метод АктуальнаяЗапись(Оффер: Офферы.Ссылка): СтатусыОффера.Запись?
    знч Запрос = Запрос{
        ВЫБРАТЬ
            СтатусыОффера.КлючЗаписи КАК СтатусОффераКлюч
        ИЗ 
            СтатусыОффера.СрезПоследних КАК СтатусыОффера
        ГДЕ 
            СтатусыОффера.Оффер == %Оффер
    }
    исп РезультатЗапроса = Запрос.Выполнить()
    возврат РезультатЗапроса.ЕдинственныйИлиУмолчание()?.СтатусОффераКлюч.ЗагрузитьЗапись()
;

@ВПодсистеме
@НаСервере
метод Установить(Оффер: Офферы.Ссылка, Статус: СтатусОффера)
    исп КонтекстДоступа.Привилегированный()
    знч Запись = новый СтатусыОффера.Запись(
        Период = Момент.Сейчас(),
        Оффер = Оффер, 
        Статус = Статус)
    Записать(Запись)
;


// JSON

@ВПодсистеме
перечисление СтатусОффераJson
    draft,
    sentToCandidate,
    agreed,
    denied,
    recalled
;

конст СООТВЕТСТВИЕ_СТАТУС_ОФФЕРА_JSON = {
    СтатусОффераJson.draft: СтатусОффера.Черновик,
    СтатусОффераJson.sentToCandidate: СтатусОффера.ОтправленКандидату,
    СтатусОффераJson.agreed: СтатусОффера.Принят,
    СтатусОффераJson.denied: СтатусОффера.Отклонен,
    СтатусОффераJson.recalled: СтатусОффера.Отозван
}

@ВПодсистеме
метод СтатусОффераВJson(СтатусОффера: СтатусОффера): СтатусОффераJson
    для КлючИЗначение из СООТВЕТСТВИЕ_СТАТУС_ОФФЕРА_JSON
        если КлючИЗначение.Значение == СтатусОффера
            возврат КлючИЗначение.Ключ
        ;    
    ;     
;

@ВПодсистеме
метод СтатусОффераИзJson(СтатусОффераJson: СтатусОффераJson): СтатусОффера
    возврат СООТВЕТСТВИЕ_СТАТУС_ОФФЕРА_JSON[СтатусОффераJson]    
;

@ВПодсистеме
структура СтатусОффера_2_5
    @JsonСвойство(Имя = "status")
    обз знч Статус: СтатусОффераJson
    @JsonСвойство(Имя = "period")
    обз знч Период: Момент    
;

@ВПодсистеме
метод СтатусыВJson_V2_5(Оффер: Офферы.Ссылка?): Массив<СтатусОффера_2_5>
    знч Запрос = Запрос{
        Выбрать
            СтатусыОффера.Период как Период,
            СтатусыОффера.Статус как Статус
        Из
            СтатусыОффера как СтатусыОффера
        Где
            СтатусыОффера.Оффер == %Оффер
        Упорядочить По
            СтатусыОффера.Период  
    }
    исп РезультатЗапроса = Запрос.Выполнить()
    возврат РезультатЗапроса.Преобразовать(
        Элемент -> новый СтатусОффера_2_5(
            Статус = СтатусОффераВJson(Элемент.Статус),
            Период = Элемент.Период
        )
    )
;

@ВПодсистеме
метод СтатусыВJson_V2_0(Оффер: Офферы.Ссылка?): СтатусОффераJson?
    знч Запрос = Запрос{
        Выбрать
            СтатусыОффера.Статус как Статус
        Из
            СтатусыОффера.СрезПоследних как СтатусыОффера
        Где
            СтатусыОффера.Оффер == %Оффер
    }
    исп РезультатЗапроса = Запрос.Выполнить()
    если РезультатЗапроса.Пусто()
        возврат Неопределено
    ;
    знч Статус = РезультатЗапроса.Единственный().Статус
    возврат СтатусОффераВJson(Статус)
;


@ВПодсистеме
метод ЗаписатьСтатусыJson_V2_5(Оффер: Офферы.Ссылка, Данные: Массив<СтатусОффера_2_5>)
    знч НаборЗаписей = новый СтатусыОффера.НаборЗаписей()
    НаборЗаписей.Фильтр.Оффер.Установить(Оффер)
    для Элемент из Данные
        НаборЗаписей.Добавить(
            новый СтатусыОффера.Запись(
                Оффер = Оффер,
                Статус = СтатусОффераИзJson(Элемент.Статус),
                Период = Элемент.Период))
    ;
    НаборЗаписей.Записать(Истина)
;

// JSON