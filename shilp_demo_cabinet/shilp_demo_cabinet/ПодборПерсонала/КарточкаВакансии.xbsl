импорт СтандартноеПриложение
импорт ИнтерфейсныеКомпонентыСтандартные


@ВПроекте
@Реализация
метод Заголовок(): Строка
    возврат ЭтоНовый() ? "Новая вакансия" : "Вакансия -  %{Объект.Наименование}"
;

@ВПроекте
@Реализация
метод КомандыСоздания(): Команда|ГруппаКомандногоИнтерфейса<Команда>|Неопределено
    возврат Неопределено
;

@ВПроекте
@Реализация
метод ДополнительныеКоманды(): ФрагментКомандногоИнтерфейса<Команда>?
    знч ДействияКоманд = {
        Вакансии.ДоступныеДействия.Редактирование,
        Вакансии.ДоступныеДействия.Копирование,        
        Вакансии.ДоступныеДействия.Закрытие,
        Вакансии.ДоступныеДействия.Удаление
    }.Фильтровать(Действие -> ДополнительныеДанныеФормы.ДоступныеДействия.Содержит(Действие))    
    знч Команды: ФрагментКомандногоИнтерфейса<Команда> 
    для Действие из ДействияКоманд
        выбор Действие
        когда Редактирование
            Команды.Элементы.Добавить(новый ОбычнаяКоманда(
                Представление = "Редактировать",
                Изображение = Ресурс{Карандаш.svg}.Ссылка,
                Обработчик = (Источник) -> Редактировать()))
        когда Копирование
            Команды.Элементы.Добавить(новый ОбычнаяКоманда(
                Представление = "Копировать",
                Изображение = Ресурс{СодержаниеКопия.svg}.Ссылка,
                Обработчик = (Источник) -> Копировать()))
        когда Удаление
            Команды.Элементы.Добавить(новый ОбычнаяКоманда(
                Представление = "Удалить",
                Изображение = Ресурс{МусорнаяКорзинаКонтур.svg}.Ссылка,
                Обработчик = (Источник) -> УдалитьВакансию()))
        когда Закрытие
            Команды.Элементы.Добавить(новый ОбычнаяКоманда(
                Представление = "Закрыть вакансию",
                Обработчик = Источник -> ЗакрытьВакансию()))
        ;
    ;
    возврат Команды
;

@ВПроекте
@Реализация
метод ОсновнаяКоманда(): Команда?
    возврат Неопределено
;

@ВПроекте
@Реализация
метод ОбычныеКоманды(): ФрагментКомандногоИнтерфейса<Команда>?
    возврат Неопределено
;

@ВПодсистеме
@НаСервере @НаКлиенте
структура ДополнительныеДанныеФормы
    знч ДоступныеДействия: Множество<Вакансии.ДоступныеДействия>
    знч Статус: СтатусВакансии?
    знч ДанныеЗаявки: ДанныеЗаявкиНаПодбор? 
;

@НаСервере @ДоступноСКлиента
статический метод ДополнительныеДанныеФормы(Ссылка: Вакансии.Ссылка, Заявка: ЗаявкиНаПодбор.Ссылка?): ДополнительныеДанныеФормы 
    знч Статус = СтатусыВакансии.Получить(Ссылка)
    возврат новый ДополнительныеДанныеФормы(
        ДоступныеДействия = Вакансии.ДоступныеДействия(Ссылка, Статус),
        Статус = Статус,
        ДанныеЗаявки = ДанныеЗаявки(Заявка))
;

@НаСервере
статический метод ДанныеЗаявки(ЗаявкаНаПодбор: ЗаявкиНаПодбор.Ссылка?): ДанныеЗаявкиНаПодбор?
    если ЗаявкаНаПодбор == Неопределено
        возврат Неопределено
    ;
    исп Результат = Запрос{
            выбрать 
                Дата,
                Номер,
                Должность,
                Подразделение,
                КоличествоШтатныхЕдиниц,
                КомпенсационныйПакет,
                ЗаработнаяПлата,
                НаселенныеПунктыПредставление,
                СпособТрудоустройства,
                Автор,
                Срочность,
                Требования,
                Обязанности,
                Условия,
                ПлановаяДатаЗакрытия
            породить ДанныеЗаявкиНаПодбор
            из 
                ЗаявкиНаПодбор
            где
                Ссылка == %ЗаявкаНаПодбор
        }.Выполнить()
        
    возврат Результат.Единственный()
;

@Обработчик
метод ПослеЧтения()
    если не ЭтоНовый()
        ДополнительныеДанныеФормы = ДополнительныеДанныеФормы(КлючОбъекта, Объект.ЗаявкаНаПодбор)
    ;
    ДобавитьДополнительныеСтраницы()
    ИнтерфейсныеКомпоненты.ИнициализироватьПодчиненныеКомпоненты(Компоненты)
    ВакансияПослеИзменения.ПодключитьОбработчик(&ВакансияПослеИзмененияОбработчик)
;

метод ВакансияПослеИзмененияОбработчик(Вакансия: Вакансии.Ссылка)
    если Вакансия == КлючОбъекта
        Прочитать()
    ;
;

метод ДобавитьДополнительныеСтраницы()

    знч БазовыеСтраницы: Массив<Страница>
    БазовыеСтраницы.ДобавитьВсе(Компоненты.ШаблонФормы.ОсновнойРаздел.ПодМассив(0,2))
    Компоненты.ШаблонФормы.ОсновнойРаздел.Очистить()
    Компоненты.ШаблонФормы.ОсновнойРаздел.ДобавитьВсе(БазовыеСтраницы)
        
    пер ДополнительныеСтраницы: Массив<ПодборПерсонала.ОписаниеДополнительногоКомпонента>
    для Сервис из ДополнительныеКомпонентыВакансии.ПолучитьСервисы()
        ДополнительныеСтраницы.ДобавитьВсе(Сервис.Страницы(этот, КлючОбъекта))
    ; 
    для Описание из ДополнительныеСтраницы.СортироватьПо((Элемент)-> Элемент.Порядок)
        знч НоваяСтраница = новый Страница(
            Заголовок = Описание.Заголовок,
            ЗначениеЗаголовка = Описание.ЗначениеЗаголовка,
            Изображение = Описание.Изображение,
            Содержимое = Описание.Содержимое)
        Компоненты.ШаблонФормы.ОсновнойРаздел.Добавить(НоваяСтраница)
    ;   
;

метод ИндикаторыОбщейИнформации(): Массив<Компонент>
    знч ДанныеИндикаторов: Массив<ПодборПерсонала.ДанныеИндикатора>
    для Сервис из ДополнительныеКомпонентыВакансии.ПолучитьСервисы()
        ДанныеИндикаторов.ДобавитьВсе(Сервис.ИндикаторыОбщейИнформации(этот, КлючОбъекта))
    ;
    
    знч Индикаторы: Массив<Компонент>
    для Элемент из ДанныеИндикаторов.СортироватьПо((Элемент)->Элемент.Порядок)
        Индикаторы.Добавить(
            новый Индикатор(
                Количество = Элемент.Количество,
                Пояснение = Элемент.Пояснение,
                Коннотация = Элемент.Коннотация,
                ПоказыватьНоль = Истина,
                ШиринаВКолонках = ШиринаВКолонках.Одинарная,
                ВыравниваниеСодержимогоПоГоризонтали = ВыравниваниеПоГоризонтали.Начало))
    ;
    
    возврат Индикаторы
;

метод КолонкиОбщейИнформации(): Массив<КолонкаМатричнойГруппы>
    знч Колонки: Массив<КолонкаМатричнойГруппы>
    Колонки.Добавить(новый КолонкаМатричнойГруппы())
    если КлиентскоеУстройство.ВидИнтерфейса != ВидИнтерфейса.Телефон
        Колонки.Добавить(новый КолонкаМатричнойГруппы())  
    ;
    
    возврат Колонки
;

метод КомпонентыОбщейИнформации(): Массив<Компонент>
    знч ОписаниеКомпонентов: Массив<ПодборПерсонала.ОписаниеДополнительногоКомпонента>
    для Сервис из ДополнительныеКомпонентыВакансии.ПолучитьСервисы()
        ОписаниеКомпонентов.ДобавитьВсе(Сервис.КомпонентыОбщейИнформации(этот, КлючОбъекта))
    ;
    
    знч КомпонентыОбщейИнформации: Массив<Компонент>
    для Описание из ОписаниеКомпонентов.СортироватьПо((Элемент)->Элемент.Порядок)
        
        пер ИзображениеКарточки: ДвоичныйОбъект.Ссылка?
        если Описание.Изображение != Неопределено
            ИзображениеКарточки = Описание.Изображение
        иначе если Описание.ЗначениеЗаголовка != Неопределено
            ИзображениеКарточки = ИнтерфейсныеКомпоненты.КартинкаИндикатора(
                Количество = Описание.ЗначениеЗаголовка!, 
                ЦветФона = БиблиотекаЦветов.ЦветСтрокой(БиблиотекаЦветов.ВидыЦвета.СветлоСерый),
                ЦветТекста = БиблиотекаЦветов.ЦветСтрокой(БиблиотекаЦветов.ВидыЦвета.Чёрный))
        ;
        
        КомпонентыОбщейИнформации.Добавить(
            новый СтандартнаяКарточка(
                Заголовок = Описание.Заголовок,
                Изображение = ИзображениеКарточки,
                Содержимое = Описание.Содержимое,
                РастягиватьПоГоризонтали = Истина))
    ;
    
    возврат КомпонентыОбщейИнформации
;

метод Редактировать()
    знч ФормаРедактирования = новый ВакансииФормаОбъекта(КлючОбъекта = КлючОбъекта)
    ИнтерфейсныеКомпоненты.ОткрытьЗамещающуюФорму(этот, ФормаРедактирования)
;

метод Копировать()
    знч ФормаРедактирования = новый ВакансииФормаОбъекта(КлючИсточникаКопирования = КлючОбъекта)
    ИнтерфейсныеКомпоненты.ОткрытьЗамещающуюФорму(этот, ФормаРедактирования)
;

метод УдалитьВакансию()
    если Вакансии.ПодтвердитьУдаление()
        Вакансии.Удалить(КлючОбъекта)
        ИнтерфейсныеКомпоненты.ЗакрытьЗамещающуюФорму(этот)
    ;
;

метод ЗакрытьВакансию()
    если Вакансии.ПодтвердитьЗакрытие()
        Вакансии.Закрыть(КлючОбъекта)
        Вакансии.УведомитьОЗакрытии()
        ИнтерфейсныеКомпоненты.ЗакрытьЗамещающуюФорму(этот)
    ;
;

метод МаксимальнаяШиринаПанелейПодразделов(): Число
    возврат ОсновнойИнтерфейс.МаксимальнаяШиринаПанелейПодразделов()
;

метод ЗаголовокОсновнойГруппы(): Строка
   возврат КлиентскоеУстройство.ВидИнтерфейса == ВидИнтерфейса.Компьютер  ? "" : "Основное"
;

метод ЗаголовокГруппыОписаниеВакансии(): Строка
   возврат КлиентскоеУстройство.ВидИнтерфейса == ВидИнтерфейса.Компьютер  ? "" : "Описание вакансии"
;

метод НомерЗаявкиПриНажатии(Источник: Надпись, Событие: СобытиеПриНажатии)
    если Объект.ЗаявкаНаПодбор != Неопределено
        КарточкаЗаявкиНаПодбор.Показать(Объект.ЗаявкаНаПодбор, этот)
    ;
;

метод ПлановаяДатаЗакрытияВидимость(): Булево
    возврат (ДополнительныеДанныеФормы.ДанныеЗаявки?.ПлановаяДатаЗакрытия ?? Дата{}) != Дата{}
;