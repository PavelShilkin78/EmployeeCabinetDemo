импорт ВебApi
импорт ОбменДанными
импорт ОбщиеСтандартные

//КонтрольДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): ЧитаемаяКоллекция<РазрешениеДоступа>
    возврат ПодборПерсоналаКонтрольДоступаПоставщик.ПолучитьСервис().ВычислитьРазрешенияДоступаСрочностиВакансии()
;

//Конец КонтрольДоступа

@ВПодсистеме
@НаСервере @ДоступноСКлиента
метод ТекущаяПлановаяДатаЗакрытия(Приоритет: СрочностьВакансии.Ссылка, РасчетнаяДата: Дата? = Неопределено): Дата 
    знч ДатаРасчета = РасчетнаяДата ?? Дата.Сейчас()
    знч СрокПодбораВДнях = МенеджерСущности.ЗначениеРеквизитаОбъекта(Приоритет, "СрокПодбораВДнях") как Число
    возврат ДатаРасчета.ДобавитьДни(СрокПодбораВДнях)
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ДоступныеЗначения(): Массив<СрочностьВакансии.Ссылка>
    знч Значения = новый Массив<СрочностьВакансии.Ссылка>()
    знч Запрос = Запрос{
        ВЫБРАТЬ
            СрочностьВакансии.Ссылка КАК Ссылка
        ИЗ 
            СрочностьВакансии КАК СрочностьВакансии
    }
    исп РезультатЗапроса = Запрос.Выполнить()
    для Элемент из РезультатЗапроса
        Значения.Добавить(Элемент.Ссылка)
    ;
    возврат Значения
;

@ВПроекте
@НаСервере
метод ВыполнитьНачальноеЗаполнение()
    знч ДанныеЗаполнения: ЧитаемыйМассив<ЧитаемоеСоответствие<Строка, Объект?>> = 
        [
            {"Наименование": "Высокий", "СрокПодбораВДнях": 7, "Приоритет": Приоритет.Высокий},
            {"Наименование": "Обычный", "СрокПодбораВДнях": 30, "Приоритет": Приоритет.Обычный},
            {"Наименование": "Низкий", "СрокПодбораВДнях": 90, "Приоритет": Приоритет.Низкий}
        ]
    для Элемент из ДанныеЗаполнения
        знч НовыйОбъект = новый СрочностьВакансии.Объект(
            Наименование = Элемент.Получить("Наименование") как Строка, 
            СрокПодбораВДнях = Элемент.Получить("СрокПодбораВДнях") как Число, 
            Приоритет = Элемент.Получить("Приоритет") как Приоритет)
        НовыйОбъект.Записать()
        ОбменДанными.ЗарегистрироватьОтправляемыйДокумент(НовыйОбъект.Ссылка, Истина)
        РегистрацияИзменений.ЗарегистрироватьИзменение(НовыйОбъект.Ссылка, Неопределено, ХарактерыИзменений.Изменение)
    ;
;

@ВПроекте
@НаСервере
метод СрочностьПоУмолчанию(): СрочностьВакансии.Ссылка?
    знч Запрос = Запрос{
        выбрать первые 1
            Ссылка
        из
            СрочностьВакансии
        упорядочить по
            СрокПодбораВДнях убыв
    }
    исп Результат = Запрос.Выполнить()
    возврат Результат.ПервыйИлиУмолчание()?.Ссылка
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод Изображение(Ссылка: СрочностьВакансии.Ссылка?): ДвоичныйОбъект.Ссылка?
    если Ссылка == Неопределено
        возврат Неопределено
    ;
    знч Результат = Запрос{выбрать Приоритет из СрочностьВакансии где Ссылка == %Ссылка}.Выполнить()
    возврат Результат.ЕдинственныйИлиУмолчание()?.Приоритет.Изображение()
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ПредставлениеСрокаЗакрытия(Ссылка: СрочностьВакансии.Ссылка?): Строка
    если Ссылка == Неопределено
        возврат ""
    ;
    знч СрокПодбораВДнях = Запрос{выбрать %Ссылка.СрокПодбораВДнях.ЗаменитьNull(Неопределено) как СрокПодбораВДнях}.Выполнить().ЕдинственныйИлиУмолчание().СрокПодбораВДнях
    если СрокПодбораВДнях == Неопределено или СрокПодбораВДнях == 0
        возврат ""
    иначе
        знч ПредставлениеКоличестваДней = МенеджерСтрок.ТекстПоКоличеству("день", СрокПодбораВДнях!)
        возврат "Закрыть за %СрокПодбораВДнях %ПредставлениеКоличестваДней"
    ;
;

// JSON

@ВПодсистеме
метод ТипОбъектаJson(): Строка
    возврат "jobPriorities"
;

@ВПроекте
структура СрочностьВакансии_2_0
    @JsonСвойство(Имя = "ID")
    обз знч Идентификатор: Строка
    @JsonСвойство(Имя = "name")
    обз знч Наименование: Строка
    @JsonСвойство(Имя = "hiringTime")
    обз знч СрокПодбораВДнях: Число
;

@ВПроекте
структура СрочностьВакансии_3_0
    @JsonСвойство(Имя = "ID")
    обз знч Идентификатор: Строка
    @JsonСвойство(Имя = "name")
    обз знч Наименование: Строка
    @JsonСвойство(Имя = "priority")
    обз знч Приоритет: ПодборПерсонала.ПриоритетJson
    @JsonСвойство(Имя = "hiringTime")
    обз знч СрокПодбораВДнях: Число
    
;

@ВПроекте
метод ТипДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    выбор ВерсияФорматаОбмена
    когда Неопределено
        выбросить новый ИсключениеВыполнения("Версия формата обмена не указана")
    когда >= Версия{3.0}
        возврат Тип<СрочностьВакансии_3_0>
    когда >= Версия{2.0}
        возврат Тип<СрочностьВакансии_2_0>
    иначе
        выбросить новый ИсключениеВыполнения("Неверный формат")
    ;
;

@ВПроекте
метод ЗагрузитьОбъектИзJson_V2_0(ДанныеJson: СрочностьВакансии_2_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    исп Транзакции.Начать()
    знч ЗагружаемыйОбъект = Сервисы.ПрочитатьОбъект(ДанныеJson.Идентификатор,
        &СрочностьВакансии.Объект.новый(Ууид), Тип<СрочностьВакансии.Ссылка>) как СрочностьВакансии.Объект
    ЗагружаемыйОбъект.Наименование = ДанныеJson.Наименование
    ЗагружаемыйОбъект.СрокПодбораВДнях = ДанныеJson.СрокПодбораВДнях
    Сервисы.ЗаписатьОбъект(новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(ЗагружаемыйОбъект, ДанныеJson.Идентификатор), Сервисы.ИнструментыМенеджераОбъекта)     
;

@ВПроекте
метод ЗагрузитьОбъектИзJson_V3_0(ДанныеJson: СрочностьВакансии_3_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    исп Транзакции.Начать()
    знч ЗагружаемыйОбъект = Сервисы.ПрочитатьОбъект(ДанныеJson.Идентификатор,
        &СрочностьВакансии.Объект.новый(Ууид), Тип<СрочностьВакансии.Ссылка>) как СрочностьВакансии.Объект
    ЗагружаемыйОбъект.Наименование = ДанныеJson.Наименование
    ЗагружаемыйОбъект.СрокПодбораВДнях = ДанныеJson.СрокПодбораВДнях
    ЗагружаемыйОбъект.Приоритет = ПодборПерсонала.ПриоритетИзJson(ДанныеJson.Приоритет)
    Сервисы.ЗаписатьОбъект(новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(ЗагружаемыйОбъект, ДанныеJson.Идентификатор), Сервисы.ИнструментыМенеджераОбъекта)     
;

@ВПроекте
метод ВнешняяСсылка(Идентификатор: Строка): ВебApiСервер.ВнешняяСсылка
    возврат новый ВебApiСервер.ВнешняяСсылка(Идентификатор, (Ууид) -> СрочностьВакансии.ПолучитьСсылку(Ууид))
;

@ВПодсистеме
метод ГруппаИзмененийВJson(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?): ЧитаемоеСоответствие<Строка, Массив<Объект?>>
    
    выбор ВерсияФорматаОбмена
    когда Неопределено
        выбросить новый ИсключениеВыполнения("Версия формата обмена не указана")
    когда >= Версия{3.0}
        возврат {"jobPriorities": ИсходящиеДанныеВJson_V3_0(Ссылки, Сервисы)}
    когда >= Версия{2.0}
        возврат {"jobPriorities": ИсходящиеДанныеВJson_V2_0(Ссылки, Сервисы)}
    иначе
        выбросить новый ИсключениеВыполнения("Неверный формат")
    ;
;

метод ИсходящиеДанныеВJson_V2_0(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): Массив<Объект?>
    знч Данные: Массив<Объект?>
    для КлючИЗначение из ДанныеОбъектов(Ссылки)
        Данные.Добавить(ДанныеОбъектаВJson_V2_0(КлючИЗначение.Значение, Сервисы))
    ;
    возврат Данные
;

метод ИсходящиеДанныеВJson_V3_0(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): Массив<Объект?>
    знч Данные: Массив<Объект?>
    для КлючИЗначение из ДанныеОбъектов(Ссылки)
        Данные.Добавить(ДанныеОбъектаВJson_V3_0(КлючИЗначение.Значение, Сервисы))
    ;
    возврат Данные
;

метод ДанныеОбъектов(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>): ЧитаемоеСоответствие<СрочностьВакансии.Ссылка, ДанныеОбъекта>
    знч Данные: Соответствие<СрочностьВакансии.Ссылка, ДанныеОбъекта> 
    знч Запрос = Запрос{
        Выбрать
            Ссылка,
            Наименование,
            СрокПодбораВДнях,
            Приоритет
        Породить 
            ДанныеОбъекта
        Из
            СрочностьВакансии
        Где
            Ссылка В (%Ссылки)        
    }
    исп Результат = Запрос.Выполнить() 
    для СтрокаРезультата из Результат
        Данные.Вставить(СтрокаРезультата.Ссылка, СтрокаРезультата)
    ;
    
    возврат Данные    
;

метод ДанныеОбъектаВJson_V2_0(ДанныеОбъекта: ДанныеОбъекта, Сервисы: ВебApiСервер.СервисыУпаковкиJson): СрочностьВакансии_2_0
    пер ДанныеJson = новый СрочностьВакансии_2_0(
        Сервисы.ПолучитьИдентификатор(ДанныеОбъекта.Ссылка),
        ДанныеОбъекта.Наименование,
        ДанныеОбъекта.СрокПодбораВДнях)    
    возврат ДанныеJson        
;

метод ДанныеОбъектаВJson_V3_0(ДанныеОбъекта: ДанныеОбъекта, Сервисы: ВебApiСервер.СервисыУпаковкиJson): СрочностьВакансии_3_0
    пер ДанныеJson = новый СрочностьВакансии_3_0(
        Сервисы.ПолучитьИдентификатор(ДанныеОбъекта.Ссылка),
        ДанныеОбъекта.Наименование,
        ПодборПерсонала.ПриоритетВJson(ДанныеОбъекта.Приоритет),
        ДанныеОбъекта.СрокПодбораВДнях)
    возврат ДанныеJson        
;

// Конец JSON

@ВПодсистеме
метод ПослеЗаписиДополнение(Ссылка: СрочностьВакансии.Ссылка, ТребуетсяРегистрацияИзменений: Булево)
    если ТребуетсяРегистрацияИзменений
        ОбменДанными.ЗарегистрироватьОтправляемыйДокумент(Ссылка, Истина)
        РегистрацияИзменений.ЗарегистрироватьИзменение(Ссылка, Неопределено, ХарактерыИзменений.Изменение)
    ;
;

@ВПодсистеме
метод ПослеУдаленияДополнение(Ссылка: СрочностьВакансии.Ссылка, ТребуетсяРегистрацияИзменений: Булево)
    если ТребуетсяРегистрацияИзменений
        РегистрацияИзменений.ЗарегистрироватьУдаление(Ссылка)
    ;
;