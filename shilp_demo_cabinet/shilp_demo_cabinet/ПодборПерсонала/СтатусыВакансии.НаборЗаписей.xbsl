@Обработчик
@ВыполнятьПриЗагрузкеДанных
метод ПослеЗаписи(Замещать: Булево, ПараметрыЗаписи: СтатусыВакансии.ПараметрыЗаписи)
    если не ПараметрыЗаписи.РежимЗагрузкиДанных
        ЗарегистрироватьИзменение()
    ;
    
    ОтправитьУведомления(Замещать, ПараметрыЗаписи)
;

метод ЗарегистрироватьИзменение()
    знч СервисРегистрацииИзменений = ПодборПерсоналаРегистрацияИзменений.ПолучитьСервис()
    если не СервисРегистрацииИзменений.ВакансииТребуетсяРегистрация()
        возврат
    ;
    
    если не Фильтр.Вакансия.Использование
        возврат
    ;
    если Фильтр.Вакансия.Значение == Неопределено
        возврат
    ;
    знч Вакансия = Фильтр.Вакансия.Значение!
    
    если Размер() != 1
        возврат
    ;
    
    знч Статус = Единственный().Статус
    если Статус == СтатусВакансии.Закрыта
        Вакансии.ЗарегистрироватьИзменение(Вакансия, ДымчатоеТестирование = Неопределено)  
    иначе
        Вакансии.ЗарегистрироватьИзменение(Вакансия)  
    ;
;

метод ОтправитьУведомления(Замещать: Булево, ПараметрыЗаписи: СтатусыВакансии.ПараметрыЗаписи)
    исп КонтекстДоступа.Привилегированный()
    для Сервис из УведомленияПодбораПерсонала.ПолучитьСервисы()
        Сервис.ПослеЗаписиСтатусаВакансии(этот, Замещать, ПараметрыЗаписи)
    ;
;