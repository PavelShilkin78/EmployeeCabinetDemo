импорт ФизическиеЛица
импорт УниверсальныеМеханизмы
импорт ОбщиеСтандартные

@Обработчик
@ВыполнятьПриЗагрузкеДанных
метод ПередЗаписью(До: РассматриваемыеКандидаты.Данные, ПараметрыЗаписи: РассматриваемыеКандидаты.ПараметрыЗаписи)
    Наименование = Кандидат.Представление()
;

@Обработчик
@ВыполнятьПриЗагрузкеДанных
метод ПослеЗаписи(До: РассматриваемыеКандидаты.Данные, ПараметрыЗаписи: РассматриваемыеКандидаты.ПараметрыЗаписи)
    исп КонтекстДоступа.Привилегированный()
    знч ДанныеЗаписи = новый РассматриваемыеКандидаты.ДанныеЗаписи(Ссылка, Кандидат, Вакансия)
    РассматриваемыеКандидаты.ПослеЗаписиДополнение(ДанныеЗаписи, ПараметрыЗаписи.РежимЗагрузкиДанных)
    если ЭтоНовый()
        СтатусыКандидатов.Установить(Кандидат, СтатусыКандидата.ПрикрепленКВакансии)
    ;
    РассматриваемыеКандидаты.ПересчитатьРазрешенияЗависимыхОбъектов([новый РассматриваемыеКандидаты.ДанныеРасчетаРазрешений(этот)])
;

@Обработчик
@ВыполнятьПриЗагрузкеДанных
метод ПослеУдаления(ПараметрыУдаления: РассматриваемыеКандидаты.ПараметрыУдаления)
    исп КонтекстДоступа.Привилегированный()
    РассматриваемыеКандидаты.ПослеУдаленияДополнение(Ссылка, не ПараметрыУдаления.РежимЗагрузкиДанных)
;

@ВПроекте
@Реализация
метод КонтактнаяИнформация(): Объект?
    возврат ЛичныеКонтакты.КонтактнаяИнформация(Кандидат)
;

@ВПроекте
@Реализация
метод Аватар(): ДвоичныйОбъект.Ссылка?
    знч ФотографияКандидата = МенеджерСущности.ЗначениеРеквизитаОбъекта(Кандидат, "Фотография") как Файлы.Ссылка?
    если ФотографияКандидата == Неопределено
        возврат Неопределено
    ;
    возврат Файлы.ДанныеФайла(ФотографияКандидата.Ид).Ссылка
;