импорт КонтрольДоступа
импорт ФизическиеЛица
импорт ОбщиеСтандартные
импорт СтандартноеПриложение
импорт ИнтерфейсныеКомпонентыСтандартные


@ВПроекте
@Реализация
метод Обновить()
    Компоненты.Кандидаты.Обновить()
;


метод Инициатор(): ФизическиеЛица.Ссылка?
    возврат КонтрольДоступа.ПараметрыСеанса().ФизлицоТекущегоПользователя
;

метод ОписаниеСтроки(ДанныеСтроки: СтрокаДинамическогоСписка): Строка
    знч ЧастиОписания: Массив<Строка>
    знч ДатаРождения = ДанныеСтроки.Данные["ДатаРождения"] как Дата
    если ДатаРождения != Дата{}
        знч Возраст = ФизЛица.ПолныхЛет(ДатаРождения)
        знч ПредставлениеГода = МенеджерСтрок.ТекстПоКоличеству("год", Возраст)
        ЧастиОписания.Добавить("%Возраст %ПредставлениеГода")
    ;
    
    знч ПредставлениеОпытаРаботы = ДанныеСтроки.Данные["ПредставлениеОпытаРаботы"] как Строка
    если не ПредставлениеОпытаРаботы.Пусто()
        ЧастиОписания.Добавить("опыт %ПредставлениеОпытаРаботы")
    ;
    
    знч НаселенныйПункт = ДанныеСтроки.Данные["НаселенныйПункт"] как Строка?
    если НаселенныйПункт != Неопределено
        ЧастиОписания.Добавить(НаселенныйПункт)
    ;
    
    возврат ЧастиОписания.Соединить(", ")
;

метод Фотография(ДанныеСтроки: СтрокаДинамическогоСписка): ДвоичныйОбъект.Ссылка?
    пер Фотография = ДанныеСтроки.Данные["Фотография"] как ДвоичныйОбъект.Ссылка?
    если Фотография == Неопределено
         Фотография = СтандартноеПриложение.ПараметрыСеанса().АватарПоУмолчанию   
    ;
    возврат Фотография
;

метод КандидатыПослеСозданияСтроки(Источник: Список<ДинамическийСписок>, Событие: СобытиеСДанными<СтрокаСписка<СтрокаДинамическогоСписка>>)
    если не ЕстьДанныеДляОтображения
        ЕстьДанныеДляОтображения = Истина
    ;
;

метод КандидатыПриНажатииСтроки(Источник: Список<ДинамическийСписок>, Событие: СобытиеСДанными<СтрокаСписка<СтрокаДинамическогоСписка>>)
    знч Форма = новый КарточкаРассматриваемогоКандидата(КлючОбъекта = Событие.Данные.ДанныеСтроки.Ключ как РассматриваемыеКандидаты.Ссылка)
    если ФормаВладелец != Неопределено
        ИнтерфейсныеКомпоненты.ОткрытьЗамещающуюФорму(ФормаВладелец, Форма)
    иначе
        Форма.ОткрытьВМодальномОкне()
    ;
;