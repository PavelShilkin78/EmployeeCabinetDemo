импорт Компания
импорт КонтрольДоступа
импорт ОбменДанными
импорт УниверсальныеМеханизмы
импорт ИнтерфейсныеКомпонентыСтандартные

@ВПроекте
@Реализация
метод Заголовок(): Строка
    возврат РассматриваемыеКандидаты.ЗаголовокФормы(КлючОбъекта)
;

@ВПроекте
@Реализация
метод КомандыСоздания(): Команда|ГруппаКомандногоИнтерфейса<Команда>|Неопределено
    возврат Неопределено
;

@ВПроекте
@Реализация
метод ДополнительныеКоманды(): ФрагментКомандногоИнтерфейса<Команда>?
    возврат Неопределено
;

@ВПроекте
@Реализация
метод ОсновнаяКоманда(): Команда?
    возврат ОсновнаяКомандаФормы
;

@ВПроекте
@Реализация
метод ОбычныеКоманды(): ФрагментКомандногоИнтерфейса<Команда>?
    возврат ОбычныеКомандыФормы
;

@ВПодсистеме
@НаКлиенте @НаСервере
структура ДополнительныеДанныеФормы
    пер Статус: СтатусыВоронки.Ссылка?
    пер ПрисоединенныеФайлы: ПрисоединенныеФайлы
    пер ТолькоЧтение: Булево
    пер РассмотрениеПрекращено: Булево
    пер ПричинаПрекращенияРассмотрения: Строка
    пер ПолномочиеСогласованияКандидатов: Булево
    пер ПолномочиеОтклоненияКандидата: Булево
    пер СогласованиеДоступно: Булево
    пер ВозобновлениеРассмотренияДоступно: Булево
;

@ВПроекте
статический метод ОткрытьЗамещающуюФорму(Ссылка: РассматриваемыеКандидаты.Ссылка, ФормаВладелец: ЗамещаемаяФорма)
    знч Форма = новый КарточкаРассматриваемогоКандидата(КлючОбъекта = Ссылка)
    ИнтерфейсныеКомпоненты.ОткрытьЗамещающуюФорму(ФормаВладелец, Форма)
;

метод РежимДесктопа(): Булево
    возврат КлиентскоеУстройство.ВидИнтерфейса == ВидИнтерфейса.Компьютер   
;

метод ПрисоединенныеФайлыЗавершенаЗагрузкаФайлов(Источник: ПрисоединенныеФайлыКомпонент, Событие: СобытиеКомпонента)
    СохранитьПрисоединенныеФайлы(ДополнительныеДанныеФормы.ПрисоединенныеФайлы)
    ОбновитьСписокФайлов()
;

метод ПрисоединенныеФайлыУдалить(Источник: ПрисоединенныеФайлыКомпонент, Событие: СобытиеСДанными<ПрисоединенныйФайл>)
    СохранитьПрисоединенныеФайлы(ДополнительныеДанныеФормы.ПрисоединенныеФайлы)
    ДополнительныеДанныеФормы.ПрисоединенныеФайлы.Файлы.Удалить(Событие.Данные)
;

метод ОбновитьСписокФайлов()
    ДополнительныеДанныеФормы.ПрисоединенныеФайлы = ДополнительныеДанныеФормы(КлючОбъекта).ПрисоединенныеФайлы
;

@НаСервере @ДоступноСКлиента
статический метод СохранитьПрисоединенныеФайлы(ПрисоединенныеФайлы: ПрисоединенныеФайлы)
    ПрисоединенныеФайлыМенеджер.Записать(ПрисоединенныеФайлы)
;

@НаСервере @ДоступноСКлиента
статический метод ДополнительныеДанныеФормы(Ссылка: РассматриваемыеКандидаты.Ссылка) : ДополнительныеДанныеФормы

    знч ДополнительныеДанныеФормы = новый ДополнительныеДанныеФормы()
    ДополнительныеДанныеФормы.ПрисоединенныеФайлы = ПрисоединенныеФайлыМенеджер.ПрисоединенныеФайлы(Ссылка)
    ДополнительныеДанныеФормы.Статус = СтатусыРассматриваемыхКандидатов.Получить(Ссылка)
    ДополнительныеДанныеФормы.ТолькоЧтение = не КонтрольДоступа.ЕстьПравоНаПолномочие(ПодборПерсонала.ПолномочиеИзменениеРассматриваемогоКандидата())
    знч СостояниеПрекращенияРассмотрения = ПричиныПрекращенияРассмотрения.Получить(Ссылка)
    если СостояниеПрекращенияРассмотрения != Неопределено
        ДополнительныеДанныеФормы.РассмотрениеПрекращено = Истина
        ДополнительныеДанныеФормы.ТолькоЧтение = Истина
        выбор СостояниеПрекращенияРассмотрения.Вид
        когда ОтказКандидата
            ДополнительныеДанныеФормы.ПричинаПрекращенияРассмотрения = "Кандидат отказался от вакансии по причине: %{СостояниеПрекращенияРассмотрения.ПричинаПредставление}"
        когда ОтклонениеКандидата
            если СостояниеПрекращенияРассмотрения.Сотрудник != Неопределено
                ДополнительныеДанныеФормы.ПричинаПрекращенияРассмотрения = 
                "%{СостояниеПрекращенияРассмотрения.Сотрудник.Представление()} отклонил кандидата. 
                Причина отклонения: %{СостояниеПрекращенияРассмотрения.ПричинаПредставление}"
                если не СостояниеПрекращенияРассмотрения.Комментарий.Пусто()
                   ДополнительныеДанныеФормы.ПричинаПрекращенияРассмотрения = ДополнительныеДанныеФормы.ПричинаПрекращенияРассмотрения + 
                   "
                   Комментарий: %{СостояниеПрекращенияРассмотрения.Комментарий}" 
                ;
            иначе
               ДополнительныеДанныеФормы.ПричинаПрекращенияРассмотрения = "Рассмотрение прекращено по причине: %{СостояниеПрекращенияРассмотрения.ПричинаПредставление}" 
            ;
        когда ВакансияЗакрыта
            ДополнительныеДанныеФормы.ПричинаПрекращенияРассмотрения = "Вакансия закрыта"
        ;
    ;
    
    знч ТекущееФизическоеЛицо = ПользователиСистемы.ТекущееФизическоеЛицо()
    если ТекущееФизическоеЛицо != Неопределено
        ДополнительныеДанныеФормы.ПолномочиеСогласованияКандидатов 
            = ОрганизационнаяСтруктура.ВсеРуководителиКомпании().Содержит(ТекущееФизическоеЛицо)
    ;
        
    ДополнительныеДанныеФормы.ПолномочиеОтклоненияКандидата = КонтрольДоступа.ЕстьПравоНаПолномочие(ПодборПерсонала.ПолномочиеИзменениеРассматриваемогоКандидата())
    
    ДополнительныеДанныеФормы.СогласованиеДоступно = ДополнительныеДанныеФормы.ПолномочиеСогласованияКандидатов
        и ДополнительныеДанныеФормы.Статус == СтатусыВоронки.СтатусНаправленЗаказчику()
        и ПричиныПрекращенияРассмотрения.Получить(Ссылка) == Неопределено
        
    ДополнительныеДанныеФормы.ВозобновлениеРассмотренияДоступно 
        = (КонтрольДоступа.ЕстьПравоНаПолномочие(ПодборПерсонала.ПолномочиеУправлениеПодборомПерсонала())
            или КонтрольДоступа.ЕстьПравоНаПолномочие(ПодборПерсонала.ПолномочиеИзменениеРассматриваемогоКандидата()))
            и ПричиныПрекращенияРассмотрения.Получить(Ссылка) != Неопределено
    
    возврат ДополнительныеДанныеФормы
;

метод ПрочитатьДополнительныеДанныеФормы()
    ДополнительныеДанныеФормы = ДополнительныеДанныеФормы(КлючОбъекта)
;

@Обработчик
метод ПослеЧтения()
    если ЭтоНовый()
        РежимПросмотра = Ложь
    иначе
        РежимПросмотра = Истина
        ПрочитатьДополнительныеДанныеФормы()
    ;
    знч СтатусыВоронки = СтатусыВоронки.ДоступныеПредставления()

    Компоненты.СведенияОКандидате.ДоступныеЗначенияСтатуса = СтатусыВоронки
    Компоненты.СведенияОКандидате.УстановитьКандидата(Объект.Кандидат) 
    Компоненты.ТестыАнкетыРеспондента.Респондент = Объект.Ссылка
    Компоненты.СписокСобеседований.Кандидаты = [КлючОбъекта]
    ИнтерфейсныеКомпоненты.ИнициализироватьПодчиненныеКомпоненты(Компоненты)
    СтатусРассматриваемогоКандидатаПослеИзменения.ПодключитьОбработчик(&СтатусРассматриваемогоКандидатаПослеИзменения)
    КандидатПослеИзменения.ПодключитьОбработчик(&КандидатПослеИзменения)
;


@НаСервере @ДоступноСКлиента
статический метод ЗаписатьДополнительныеДанныеФормы(Ссылка: РассматриваемыеКандидаты.Ссылка, ДополнительныеДанныеФормы: ДополнительныеДанныеФормы)
    СтатусыРассматриваемыхКандидатов.Установить(Ссылка, ДополнительныеДанныеФормы.Статус)
;

метод СтатусРассматриваемогоКандидатаПослеИзменения(РассматриваемыйКандидат: РассматриваемыеКандидаты.Ссылка?)
    если Объект.Ссылка == РассматриваемыйКандидат
        Прочитать()
    ;    
;

метод КандидатПослеИзменения(ИзмененныйКандидат: Кандидаты.Ссылка)
    если ИзмененныйКандидат != Объект.Кандидат
        возврат
    ;
    Прочитать()
;

@Обработчик
метод ПередЗаписьюОбъекта()
    ЗаписатьДополнительныеДанныеФормы(КлючОбъекта, ДополнительныеДанныеФормы)
;

метод СведенияОКандидатеПриИзмененииСтатуса(Источник: СведенияОКандидате, Событие: СобытиеПриИзменении<Представляемое?>)
    если Событие.НовоеЗначение != Неопределено
        ДополнительныеДанныеФормы.Статус = Событие.НовоеЗначение как СтатусыВоронки.Ссылка
        СтатусыРассматриваемыхКандидатов.Установить(КлючОбъекта, ДополнительныеДанныеФормы.Статус)
        СтатусРассматриваемогоКандидатаПослеИзменения.Оповестить(КлючОбъекта)
    ;
;

метод СведенияОКандидатеПриСохранении(Источник: СведенияОКандидате, Событие: СобытиеКомпонента)
    Записать()
;

метод ВидимостьКнопкиСогласовать(): Булево
    возврат ДополнительныеДанныеФормы.ПолномочиеСогласованияКандидатов
        и СтатусыРассматриваемыхКандидатов.Получить(КлючОбъекта) == СтатусыВоронки.СтатусНаправленЗаказчику()
;

метод СогласоватьОбработчик(Команда: ОбычнаяКоманда)
    СтатусыРассматриваемыхКандидатов.УстановитьПоТриггеру(КлючОбъекта, ТриггерыПодбораПерсонала.ПриСогласованииЗаказчиком)
    ИнтерфейсныеКомпоненты.ЗакрытьЗамещающуюФорму(этот)
;

метод ВидимостьКнопкиОтклонить(): Булево
    возврат ДополнительныеДанныеФормы.ПолномочиеОтклоненияКандидата и не ДополнительныеДанныеФормы.РассмотрениеПрекращено  
;

метод Отклонить()
    знч Результат = ФормаВыбораПричинПрекращенияРассмотрения.Выбрать(ВидыПрекращенияРассмотрения.ОтклонениеКандидата)
    если Результат != Неопределено
        СтатусыРассматриваемыхКандидатов.УстановитьПоТриггеру(КлючОбъекта, ТриггерыПодбораПерсонала.ПриОтклоненииЗаказчиком)
        ПричиныПрекращенияРассмотрения.Установить(
            Кандидат = КлючОбъекта, 
            Вид = Результат.Вид, 
            Причина = Результат.Причина,
            Комментарий = Результат.Комментарий,
            Сотрудник = КонтрольДоступа.ПараметрыСеанса().ФизлицоТекущегоПользователя)
        СтатусРассматриваемогоКандидатаПослеИзменения.Оповестить(КлючОбъекта)
    ;
;

метод ОтклонитьОбработчик(Команда: ОбычнаяКоманда)
    Отклонить()
;

метод РедактироватьОбработчик(Команда: ОбычнаяКоманда)
    знч Форма = новый КандидатыФормаОбъекта(КлючОбъекта = Объект.Кандидат, РассматриваемыйКандидат = КлючОбъекта)
    ИнтерфейсныеКомпоненты.ОткрытьЗамещающуюФорму(этот, Форма)
;

@НаСервере @ДоступноСКлиента
статический метод ВернутьКРассмотрению(Кандидат: РассматриваемыеКандидаты.Ссылка, Статус: СтатусыВоронки.Ссылка)
    ПричиныПрекращенияРассмотрения.Очистить(Кандидат)
    СтатусыРассматриваемыхКандидатов.Установить(Кандидат, Статус)
    ОбменДанными.ЗарегистрироватьОтправляемыйДокумент(Кандидат, Истина)
    РегистрацияИзменений.ЗарегистрироватьИзменение(Кандидат, Неопределено, ХарактерыИзменений.Изменение)
;

метод ВернутьКРассмотрению(Команда: ОбычнаяКоманда)
    знч Статус = ФормаВыбораСтатуса.ОткрытьВМодальномОкне(
        Заголовок = "Возобновление работы с кандидатом",
        ЗаголовокПоля = "Новый статус кандидата",
        ЗаголовокКнопкиЗаписатьИЗакрыть = "Возобновить",
        ОжидатьЗакрытия = Истина,
        ЗначениеПоУмолчанию = ДополнительныеДанныеФормы.Статус,
        ДопустимыеТипы = {Тип<Неопределено>, Тип<СтатусыВоронки.Ссылка>})
    если Статус != Неопределено
        ВернутьКРассмотрению(КлючОбъекта, Статус как СтатусыВоронки.Ссылка)
        Прочитать()
        СтатусРассматриваемогоКандидатаПослеИзменения.Оповестить(КлючОбъекта)
    ;
;