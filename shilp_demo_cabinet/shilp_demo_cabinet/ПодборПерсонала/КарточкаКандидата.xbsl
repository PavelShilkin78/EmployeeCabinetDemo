импорт ИнтерфейсныеКомпонентыСтандартные
импорт ОбщиеСтандартные
импорт УниверсальныеМеханизмы
импорт ОбменДанными
импорт КонтрольДоступа
импорт ФизическиеЛица

@ВПроекте
@Реализация
метод Заголовок(): Строка
    возврат ЭтоНовый() ? "Новый кандидат" : Объект.Наименование
;

@ВПроекте
@Реализация
метод КомандыСоздания(): Команда|ГруппаКомандногоИнтерфейса<Команда>|Неопределено
    возврат Неопределено
;

@ВПроекте
@Реализация
метод ДополнительныеКоманды(): ФрагментКомандногоИнтерфейса<Команда>?
    возврат Неопределено
;

@ВПроекте
@Реализация
метод ОсновнаяКоманда(): Команда?
    возврат Неопределено
;

@ВПроекте
@Реализация
метод ОбычныеКоманды(): ФрагментКомандногоИнтерфейса<Команда>?
    возврат Неопределено
;

метод РедактироватьОбработчик(Команда: ОбычнаяКоманда)
    знч Форма = новый КандидатыФормаОбъекта(КлючОбъекта = КлючОбъекта)
    ИнтерфейсныеКомпоненты.ОткрытьЗамещающуюФорму(этот, Форма)
;

@ВПодсистеме
@НаКлиенте @НаСервере
структура СтрокаТаблицыРассматриваемыхКандидатов
    обз знч РассматриваемыйКандидат: РассматриваемыеКандидаты.Ссылка
    обз знч ПредставлениеВакансии: Строка
    обз знч ПредставлениеЗаказчика: Строка
    обз знч ПредставлениеРекрутера: Строка
    обз знч Статус: Строка
    обз знч ДоступностьПодробнее: Булево
    обз знч ВидПрекращенияРассмотрения: ВидыПрекращенияРассмотрения?
;


@ВПодсистеме
@НаКлиенте @НаСервере
структура ДополнительныеДанныеФормы
    пер Статус: СтатусыКандидата
    пер ПрисоединенныеФайлы: ПрисоединенныеФайлы
    пер ТолькоЧтение: Булево
    пер ДанныеТаблицыРассматриваемыхКандидатов: Массив<СтрокаТаблицыРассматриваемыхКандидатов>
    пер КоличествоВакансий: Число
;

@НаСервере
конст НЕ_УКАЗАН = "<не указан>"

@НаСервере @ДоступноСКлиента
статический метод ДанныеТаблицыРассматриваемыхКандидатов(Ссылка: Кандидаты.Ссылка): ЧитаемыйМассив<СтрокаТаблицыРассматриваемыхКандидатов>
    
    знч ТекущееФизическоеЛицо = ПользователиСистемы.ТекущееФизическоеЛицо()
    знч ПолномочиеУправлениеПодборомПерсонала = КонтрольДоступа.ЕстьПравоНаПолномочие(ПодборПерсонала.ПолномочиеУправлениеПодборомПерсонала())
    исп КонтекстДоступа.Привилегированный()
    
    исп Результат = Запрос{
        выбрать
            РассматриваемыеКандидаты.Ссылка как РассматриваемыйКандидат,
            Вакансии.Наименование как ПредставлениеВакансии,
            Вакансии.ЗаявкаНаПодбор.Инициатор.ЗаменитьNull(Неопределено) как Заказчик,
            Вакансии.Рекрутер как Рекрутер,
            СтатусыРассматриваемыхКандидатов.Статус.Представление.ЗаменитьNull("Статус не указан") как Статус,
            выбор 
                когда %ПолномочиеУправлениеПодборомПерсонала == Истина
                    тогда Истина
                когда Вакансии.Рекрутер == %ТекущееФизическоеЛицо
                    тогда Истина
                иначе
                    Ложь    
            конец как ДоступностьПодробнее,
            ПричиныПрекращенияРассмотрения.Вид.ЗаменитьNull(Неопределено) как ВидПрекращенияРассмотрения
        из
            Вакансии как Вакансии
            внутреннее соединение РассматриваемыеКандидаты как РассматриваемыеКандидаты
                по Вакансии.Ссылка == РассматриваемыеКандидаты.Вакансия
                и РассматриваемыеКандидаты.Кандидат == %Ссылка
                    левое соединение СтатусыРассматриваемыхКандидатов.СрезПоследних как СтатусыРассматриваемыхКандидатов
                        по РассматриваемыеКандидаты.Ссылка == СтатусыРассматриваемыхКандидатов.Кандидат
                    левое соединение ПричиныПрекращенияРассмотрения как ПричиныПрекращенияРассмотрения
                        по РассматриваемыеКандидаты.Ссылка == ПричиныПрекращенияРассмотрения.Кандидат
    }.Выполнить()
    
    знч Данные = новый Массив<СтрокаТаблицыРассматриваемыхКандидатов>()
    для Элемент из Результат
        Данные.Добавить(новый СтрокаТаблицыРассматриваемыхКандидатов(
            Элемент.РассматриваемыйКандидат,
            Элемент.ПредставлениеВакансии,
            ПредставлениеИмениФизлица(Элемент.Заказчик, НЕ_УКАЗАН),
            ПредставлениеИмениФизлица(Элемент.Рекрутер, НЕ_УКАЗАН),
            Элемент.Статус,
            Элемент.ДоступностьПодробнее,
            Элемент.ВидПрекращенияРассмотрения
        ))
    ;
    возврат Данные
;

@НаСервере @ДоступноСКлиента
статический метод ПредставлениеИмениФизлица(Физлицо: ФизическиеЛица.Ссылка?, ПредставлениеНеуказанного: Строка): Строка
    возврат Физлицо != Неопределено ? ФизЛица.ПредставлениеИмени(Физлицо, ФизЛица.ВариантПредставленияИмени.ФамилияИОРаздельно) : ПредставлениеНеуказанного
;

@НаСервере @ДоступноСКлиента
статический метод ДополнительныеДанныеФормы(Ссылка: Кандидаты.Ссылка) : ДополнительныеДанныеФормы
    знч ДополнительныеДанныеФормы = новый ДополнительныеДанныеФормы()
    ДополнительныеДанныеФормы.Статус = СтатусыКандидатов.Получить(Ссылка)
    ДополнительныеДанныеФормы.ПрисоединенныеФайлы = ПрисоединенныеФайлыМенеджер.ПрисоединенныеФайлы(Ссылка)
    ДополнительныеДанныеФормы.ТолькоЧтение = не КонтрольДоступа.ЕстьПравоНаПолномочие(ПодборПерсонала.ПолномочиеИзменениеКандидата())
    ДополнительныеДанныеФормы.ДанныеТаблицыРассматриваемыхКандидатов.ДобавитьВсе(ДанныеТаблицыРассматриваемыхКандидатов(Ссылка))
    для Строка из ДополнительныеДанныеФормы.ДанныеТаблицыРассматриваемыхКандидатов
        если Строка.ВидПрекращенияРассмотрения == Неопределено
            ДополнительныеДанныеФормы.КоличествоВакансий += 1
        ;
    ;
    возврат ДополнительныеДанныеФормы
;

метод ЗаполнитьДополнительныеДанныеФормы()
    ДополнительныеДанныеФормы = ДополнительныеДанныеФормы(Объект.Ссылка)
    ТолькоЧтение = ДополнительныеДанныеФормы.ТолькоЧтение
;

метод ЗаполнитьДополнительныеКомпоненты()
    знч БазовыеКомпоненты: Массив<Страница>
    БазовыеКомпоненты.ДобавитьВсе(Компоненты.Шаблон.ДополнительныйРаздел.ПодМассив(0,2))
    
    Компоненты.Шаблон.ДополнительныйРаздел.Очистить()
    Компоненты.Шаблон.ДополнительныйРаздел.ДобавитьВсе(БазовыеКомпоненты)
    
    пер ДополнительныеКомпоненты: Массив<ПодборПерсонала.ОписаниеДополнительногоКомпонента>
    для Сервис из ДополнительныеКомпонентыКандидата.ПолучитьСервисы()
        ДополнительныеКомпоненты.ДобавитьВсе(Сервис.ДополнительныеКомпоненты(этот, КлючОбъекта))
    ;
    ДополнительныеКомпоненты = ДополнительныеКомпоненты.СортироватьПо(Элемент-> Элемент.Порядок)
    
    для ОписаниеКомпонента из ДополнительныеКомпоненты
        Компоненты.Шаблон.ДополнительныйРаздел.Добавить(
            новый Страница(
                Заголовок = ОписаниеКомпонента.Заголовок,
                Содержимое = ОписаниеКомпонента.Содержимое))
    ;
;

метод КандидатПослеИзменения(Ссылка: Кандидаты.Ссылка)
    если КлючОбъекта == Ссылка
        Прочитать()
    ;
;

метод СтатусРассматриваемогоКандидатаПослеИзменения(РассматриваемыйКандидат: РассматриваемыеКандидаты.Ссылка?)
    если не ДополнительныеДанныеФормы.ДанныеТаблицыРассматриваемыхКандидатов
            .Фильтровать(Элемент -> Элемент.РассматриваемыйКандидат == РассматриваемыйКандидат).Пусто()
        ДополнительныеДанныеФормы.ДанныеТаблицыРассматриваемыхКандидатов.Очистить()
        ДополнительныеДанныеФормы.ДанныеТаблицыРассматриваемыхКандидатов.ДобавитьВсе(ДанныеТаблицыРассматриваемыхКандидатов(КлючОбъекта))
        Прочитать()
    ;    
;

@Обработчик
метод ПослеЧтения()
    если ЭтоНовый()
        РежимПросмотра = Ложь
        ДополнительныеДанныеФормы.Статус = СтатусыКандидата.Зарегистрирован
    иначе
        РежимПросмотра = Истина
        ЗаполнитьДополнительныеДанныеФормы()
    ;
    Компоненты.СведенияОКандидате.ДоступныеЗначенияСтатуса.Очистить()
    для Статус из СтатусыКандидата.Элементы()
       Компоненты.СведенияОКандидате.ДоступныеЗначенияСтатуса.Добавить(Статус) 
    ;
    если КлючОбъекта != Неопределено
        Компоненты.СведенияОКандидате.УстановитьКандидата(КлючОбъекта)
    ;
    
    КандидатПослеИзменения.ПодключитьОбработчик(&КандидатПослеИзменения)
    СтатусРассматриваемогоКандидатаПослеИзменения.ПодключитьОбработчик(&СтатусРассматриваемогоКандидатаПослеИзменения)
;

@НаСервере @ДоступноСКлиента
статический метод ЗаписатьДополнительныеДанныеФормы(Ссылка: Кандидаты.Ссылка, ДополнительныеДанныеФормы: ДополнительныеДанныеФормы)
    СтатусыКандидатов.Установить(Ссылка, ДополнительныеДанныеФормы.Статус)
;

@Обработчик
метод ПередЗаписьюОбъекта()
    ЗаписатьДополнительныеДанныеФормы(КлючОбъекта, ДополнительныеДанныеФормы)
;

метод ПриИзмененииСтатуса(Источник: СведенияОКандидате, Событие: СобытиеПриИзменении<Представляемое?>)
    ДополнительныеДанныеФормы.Статус = Событие.НовоеЗначение как СтатусыКандидата
    СтатусыКандидатов.Установить(КлючОбъекта, ДополнительныеДанныеФормы.Статус)
;

метод ДобавитьВВакансиюОбработчик(Команда: ОбычнаяКоманда)
    Кандидаты.ДобавитьВВакансию({КлючОбъекта!})
    ЗаполнитьДополнительныеДанныеФормы()
;

метод ПрисоединенныеФайлыЗавершенаЗагрузкаФайлов(Источник: ПрисоединенныеФайлыКомпонент, Событие: СобытиеКомпонента)
    СохранитьПрисоединенныеФайлы(ДополнительныеДанныеФормы.ПрисоединенныеФайлы)
    ОбновитьСписокФайлов()
;

метод ПрисоединенныеФайлыУдалить(Источник: ПрисоединенныеФайлыКомпонент, Событие: СобытиеСДанными<ПрисоединенныйФайл>)
    СохранитьПрисоединенныеФайлы(ДополнительныеДанныеФормы.ПрисоединенныеФайлы)
    ДополнительныеДанныеФормы.ПрисоединенныеФайлы.Файлы.Удалить(Событие.Данные)
;

метод ОбновитьСписокФайлов()
    ДополнительныеДанныеФормы.ПрисоединенныеФайлы = ДополнительныеДанныеФормы(КлючОбъекта).ПрисоединенныеФайлы
;

@НаСервере @ДоступноСКлиента
статический метод СохранитьПрисоединенныеФайлы(ПрисоединенныеФайлы: ПрисоединенныеФайлы)
    ПрисоединенныеФайлыМенеджер.Записать(ПрисоединенныеФайлы)
    ОбменДанными.ЗарегистрироватьОтправляемыйДокумент(ПрисоединенныеФайлы.Владелец как Кандидаты.Ссылка, Истина)
    РегистрацияИзменений.ЗарегистрироватьИзменение(ПрисоединенныеФайлы.Владелец как Кандидаты.Ссылка, Неопределено)
;

метод ПодзаголовокТаблицыРассматриваемыхКандидатов(): Строка
    если ДополнительныеДанныеФормы.КоличествоВакансий == 0
        возврат "Кандидат не рассматривается ни на одну вакансию"
    иначе
        знч ПредставлениеЧисла = МенеджерСтрок.ФормаПредметаИсчисления(ДополнительныеДанныеФормы.КоличествоВакансий, "вакансию", "вакансии", "вакансий", "вакансию")
        возврат "Кандидат рассматривается на %{ДополнительныеДанныеФормы.КоличествоВакансий} - %ПредставлениеЧисла"
    ;
;

метод ВакансииЗаголовок(ДанныеСтроки: КарточкаКандидата.СтрокаТаблицыРассматриваемыхКандидатов): Строка
    возврат ДанныеСтроки.ПредставлениеВакансии
;

метод ВакансииОписаниеСтроки(ДанныеСтроки: КарточкаКандидата.СтрокаТаблицыРассматриваемыхКандидатов): Строка
    возврат 
    "Рекрутер: %{ДанныеСтроки.ПредставлениеРекрутера}
    Заказчик: %{ДанныеСтроки.ПредставлениеЗаказчика}"
;

метод ЗаголовокСтатус(ДанныеСтроки: КарточкаКандидата.СтрокаТаблицыРассматриваемыхКандидатов): Строка
    если ДанныеСтроки.ВидПрекращенияРассмотрения == Неопределено
        возврат ДанныеСтроки.Статус
    иначе
        возврат ДанныеСтроки.ВидПрекращенияРассмотрения.Представление()
    ; 
;

метод ВакансииПриНажатииСтроки(Источник: Список<ИсточникДанныхМассив<СтрокаТаблицыРассматриваемыхКандидатов>>, Событие: СобытиеСДанными<СтрокаСписка<СтрокаТаблицыРассматриваемыхКандидатов>>)
    знч ДанныеСтроки = Событие.Данные.ДанныеСтроки
    если ДанныеСтроки.ДоступностьПодробнее
        КарточкаРассматриваемогоКандидата.ОткрытьЗамещающуюФорму(ДанныеСтроки.РассматриваемыйКандидат, этот)
    ;
;

метод ВидимостьВакансииКандидата(): Булево
    возврат КлючОбъекта != Неопределено
;