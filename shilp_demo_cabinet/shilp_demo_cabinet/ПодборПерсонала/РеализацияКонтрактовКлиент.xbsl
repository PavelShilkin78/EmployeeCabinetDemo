импорт ОбщиеСтандартные
импорт СтандартноеПриложение
импорт УниверсальныеМеханизмы::Взаимодействия
импорт ИнтерфейсныеКомпонентыСтандартные
импорт Отчеты
импорт Компания

// Контракт ОсновнойИнтерфейсПоставщик
@ВПроекте
@Реализация
метод РазделыПриложения(): ЧитаемаяКоллекция<ОсновнойИнтерфейс.ОписаниеРаздела>
    знч Разделы: Массив<ОсновнойИнтерфейс.ОписаниеРаздела>
    если ПодборПерсонала.ИспользованиеРаздела()
        Разделы.Добавить(ОписаниеРазделаПодбор())
    ;
    возврат Разделы
;

@ВПроекте
@Реализация
метод Виджеты(): ЧитаемаяКоллекция<ОсновнойИнтерфейс.ОписаниеВиджета>
    знч Виджеты: Массив<ОсновнойИнтерфейс.ОписаниеВиджета>
    если ПодборПерсонала.ИспользованиеРаздела()
        Виджеты.Добавить(ОписаниеВиджетаПодборПерсонала())
    ;
    возврат Виджеты
;

@ВПроекте
@Реализация
метод КомандыВсеФункции(): ЧитаемаяКоллекция<ОсновнойИнтерфейс.ОписательКомандыВсеФункции>
    знч Группа = новый ОсновнойИнтерфейс.ОписательГруппыКомандВсеФункции(ПодборПерсонала.ИМЯ_РАЗДЕЛА_ПОДБОР_ПЕРСОНАЛА, 15)
    возврат [
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Вакансии",
            СоздательФормыСписка = () -> новый Вакансии.АвтоматическаяФормаСписка(),
            СоздательФормыОбъекта = () -> новый Вакансии.АвтоматическаяФормаОбъекта()
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Звонки",
            СоздательФормыСписка = () -> новый Звонки.АвтоматическаяФормаСписка(),
            СоздательФормыОбъекта = () -> новый Звонки.АвтоматическаяФормаОбъекта()
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Кандидаты",
            СоздательФормыСписка = () -> новый Кандидаты.АвтоматическаяФормаСписка(),
            СоздательФормыОбъекта = () -> новый Кандидаты.АвтоматическаяФормаОбъекта()
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Ключевые навыки",
            СоздательФормыСписка = () -> новый КлючевыеНавыки.АвтоматическаяФормаСписка(),
            СоздательФормыОбъекта = () -> новый КлючевыеНавыки.АвтоматическаяФормаОбъекта()
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Компенсационные пакеты",
            СоздательФормыСписка = () -> новый КомпенсационныеПакеты.АвтоматическаяФормаСписка(),
            СоздательФормыОбъекта = () -> новый КомпенсационныеПакеты.АвтоматическаяФормаОбъекта()
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Причины отказа",
            СоздательФормыСписка = () -> новый ПричиныОтказа.АвтоматическаяФормаСписка(),
            СоздательФормыОбъекта = () -> новый ПричиныОтказа.АвтоматическаяФормаОбъекта()
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Причины отклонения",
            СоздательФормыСписка = () -> новый ПричиныОтклонения.АвтоматическаяФормаСписка(),
            СоздательФормыОбъекта = () -> новый ПричиныОтклонения.АвтоматическаяФормаОбъекта()
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Рассматриваемые кандидаты",
            СоздательФормыСписка = () -> новый РассматриваемыеКандидаты.АвтоматическаяФормаСписка(),
            СоздательФормыОбъекта = () -> новый РассматриваемыеКандидаты.АвтоматическаяФормаОбъекта()
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Статусы воронки",
            СоздательФормыСписка = () -> новый СтатусыВоронки.АвтоматическаяФормаСписка(),
            СоздательФормыОбъекта = () -> новый СтатусыВоронки.АвтоматическаяФормаОбъекта()
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Способы трудоустройства",
            СоздательФормыСписка = () -> новый СпособыТрудоустройства.АвтоматическаяФормаСписка(),
            СоздательФормыОбъекта = () -> новый СпособыТрудоустройства.АвтоматическаяФормаОбъекта()
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Шаблоны вакансий",
            СоздательФормыСписка = () -> новый ШаблоныВакансий.АвтоматическаяФормаСписка(),
            СоздательФормыОбъекта = () -> новый ШаблоныВакансий.АвтоматическаяФормаОбъекта()
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Заявки на подбор",
            СоздательФормыСписка = () -> новый ЗаявкиНаПодбор.АвтоматическаяФормаСписка(),
            СоздательФормыОбъекта = () -> новый ЗаявкиНаПодбор.АвтоматическаяФормаОбъекта()
            ), 
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Отклики",
            СоздательФормыСписка = () -> новый Отклики.АвтоматическаяФормаСписка(),
            СоздательФормыОбъекта = () -> новый Отклики.АвтоматическаяФормаОбъекта()
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Материалы кандидатов",
            СоздательФормыСписка = () -> новый МатериалыКандидатов.АвтоматическаяФормаСписка(),
            СоздательФормыОбъекта = () -> новый МатериалыКандидатов.АвтоматическаяФормаОбъекта()
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Собеседования",
            СоздательФормыСписка = () -> новый Собеседования.АвтоматическаяФормаСписка(),
            СоздательФормыОбъекта = () -> новый Собеседования.АвтоматическаяФормаОбъекта()
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Срочность вакансии",
            СоздательФормыСписка = () -> новый СрочностьВакансии.АвтоматическаяФормаСписка(),
            СоздательФормыОбъекта = () -> новый СрочностьВакансииФормаОбъекта()
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Оценки участников собеседования",
            СоздательФормыСписка = () -> новый ОценкиУчастниковСобеседования.АвтоматическаяФормаСписка(),
            СоздательФормыОбъекта = () -> новый ОценкиУчастниковСобеседования.АвтоматическаяФормаОбъекта()
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Статусы заявок на подбор",
            СоздательФормыСписка = () -> новый СтатусыЗаявокНаПодбор.АвтоматическаяФормаСписка(),
            СоздательФормыОбъекта = () -> новый СтатусыЗаявокНаПодбор.АвтоматическаяФормаОбъекта()
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Статусы кандидатов",
            СоздательФормыСписка = () -> новый СтатусыКандидатов.АвтоматическаяФормаСписка(),
            СоздательФормыОбъекта = () -> новый СтатусыКандидатов.АвтоматическаяФормаОбъекта()
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Статусы откликов",
            СоздательФормыСписка = () -> новый СтатусыОткликов.АвтоматическаяФормаСписка(),
            СоздательФормыОбъекта = () -> новый СтатусыОткликов.АвтоматическаяФормаОбъекта()
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Статусы рассматриваемых кандидатов",
            СоздательФормыСписка = () -> новый СтатусыРассматриваемыхКандидатов.АвтоматическаяФормаСписка(),
            СоздательФормыОбъекта = () -> новый СтатусыРассматриваемыхКандидатов.АвтоматическаяФормаОбъекта()
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Офферы",
            СоздательФормыСписка = () -> новый Офферы.АвтоматическаяФормаСписка(),
            СоздательФормыОбъекта = () -> новый Офферы.АвтоматическаяФормаОбъекта()
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Статусы оффера",
            СоздательФормыСписка = () -> новый СтатусыОффера.АвтоматическаяФормаСписка(),
            СоздательФормыОбъекта = () -> новый СтатусыОффера.АвтоматическаяФормаОбъекта()
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Физические лица кандидатов",
            СоздательФормыСписка = () -> новый ФизическиеЛицаКандидатов.АвтоматическаяФормаСписка(),
            СоздательФормыОбъекта = () -> новый ФизическиеЛицаКандидатов.АвтоматическаяФормаОбъекта()
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Комментарии",
            СоздательФормыСписка = () -> новый Комментарии.АвтоматическаяФормаСписка(),
            СоздательФормыОбъекта = () -> новый Комментарии.АвтоматическаяФормаОбъекта()
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Статусы вакансии",
            СоздательФормыСписка = () -> новый СтатусыВакансии.АвтоматическаяФормаСписка(),
            СоздательФормыОбъекта = () -> новый СтатусыВакансии.АвтоматическаяФормаОбъекта()
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Места проведения собеседований",
            СоздательФормыСписка = () -> новый МестаПроведенияСобеседований.АвтоматическаяФормаСписка(),
            СоздательФормыОбъекта = () -> новый МестаПроведенияСобеседований.АвтоматическаяФормаОбъекта()
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Настройки подбора персонала",
            СоздательФормыСписка = () -> новый НастройкиПодбораПерсонала.АвтоматическаяФормаСписка(),
            СоздательФормыОбъекта = () -> новый НастройкиПодбораПерсонала.АвтоматическаяФормаОбъекта()
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Опубликованные вакансии",
            СоздательФормыСписка = () -> новый ОпубликованныеВакансии.АвтоматическаяФормаСписка(),
            СоздательФормыОбъекта = () -> новый ОпубликованныеВакансии.АвтоматическаяФормаОбъекта()
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Причины прекращения рассмотрения",
            СоздательФормыСписка = () -> новый ПричиныПрекращенияРассмотрения.АвтоматическаяФормаСписка(),
            СоздательФормыОбъекта = () -> новый ПричиныПрекращенияРассмотрения.АвтоматическаяФормаОбъекта()
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Используемая функциональность (Подбор персонала)",
            СоздательФормыСписка = () -> новый ИспользуемаяФункциональность.АвтоматическаяФормаСписка(),
            СоздательФормыОбъекта = () -> новый ИспользуемаяФункциональность.АвтоматическаяФормаОбъекта()
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Согласия на обработку ПДн",
            СоздательФормыСписка = метод()-> возврат новый СогласияНаОбработкуПдн.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый СогласияНаОбработкуПдн.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Настройки обработки персональных данных",
            СоздательФормыСписка = метод()-> возврат новый НастройкиПерсональныхДанных.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый НастройкиПерсональныхДанных.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Данные воронки подбора",
            СоздательФормыСписка = () -> новый ДанныеВоронкиПодбора.АвтоматическаяФормаСписка(),
            СоздательФормыОбъекта = () -> новый ДанныеВоронкиПодбора.АвтоматическаяФормаОбъекта()
        )
    ]
;

@ВПроекте
@Реализация
метод ДополнительныеКоманды(): ЧитаемыйМассив<Команда>
    возврат []
;

@ВПроекте
@Реализация
метод КомандыПанелиДействий(): ЧитаемыйМассив<Команда>
    возврат []
;

@ВПроекте
@Реализация
метод ДополнительныеКомандыПанелиГлавное(): ЧитаемыйМассив<Команда>
    возврат []
;

// Конец ОсновнойИнтерфейсПоставщик

// Контракт ВзаимодействиеПоставщик

@ВПроекте
@Реализация
метод КомандыОткрытияВзаимодействия(): Соответствие<Тип, (Взаимодействие.Ссылка) -> Булево>
    возврат {Тип<Звонки.Ссылка>: &ОткрытьФормуЗвонка}
;
@ВПроекте
@Реализация
метод КомандыДобавленияВзаимодействия(Владелец: ВладелецВзаимодействия.Ссылка): ЧитаемоеСоответствие<Тип, Команда>
    возврат {
        Тип<Звонки.Ссылка>: новый ОбычнаяКоманда(
            Обработчик = Команда -> ДобавитьЗвонок(Команда, Владелец),
            Представление = "Звонок",
            Изображение = Ресурс{Телефон.svg}.Ссылка
        )
    }
;

@ВПроекте
@Реализация
метод ИконкиВзаимодействий(): Соответствие<Тип, ДвоичныйОбъект.Ссылка>
    возврат {Тип<Звонки.Ссылка>: Ресурс{Телефон.svg}.Ссылка}
;

// Конец ВзаимодействиеПоставщик

// Контракт ОтчетыПоставщик

@ВПроекте
@Реализация
метод ОписаниеРазделаОтчетов(): ОтчетыПоставщик.РазделСОтчетами?
    если не ПодборПерсонала.ИспользованиеРаздела()
        возврат Неопределено
    ;
    знч Руководитель = Компания.ПараметрыСеанса().ТекущийПользовательРуководитель
    знч Параметры = ПодборПерсонала.ПараметрыСеанса()
    знч ОбычныйДоступ = Параметры.ЧтениеВакансии и Параметры.ЧтениеРассматриваемогоКандидата
    знч РасширенныйДоступ = ОбычныйДоступ и Параметры.ЧтениеОтклика
    возврат новый ОтчетыПоставщик.РазделСОтчетами(
        НаименованиеРаздела = ПодборПерсонала.ИМЯ_РАЗДЕЛА_ПОДБОР_ПЕРСОНАЛА,
        Иконка = Ресурс{ФайлКонтур.svg}.Ссылка,
        Отчеты = [
                    новый ОтчетыПоставщик.ОписательОтчета(
                        Наименование = "Эффективность рекрутеров",
                        СоздательФормы = () -> новый ФормаЭффективностьРекрутеров(),
                        ДоступностьОтчета = () ->  РасширенныйДоступ или Руководитель
                    ),
                    новый ОтчетыПоставщик.ОписательОтчета(
                        Наименование = "Время прохождения кандидатов по воронке",
                        СоздательФормы = () -> новый ФормаПрохождениеКандидатовПоВоронке(),
                        ДоступностьОтчета = () -> РасширенныйДоступ или Руководитель
                    ),
                    новый ОтчетыПоставщик.ОписательОтчета(
                        Наименование = "Причины отказа",
                        СоздательФормы = () -> новый ФормаСтатистикаОтказов(),
                        ДоступностьОтчета = () -> ОбычныйДоступ или Руководитель
                    ),
                    новый ОтчетыПоставщик.ОписательОтчета(
                        Наименование = "Время закрытия вакансии",
                        СоздательФормы = () -> новый ФормаВремяЗакрытияВакансии(),
                        ДоступностьОтчета = () -> ОбычныйДоступ или Руководитель
                    )
                ]
        )
;

// Контракт ОтчетыПоставщик
// Контракт ДополнительныеКомпонентыВакансии
@ВПроекте
@Реализация
метод ИндикаторыОбщейИнформации(ФормаВладелец: Форма, Вакансия: Вакансии.Ссылка): Массив<ПодборПерсонала.ДанныеИндикатора>
    
    знч ДанныеИндикаторов: Массив<ПодборПерсонала.ДанныеИндикатора>
    
    знч КоличествоОткликов = Отклики.ОткликиНаВакансии([Вакансия]).Размер()
    ДанныеИндикаторов.Добавить(
        новый ПодборПерсонала.ДанныеИндикатора(
            Количество = КоличествоОткликов,
            Пояснение = "Новые отклики",
            Коннотация =   КоличествоОткликов == 0 ? ОценкаИнформации.Отрицательная : ОценкаИнформации.Положительная,
            Порядок = 10))
    
    знч КоличествоДнейДоЗакрытияВакансии = Вакансии.КоличествоДнейДоЗакрытияВакансии(Вакансия)
    если КоличествоДнейДоЗакрытияВакансии != Неопределено
        ДанныеИндикаторов.Добавить(
        новый ПодборПерсонала.ДанныеИндикатора(
            Количество = МенеджерЧисел.Модуль(КоличествоДнейДоЗакрытияВакансии),
            Пояснение = КоличествоДнейДоЗакрытияВакансии < 0 ? "Дней назад истек срок закрытия вакансии" :"Осталось дней до закрытия",
            Коннотация = КоличествоДнейДоЗакрытияВакансии < 7 ? ОценкаИнформации.Отрицательная : ОценкаИнформации.Положительная,
            Порядок = 30))
    ;
        
    возврат ДанныеИндикаторов
;

@ВПроекте
@Реализация
метод КомпонентыОбщейИнформации(ФормаВладелец: Форма, Вакансия: Вакансии.Ссылка): Массив<ПодборПерсонала.ОписаниеДополнительногоКомпонента>
    возврат []
;

@ВПроекте
@Реализация
метод Страницы(ФормаВладелец: ЗамещаемаяФорма, Вакансия: Вакансии.Ссылка): Массив<ПодборПерсонала.ОписаниеДополнительногоКомпонента>
    знч Страницы: Массив<ПодборПерсонала.ОписаниеДополнительногоКомпонента>
    знч ОписаниеСтраницы = новый ПодборПерсонала.ОписаниеДополнительногоКомпонента(
        Порядок = 90,
        Заголовок = "Кандидаты",
        ЗначениеЗаголовка = РассматриваемыеКандидаты.РассматриваемыеКандидатыВакансии([Вакансия]).Размер(),
        Содержимое = новый ТаблицаРассматриваемыхКандидатов(
            Вакансия = Вакансия,
            ФормаВладелец = ФормаВладелец))
    
    Страницы.Добавить(ОписаниеСтраницы)
    возврат Страницы
;

//Конец ДополнительныеКомпонентыВакансии


@ВПроекте
метод ОткрытьФормуЗвонка(Ссылка: Взаимодействие.Ссылка): Булево
    знч Форма = новый ФормаЗвонка(КлючОбъекта = Ссылка как Звонки.Ссылка)
    Форма.ОткрытьВМодальномОкне(ОжидатьЗакрытия = Истина)
    возврат Истина
;

@ВПроекте
метод ДобавитьЗвонок(Команда: ОбычнаяКоманда, Владелец: ВладелецВзаимодействия.Ссылка)
    знч Форма = новый ФормаЗвонка(Владелец = Владелец)
    Форма.ОткрытьВМодальномОкне(ОжидатьЗакрытия = Истина)
;

@НаКлиенте
метод ОписаниеВиджетаПодборПерсонала(): ОсновнойИнтерфейс.ОписаниеВиджета
    возврат новый ОсновнойИнтерфейс.ОписаниеВиджета(
        Ид = ПодборПерсонала.ИД_РАЗДЕЛА_ПОДБОР_ПЕРСОНАЛА,
        ИдРаздела = ПодборПерсонала.ИД_РАЗДЕЛА_ПОДБОР_ПЕРСОНАЛА,
        Имя = "Подбор персонала",
        Компонент = новый ПодборПерсоналаВиджет()) 
;

метод ОписаниеРазделаПодбор(): ОсновнойИнтерфейс.ОписаниеРаздела
 
    возврат  новый ОсновнойИнтерфейс.ОписаниеРаздела(
        Ид = ПодборПерсонала.ИД_РАЗДЕЛА_ПОДБОР_ПЕРСОНАЛА,
        Имя = "Подбор персонала",
        Пиктограмма = Ресурс{Подбор.svg}.Ссылка,
        ЦветПиктограммы = БиблиотекаЦветов.ВидыЦвета.Болотный,
        НавигационнаяКомандаРаздела = ПодборПерсоналаНавигация,
        ШиринаДляПанелиНавигации = 144)
;