импорт ИнтерфейсныеКомпонентыСтандартные
импорт СтандартноеПриложение
импорт КонтрольДоступа
импорт ФизическиеЛица

@ВПодсистеме
@НаСервере @НаКлиенте
структура ДанныеКомпонента
    знч ДанныеТаблицыЧерновики: Массив<ДанныеТаблицыЗаявок>
    знч ДанныеТаблицыДоработка: Массив<ДанныеТаблицыЗаявок>
    знч ДанныеТаблицыСогласование: Массив<ДанныеТаблицыЗаявок>
    знч ДанныеТаблицыВакансии: Массив<ДанныеВакансий>
;

@НаСервере @ДоступноСКлиента
статический метод ДанныеКомпонента(ФизлицоТекущегоПользователя: ФизическиеЛица.Ссылка): ДанныеКомпонента
    возврат новый ДанныеКомпонента(
        ДанныеТаблицыЧерновики = ДанныеТаблицыЗаявок(ФизлицоТекущегоПользователя, [СтатусыЗаявкиНаПодбор.Черновик]),
        ДанныеТаблицыДоработка = ДанныеТаблицыЗаявок(ФизлицоТекущегоПользователя, [СтатусыЗаявкиНаПодбор.Доработка]),
        ДанныеТаблицыСогласование = ДанныеТаблицыЗаявок(ФизлицоТекущегоПользователя, [СтатусыЗаявкиНаПодбор.Проверка, СтатусыЗаявкиНаПодбор.Согласование]),
        ДанныеТаблицыВакансии = ДанныеТаблицыВакансии(ФизлицоТекущегоПользователя))
;

@НаСервере
статический метод ДанныеТаблицыЗаявок(ФизлицоТекущегоПользователя: ФизическиеЛица.Ссылка, Статусы: Массив<СтатусыЗаявкиНаПодбор>): Массив<ДанныеТаблицыЗаявок>
    исп Результат = Запрос{
        Выбрать
            СтатусыЗаявокНаПодбор.Заявка Как Ключ,
            Выбор 
                Когда ЗаявкиНаПодбор.Должность.Представление.ЗаменитьNull(Неопределено) == Неопределено
                    Тогда "Должность не указана"
                Иначе
                    ЗаявкиНаПодбор.Должность.Представление.ЗаменитьNull(Неопределено)
                Конец Как ДолжностьПредставление,
            ЗаявкиНаПодбор.Подразделение.Представление.ЗаменитьNull(Неопределено) Как ПодразделениеПредставление,
            СтатусыЗаявокНаПодбор.Статус Как Статус
            Породить
                ДанныеТаблицыЗаявок
            Из 
                СтатусыЗаявокНаПодбор Как СтатусыЗаявокНаПодбор
                Внутреннее Соединение ЗаявкиНаПодбор Как ЗаявкиНаПодбор  
                По
                    СтатусыЗаявокНаПодбор.Статус В(%Статусы)
                    И ЗаявкиНаПодбор.Ссылка == СтатусыЗаявокНаПодбор.Заявка
                    и ЗаявкиНаПодбор.Автор == %ФизлицоТекущегоПользователя
    }.Выполнить()
    
    знч Данные: Массив<ДанныеТаблицыЗаявок>
    Данные.ДобавитьВсе(Результат)
    возврат Данные
;

@НаСервере
статический метод ДанныеТаблицыВакансии(ФизлицоТекущегоПользователя: ФизическиеЛица.Ссылка): Массив<ДанныеВакансий>
    исп Результат = Запрос{
            Выбрать 
                Вакансии.Ссылка Как Ссылка,
                Вакансии.Наименование Как Наименование,
                Вакансии.ЗаявкаНаПодбор.КоличествоШтатныхЕдиниц Как КоличествоШтатныхЕдиниц
            Поместить АктивныеВакансии
            Из 
                Вакансии Как Вакансии
                Внутреннее Соединение СтатусыВакансии.СрезПоследних Как СтатусыВакансии 
                По 
                    Вакансии.Ссылка == СтатусыВакансии.Вакансия
                    И СтатусыВакансии.Статус == СтатусВакансии.Открыта
                    И (Вакансии.ЗаявкаНаПодбор.Инициатор == %ФизлицоТекущегоПользователя
                    Или Вакансии.ЗаявкаНаПодбор.Автор == %ФизлицоТекущегоПользователя)
            Индексировать По
                Ссылка
             ;
            выбрать 
                АктивныеВакансии.Ссылка Как Ссылка,
                Количество(СтатусыОффера.Оффер) Как Подобрано
            Поместить КоличествоПодобранных
            Из 
                АктивныеВакансии Как АктивныеВакансии
                Левое Соединение СтатусыОффера Как СтатусыОффера
                По 
                    СтатусыОффера.Оффер.РассматриваемыйКандидат.Вакансия == АктивныеВакансии.Ссылка
                    И СтатусыОффера.Статус == СтатусОффера.Принят
            Сгруппировать По
              АктивныеВакансии.Ссылка
            Индексировать По
                Ссылка
            ;
            Выбрать
                АктивныеВакансии.Ссылка Как Ссылка,
                АктивныеВакансии.Наименование.ЗаменитьNull(Неопределено) Как Заголовок,
                АктивныеВакансии.КоличествоШтатныхЕдиниц.ЗаменитьNull(0) Как КоличествоШтатныхЕдиниц,
                КоличествоПодобранных.Подобрано.ЗаменитьNull(0) Как ПодобраноСотрудников
            Породить
                ДанныеВакансий
            Из
                АктивныеВакансии Как АктивныеВакансии
                левое соединение КоличествоПодобранных Как КоличествоПодобранных
                по 
                    АктивныеВакансии.Ссылка == КоличествоПодобранных.Ссылка
    }.Выполнить()
        
    знч Данные: Массив<ДанныеВакансий>
    Данные.ДобавитьВсе(Результат)
    
    возврат Данные
;

@ВПроекте
@Реализация
метод Обновить()
    ТекущийПользователь = КонтрольДоступа.ПараметрыСеанса().ФизлицоТекущегоПользователя
    если ТекущийПользователь != Неопределено
        ДанныеКомпонента = ДанныеКомпонента(ТекущийПользователь)
    иначе
        ДанныеКомпонента = новый ДанныеКомпонента()
    ;
    
    Компоненты.ТаблицаЧерновики.Видимость = не ДанныеКомпонента.ДанныеТаблицыЧерновики.Пусто()
    Компоненты.ТаблицаДоработка.Видимость = не ДанныеКомпонента.ДанныеТаблицыДоработка.Пусто()
    Компоненты.ТаблицаСогласование.Видимость = не ДанныеКомпонента.ДанныеТаблицыСогласование.Пусто()
    Компоненты.ТаблицаВакансии.Видимость = не ДанныеКомпонента.ДанныеТаблицыВакансии.Пусто()
    
    Компоненты.Заглушка.Видимость =  
        не (Компоненты.ТаблицаЧерновики.Видимость или Компоненты.ТаблицаДоработка.Видимость
            или Компоненты.ТаблицаСогласование.Видимость или  Компоненты.ТаблицаВакансии.Видимость)
;

метод ДанныеТаблицыЧерновики(): Массив<ДанныеТаблицыЗаявок>
    знч Данные: Массив<ДанныеТаблицыЗаявок>
    если (ДанныеКомпонента?.ДанныеТаблицыЧерновики.Размер() ?? 0) > 0
        Данные.ДобавитьВсе(ДанныеКомпонента?.ДанныеТаблицыЧерновики)
    ;
    возврат Данные
;

метод ДанныеТаблицыДоработка(): Массив<ДанныеТаблицыЗаявок>
    знч Данные: Массив<ДанныеТаблицыЗаявок>
    если (ДанныеКомпонента?.ДанныеТаблицыДоработка.Размер() ?? 0) > 0
        Данные.ДобавитьВсе(ДанныеКомпонента?.ДанныеТаблицыДоработка)
    ;
    возврат Данные
;

метод ДанныеТаблицыСогласование(): Массив<ДанныеТаблицыЗаявок>
    знч Данные: Массив<ДанныеТаблицыЗаявок>
    если (ДанныеКомпонента?.ДанныеТаблицыСогласование.Размер() ?? 0) > 0
        Данные.ДобавитьВсе(ДанныеКомпонента?.ДанныеТаблицыСогласование)
    ;
    возврат Данные
;

метод ДанныеТаблицыВакансии(): Массив<ДанныеВакансий>
    знч Данные: Массив<ДанныеВакансий>
    если (ДанныеКомпонента?.ДанныеТаблицыВакансии.Размер() ?? 0) > 0
        Данные.ДобавитьВсе(ДанныеКомпонента?.ДанныеТаблицыВакансии)
    ;
    возврат Данные
;

метод СтатусЗаголовок(ДанныеСтроки: ДанныеТаблицыЗаявок): Строка
    возврат ДанныеСтроки.Статус?.Представление() ?? ""
;

метод СтатусЦвет(ДанныеСтроки: ДанныеТаблицыЗаявок): Цвет | Авто
    знч Статус = ДанныеСтроки.Статус
    возврат Статус?.Цвет() ?? Авто
;

метод СостояниеПодбораЗаголовок(ДанныеСтроки: ДанныеВакансий): Строка
    возврат "Подобрано %{ДанныеСтроки.ПодобраноСотрудников} из %{ДанныеСтроки.КоличествоШтатныхЕдиниц}"
;

метод СостояниеПодбораЦвет(ДанныеСтроки: ДанныеВакансий): Цвет | Авто
    если ДанныеСтроки.ПодобраноСотрудников == ДанныеСтроки.КоличествоШтатныхЕдиниц
        возврат БиблиотекаЦветов.Цвет(БиблиотекаЦветов.ВидыЦвета.Зеленый)
    иначе
        возврат БиблиотекаЦветов.Цвет(БиблиотекаЦветов.ВидыЦвета.Оранжевый)
    ;
;

@Обработчик
метод ПослеСоздания()
    Обновить()
    ЗаявкаНаПодборПослеИзменения.ПодключитьОбработчик(Ссылка -> Обновить())
    ЗаявкаНаПодборПослеУдаления.ПодключитьОбработчик(Ссылка -> Обновить())
;

метод ДобавитьЗаявкуПриНажатии(Команда: ОбычнаяКоманда)
    ЗаявкиНаПодборФормаОбъекта.Показать(Неопределено, ФормаВладелец)
;

метод СмотретьВсеПриНажатии(Команда: ОбычнаяКоманда)
    знч Форма = новый ЗаявкиНаПодборФормаСписка()
    если ФормаВладелец == Неопределено
        Форма.Открыть()
    иначе
        ИнтерфейсныеКомпоненты.ОткрытьЗамещающуюФорму(ФормаВладелец, Форма)
    ;
;

метод ПриНажатииСтроки(Источник: Список<ИсточникДанныхМассив<ДанныеТаблицыЗаявок>>, Событие: СобытиеСДанными<СтрокаСписка<ДанныеТаблицыЗаявок>>)
    знч Ссылка = Событие.Данные.ДанныеСтроки.Ключ
    КарточкаЗаявкиНаПодбор.Показать(Ссылка, ФормаВладелец)
;

метод ТаблицаВакансииПриНажатииСтроки(Источник: Список<ИсточникДанныхМассив<ДанныеВакансий>>, Событие: СобытиеСДанными<СтрокаСписка<ДанныеВакансий>>)
    знч Форма = новый КарточкаВакансии(КлючОбъекта = Событие.Данные.ДанныеСтроки.Ссылка)
    если ФормаВладелец == Неопределено
        Форма.Открыть()
    иначе
        ИнтерфейсныеКомпоненты.ОткрытьЗамещающуюФорму(ФормаВладелец, Форма)
    ;
;

метод ОтправитьНаПроверкуОбработчик(Команда: КомандаСПараметром<ДанныеТаблицыЗаявок>, Параметр: ДанныеТаблицыЗаявок)
    знч Ссылка = Параметр.Ключ
    
    если Ссылка == Неопределено
        возврат
    ;
    
    если не (ЗаявкиНаПодбор.ПодтвердитьОтправкуНаПроверку() 
            и ЗаявкиНаПодбор.ПроверитьЗаполнение(Ссылка!, СтатусыЗаявкиНаПодбор.Проверка))
        возврат
    ;
    СтатусыЗаявокНаПодбор.Установить(Ссылка!, СтатусыЗаявкиНаПодбор.Проверка)
    ЗаявкаНаПодборПослеИзменения.Оповестить(Ссылка!)
    ЗаявкиНаПодбор.УведомитьОбОтправкеНаПроверку()
    Обновить()
;

метод УдалитьСтрокуЗаявкиОбработчик(Команда: КомандаСПараметром<ДанныеТаблицыЗаявок>, Параметр: ДанныеТаблицыЗаявок)
    знч Ссылка = Параметр.Ключ
    
    если Ссылка == Неопределено
        возврат
    ;
    если не ЗаявкиНаПодбор.ПодтвердитьУдаление()
        возврат
    ;
    
    ЗаявкиНаПодбор.УдалитьСОповещением(Ссылка)
    Обновить()
;