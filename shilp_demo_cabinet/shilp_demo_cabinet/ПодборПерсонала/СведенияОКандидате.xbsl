импорт ИнтерфейсныеКомпонентыСтандартные
импорт СтандартноеПриложение
импорт УниверсальныеМеханизмы
импорт ФизическиеЛица
импорт УправлениеПерсоналом

@ВПодсистеме
@НаКлиенте @НаСервере
структура ДанныеОбъекта
    обз знч Реквизиты: Кандидаты.Объект
    пер КонтактнаяИнформация: ЛичныеКонтакты.КонтактнаяИнформация?
    пер Фотография: ПрисоединенныйФайл?
    пер СертификатыРезюме: Массив<СертификатыРезюме.ДанныеСертификатаРезюме>
    пер ПортфолиоРезюме: Массив<ПортфолиоРезюме.ДанныеПортфолиоРезюме>
;

@ВПроекте
метод УстановитьКандидата(Кандидат: Кандидаты.Ссылка)
    ПрочитатьДанныеОбъекта(Кандидат)
;

@НаСервере @ДоступноСКлиента
статический метод ДанныеОбъекта(Кандидат: Кандидаты.Ссылка): ДанныеОбъекта
    знч ДанныеОбъекта = новый ДанныеОбъекта(
        Реквизиты = Кандидат.ЗагрузитьОбъект())
    
    ДанныеОбъекта.КонтактнаяИнформация = ЛичныеКонтакты.ПрочитатьКонтактыВладельца(Кандидат)
    если ДанныеОбъекта.Реквизиты.Фотография != Неопределено
        ДанныеОбъекта.Фотография = ПрисоединенныеФайлыМенеджер.ПрисоединенныйФайл(ДанныеОбъекта.Реквизиты.Фотография)
    ;
    ДанныеОбъекта.СертификатыРезюме.ДобавитьВсе(СертификатыРезюме.ПолучитьСертификатыВладельца(Кандидат))
    ДанныеОбъекта.ПортфолиоРезюме.ДобавитьВсе(ПортфолиоРезюме.ПолучитьПортфолиоВладельца(Кандидат))
    возврат ДанныеОбъекта
;

метод Фотография(): ДвоичныйОбъект.Ссылка
    возврат ДанныеОбъекта?.Фотография?.Хранилище ?? СтандартноеПриложение.ПараметрыСеанса().АватарПоУмолчанию
;

@ВПроекте
метод ПрочитатьДанныеОбъекта(Кандидат: Кандидаты.Ссылка)
    ДанныеОбъекта = ДанныеОбъекта(Кандидат = Кандидат)
    Компоненты.Контакты.УстановитьКонтакты(ДанныеОбъекта.КонтактнаяИнформация, РежимПросмотра)
    
    Компоненты.КлючевыеНавыки.УстановитьЗначения(ДанныеОбъекта.Реквизиты.Навыки)
    Компоненты.ВодительскиеКатегории.УстановитьЗначения(ДанныеОбъекта.Реквизиты.ВодительскиеКатегории)
    Компоненты.КлючевыеНавыки.УстановитьЗначения(ДанныеОбъекта.Реквизиты.Навыки)
    ИнтерфейсныеКомпоненты.ИнициализироватьПодчиненныеКомпоненты(Компоненты)
;

метод ВидимостьКнопкаРедактировать(): Булево
    возврат не ТолькоЧтение и РежимПросмотра  
;

метод ВыборСтатусаДоступность(): Булево
   возврат не ТолькоЧтение и РежимПросмотра и ДоступныеЗначенияСтатуса.Размер() > 0
;

метод СтатусПриИзменении(Источник: ВыборСтатуса, Событие: СобытиеПриИзменении<Представляемое?>)
    ПриИзмененииСтатуса(Событие)
;

метод ПредставлениеСтажа(): Строка
    знч Стаж = ДанныеОбъекта?.Реквизиты.ВодительскийСтаж ?? Дата{}
    возврат Стаж == Дата{} ? "не указан" : "с %{Стаж.Представление()}"
;

метод ПодзаголовокВодительскиеПрава(): Строка
    если ДанныеОбъекта?.Реквизиты.ВодительскиеКатегории.Пусто() ?? Истина
        возврат "Информация о водительских правах не указана"
    иначе
        знч ОткрытыеКатегории = ДанныеОбъекта.Реквизиты.ВодительскиеКатегории
            .Преобразовать<Строка>((ВодительскиеКатегории) -> ВодительскиеКатегории.Представление()).Соединить(", ")
        возврат "Открытые категории %ОткрытыеКатегории. Стаж %{ПредставлениеСтажа()}"
    ;
;

метод ПредставлениеПолаИВозраста(): Строка
    если ДанныеОбъекта != Неопределено
        возврат ФизЛица.ПредставлениеПолаИВозраста(ДанныеОбъекта?.Реквизиты.Пол,  ДанныеОбъекта?.Реквизиты.ДатаРождения) 
    иначе 
        возврат ""  
    ;
;