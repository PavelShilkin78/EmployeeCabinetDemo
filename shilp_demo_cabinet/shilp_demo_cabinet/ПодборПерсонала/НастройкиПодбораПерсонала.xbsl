импорт Анкетирование
импорт Анкетирование::Обмен
импорт ВебApi
импорт ОбменДанными
импорт ОбщиеСтандартные
//КонтрольДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): ЧитаемаяКоллекция<РазрешениеДоступа>
    возврат ПодборПерсоналаКонтрольДоступаПоставщик.ПолучитьСервис().ВычислитьРазрешенияДоступаОписанияРаботодателя()
;

//Конец КонтрольДоступа

//Область СлужебныйПрограммныйИнтерфейс

@ВПроекте
структура ДанныеСтатусыРассматриваемыхКандидатов
    @JsonСвойство(Имя = "trigger")
    обз знч Триггер: ПодборПерсонала.ТриггерыПодбораПерсоналаJson
    @JsonСвойство(Имя = "statusID")
    обз знч Статус: Строка
;

@ВПроекте
структура НастройкиПодбораПерсонала
    @JsonСвойство(Имя = "ID")
    обз знч Идентификатор: Строка
    @JsonСвойство(Имя = "name")
    обз знч Наименование: Строка
    @JsonСвойство(Имя = "questionnaire")
    обз знч АнкетаКандидата: Строка?
    @JsonСвойство(Имя = "candidateInWorkStatuses")
    знч СтатусыРассматриваемыхКандидатов: Массив<ДанныеСтатусыРассматриваемыхКандидатов>
;

@ВПодсистеме
метод ТипДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    если ВерсияФорматаОбмена == Неопределено
        возврат Тип<НастройкиПодбораПерсонала>
    иначе если ВерсияФорматаОбмена >= Версия{2.0}
        возврат Тип<НастройкиПодбораПерсонала>
    ;
;

@ВПодсистеме
метод ТипКоллекцииДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    если ВерсияФорматаОбмена == Неопределено
        возврат Тип<Массив<НастройкиПодбораПерсонала>>
    иначе если ВерсияФорматаОбмена >= Версия{2.0}
        возврат Тип<Массив<НастройкиПодбораПерсонала>>
    ;
;

@ВПодсистеме
метод ТипОбъектаJson(): Строка
    возврат "recruitmentSetting"
;

@ВПодсистеме
метод ЗагрузитьОбъектИзJson(НастройкиПодбораПерсонала: НастройкиПодбораПерсонала, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)

    исп Транзакции.Начать()
    знч ЗагружаемыйОбъект = Сервисы.ПрочитатьОбъект(
        НастройкиПодбораПерсонала.Идентификатор,
        &НастройкиПодбораПерсонала.Объект.новый(Ууид),
        Тип<НастройкиПодбораПерсонала.Ссылка>) как НастройкиПодбораПерсонала.Объект 

    ЗагружаемыйОбъект.Наименование = НастройкиПодбораПерсонала.Наименование
    ЗагружаемыйОбъект.АнкетаКандидата =
        Сервисы.ПолучитьСсылку(ШаблоныАнкетDto.ВнешняяСсылка(НастройкиПодбораПерсонала.АнкетаКандидата)) как ШаблоныАнкет.Ссылка
    
    ЗагружаемыйОбъект.СтатусыРассматриваемыхКандидатов.Очистить()
    для Элемент из НастройкиПодбораПерсонала.СтатусыРассматриваемыхКандидатов
        ЗагружаемыйОбъект.СтатусыРассматриваемыхКандидатов.Добавить(новый НастройкиПодбораПерсонала.СтатусыРассматриваемыхКандидатов(
            Триггер = ПодборПерсонала.ТриггерыПодбораПерсоналаИзJson(Элемент.Триггер),
            Статус = Сервисы.ПолучитьСсылку(СтатусыВоронки.ВнешняяСсылка(Элемент.Статус)) как СтатусыВоронки.Ссылка))
    ;
    
    Сервисы.ЗаписатьОбъект(новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(
        ЗагружаемыйОбъект, НастройкиПодбораПерсонала.Идентификатор), Сервисы.ИнструментыМенеджераОбъекта)

;

@ВПодсистеме
метод ГруппаИзмененийВJson(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): ЧитаемоеСоответствие<Строка, Массив<Объект?>>
    возврат {"recruitmentSettings": ДанныеНастроекПодбораПерсоналаВJson(Ссылки, Сервисы)}
;

метод ДанныеНастроекПодбораПерсоналаВJson(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): Массив<Объект?>
    знч Данные: Массив<Объект?>
    для Ссылка из Ссылки
        Данные.Добавить(ДанныеНастройкиПодбораПерсоналаВJson(Ссылка как НастройкиПодбораПерсонала.Ссылка, Сервисы))
    ;
    возврат Данные
;

метод ДанныеНастройкиПодбораПерсоналаВJson(Ссылка: НастройкиПодбораПерсонала.Ссылка,
    Сервисы: ВебApiСервер.СервисыУпаковкиJson): НастройкиПодбораПерсонала
    знч НастройкиОбъект = Ссылка.ЗагрузитьОбъект()

    пер ИдАнкеты: Строка?
    если НастройкиОбъект.АнкетаКандидата != Неопределено
        ИдАнкеты = Сервисы.ПолучитьИдентификатор(НастройкиОбъект.АнкетаКандидата)
    ;

    знч НастройкиПодбораПерсонала = новый НастройкиПодбораПерсонала(
        Идентификатор = Сервисы.ПолучитьИдентификатор(Ссылка),
        Наименование = НастройкиОбъект.Наименование,
        АнкетаКандидата = ИдАнкеты)

    для Элемент из НастройкиОбъект.СтатусыРассматриваемыхКандидатов
        НастройкиПодбораПерсонала.СтатусыРассматриваемыхКандидатов.Добавить(новый ДанныеСтатусыРассматриваемыхКандидатов(
            Триггер = ПодборПерсонала.ТриггерыПодбораПерсоналаВJson(Элемент.Триггер),
            Статус = Сервисы.ПолучитьИдентификатор(Элемент.Статус)))
    ;

    возврат НастройкиПодбораПерсонала
;

@ВПроекте
метод ДанныеНастроекПодбораПерсонала(Настройки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>): ЧитаемоеСоответствие<НастройкиПодбораПерсонала.Ссылка, ЧитаемоеСоответствие<Строка, Объект?>>

    знч ДанныеОписания: Соответствие<НастройкиПодбораПерсонала.Ссылка, ЧитаемоеСоответствие<Строка, Объект?>>
    если Настройки.Размер() == 0
        возврат ДанныеОписания
    ;
    
    знч Запрос = Запрос{
        Выбрать
            Наименование,
            Ссылка,
            АнкетаКандидата
        Из
            НастройкиПодбораПерсонала
        Где
            Ссылка В (%Настройки)
    }
    исп Результат = Запрос.Выполнить() 
    для СтрокаРезультата из Результат
        ДанныеОписания.Вставить(
            СтрокаРезультата.Ссылка,
            МенеджерЗапросов.СтрокаРезультатаЗапросаВСоответствие(СтрокаРезультата, Результат)
        )
    ;
    
    возврат ДанныеОписания
;

@ВПроекте
@НаСервере
@ДоступноСКлиента
метод ТриггерыСтатусовРассматриваемыхКандидатов(): ЧитаемыйМассив<НастройкиПодбораПерсонала.СтатусыРассматриваемыхКандидатов>
    возврат НастройкаОбъект().СтатусыРассматриваемыхКандидатов
;

@ВПроекте
@НаСервере
@ДоступноСКлиента
метод ЗаписатьТриггерыСтатусовРассматриваемыхКандидатов(
    СтатусыРассматриваемыхКандидатов: ЧитаемыйМассив<НастройкиПодбораПерсонала.СтатусыРассматриваемыхКандидатов>)
    пер НастройкаОбъект = НастройкаОбъект()
    НастройкаОбъект.СтатусыРассматриваемыхКандидатов.Очистить()
    НастройкаОбъект.СтатусыРассматриваемыхКандидатов.ДобавитьВсе(СтатусыРассматриваемыхКандидатов)
        
    НастройкаОбъект.Записать()
    
    ОбменДанными.ЗарегистрироватьОтправляемыйДокумент(НастройкаОбъект.Ссылка, Истина)
    РегистрацияИзменений.ЗарегистрироватьИзменение(НастройкаОбъект.Ссылка, Неопределено, ХарактерыИзменений.Изменение)
;

метод НастройкаОбъект(): НастройкиПодбораПерсонала.Объект
    возврат СсылкаНастройкиПодбораПерсонала().ЗагрузитьОбъект()
;

@ВПроекте
метод СсылкаНастройкиПодбораПерсонала(): НастройкиПодбораПерсонала.Ссылка?
    знч Запрос = Запрос{
        Выбрать
            Ссылка
        Из
            НастройкиПодбораПерсонала    
    }   
    исп РезультатЗапроса = Запрос.Выполнить()
    для РезультатЗапросаСтрока из РезультатЗапроса
        возврат РезультатЗапросаСтрока.Ссылка    
    ;
    исп КонтекстДоступа.Привилегированный()
    пер НовыеНастройкиПодбораПерсонала: НастройкиПодбораПерсонала.Объект
    НовыеНастройкиПодбораПерсонала.Записать()
    возврат НовыеНастройкиПодбораПерсонала.Ссылка    
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ШаблонАнкетыКандидата(): ШаблоныАнкет.Ссылка?
    знч Запрос = Запрос{
        Выбрать
            АнкетаКандидата
        Из
            НастройкиПодбораПерсонала    
    } 
    исп РезультатЗапроса = Запрос.Выполнить()
    для РезультатЗапросаСтрока из РезультатЗапроса
        возврат РезультатЗапросаСтрока.АнкетаКандидата    
    ; 
    возврат Неопределено    
;

@ВПодсистеме
@НаСервере @ДоступноСКлиента
метод СтатусРассматриваемогоКандидатаПоТриггеру(Триггер: ТриггерыПодбораПерсонала): СтатусыВоронки.Ссылка?
    знч Запрос = Запрос{
        ВЫБРАТЬ
            СтатусыРассматриваемыхКандидатов.Статус КАК Статус
        ИЗ
            НастройкиПодбораПерсонала.СтатусыРассматриваемыхКандидатов КАК СтатусыРассматриваемыхКандидатов
        ГДЕ
            СтатусыРассматриваемыхКандидатов.Триггер == %Триггер
    }
    
    знч Результат = Запрос.Выполнить()
    возврат Результат.ЕдинственныйИлиУмолчание()?.Статус
;
//КонецОбласти