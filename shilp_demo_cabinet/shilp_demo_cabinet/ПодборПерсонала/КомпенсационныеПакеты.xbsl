импорт ВебApi
импорт ОбменДанными
импорт ОбщиеСтандартные

//КонтрольДоступа
@Обработчик
метод ВычислитьРазрешенияДоступа(): ЧитаемаяКоллекция<РазрешениеДоступа>
    возврат ПодборПерсоналаКонтрольДоступаПоставщик.ПолучитьСервис().ВычислитьРазрешенияДоступаКомпенсационныхПакетов()
;
//Конец КонтрольДоступа
// JSON

@ВПодсистеме
метод ТипОбъектаJson(): Строка
    возврат "compensations"
;

@ВПроекте
структура КомпенсационныйПакет_2_0
    @JsonСвойство(Имя = "ID")
    обз знч Идентификатор: Строка
    @JsonСвойство(Имя = "name")
    обз знч Наименование: Строка
    @JsonСвойство(Имя = "description")
    обз знч Описание: Строка
;

@ВПроекте
метод ТипДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
   
    если ВерсияФорматаОбмена == Неопределено или ВерсияФорматаОбмена < Версия{2.0}
        выбросить новый ИсключениеВыполнения("Неверный формат")
    ;
    
    если ВерсияФорматаОбмена >= Версия{2.0}
        возврат Тип<КомпенсационныйПакет_2_0>
    ;
;

@ВПроекте
метод ЗагрузитьОбъектИзJson(КомпенсационныйПакет: КомпенсационныйПакет_2_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    исп Транзакции.Начать()
    знч ЗагружаемыйОбъект = Сервисы.ПрочитатьОбъект(КомпенсационныйПакет.Идентификатор,
        &КомпенсационныеПакеты.Объект.новый(Ууид), Тип<КомпенсационныеПакеты.Ссылка>) как КомпенсационныеПакеты.Объект
    ЗагружаемыйОбъект.Наименование = КомпенсационныйПакет.Наименование
    ЗагружаемыйОбъект.Описание = КомпенсационныйПакет.Описание
    Сервисы.ЗаписатьОбъект(новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(ЗагружаемыйОбъект, КомпенсационныйПакет.Идентификатор), Сервисы.ИнструментыМенеджераОбъекта)     
;

@ВПроекте
метод ВнешняяСсылка(Идентификатор: Строка): ВебApiСервер.ВнешняяСсылка
    возврат новый ВебApiСервер.ВнешняяСсылка(Идентификатор, (Ууид) -> СрочностьВакансии.ПолучитьСсылку(Ууид))
;

@ВПодсистеме
метод ГруппаИзмененийВJson(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): ЧитаемоеСоответствие<Строка, Массив<Объект?>>
    возврат {"compensations": ИсходящиеДанныеВJson(Ссылки, Сервисы)}
;

метод ИсходящиеДанныеВJson(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): Массив<Объект?>
    знч Данные: Массив<Объект?>
    для КлючИЗначение из ДанныеОбъектов(Ссылки)
        Данные.Добавить(ДанныеОбъектаВJson_V2_0(КлючИЗначение.Значение, Сервисы))
    ;
    возврат Данные
;

метод ДанныеОбъектов(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>): ЧитаемоеСоответствие<КомпенсационныеПакеты.Ссылка, ЧитаемоеСоответствие<Строка, Объект?>>
    знч Данные: Соответствие<КомпенсационныеПакеты.Ссылка, ЧитаемоеСоответствие<Строка, Объект?>> 
    знч Запрос = Запрос{
        Выбрать
            Ссылка,
            Наименование,
            Описание
        Из
            КомпенсационныеПакеты
        Где
            Ссылка В (%Ссылки)        
    }
    исп Результат = Запрос.Выполнить() 
    для СтрокаРезультата из Результат
        Данные.Вставить(
            СтрокаРезультата.Ссылка,
            МенеджерЗапросов.СтрокаРезультатаЗапросаВСоответствие(СтрокаРезультата, Результат)
        )
    ; 
    возврат Данные    
;

метод ДанныеОбъектаВJson_V2_0(ДанныеОбъекта: ЧитаемоеСоответствие<Строка, Объект?>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): КомпенсационныйПакет_2_0
    пер КомпенсационныйПакет = новый КомпенсационныйПакет_2_0(
        Сервисы.ПолучитьИдентификатор(ДанныеОбъекта["Ссылка"] как КомпенсационныеПакеты.Ссылка),
        ДанныеОбъекта["Наименование"] как Строка,
        ДанныеОбъекта["Описание"] как Строка)    
    возврат КомпенсационныйПакет        
;

// Конец JSON

@ВПодсистеме
метод ПослеЗаписиДополнение(Ссылка: КомпенсационныеПакеты.Ссылка, ТребуетсяРегистрацияИзменений: Булево)
    если ТребуетсяРегистрацияИзменений
        ОбменДанными.ЗарегистрироватьОтправляемыйДокумент(Ссылка, Истина)
        РегистрацияИзменений.ЗарегистрироватьИзменение(Ссылка, Неопределено, ХарактерыИзменений.Изменение)
    ;
;

@ВПодсистеме
метод ПослеУдаленияДополнение(Ссылка: КомпенсационныеПакеты.Ссылка, ТребуетсяРегистрацияИзменений: Булево)
    если ТребуетсяРегистрацияИзменений
        РегистрацияИзменений.ЗарегистрироватьУдаление(Ссылка)
    ;
;