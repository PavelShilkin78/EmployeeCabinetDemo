импорт КонтрольДоступа
импорт ОбменДанными
импорт УправлениеПерсоналом
импорт ФизическиеЛица
импорт УниверсальныеМеханизмы

@Обработчик
@ВыполнятьПриЗагрузкеДанных
метод ПередЗаписью(До: Отклики.Данные, ПараметрыЗаписи: Отклики.ПараметрыЗаписи)
    УстановитьНаименование()
    ЗаполнитьПредставлениеОпытаработы()
    ЗаполнитьДополнительныеСвойства(ПараметрыЗаписи)
;

метод ЗаполнитьДополнительныеСвойства(ПараметрыЗаписи: Отклики.ПараметрыЗаписи)
    ПараметрыЗаписи.ДополнительныеСвойства = новый Отклики.ДополнительныеСвойства()
    ЗаписатьФайлы(ПараметрыЗаписи)
;

метод ЗаписатьФайлы(ПараметрыЗаписи: Отклики.ПараметрыЗаписи)
    если ПараметрыЗаписи.Фотография != Неопределено
        если Фотография == Неопределено
            ПараметрыЗаписи.ДополнительныеСвойства.ЗагружаемаяФотографияСсылка = Файлы.ПолучитьСсылку(новый Ууид())
            Фотография = ПараметрыЗаписи.ДополнительныеСвойства.ЗагружаемаяФотографияСсылка
        иначе
            ПараметрыЗаписи.ДополнительныеСвойства.ЗагружаемаяФотографияСсылка = Фотография
        ;
    ;
;

метод ЗаполнитьПредставлениеОпытаработы()
    ПредставлениеОпытаРаботы = УправлениеПерсоналом.ПредставлениеДлительностиРаботы(ОпытРаботы) 
;

метод УстановитьНаименование()
    Наименование = "%Фамилия %Имя %Отчество"  
;

@Обработчик
@ВыполнятьПриЗагрузкеДанных
метод ПослеЗаписи(До: Отклики.Данные, ПараметрыЗаписи: Отклики.ПараметрыЗаписи)
    исп КонтекстДоступа.Привилегированный()
    если ЭтоНовый()
        СтатусыОткликов.Установить(Ссылка, СтатусОтклика.Новый)
    ;
    ЗаполнитьДополнительныеСвойстваПродолжение(ПараметрыЗаписи)
    если не ПараметрыЗаписи.РежимЗагрузкиДанных
        ОбменДанными.ЗарегистрироватьОтправляемыйДокумент(Ссылка, Истина)
        РегистрацияИзменений.ЗарегистрироватьИзменение(Ссылка, Неопределено)
    ; 
    
    знч СервисыУведомления = УведомленияПодбораПерсонала.ПолучитьСервисы()
    для СервисУведомления из СервисыУведомления
        СервисУведомления.ПослеЗаписиОтклика(этот, До, ПараметрыЗаписи, ЭтоНовый())
    ;   
;

метод ЗаполнитьДополнительныеСвойстваПродолжение(ПараметрыЗаписи: Отклики.ПараметрыЗаписи)
    ЗаписатьФайлыПродолжение(ПараметрыЗаписи)
    если ПараметрыЗаписи.СертификатыРезюме != Неопределено
        СертификатыРезюме.ЗаписатьСертификатыВладельца(Ссылка, ПараметрыЗаписи.СертификатыРезюме)
    ;
    если ПараметрыЗаписи.ПортфолиоРезюме != Неопределено
        ПортфолиоРезюме.ЗаписатьПортфолиоВладельца(Ссылка, ПараметрыЗаписи.ПортфолиоРезюме)
    ;
;

метод ЗаписатьФайлыПродолжение(ПараметрыЗаписи: Отклики.ПараметрыЗаписи)
    если ПараметрыЗаписи.Фотография != Неопределено
        ПрисоединенныеФайлыМенеджер.СоздатьЗаписатьФайл(
            ФайлСсылка = ПараметрыЗаписи.ДополнительныеСвойства.ЗагружаемаяФотографияСсылка, 
            Владелец = Ссылка,
            ДанныеФайла = ПараметрыЗаписи.Фотография)
    ;
;

@Обработчик
@ВыполнятьПриЗагрузкеДанных
метод ПередУдалением(ПараметрыУдаления: Отклики.ПараметрыУдаления)
    знч НаборЗаписей = новый СтатусыОткликов.НаборЗаписей()
    НаборЗаписей.Фильтр.Отклик.Установить(Ссылка)
    НаборЗаписей.Записать()
    Отклики.ПослеУдаленияДополнение(Ссылка, Истина)
;