импорт ИнтерфейсныеКомпонентыСтандартные
импорт КонтрольДоступа
импорт ФизическиеЛица
импорт УниверсальныеМеханизмы
импорт СтандартноеПриложение
импорт ОбщиеСтандартные

@НаСервере @НаКлиенте
структура ДополнительныеОбъект
    пер ЕстьПолномочиеИзменениеСобеседования: Булево
;

@НаСервере @ДоступноСКлиента
статический метод ДополнительныеОбъект(): ДополнительныеОбъект
    знч ДополнительныеОбъект = новый ДополнительныеОбъект()
    ДополнительныеОбъект.ЕстьПолномочиеИзменениеСобеседования 
        = КонтрольДоступа.ЕстьПравоНаПолномочие(ПодборПерсонала.ПолномочиеИзменениеСобеседования())
    возврат ДополнительныеОбъект
;

@ВПроекте
@Реализация
метод Инициализировать()
    знч ДополнительныеОбъект = ДополнительныеОбъект()
    ЕстьПолномочиеИзменениеСобеседования = ДополнительныеОбъект.ЕстьПолномочиеИзменениеСобеседования
    ЗаполнитьТаблицуСобеседований()
    СобеседованиеПослеИзменения.ПодключитьОбработчик(&ЗаполнитьТаблицуСобеседований)
;

@НаСервере @ДоступноСКлиента
статический метод ДанныеУчастниковСобеседований(Собеседования: Массив<Собеседования.Ссылка>): Соответствие<Собеседования.Ссылка, Массив<СтрокаСпискаСМиниатюройКомпонентДанных>>
    знч Запрос = Запрос{
        ВЫБРАТЬ
            Участники.Владелец КАК Собеседование,
            Участники.Элемент как Сотрудник,
            Файлы.Хранилище.ЗаменитьNull(Неопределено) как Фотография,
            ФизическиеЛица.Наименование.ЗаменитьNull("") как СотрудникПредставление
        ИЗ
            Собеседования.Участники как Участники
        ЛЕВОЕ СОЕДИНЕНИЕ ФизическиеЛица КАК ФизическиеЛица
            ПО Участники.Элемент == ФизическиеЛица.Ссылка
        ЛЕВОЕ СОЕДИНЕНИЕ Файлы КАК Файлы
            ПО ФизическиеЛица.Миниатюра == Файлы.Ссылка
        УПОРЯДОЧИТЬ ПО
            Участники.Владелец
    }

    знч Результат = новый Соответствие<Собеседования.Ссылка, Массив<СтрокаСпискаСМиниатюройКомпонентДанных>>()
    исп РезультатЗапроса = Запрос.Выполнить()
    для Элемент из РезультатЗапроса
        если не Результат.СодержитКлюч(Элемент.Собеседование)
            Результат.Вставить(Элемент.Собеседование, новый  Массив<СтрокаСпискаСМиниатюройКомпонентДанных>())
        ;
        Результат[Элемент.Собеседование].Добавить(
            новый СтрокаСпискаСМиниатюройКомпонентДанных(
                Ссылка = Элемент.Сотрудник, 
                Изображение = Элемент.Фотография ?? Ресурс{ФотографияПоУмолчанию.svg}.Ссылка, 
                Представление = Элемент.СотрудникПредставление
            ))
    ;
    возврат Результат
;


@НаСервере @ДоступноСКлиента
статический метод ДанныеСобеседований(Кандидаты: Массив<РассматриваемыеКандидаты.Ссылка>): Массив<КарточкаСобеседования.ДанныеСобеседования>
    знч ДанныеСобеседований = новый Массив<КарточкаСобеседования.ДанныеСобеседования>()
    
    знч Запрос = Запрос{
        ВЫБРАТЬ
            Собеседования.Ссылка,
            Собеседования.Кандидат,
            Собеседования.ДатаПроведения,
            Собеседования.Наименование,
            Собеседования.Формат,
            Собеседования.МестоПроведения,
            Собеседования.АдресДляПодключения
        ИЗ
            Собеседования КАК Собеседования
        ГДЕ 
            Собеседования.Кандидат В(%Кандидаты)
    }
    
    знч РезультатЗапроса = новый ЧитаемыйМассив(Запрос.Выполнить())
    знч Собеседования = новый Массив<Собеседования.Ссылка>()
    для Элемент из РезультатЗапроса
        Собеседования.Добавить(Элемент.Ссылка)
    ;
    
    знч ДанныеУчастниковСобеседований = ДанныеУчастниковСобеседований(Собеседования)
    знч КомментарииСобеседований = Комментарии.КомментарииСобеседований(Собеседования)
    
    для Элемент из РезультатЗапроса
        знч КарточкаСобеседования = новый КарточкаСобеседования.ДанныеСобеседования(
                Элемент.Ссылка,
                Элемент.Кандидат,
                Элемент.ДатаПроведения,
                Элемент.Наименование,
                Элемент.Формат,
                Элемент.МестоПроведения,
                Элемент.АдресДляПодключения)
        ЗаполнитьПустоеНаименованиеСобеседования(КарточкаСобеседования)
        если ДанныеУчастниковСобеседований.СодержитКлюч(Элемент.Ссылка)
            КарточкаСобеседования.Участники.ДобавитьВсе(ДанныеУчастниковСобеседований.Получить(Элемент.Ссылка))
        ;  
        если КомментарииСобеседований.СодержитКлюч(Элемент.Ссылка)
            КарточкаСобеседования.Комментарии.ДобавитьВсе(КомментарииСобеседований.Получить(Элемент.Ссылка))
        ;
        ДанныеСобеседований.Добавить(КарточкаСобеседования)
    ; 
    возврат ДанныеСобеседований
;

@НаСервере
статический метод ЗаполнитьПустоеНаименованиеСобеседования(ДанныеСобеседования: КарточкаСобеседования.ДанныеСобеседования)
    если не ДанныеСобеседования.Наименование.Пусто()
        возврат
    ;
    если ДанныеСобеседования.Формат == ФорматСобеседования.Оффлайн и ДанныеСобеседования.МестоПроведения != Неопределено
        ДанныеСобеседования.Наименование = "Собеседование ${МенеджерДат.ФорматДатыВремени(ДанныеСобеседования.ДатаПроведения)}, ${ДанныеСобеседования.МестоПроведения}"
        возврат
    ;
    если ДанныеСобеседования.Формат == ФорматСобеседования.Оффлайн и ДанныеСобеседования.МестоПроведения == Неопределено
        ДанныеСобеседования.Наименование = "Собеседование ${МенеджерДат.ФорматДатыВремени(ДанныеСобеседования.ДатаПроведения)}, оффлайн"
        возврат
    ;
    если ДанныеСобеседования.Формат == ФорматСобеседования.Онлайн
        ДанныеСобеседования.Наименование = "Собеседование ${МенеджерДат.ФорматДатыВремени(ДанныеСобеседования.ДатаПроведения)}, онлайн"
        возврат
    ;
    ДанныеСобеседования.Наименование = "Собеседование ${МенеджерДат.ФорматДатыВремени(ДанныеСобеседования.ДатаПроведения)}"
;

метод ЗаполнитьТаблицуСобеседований()  
    Компоненты.Контейнер.Содержимое.Очистить()
    знч ДанныеСобеседований = ДанныеСобеседований(Кандидаты)
    для Данные из ДанныеСобеседований
        знч Карточка = новый КарточкаСобеседования(Данные = Данные, РежимКандидата = РежимКандидата, ТолькоЧтение = ТолькоЧтение)
        Карточка.ПриДобавленииКомментария = &ПриДобавленииКомментария
        Компоненты.Контейнер.Содержимое.Добавить(Карточка)
    ;
    Компоненты.Заглушка.Видимость = ДанныеСобеседований.Размер() == 0
;

метод ПриДобавленииКомментария(Источник: КарточкаСобеседования, Событие: СобытиеКомпонента)
    ЗаполнитьТаблицуСобеседований()
;

метод ЗапланироватьОбработчик(Источник: Команда)
    если не ЕстьПолномочиеИзменениеСобеседования
        возврат
    ;
    если Кандидаты.Размер() == 1
        ФормаСобеседования.ОткрытьВМодальномОкне(Кандидат = Кандидаты[0])
    ;
;

метод ВидимостьКнопкиЗапланировать(): Булево
   возврат ЕстьПолномочиеИзменениеСобеседования и не ТолькоЧтение 
;

метод КолонкиГруппы(): Массив<КолонкаМатричнойГруппы>
    
    знч КоличествоКолонок = ОсновнойИнтерфейс.РаботаНаУзкомУстройстве() ? 1 : (РежимКандидата ? 2 : 1)
    знч Колонки = новый Массив<КолонкаМатричнойГруппы>()
    для Сч = 1 по КоличествоКолонок
        Колонки.Добавить(новый КолонкаМатричнойГруппы())
    ;
    возврат Колонки
;
