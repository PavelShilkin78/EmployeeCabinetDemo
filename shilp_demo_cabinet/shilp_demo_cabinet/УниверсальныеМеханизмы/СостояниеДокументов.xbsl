импорт ОбщиеСтандартные
импорт ВебApi
импорт ОбменДанными

@Обработчик
метод ВычислитьРазрешенияДоступа(): Массив<РазрешениеДоступа>
    возврат СостояниеДокументовПоставщикОграничений.ПолучитьСервис().СостояниеДокументовРазрешенияДоступа()
;

@ВПроекте
метод ТипДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    если ВерсияФорматаОбмена == Неопределено
        возврат Тип<Неопределено>
    иначе если ВерсияФорматаОбмена >= Версия{1.0}
        возврат Тип<Неопределено>
    ;
;
@ВПроекте
метод ТипОбъектаJson(): Строка
    возврат "agreementResults"
;

@ВПроекте
метод ЗагрузитьОбъектИзJson(ДанныеJson: Объект?, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    знч ИдентификаторДокумента = Сервисы.ПолучитьПараметр("requestID") как Строка
    знч СостояниеЗапроса = Сервисы.ПолучитьПараметр("status") как Строка
    УстановитьСостояниеДокумента(
        ОбменДанными.ИдентификаторыЛокальныхОбъектов([ИдентификаторДокумента])
                        .ПолучитьИлиУмолчание(ИдентификаторДокумента) как Справочник.Ссылка,
        СостояниеДокументаИзJson(СостояниеЗапроса))
;

конст ЧЕРНОВИК = "draft"
конст ПОДГОТОВЛЕН = "prepared"
конст ВЫПОЛНЕН = "completed"
конст ПОЛУЧЕН_ОТКАЗ = "rejected"
конст АННУЛИРОВАН = "canceled"

метод СостояниеДокументаИзJson(СостояниеJson: Строка): СостоянияДокумента
    пер Состояние: СостоянияДокумента
    выбор СостояниеJson
    когда ЧЕРНОВИК
        Состояние = СостоянияДокумента.Черновик
    когда ПОДГОТОВЛЕН
        Состояние = СостоянияДокумента.Подготовлен
    когда ВЫПОЛНЕН
        Состояние = СостоянияДокумента.Выполнен
    когда ПОЛУЧЕН_ОТКАЗ
        Состояние = СостоянияДокумента.ПолученОтказ
    когда АННУЛИРОВАН
        Состояние = СостоянияДокумента.Аннулирован
    иначе
        выбросить новый СервисыHttp.ИсключениеНедопустимоеЗначениеПараметра(
            "Параметр status=%СостояниеJson заполнен неверно",
            "status",
            СостояниеJson)
    ;
    возврат Состояние
;

@ВПроекте
метод СостояниеДокументаВJson(Состояние: СостоянияДокумента): Строка
    пер СостояниеJson: Строка
    выбор Состояние
    когда Выполнен
        СостояниеJson = ВЫПОЛНЕН
    когда Подготовлен
        СостояниеJson = ПОДГОТОВЛЕН
    когда ПолученОтказ
        СостояниеJson = ПОЛУЧЕН_ОТКАЗ
    когда Черновик
        СостояниеJson = ЧЕРНОВИК
    когда Аннулирован
        СостояниеJson = АННУЛИРОВАН
    ;
    возврат СостояниеJson
;

@ВПодсистеме
метод УстановитьОтказ(Ссылка: неизвестно)
    СостояниеДокументов.УстановитьСостояниеДокумента(Ссылка, СостоянияДокумента.ПолученОтказ)
;

@ВПодсистеме
метод УстановитьСостояниеДокумента(Ссылка: Сущность.Ключ, Состояние: СостоянияДокумента)
    пер СостояниеДокумента: СостояниеДокументов.Объект = новый СостояниеДокументов.Объект()
    знч ЛюбаяСсылка: неизвестно = Ссылка

    знч Запрос = Запрос{
        Выбрать
            Ссылка
        Из
            СостояниеДокументов
        Где
            Документ == %ЛюбаяСсылка}
    исп Результат = Запрос.Выполнить()
     
    исп Транзакции.Начать()
    знч РезультатСтроки = новый ЧитаемыйМассив(Результат)
    если (не РезультатСтроки.Пусто())
        СостояниеДокумента = РезультатСтроки[0].Ссылка.ЗагрузитьОбъект(Истина)
    ;
    СостояниеДокумента.Документ = Ссылка как неизвестно
    СостояниеДокумента.Состояние = Состояние
    СостояниеДокумента.Дата = МенеджерДат.ТекущаяДатаВремя()
    СостояниеДокумента.Записать()
;

@ВПодсистеме
метод СостояниеДокумента(Ссылка: Справочник.Ссылка): СостоянияДокумента
    знч ЛюбаяСсылка: неизвестно = Ссылка
    знч Запрос = Запрос{
        Выбрать 
            Состояния.Состояние Как Состояние
        Из
            СостояниеДокументов Как Состояния
        Где
            Состояния.Документ == %ЛюбаяСсылка}
    исп Результат = Запрос.Выполнить() 
    знч РезультатСтроки = новый ЧитаемыйМассив(Результат)
    если (не РезультатСтроки.Пусто())
        возврат РезультатСтроки[0].Состояние
    ;
    возврат СостоянияДокумента.Черновик
;

@ВПодсистеме
метод ДанныеСостоянияДокумента(Ссылка: Справочник.Ссылка): СостДокументов.ОписаниеСостояния
    пер ДанныеСостояния = новый СостДокументов.ОписаниеСостояния()
    знч ЛюбаяСсылка: неизвестно = Ссылка
    
    знч Запрос = Запрос{
        Выбрать 
            Состояния.Состояние Как Состояние,
            Состояния.Дата Как Дата
        Из
            СостояниеДокументов Как Состояния
        Где
            Состояния.Документ == %ЛюбаяСсылка}
    исп Результат = Запрос.Выполнить() 
    знч РезультатСтроки = новый ЧитаемыйМассив(Результат)
    если (не РезультатСтроки.Пусто())
        ДанныеСостояния.Состояние = РезультатСтроки[0].Состояние
        ДанныеСостояния.Дата = РезультатСтроки[0].Дата
    иначе
        ДанныеСостояния.Состояние = СостоянияДокумента.Черновик
        ДанныеСостояния.Дата = Неопределено
    ;
    
    возврат ДанныеСостояния
    
;

@ВПодсистеме
метод УдалитьСостояниеДокумента(Ссылка: Справочник.Ссылка)
    знч ЛюбаяСсылка: неизвестно = Ссылка
    знч Запрос = Запрос{
        Выбрать 
            Состояния.Ссылка Как Ссылка
        Из
            СостояниеДокументов Как Состояния
        Где
            Состояния.Документ == %ЛюбаяСсылка}
    исп Результат = Запрос.Выполнить() 
    знч РезультатСтроки = новый ЧитаемыйМассив(Результат)
    если (не РезультатСтроки.Пусто())
        исп ПривилегированныйРежим: КонтекстДоступа = КонтекстДоступа.Привилегированный()
        РезультатСтроки[0].Ссылка.ЗагрузитьОбъект().Удалить()
        ПривилегированныйРежим.Закрыть()
    ;
;