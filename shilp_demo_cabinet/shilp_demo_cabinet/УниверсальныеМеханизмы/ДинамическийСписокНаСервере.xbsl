@НаКлиенте
@ВПроекте
статический метод ИзДинамическогоСписка(Источник: ДинамическийСписок): ДинамическийСписокНаСервере
    возврат новый ДинамическийСписокНаСервере(
            Источник.ОсновнаяТаблица,
            Источник.Параметры,
            Источник.Поля,
            Источник.ПрисоединенныеТаблицы,
            Источник.Сортировка,
            Источник.Фильтр)
;

структура ПрототипЗапроса
    обз знч Текст: Строка
    обз знч Параметры: ЧитаемыйМассив<ПараметрЗапроса>
;

@НаСервере
@ВПроекте
метод ПрототипЗапроса(): ПрототипЗапроса
    знч ПараметрыЗапроса: Массив<ПараметрЗапроса>
    знч ЧастиЗапроса = новый ТекстовыеЧастиЗапроса()

    ЧастиЗапроса.ЗаполнитьПоляИСортировкиПоУмолчанию(этот.Поля)        
    ЧастиЗапроса.ЗаполнитьОсновнаяТаблица(этот.ОсновнаяТаблица)
    ЧастиЗапроса.ЗаполнитьПрисоединенныеТаблицы(этот.ПрисоединенныеТаблицы, ПараметрыЗапроса)
    ЧастиЗапроса.ЗаполнитьУсловие(этот.Фильтр, ПараметрыЗапроса)
    ЧастиЗапроса.ЗаполнитьСортировки(этот.Сортировка)
    
    возврат новый ПрототипЗапроса(
            Текст = ЧастиЗапроса.Собрать(), 
            Параметры = новый ЧитаемыйМассив(ПараметрыЗапроса))
;

структура ТекстовыеЧастиЗапроса
    знч Поля: Массив<Строка>
    пер ОсновнаяТаблица: Строка
    знч ПрисоединенныеТаблицы: Массив<ПрисоединеннаяТаблицаТекстом>
    пер Условие: Строка
    знч СортировкиПоУмолчанию: Массив<Строка>
    знч Сортировки: Массив<Строка>
        
    метод Собрать(): Строка
        знч ПрисоединенныеТаблицыСтроками: Массив<Строка>
        ПрисоединенныеТаблицы.ДляКаждого((Элемент) -> ПрисоединенныеТаблицыСтроками
                .Добавить("%{(Условие.Пусто()) 
                        ? "%{Элемент.Соединение}" 
                        : "%{Элемент.Соединение}\н\т\т%{Элемент.Условие}"}"))
        
        возврат
               "ВЫБРАТЬ
                    %{Поля.Соединить(",\н\т")}
                ИЗ %ОсновнаяТаблица
                    %{ПрисоединенныеТаблицыСтроками.Соединить(",\н\т")}
                %{Условие.Пусто() ? "" : "ГДЕ"}
                %{Условие.Пусто() ? "" : "\т%Условие"}
                УПОРЯДОЧИТЬ ПО
                %{Сортировки.Пусто() 
                        ? "%{СортировкиПоУмолчанию.Соединить(",\н\т")}" 
                        : "%{Сортировки.Соединить(",\н\т")}"}"
    ;
    
    метод ЗаполнитьПоляИСортировкиПоУмолчанию(Поля: Массив<ПолеКоллекцияДинамическогоСписка|ПолеДинамическогоСписка>)
        Поля.ДляКаждого(метод(Поле) -> 
                        этот.Поля.Добавить(ПолеВТекст(Поле))
                        этот.СортировкиПоУмолчанию.Добавить(ПолеВТекстСортировки(Поле))
                ;)
    ;
    
    метод ЗаполнитьОсновнаяТаблица(ОсновнаяТаблица: ТаблицаДинамическогоСписка)
        этот.ОсновнаяТаблица = "%{ОсновнаяТаблица.Таблица} КАК %{ОсновнаяТаблица.Псевдоним}"
    ;
    
    метод ЗаполнитьПрисоединенныеТаблицы(
            ПрисоединенныеТаблицы: Массив<ПрисоединеннаяТаблица>,
            ПараметрыЗапроса: Массив<ПараметрЗапроса>)
        ПрисоединенныеТаблицы.ДляКаждого(метод(ПрисоединеннаяТаблица) -> 
                        этот.ПрисоединенныеТаблицы.Добавить(ПрисоединеннаяТаблицаВТекст(
                                ПрисоединеннаяТаблица, 
                                ПараметрыЗапроса))
                ;)
    ;
    
    метод ЗаполнитьУсловие(
            Фильтр: ГруппаЭлементовФильтра,
            ПараметрыЗапроса: Массив<ПараметрЗапроса>)
        этот.Условие = ФильтрВТекстУсловия(Фильтр, ПараметрыЗапроса)
    ;
    
    метод ЗаполнитьСортировки(Сортировка: Массив<ЭлементСортировки>)
        Сортировка.ДляКаждого(метод(ЭлементСортировки) -> 
                        этот.Сортировки.Добавить(СортировкаВТекст(ЭлементСортировки))
                ;)
    ;
    
    статический метод ПрисоединеннаяТаблицаВТекст(
            ПрисоединеннаяТаблица: ПрисоединеннаяТаблица, 
            ПараметрыЗапроса: Массив<ПараметрЗапроса>): ПрисоединеннаяТаблицаТекстом
        знч Соединение = "ЛЕВОЕ СОЕДИНЕНИЕ %{ПрисоединеннаяТаблица.Таблица} КАК %{ПрисоединеннаяТаблица.Псевдоним}"
        знч Условие = ФильтрВТекстУсловия(ПрисоединеннаяТаблица.Фильтр, ПараметрыЗапроса)
        возврат новый ПрисоединеннаяТаблицаТекстом(
                Соединение, 
                (Условие.Пусто()) ? "" : "ПО %Условие")
    ;

    статический метод ПолеВТекст(Поле: ПолеДинамическогоСписка|ПолеКоллекцияДинамическогоСписка): Строка
        если Поле это ПолеДинамическогоСписка
            знч _Поле = Поле как ПолеДинамическогоСписка
            возврат "%{_Поле.Выражение} КАК %{_Поле.Псевдоним}"
        иначе если Поле это ПолеКоллекцияДинамическогоСписка
            знч _Поле = Поле как ПолеКоллекцияДинамическогоСписка
            возврат "%{_Поле.Выражение} КАК %{_Поле.Псевдоним}"
        ;
    ;

    статический метод ПолеВТекстСортировки(Поле: ПолеДинамическогоСписка|ПолеКоллекцияДинамическогоСписка): Строка
        если Поле это ПолеДинамическогоСписка
            знч _Поле = Поле как ПолеДинамическогоСписка
            возврат "%{_Поле.Псевдоним} ВОЗР"
        иначе если Поле это ПолеКоллекцияДинамическогоСписка
            знч _Поле = Поле как ПолеКоллекцияДинамическогоСписка
            возврат "%{_Поле.Псевдоним} ВОЗР"
        ;    
    ;

    статический метод СортировкаВТекст(ЭлементСортировки: ЭлементСортировки): Строка
        знч НаправлениеСортировки = (ЭлементСортировки.НаправлениеСортировки == НаправлениеСортировки.ПоВозрастанию ? "ВОЗР" : "УБЫВ")
        возврат "%{ЭлементСортировки.Поле} %НаправлениеСортировки"
    ;

    статический метод ФильтрВТекстУсловия(
            Фильтр: ГруппаЭлементовФильтра, 
            Параметры: Массив<ПараметрЗапроса>): Строка
            
        пер Условие = ""

        если Фильтр.Использовать
            знч ЭлементыУсловия: Массив<Строка>
            для ЭлементФильтра из Фильтр.Элементы
                пер ЭлементУсловия: Строка
                если ЭлементФильтра это ГруппаЭлементовФильтра
                    ЭлементУсловия = ФильтрВТекстУсловия(ЭлементФильтра как ГруппаЭлементовФильтра, Параметры)
                иначе если ЭлементФильтра это ЭлементФильтраВыражение
                    ЭлементУсловия = ФильтрВТекстУсловия(ЭлементФильтра как ЭлементФильтраВыражение, Параметры)
                иначе если ЭлементФильтра это ЭлементФильтра
                    ЭлементУсловия = ФильтрВТекстУсловия(ЭлементФильтра как ЭлементФильтра, Параметры)
                иначе если ЭлементФильтра это ЭлементФильтраПоляКоллекция
                    выбросить новый ИсключениеНедопустимыйАргумент("Поддержка фильтров динамических списков по полям-коллекциям не реализована.")
                иначе
                    выбросить новый ИсключениеНедопустимыйАргумент(
                            "Непредусмортенный тип \"%{ЭлементФильтра.ПолучитьТип()}\".")
                ;
                
                если не ЭлементУсловия.Пусто()
                    ЭлементыУсловия.Добавить(ЭлементУсловия)
                ;
            ;

            пер Соединитель = "НЕОПРЕДЕЛЕННЫЙ_СОЕДИНИТЕЛЬ_УСЛОВИЯ"
            пер Отрицать: Булево
            если Фильтр.ВидГруппы == ВидГруппыЭлементовФильтра.ГруппаИ
                Соединитель = "И"
                Отрицать = Ложь
            иначе если Фильтр.ВидГруппы == ВидГруппыЭлементовФильтра.ГруппаИли
                Соединитель = "ИЛИ"
                Отрицать = Ложь
            иначе если Фильтр.ВидГруппы == ВидГруппыЭлементовФильтра.ГруппаНеИ
                Соединитель = "И"
                Отрицать = Истина
            иначе если Фильтр.ВидГруппы == ВидГруппыЭлементовФильтра.ГруппаНеИли
                Соединитель = "ИЛИ"
                Отрицать = Истина
            иначе
                выбросить новый ИсключениеНедопустимыйАргумент(
                        "Непредусмортенный тип \"%{Фильтр.ВидГруппы.ПолучитьТип()}\".")
            ;
            Условие = "%{Отрицать ? "НЕ ": ""}(%{ЭлементыУсловия.Соединить(" %Соединитель ")})"
        ;
        возврат Условие
    ;

    статический метод ФильтрВТекстУсловия(
            Фильтр: ЭлементФильтраВыражение, 
            Параметры: Массив<ПараметрЗапроса>): Строка
            
        пер Условие = ""

        если Фильтр.Использовать
            Условие = Фильтр.Выражение
        ;

        возврат Условие
    ;

    статический метод ФильтрВТекстУсловия(
            Фильтр: ЭлементФильтра, 
            Параметры: Массив<ПараметрЗапроса>): Строка
            
        пер Условие = ""

        если Фильтр.Использовать
            если Фильтр.ВидСравнения == ВидСравнения.Равно
                Условие = "%{Фильтр.Поле} == &%{Фильтр.Поле}"
            иначе если Фильтр.ВидСравнения == ВидСравнения.НеРавно
                Условие = "%{Фильтр.Поле} != &%{Фильтр.Поле}"
            иначе если Фильтр.ВидСравнения == ВидСравнения.Больше
                Условие = "%{Фильтр.Поле} > &%{Фильтр.Поле}"
            иначе если Фильтр.ВидСравнения == ВидСравнения.БольшеИлиРавно
                Условие = "%{Фильтр.Поле} >= &%{Фильтр.Поле}"
            иначе если Фильтр.ВидСравнения == ВидСравнения.Меньше
                Условие = "%{Фильтр.Поле} < &%{Фильтр.Поле}"
            иначе если Фильтр.ВидСравнения == ВидСравнения.МеньшеИлиРавно
                Условие = "%{Фильтр.Поле} <= &%{Фильтр.Поле}"
            иначе если Фильтр.ВидСравнения == ВидСравнения.ВСписке
                Условие = "%{Фильтр.Поле} В (&%{Фильтр.Поле})"
            иначе если Фильтр.ВидСравнения == ВидСравнения.НеВСписке
                Условие = "%{Фильтр.Поле} НЕ В (&%{Фильтр.Поле})"
            иначе если Фильтр.ВидСравнения == ВидСравнения.Содержит
                Условие = "%{Фильтр.Поле}.Содержит(&%{Фильтр.Поле})"
            иначе если Фильтр.ВидСравнения == ВидСравнения.НеСодержит
                Условие = "НЕ %{Фильтр.Поле}.Содержит(&%{Фильтр.Поле})"
            иначе
                выбросить новый ИсключениеНедопустимыйАргумент(
                        "Непредусмортенный тип \"%{Фильтр.ВидСравнения}\".")
            ;
            Параметры.Добавить(новый ПараметрЗапроса(
                        Фильтр.Поле, 
                        Фильтр.Значение))
        ;
        
        возврат Условие
    ;
;

структура ПараметрЗапроса
    обз знч Имя: Строка
    обз знч Значение: Объект
;

структура ПрисоединеннаяТаблицаТекстом
    обз знч Соединение: Строка
    обз знч Условие: Строка
;
