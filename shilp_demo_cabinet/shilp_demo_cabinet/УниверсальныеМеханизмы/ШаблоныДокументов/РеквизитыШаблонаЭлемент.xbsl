импорт ОбщиеСтандартные
импорт ИнтерфейсныеКомпонентыКабинеты

@Обработчик
метод ПослеСоздания()
    знч ТекущаяДата = МенеджерДат.ТекущаяДатаВремя().ВДатаВремя(МенеджерДат.ЧасовойПоясТекущий()).Дата
    ПериодДанных = новый ЗакрытыйДиапазон<Дата>(ТекущаяДата, ТекущаяДата)
    если ДанныеСтроки.Значение == Неопределено
        выбор ДанныеСтроки.ТипЗначения
        когда ТипыПользовательскихПолей.ЦелоеЧисло
            ДанныеСтроки.Значение = 0
        когда ТипыПользовательскихПолей.Число2ЗнакаПослеЗапятой
            ДанныеСтроки.Значение = 0
        когда ТипыПользовательскихПолей.Дата
            ДанныеСтроки.Значение = МенеджерДат.ТекущаяДатаВремя().ВДатаВремя(МенеджерДат.ЧасовойПоясТекущий()).Дата
        когда ТипыПользовательскихПолей.Период
            ДанныеСтроки.Значение = МенеджерДат.ТекущаяДатаВремя().ВДатаВремя(МенеджерДат.ЧасовойПоясТекущий()).Дата
            ДанныеСтроки.ЗначениеВторое = ДанныеСтроки.Значение как Дата?
        когда ТипыПользовательскихПолей.Булево
            ДанныеСтроки.Значение = Ложь
        иначе
            ДанныеСтроки.Значение = ""
        ;
    ;
    если ДанныеСтроки.ТипЗначения == ТипыПользовательскихПолей.Период
        ПериодДанных = новый ЗакрытыйДиапазон<Дата>(ДанныеСтроки.Значение как Дата, ДанныеСтроки.ЗначениеВторое)
    ;
    если ДанныеСтроки.ТипЗначения == ТипыПользовательскихПолей.Перечисление
        для ДоступноеЗначение из ДанныеСтроки.ДоступныеЗначения
            ДоступныеЗначенияСтрока.Добавить(
                новый ЭлементСпискаЗначений<Строка>(
                    Значение = ДоступноеЗначение.Значение как Строка,
                    Представление = ДоступноеЗначение.Представление
                )
            )
        ;
    ;
;

метод ЦелоеЧислоПриИзмененииЗначения(Источник: ПолеВводаРасширенноеЧисло, Событие: СобытиеПриИзменении<Число>)
    ДанныеСтроки.Значение = (ДанныеСтроки.Значение как Число).ЦелаяЧасть()
;

метод Число2ЗнакаПослеЗапятойПриИзмененииЗначения(Источник: ПолеВводаРасширенноеЧисло, Событие: СобытиеПриИзменении<Число>)
    ДанныеСтроки.Значение = (ДанныеСтроки.Значение как Число).Округлить(2, РежимОкругления.ПоловинаВверх)
;

метод ПериодДанныхПриИзменении(Источник: ПолеВвода<ЗакрытыйДиапазон<Дата>?>, Событие: СобытиеПриИзменении<ЗакрытыйДиапазон<Дата>?>)
    если ПериодДанных == Неопределено
        ДанныеСтроки.Значение = Неопределено
        ДанныеСтроки.ЗначениеВторое = Неопределено
    иначе
        ДанныеСтроки.Значение = ПериодДанных.От
        ДанныеСтроки.ЗначениеВторое = ПериодДанных.До
    ;
;
