импорт ИнтерфейсныеКомпонентыСтандартные
импорт ОбщиеСтандартные
 
@ВПроекте
@НаКлиенте
конст ИЗМЕНЕНО_СОСТОЯНИЕ_ДОКУМЕНТА = "ИзмененоСостояниеДокумента"

@ВПроекте
@НаКлиенте
метод ИконкаЦвет(Состояние: СостоянияДокумента?): Цвет | Авто
    возврат БиблиотекаЦветов.Цвет(ВидЦветаПоСостоянию(Состояние))
;

@ВПроекте
@НаКлиенте
метод ВидЦветаПоСостоянию(Состояние: СостоянияДокумента?): БиблиотекаЦветов.ВидыЦвета
    пер ВидЦвета: БиблиотекаЦветов.ВидыЦвета
    выбор Состояние
    когда Выполнен
        ВидЦвета = БиблиотекаЦветов.ВидыЦвета.Болотный
    когда Подготовлен
        ВидЦвета = БиблиотекаЦветов.ВидыЦвета.Оранжевый
    когда ПолученОтказ
        ВидЦвета = БиблиотекаЦветов.ВидыЦвета.Красный
    когда Черновик
        ВидЦвета = БиблиотекаЦветов.ВидыЦвета.СветлоСерый
    когда Аннулирован
        ВидЦвета = БиблиотекаЦветов.ВидыЦвета.ТемноСерый
    ;
    возврат ВидЦвета
;

@ВПроекте
@НаСервере @НаКлиенте
структура ОписаниеСостояния
    пер Состояние: СостоянияДокумента?
    пер Дата: Момент?
;

@ВПроекте
@НаСервере
метод УстановитьОтказ(Ссылка: Сущность.Ключ, Комментарий: Строка, ИмяОтказавшего: Строка = "")
    СостояниеДокументов.УстановитьОтказ(Ссылка)
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод УстановитьСостояниеДокумента(Ссылка: Сущность.Ключ, Состояние: СостоянияДокумента)
    СостояниеДокументов.УстановитьСостояниеДокумента(Ссылка, Состояние)
;

@ВПроекте
@НаСервере
метод СостояниеДокумента(Ссылка: Справочник.Ссылка): СостоянияДокумента
    возврат ДанныеСостоянияДокумента(Ссылка).Состояние
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ДанныеСостоянияДокумента(Ссылка: Справочник.Ссылка): ОписаниеСостояния
    возврат СостояниеДокументов.ДанныеСостоянияДокумента(Ссылка)
;

@ВПроекте
@НаСервере
метод УдалитьСостояниеДокумента(Ссылка: Справочник.Ссылка)
    СостояниеДокументов.УдалитьСостояниеДокумента(Ссылка)
;


@ВПроекте
@НаКлиенте @НаСервере
структура ОписаниеТаблицы
    обз пер ТипСсылкиДокумента: Тип
    пер ИмяДатыФильтра: Строка
    пер ИмяДатыУпорядочивания: Строка
    пер СмещениеДатыДляФильтра: Число
    пер ИмяДатыНачала: Строка
    пер ИмяДатыОкончания: Строка
    пер ИмяДатыОтсутствия: Строка
    пер ИмяВремениНачала: Строка
    пер ИмяВремениОкончания: Строка
    пер ИмяПредставления: Строка
;

структура ОписаниеДокумента
    обз знч Документ: ДокументИмеющийСостояние.Ссылка
;

@ВПроекте
@НаСервере
метод СостоянияДокументов(Документы: Массив<ДокументИмеющийСостояние.Ссылка>): Массив<СостояниеДокументаКомпонентДанных>
    пер КоллекцияДаных = новый Массив<СостояниеДокументаКомпонентДанных>()
    если Документы.Размер() != 0
        знч ДокументыБезСостояний = новый Множество<ДокументИмеющийСостояние.Ссылка>(Документы)
        знч Запрос = Запрос{
            Выбрать 
                СостояниеДокументов.Документ как Документ, 
                СостояниеДокументов.Состояние Как Состояние
            Из 
                СостояниеДокументов Как СостояниеДокументов
            Где
                СостояниеДокументов.Документ В (%Документы)}
        исп РезультатЗапроса = Запрос.Выполнить()
        для СтрокаРезультата из РезультатЗапроса
            знч КомпонентДанных = новый СостояниеДокументаКомпонентДанных()
            КомпонентДанных.Документ = СтрокаРезультата.Документ
            КомпонентДанных.Состояние = СтрокаРезультата.Состояние
            КоллекцияДаных.Добавить(КомпонентДанных)
            ДокументыБезСостояний.Удалить(СтрокаРезультата.Документ)
        ;
        
        для ДокументБезСостояния из ДокументыБезСостояний
            знч КомпонентДанных = новый СостояниеДокументаКомпонентДанных()
            КомпонентДанных.Документ = ДокументБезСостояния
            КомпонентДанных.Состояние = СостоянияДокумента.Черновик
            КоллекцияДаных.Добавить(КомпонентДанных)    
        ;
    ;
    возврат КоллекцияДаных
;

@ВПроекте
метод ПредставлениеПериодаДокумента(ДатаДокумента: Дата? = Неопределено, ДатаСобытия: Дата? = Неопределено, ВремяНачала: Время? = Неопределено, ВремяОкончания: Время? = Неопределено, ДатаНачала: Дата? = Неопределено, ДатаОкончания: Дата? = Неопределено): Строка
    пер ПредставлениеПериода: Строка
    если ВремяНачала != Неопределено или ВремяОкончания != Неопределено
        ПредставлениеПериода = МенеджерДат.ПредставлениеПериода(ДатаСобытия, ВремяНачала, ВремяОкончания)
    иначе если ДатаСобытия != Неопределено 
        ПредставлениеПериода = "%{МенеджерДат.ФорматДаты(ДатаСобытия)}, весь день" 
    иначе если ДатаНачала != Неопределено или ДатаОкончания != Неопределено
        ПредставлениеПериода = МенеджерДат.ПредставлениеПериода(ДатаНачала, ДатаОкончания)
    иначе если ДатаДокумента != Неопределено 
        ПредставлениеПериода = "от %{МенеджерДат.ФорматДаты(ДатаДокумента)}" 
    ;
    возврат ПредставлениеПериода
;
