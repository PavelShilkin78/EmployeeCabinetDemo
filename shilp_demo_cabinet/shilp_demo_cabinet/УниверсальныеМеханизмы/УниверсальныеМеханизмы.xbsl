импорт СтандартноеПриложение
импорт ОбщиеСтандартные
импорт ВебApi

@ВПроекте конст ТЕКСТ = "Текст"

@ВПодсистеме конст СЕПАРАТОР_ИДЕНТИФИКАТОРА_РЕСУРСА = "::"

@ВПроекте
конст ИД_ПОДСИСТЕМЫ = "УниверсальныеМеханизмы"

@ВПроекте
структура СтроковыйРесурс
    обз пер Наименование: Строка
    обз пер Значение: Строка
    обз пер Комментарий: Строка
;

@ВПроекте
структура СведенияОФайле
    пер Наименование: Строка
    пер Расширение: Строка
    пер Размер: Число
    пер Хранилище: ДвоичныйОбъект.Ссылка?
    пер АдресКартинкиРасширения: ДвоичныйОбъект.Ссылка?
    пер ВидФайла: ВидыФайла?
    пер ИдентификаторЭлектронногоДокумента: Строка  
    пер ХешДанных: Строка
;

@ВПроекте
@НаСервере
структура НастройкиПрисоединенныхФайлов
    пер МаксимальноДопустимыйРазмерФайлаВМегабайтах: Число = 30
;

@ВПроекте
структура ДанныеАрхиваФайлов
    обз пер Имя: Строка
    обз пер Данные: ДвоичныйОбъект.Ссылка
;

@ВПроекте
@НаКлиенте @НаСервере
структура СклоненияПредставленияОбъекта
    пер Именительный: Строка
    пер Родительный: Строка
    пер Дательный: Строка
    пер Винительный: Строка
    пер Творительный: Строка
    пер Предложный: Строка
;

@ВПроекте
структура ДанныеРесурса
    обз пер СсылкаНаСодержимое: ДвоичныйОбъект.Ссылка?
    обз пер ТипСодержимого: Строка
;

@ВПодсистеме
конст КЛЮЧ_ПАРАМЕТРОВ_СЕАНСА: Строка = "УниверсальныеМеханизмыПараметрыСеанса" 

@ВПроекте
структура ПараметрыСеанса
    пер РеспондентыТекущегоПользователя: Массив<РеспондентАнкетирования.Ссылка>
;

@ВПроекте
@НаКлиенте
метод ПараметрыСеанса(): ПараметрыСеанса
    возврат ПараметрыСеансаСервис.ПолучитьСервис().ПараметрПоКлючу(КЛЮЧ_ПАРАМЕТРОВ_СЕАНСА) как ПараметрыСеанса
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод СостояниеДокумента(Ссылка: Справочник.Ссылка): СостоянияДокумента
    возврат СостояниеДокументов.СостояниеДокумента(Ссылка)
;

@ВПроекте
@НаСервере
метод НастройкиПрисоединенныхФайлов(): НастройкиПрисоединенныхФайлов
    возврат НастройкиПрисоединенныхФайлов.Настройки()
;

@ВПроекте
@НаКлиенте
метод НачатьВыгрузкуФайла(Файл: Файлы.Ссылка)
    пер СведенияОФайле: УниверсальныеМеханизмы.СведенияОФайле = СведенияОФайле(Файл)
    НачатьВыгрузкуФайла(СведенияОФайле.Хранилище, СведенияОФайле.Наименование, СведенияОФайле.Расширение)
;

@ВПроекте
@НаКлиенте
метод НачатьВыгрузкуФайла(Хранилище: ДвоичныйОбъект.Ссылка, Наименование: Строка, Расширение: Строка)
    ВыгрузкаФайлов.НачатьВыгрузку(
        Хранилище, ПрисоединенныеФайлыКлиентСервер.НаименованиеФайлаПоИмениИРасширению(Наименование, Расширение))
;

@ВПодсистеме
@НаСервере @ДоступноСКлиента
метод СведенияОФайле(Файл: Файлы.Ссылка): УниверсальныеМеханизмы.СведенияОФайле
    возврат Файлы.СведенияОФайле(Файл)
;

@ВПроекте
@НаСервере
метод ЗаписатьЗначенияРесурсов(ГруппаРесурсов: Строка, ПрефиксНаименования: Строка, ПрефиксКомментария: Строка, РесурсыПодсистемы: Массив<СтроковыйРесурс>)
    для СтроковыйРесурс из РесурсыПодсистемы
        СтроковыеРесурсы.ЗаписатьЗначениеРесурса(
            ГруппаРесурсов, 
            ПрефиксНаименования + СтроковыйРесурс.Наименование,
            "%{ПрефиксКомментария} (%{СтроковыйРесурс.Комментарий})",
            СтроковыйРесурс.Значение,
            0
        )
    ;
;

@ВПроекте
@НаСервере
метод ЗаписатьЗначениеРесурса(ГруппаРесурсов: Строка, ИмяРесурса: Строка, Комментарий: Строка, СтандартноеЗначение: Строка, МаксимальныйРазмер: Число = 0)
    СтроковыеРесурсы.ЗаписатьЗначениеРесурса(ГруппаРесурсов, ИмяРесурса, Комментарий, СтандартноеЗначение, МаксимальныйРазмер)
;

@ВПроекте
@НаСервере
метод ЗначенияРесурсовПодсистемы(ГруппаРесурсов: Строка, ИменаРесурсов: Массив<Строка>): Соответствие<Строка, Строка>
    возврат СтроковыеРесурсы.ЗначенияРесурсовПодсистемы(ГруппаРесурсов, ИменаРесурсов)
;

@ВПроекте
@НаСервере
метод ЗаполнитьУниверсальныеПараметрыВСообщении(ТекстСообщения: Строка, ЗначенияПараметров: Соответствие<Строка, Строка>): Строка
    для Параметр из ЗначенияПараметров
        ТекстСообщения = ТекстСообщения.Заменить(Параметр.Ключ, Параметр.Значение)
    ;
    возврат ТекстСообщения
;

@ВПроекте
@НаКлиенте @НаСервере
метод Ид(Подсистема: Строка, ИмяРесурса: Строка = ""): Строка
    возврат Подсистема + СЕПАРАТОР_ИДЕНТИФИКАТОРА_РЕСУРСА + ИмяРесурса
;

@ВПроекте
@НаСервере
метод ЗаписатьДвоичныеДанные(Подсистема: Строка, ИмяРесурса: Строка, ЗапросHttp: HttpСервисЗапрос)
    знч РазмерСодержимого = СервисыHttp.РазмерСодержимого(ЗапросHttp)
    пер Хранилище = СервисыHttp.ЗагрузитьФайл(ЗапросHttp, РазмерСодержимого)
    ДвоичныеРесурсы.ЗаписатьДвоичныеДанные(Подсистема, ИмяРесурса, Хранилище.Ссылка)
;

@ВПроекте
@НаСервере
метод ЗаписатьДвоичныеДанные(Подсистема: Строка, ИмяРесурса: Строка, Данные: ДвоичныйОбъект.Ссылка)
    ДвоичныеРесурсы.ЗаписатьДвоичныеДанные(Подсистема, ИмяРесурса, Данные)
;

@ВПроекте
@НаСервере
метод ДвоичныеДанные(Подсистема: Строка, ИмяРесурса: Строка): ДвоичныйОбъект.Ссылка?
    возврат ДвоичныеРесурсы.ДвоичныеДанные(Подсистема, ИмяРесурса)
;

@ВПроекте
@НаСервере
метод ДвоичныеДанные(Ид: Строка): ДвоичныйОбъект.Ссылка?
    возврат ДвоичныеРесурсы.ДвоичныеДанные(Ид)
;

@ВПроекте
@НаКлиенте
метод СсылкаНаРесурс(ИмяРесурса: Строка): Строка
    возврат "%{СтандартноеПриложение.ПараметрыСеанса().АдресПриложения}/api/v2.0/resources/%ИмяРесурса"
;

@ВПроекте
@НаСервере
метод СсылкаНаРесурс(АдресПриложения: Строка, ИмяРесурса: Строка): Строка
    возврат "%АдресПриложения/api/v2.0/resources/%ИмяРесурса"
;

@ВПроекте
@НаСервере
метод ДобавитьВДанныеДляПечатиПредставленияВПадежах(ДанныеДляПечати: Соответствие<Строка, Объект?>,
    Ключ: Строка, ОбъектСклонения: ВладелецСклоняемогоПредставления.Ссылка, ИмяРеквизитаПредставления:Строка? = Неопределено)
    
    знч ПадежиКоллекции = [Падежи.Именительный, Падежи.Родительный, Падежи.Дательный, Падежи.Винительный, Падежи.Творительный, Падежи.Предложный]
    знч ЗначениеВИменительномПадеже = ИмяРеквизитаПредставления == Неопределено
                                        ? МенеджерСущности.ПредставлениеСсылки(ОбъектСклонения как Справочник.Ссылка)
                                        : "${МенеджерСущности.ЗначениеРеквизитаОбъекта(ОбъектСклонения как Справочник.Ссылка, ИмяРеквизитаПредставления!)}"
    знч ПредставленияВПадежах = СклоненияПредставленийОбъектов.ПредставленияОбъектаВПадежах(ОбъектСклонения)
    для Падеж из ПадежиКоллекции
        ДанныеДляПечати.Вставить("%Ключ%{Падеж.ВСтроку()}Падеж",
            ПредставленияВПадежах.ПолучитьИлиУмолчание(Падеж, ЗначениеВИменительномПадеже))
    ;
    для ПредставлениеВПадеже из ПредставленияВПадежах
        ДанныеДляПечати.Вставить("%Ключ%{ПредставлениеВПадеже.Ключ.ВСтроку()}Падеж", ПредставлениеВПадеже.Значение)
    ;
;