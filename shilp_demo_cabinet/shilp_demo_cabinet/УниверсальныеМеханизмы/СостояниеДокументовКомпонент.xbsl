импорт ИнтерфейсныеКомпонентыСтандартные
импорт ОбщиеСтандартные

@ВПроекте 
метод Пусто(): Булево
    возврат КоллекцияИсточника().Пусто()
;

@Обработчик
метод ПослеСоздания()
    ИнтерфейсныеКомпоненты.ИнициализироватьТаблицу(Таблица = Компоненты.Таблица, 
        ПрокруткаПоВертикали = Ложь, ИспользоватьВыделениеСтроки = ТаблицаИспользоватьВыделениеЭлемента())
    ИзмененоСостояниеДокумента.ПодключитьОбработчик(&ПриИзмененииСостоянияДокумента)
    УдаленДокумент.ПодключитьОбработчик(&ПриУдаленииДокумента)
    ОбновитьДанные()
;

метод ПриИзмененииСостоянияДокумента(ДанныеСостояния: СостояниеДокументаКомпонентДанных, ЭтоНовый: Булево)
    если не ТипДокументаОтображается(ДанныеСостояния.Документ)
        возврат
    ;
    если ЭтоНовый
        ОбновитьДанные()
    иначе
        ОбновитьЭлементКоллекции(ДанныеСостояния)
    ;            
;

метод ПриУдаленииДокумента(Документ: Справочник.Ссылка, ДатаДокумента: Дата)
    если ТипДокументаОтображается(Документ как ДокументИмеющийСостояние.Ссылка)
        ОбновитьДанные()
    ;
;

@ВПроекте
@Реализация
метод Инициализировать()
    ОбновитьДанные()
;

метод ОбновитьЭлементКоллекции(ДанныеСостояния: СостояниеДокументаКомпонентДанных)
    знч КоллекцияДанных = КоллекцияИсточника()
    для ЭлементКоллекции из КоллекцияДанных
        знч Элемент = ЭлементКоллекции
        если Элемент.Документ == ДанныеСостояния.Документ
            Элемент.Состояние = ДанныеСостояния.Состояние
            Элемент.ДатаДокумента = ДанныеСостояния.ДатаДокумента
            Элемент.ДополнительноеПредставление = ДанныеСостояния.ДополнительноеПредставление
            прервать
        ;
    ;
;

метод КоллекцияИсточника(): Массив<СостояниеДокументаКомпонентДанных>
    возврат Компоненты.Таблица.Источник.Данные
;

// Область Методы обслуживания ТаблицаРасширенная 

метод ТаблицаПриНажатииСтроки(Источник: Список<ИсточникДанныхМассив<СостояниеДокументаКомпонентДанных>>, Событие: СобытиеСДанными<СтрокаСписка<СостояниеДокументаКомпонентДанных>>)
    знч СостояниеДокумента: СостояниеДокументаКомпонентДанных = Событие.Данные.ДанныеСтроки
    если ОткрыватьФормуПриАктивацииСтроки
        Владелец.ПриНажатии(СостояниеДокумента.Документ)
    иначе
        ПриАктивацииСтроки(новый СобытиеСДанными(СостояниеДокумента.Документ))
    ;
;

// КонецОбласти Методы обслуживания ТаблицаРасширенная 

метод ОбновитьДанные()
    если Владелец == Неопределено
        возврат
    ;
    пер КоллекцияДанных = КоллекцияИсточника()
    КоллекцияДанных.Очистить()
    КоллекцияДанных.ДобавитьВсе(Владелец.ПредставленияДокументов())
    Видимость = (КоллекцияДанных.Размер() != 0)
;

метод ТаблицаИспользоватьВыделениеЭлемента(): Булево
    возврат не КомпактныйРежим
;

метод ТипДокументаОтображается(Документ: ДокументИмеющийСостояние.Ссылка): Булево
    если Владелец.ТипыОтображаемыхДокументов().Пусто()
        возврат Истина
    иначе
        знч ТипДокумента: Тип = Документ.ПолучитьТип()
        для ОтображаемыйТип из Владелец.ТипыОтображаемыхДокументов()
            если ТипДокумента == ОтображаемыйТип
                возврат Истина
            ;
        ;
        возврат Ложь
    ;
;

метод КолонкаВысота(): Число
    возврат КомпактныйРежим ? 40 : 56
;

метод ИконкаВидимость(): Булево
    возврат КлиентскоеУстройство.ВидИнтерфейса == ВидИнтерфейса.Телефон или КомпактныйРежим
;

метод ЗначокЗаголовок(ДанныеЭлемента: СостояниеДокументаКомпонентДанных): Строка
    пер Состояние: СостоянияДокумента = ДанныеЭлемента.Состояние
    возврат Состояние.Представление()
;

метод ЗначокВидимость(): Булево
    возврат не ИконкаВидимость()
;

метод ЗначокЦветФона(ДанныеЭлемента: СостояниеДокументаКомпонентДанных): Цвет | Авто
    пер Состояние: СостоянияДокумента = ДанныеЭлемента.Состояние
    возврат БиблиотекаЦветов.Цвет(СостДокументов.ВидЦветаПоСостоянию(Состояние))
;

метод ИконкаЦвет(ДанныеЭлемента: СостояниеДокументаКомпонентДанных): Цвет | Авто
    пер Состояние: СостоянияДокумента = ДанныеЭлемента.Состояние
    возврат СостДокументов.ИконкаЦвет(Состояние)
;

метод КартинкаЗапросаВидимость(): Булево
    возврат не КомпактныйРежим
;

метод ЗапросПредставлениеГруппировка(): ОриентацияСодержимого
    пер Горизонтально: Булево = КлиентскоеУстройство.ВидИнтерфейса == ВидИнтерфейса.Компьютер или КомпактныйРежим
    возврат Горизонтально ? ОриентацияСодержимого.Горизонтальная : ОриентацияСодержимого.Вертикальная
;

метод ПредставлениеШирина(): Число
    пер ПредставлениеШирина: Число
    если ЗапросПредставлениеГруппировка() == ОриентацияСодержимого.Горизонтальная
        ПредставлениеШирина = 100
    ;
    возврат ПредставлениеШирина
;