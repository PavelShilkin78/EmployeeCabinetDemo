импорт ИнтерфейсныеКомпонентыСтандартные
импорт ОбщиеСтандартные

@ВПроекте
@Реализация
метод Инициализировать()
    ИнтерфейсныеКомпоненты.ИнициализироватьПодчиненныеКомпоненты(Компоненты)
;

метод ПрисоединенныеФайлыИсточникДанные(): Массив<ПрисоединенныйФайл>
    пер Данные: Массив<ПрисоединенныйФайл>
    для Файл из ТаблицаФайлы.Файлы
        если Файл.Наименование == "wredc_data" и Файл.Расширение == "xml"
            продолжить
        ;
        если не Файл.Удален
            Данные.Добавить(Файл)
        ;
    ;
    возврат Данные
;

метод ПрисоединенныеФайлыПослеСозданияСтроки(Список: Список<ИсточникДанныхМассив<ПрисоединенныйФайл>>, Событие: СобытиеСДанными<СтрокаСписка<ПрисоединенныйФайл>>)
    знч СтрокаСписка = Событие.Данные как ПрисоединенныеФайлыСтрокаКомпонент
    СтрокаСписка.ОтображатьДатуДобавленияФайла = ОтображатьДатыДобавленияФайлов   
;

//Источник: Компонент, Событие: СобытиеПриПеретаскивании
метод ВыборФайловПриПеретаскивании(Источник: Компонент, Событие: СобытиеПриПеретаскивании)
    если (Событие.Значение это Массив<неизвестно>)
        если не Событие.Значение.Пусто() и (Событие.Значение[0] это ВыбранныйФайл)
            ЗагрузитьВыбранныеФайлы(Событие.Значение)
        ;
    ;
;

метод ВыборФайловПриИзменении(Источник: ВыборФайлов, Событие: СобытиеПриИзменении<ЧитаемыйМассив<ВыбранныйФайл>>)
    знч ВыбранныеФайлы: ЧитаемыйМассив<ВыбранныйФайл> = Событие.НовоеЗначение
    ЗагрузитьВыбранныеФайлы(ВыбранныеФайлы)
;

метод ЗагрузитьВыбранныеФайлы(ВыбранныеФайлы: ЧитаемыйМассив<ВыбранныйФайл>)
    знч МаксимальныйРазмерФайла = ПрисоединенныеФайлыКлиентСервер.МаксимальноДопустимыйРазмерФайлаВМегабайтах() * МенеджерФайловКлиентСервер.МЕГАБАЙТ
    НачатаЗагрузкаФайлов(новый СобытиеКомпонента())
    ПодключитьОбработчикТаймера(&ПроверитьЗавершениеЗагрузкиФайлов, 1с, Истина)
    
    пер ИменаФайловСОшибкой = новый Массив<Строка>()
    пер ЗагружаемыеФайлы = новый Массив<ПрисоединенныйФайл>()
    для ВыбранныйФайл из ВыбранныеФайлы
        если ВыбранныйФайл.Размер > МаксимальныйРазмерФайла
            и не МенеджерФайловКлиентСервер.ЭтоРасширениеФайлаКартинки(ВыбранныйФайл.Расширение)
            
            ИменаФайловСОшибкой.Добавить(
                "%{ВыбранныйФайл.Имя} (%{МенеджерФайловКлиентСервер.ПредставлениеРазмера(ВыбранныйФайл.Размер)})")
            продолжить
        ;

        пер НовыйПрисоединенныйФайл = новый ПрисоединенныйФайл()
        ЗагружаемыеФайлы.Добавить(НовыйПрисоединенныйФайл)
        НовыйПрисоединенныйФайл.ЗагрузкаФайла = ЗагрузкаФайлов.НачатьЗагрузку(ВыбранныйФайл)
        НовыйПрисоединенныйФайл.Наименование = ВыбранныйФайл.Имя     
        НовыйПрисоединенныйФайл.Расширение = ВыбранныйФайл.Расширение
        если не НовыйПрисоединенныйФайл.Расширение.Пусто()
            НовыйПрисоединенныйФайл.Наименование = НовыйПрисоединенныйФайл.Наименование.Заменить(
                "." + НовыйПрисоединенныйФайл.Расширение, "")
        ;
        НовыйПрисоединенныйФайл.Размер = ВыбранныйФайл.Размер
        НовыйПрисоединенныйФайл.АдресКартинкиРасширения = АдресКартинкиРасширения(ВыбранныйФайл.Расширение)
        НовыйПрисоединенныйФайл.ДатаСоздания = МенеджерДат.ТекущаяДатаВремя()
        ТаблицаФайлы.Файлы.Добавить(НовыйПрисоединенныйФайл)
        СобственнаяМодифицированность = Истина
    ;
    если не ИменаФайловСОшибкой.Пусто()
        пер ТекстСообщения: Строка
        если ИменаФайловСОшибкой.Размер() == 1
            ТекстСообщения =
                "Файл %{ИменаФайловСОшибкой[0]} слишком большой.
                Допустимый размер файлов %{МенеджерФайловКлиентСервер.ПредставлениеРазмера(МаксимальныйРазмерФайла)}"
        иначе если ИменаФайловСОшибкой.Размер() > 3
            ТекстСообщения =
                "Файлы %{Строки.Соединить(ИменаФайловСОшибкой.ПодМассив(0, 2), ", ")} (и еще %{ИменаФайловСОшибкой.Размер() - 2}) - слишком большие.
                Допустимый размер файлов %{МенеджерФайловКлиентСервер.ПредставлениеРазмера(МаксимальныйРазмерФайла)}"
        иначе
            ТекстСообщения =
                "Файлы %{Строки.Соединить(ИменаФайловСОшибкой, ", ")} - слишком большие.
                Допустимый размер файлов %{МенеджерФайловКлиентСервер.ПредставлениеРазмера(МаксимальныйРазмерФайла)}"
        ;
        СообщениеОбОшибке.ОткрытьВМодальномОкне(ТекстСообщения = ТекстСообщения)
    ;
    для ОписаниеЗагрузкиФайла из ЗагружаемыеФайлы
        ОписаниеЗагрузкиФайла.Хранилище = ОписаниеЗагрузкиФайла.ЗагрузкаФайла.ПолучитьРезультат()
        ОписаниеЗагрузкиФайла.ЗагрузкаФайла = Неопределено
    ;
;

метод УдалитьФайлОбработчик(Команда: КомандаСПараметром<ПрисоединенныйФайл>, ПрисоединенныйФайл: ПрисоединенныйФайл)
    УдалитьФайл(ПрисоединенныйФайл)    
;

метод ПроверитьЗавершениеЗагрузкиФайлов()
    для ОписаниеФайла из ТаблицаФайлы.Файлы
        если ОписаниеФайла.ЗагрузкаФайла != Неопределено
            ПодключитьОбработчикТаймера(&ПроверитьЗавершениеЗагрузкиФайлов, 1с, Истина)
            возврат
        ;
    ;
    СжатьБольшиеФайлыИзображений()
    ПроверкаЗагрузкиФайлов()
    ЗавершенаЗагрузкаФайлов(новый СобытиеКомпонента())
;

метод ВспомогательноеПояснениеВидимость(): Булево
    возврат ДобавлятьФайлы и не ВспомогательноеПояснение.Пусто()
;

@ВПроекте
метод Пустой(): Булево
    для ОписаниеФайла из ТаблицаФайлы.Файлы
        если не ОписаниеФайла.Удален
            возврат Ложь
        ;
    ;
    возврат Истина
;

метод ВыборФайловВидимость(): Булево
    если РежимПросмотра
        возврат Ложь
    ;
    если не ДобавлятьФайлы
        возврат Ложь
    ;
    возврат МножественныйРежим ? Истина : ТаблицаФайлы.НеудаленныеФайлы().Пусто()
;

метод ВыборФайловЗаголовок(): Строка
    пер ВыборФайловЗаголовок: Строка
    если КлиентскоеУстройство.ВидИнтерфейса == ВидИнтерфейса.Компьютер
        ВыборФайловЗаголовок = (НадписьВыбораФайлов == "") ? "Перетащите сюда файлы из проводника или выберите их с диска" : НадписьВыбораФайлов
    иначе
        ВыборФайловЗаголовок = "Добавьте файл"
    ;
    возврат ВыборФайловЗаголовок
;

метод СжатьБольшиеФайлыИзображений()
    знч МаксимальныйРазмерФайла = ПрисоединенныеФайлыКлиентСервер.МаксимальноДопустимыйРазмерФайлаВМегабайтах() * МенеджерФайловКлиентСервер.МЕГАБАЙТ
    для ОписаниеФайла из ТаблицаФайлы.Файлы
        если ОписаниеФайла.Ссылка == Неопределено
            если МенеджерФайловКлиентСервер.ЭтоРасширениеФайлаКартинки(ОписаниеФайла.Расширение)
                и МаксимальныйРазмерФайла < ОписаниеФайла.Размер

                знч СжатоеИзображение = СжатоеИзображение(ОписаниеФайла.Хранилище, МаксимальныйРазмерФайла / ОписаниеФайла.Размер) 
                ОписаниеФайла.Хранилище = СжатоеИзображение.Хранилище
                ОписаниеФайла.Размер = СжатоеИзображение.Размер
            ;
        ;
    ;
;

метод ПроверкаЗагрузкиФайлов()
    ОшибкаЗагрузки = Ложь
    для ОписаниеФайла из ТаблицаФайлы.Файлы
        если ОписаниеФайла.Ссылка == Неопределено
             если ПроверкаЗагрузкиФайлов(ОписаниеФайла.Хранилище)
                ОписаниеФайла.ОшибкаЗагрузки = Истина
                ОшибкаЗагрузки = Истина
             ;
        ;
    ;
;


метод УдалитьФайл(ПрисоединенныйФайл: ПрисоединенныйФайл)
    если ПоказыватьПредупреждениеОбУдалении
        знч Ответ = Диалог.Вопрос("Файл \"${ПрисоединенныйФайл.Наименование}.${ПрисоединенныйФайл.Расширение}\" будет удален. Продолжить?", 
                                        {КнопкаДиалога.Да, КнопкаДиалога.Нет, КнопкаДиалога.Отмена}, "Предупреждение")
        если Ответ != КнопкаДиалога.Да 
            возврат
        ;
    ;
    пер ИндексФайла = ТаблицаФайлы.Файлы.Найти(ПрисоединенныйФайл)
    если ИндексФайла != Неопределено
        пер ДанныеФайла = ТаблицаФайлы.Файлы.Получить(ИндексФайла) 
        если ДанныеФайла.Ссылка == Неопределено
            ТаблицаФайлы.Файлы.УдалитьПоИндексу(ИндексФайла)
        иначе
            ДанныеФайла.Удален = Истина
            СобственнаяМодифицированность = Истина
        ;
        ФайлПомеченНаУдаление(новый СобытиеСДанными(ПрисоединенныйФайл))
    ;
    ОшибкаЗагрузки = Ложь
    для ОписаниеФайла из ТаблицаФайлы.Файлы
        если ОписаниеФайла.ОшибкаЗагрузки
            ОшибкаЗагрузки = Истина
            прервать
        ;
    ;
;

@НаСервере @ДоступноСКлиента
статический метод АдресКартинкиРасширения(Расширение: Строка): ДвоичныйОбъект.Ссылка?
    возврат ПрисоединенныеФайлыМенеджер.АдресКартинкиРасширения(Расширение)
;

@НаСервере @НаКлиенте
структура ДанныеСжатогоИзображения
    обз пер Хранилище: ДвоичныйОбъект.Ссылка
    обз пер Размер: Число
;

@НаСервере @ДоступноСКлиента
статический метод СжатоеИзображение(Хранилище: ДвоичныйОбъект.Ссылка, КоэффициентСжатия: Число): ДанныеСжатогоИзображения 
    пер ПолучитьИзображение = МенеджерФайлов.ОтмасштабированноеИзображение(Хранилище, КоэффициентСжатия)
    возврат новый ДанныеСжатогоИзображения(ПолучитьИзображение.Ссылка, ПолучитьИзображение.Размер.ВБайтах())
;

@НаСервере @ДоступноСКлиента
статический метод ПроверкаЗагрузкиФайлов(Хранилище: ДвоичныйОбъект.Ссылка): Булево
    пер ДвоичныеДанныеОбъект: ДвоичныйОбъект?
    попытка
        ДвоичныеДанныеОбъект = Хранилище.Загрузить()
    поймать Ошибка: Исключение
        возврат Истина
    ;
    если ДвоичныеДанныеОбъект == Неопределено
        возврат Истина
    ;
    возврат Ложь
;

метод ВысотаВыбораФайлов(): Число
    возврат ОсновноеПояснение.Пусто() ? 0 : 24
;