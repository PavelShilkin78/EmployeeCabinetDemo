импорт ОбщиеСтандартные

@ВПроекте
метод ПрисоединенныеФайлы(ВладелецФайлов: ВладелецФайлы.Ссылка, ВидФайла: ВидыФайла? = ВидыФайла.Вложение): ПрисоединенныеФайлы
    возврат ПрисоединенныеФайлы(ВладелецФайлов, [ВидФайла])
;

@ВПроекте
метод ПрисоединенныеФайлы(ВладелецФайлов: ВладелецФайлы.Ссылка, ВидыФайлов: Массив<ВидыФайла>): ПрисоединенныеФайлы
    пер ПрисоединенныеФайлы: ПрисоединенныеФайлы
    ПрисоединенныеФайлы.Владелец = ВладелецФайлов
    ПрисоединенныеФайлы.Файлы.ДобавитьВсе(ФайлыОбъекта(ВладелецФайлов, ВидыФайлов))
    возврат ПрисоединенныеФайлы
;

@ВПроекте
метод ФайлыОбъекта(ВладелецФайлов: ВладелецФайлы.Ссылка, ВидыФайлов: Массив<ВидыФайла>? = Неопределено): Массив<ПрисоединенныйФайл>
    пер ФайлыПоВладельцу = Файлы.ФайлыПоВладельцу(ВладелецФайлов, ВидыФайлов)
    пер МассивОписанийФайлов: Массив<ПрисоединенныйФайл>
    для Файл из ФайлыПоВладельцу 
        пер Описание = новый ПрисоединенныйФайл()
        Описание.Ссылка = Файл.Ссылка
        Описание.Наименование = Файл.Наименование
        Описание.Расширение = Файл.Расширение
        Описание.Размер = Файл.Размер
        Описание.Хранилище = Файл.Хранилище
        Описание.АдресКартинкиРасширения = ПрисоединенныеФайлыМенеджер.АдресКартинкиРасширения(Описание.Расширение)
        Описание.ВидФайла = Файл.ВидФайла
        Описание.ДатаСоздания = Файл.ДатаСоздания
        Описание.ИдентификаторЭлектронногоДокумента = Файл.ИдентификаторЭлектронногоДокумента
        МассивОписанийФайлов.Добавить(Описание)
    ;
    возврат МассивОписанийФайлов
;

@ВПроекте
метод Записать(ПрисоединенныйФайл: ПрисоединенныйФайл, Владелец: ВладелецФайлы.Ссылка): Файлы.Ссылка
    знч ПрисоединенныеФайлы = новый ПрисоединенныеФайлы()
    ПрисоединенныеФайлы.Владелец = Владелец
    ПрисоединенныеФайлы.Файлы.Добавить(ПрисоединенныйФайл)
    Записать(ПрисоединенныеФайлы)
    возврат ПрисоединенныеФайлы.Файлы.Первый().Ссылка!   
;

@ВПроекте 
метод Записать(ПрисоединенныеФайлы: ПрисоединенныеФайлы?)
    если ПрисоединенныеФайлы == Неопределено
        возврат
    ;
    исп ПривилегированныйРежим: КонтекстДоступа = КонтекстДоступа.Привилегированный()
    для ДанныеФайла из ПрисоединенныеФайлы.Файлы
        пер Файл: ПрисоединенныйФайл = ДанныеФайла
        если Файл.Удален
            Файл.Ссылка.ЗагрузитьОбъект().Удалить()
            Файл.Ссылка = Неопределено
        иначе если Файл.Ссылка == Неопределено или Файл.Новый
            пер ФайлОбъект: Файлы.Объект
            если Файл.Ссылка == Неопределено
                ФайлОбъект = новый Файлы.Объект()
            иначе
                ФайлОбъект = новый Файлы.Объект(Файл.Ссылка.Ид)
            ;
            ФайлОбъект.Наименование = Файл.Наименование
            ФайлОбъект.Расширение = Файл.Расширение
            Файлы.ПоместитьДанныеВФайл(ФайлОбъект, Файл.Хранилище!.Загрузить(), Файл.ИдентификаторЭлектронногоДокумента)
            ФайлОбъект.ДатаСоздания = Файл.ДатаСоздания
            ФайлОбъект.ВидФайла = Файл.ВидФайла
            ФайлОбъект.Владелец = ПрисоединенныеФайлы.Владелец
            ФайлОбъект.Записать()
            Файл.Ссылка = ФайлОбъект.Ссылка
            Файл.Новый = Ложь
        ;
    ;
    ПривилегированныйРежим.Закрыть()
;

@ВПроекте
метод СоздатьЗаписатьФайл(ФайлСсылка: Файлы.Ссылка, Владелец: ВладелецФайлы.Ссылка, ДанныеФайла: ПрисоединенныйФайл)
     пер ФайлОбъект: Файлы.Объект?
    если МенеджерСущности.СсылкаСуществует(ФайлСсылка)
        ФайлОбъект = ФайлСсылка.ЗагрузитьОбъект()
    иначе
        ФайлОбъект = новый Файлы.Объект(Ид = ФайлСсылка.Ид).Заполнить()
    ;
    Файлы.ПоместитьДанныеВФайл(ФайлОбъект, ДанныеФайла.Хранилище.Загрузить())
    ФайлОбъект.ВидФайла = ВидыФайла.Вложение
    ФайлОбъект.Владелец = Владелец
    ФайлОбъект.Наименование = ДанныеФайла.Наименование
    ФайлОбъект.Расширение = ДанныеФайла.Расширение
    ФайлОбъект.Размер = ДанныеФайла.Размер
    ФайлОбъект.Записать()
;

@ВПроекте
метод ПрисоединенныйФайл(Файл: Файлы.Объект): ПрисоединенныйФайл
    пер ПрисоединенныйФайл = новый ПрисоединенныйФайл()
    ПрисоединенныйФайл.Ссылка = Файл.Ссылка
    ПрисоединенныйФайл.Наименование = Файл.Наименование
    ПрисоединенныйФайл.Расширение = Файл.Расширение
    ПрисоединенныйФайл.Хранилище = Файл.Хранилище
    ПрисоединенныйФайл.Размер = Файл.Размер
    ПрисоединенныйФайл.ВидФайла = Файл.ВидФайла
    ПрисоединенныйФайл.ДатаСоздания = Файл.ДатаСоздания
    ПрисоединенныйФайл.ИдентификаторЭлектронногоДокумента = Файл.ИдентификаторЭлектронногоДокумента
    ПрисоединенныйФайл.АдресКартинкиРасширения = АдресКартинкиРасширения(ПрисоединенныйФайл.Расширение)
    возврат ПрисоединенныйФайл
;

@ВПроекте
метод ПрисоединенныйФайл(Файл: Файлы.Ссылка?): ПрисоединенныйФайл
    если Файл != Неопределено
        знч ФайлОбъект = Файл!.ЗагрузитьОбъект()
        если ФайлОбъект != Неопределено
            возврат ПрисоединенныйФайл(ФайлОбъект!)    
        иначе
            возврат новый ПрисоединенныйФайл()
        ;
    иначе
        возврат новый ПрисоединенныйФайл()
    ;
;

@ВПроекте
метод АдресКартинкиРасширения(Расширение: Строка): ДвоичныйОбъект.Ссылка
    пер РасширениеБезТочки = Расширение.Заменить(".", "").Сократить().ВВерхнийРегистр()
    если РасширениеБезТочки == "DOC" или РасширениеБезТочки == "DOCX"
        возврат Ресурс{ПиктограммыФайлов/DOC.svg}.Ссылка
    иначе если РасширениеБезТочки == "XLS" или РасширениеБезТочки == "XLSX"
        возврат Ресурс{ПиктограммыФайлов/XLS.svg}.Ссылка
    иначе если РасширениеБезТочки == "PDF"
        возврат Ресурс{ПиктограммыФайлов/PDF.svg}.Ссылка
    ;
    возврат Ресурс{ПиктограммыФайлов/ПоУмолчанию.svg}.Ссылка
;

@ВПроекте
метод ТекстCОписаниемПриложенныхФайлов(Текст: Строка, ТекстОписанияВложений: Строка): Строка
    если не ТекстОписанияВложений.Пусто()
        возврат "%Текст\н%ТекстОписанияВложений."
    ;
    возврат Текст
;

@ВПроекте
метод ТекстОписанияПриложенныхФайлов(ВладелецФайлов: ВладелецФайлы.Ссылка): Строка
    пер ТекстВложений = ""
    знч Вложения = ПрисоединенныеФайлы(ВладелецФайлов, [ВидыФайла.Вложение])
    если не Вложения.Файлы.Пусто()
        
        пер ИменаВложений = новый Массив<Строка>()
        для Вложение из Вложения.Файлы
            ИменаВложений.Добавить(ПрисоединенныеФайлыКлиентСервер.ПредставлениеФайла(Вложение))
        ;
        если ИменаВложений.Размер() == 1
            ТекстВложений = "Приложен файл (%{ИменаВложений[0]})"
        иначе
            знч ПредставлениеФайлов = Строки.Соединить(ИменаВложений, ";\н\т- ")
            ТекстВложений =
                "Приложены файлы:\н\т- %ПредставлениеФайлов"
        ;
    ;
    возврат ТекстВложений
;