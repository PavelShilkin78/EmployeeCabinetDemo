импорт ВебApi
импорт СтандартноеПриложение
импорт ОбменДанными

// Контракт ПодсистемаПриложения

@ВПроекте
@Реализация
метод ОписаниеПодсистемы(): СтандартноеПриложение.ОписаниеПодсистемы
    возврат новый СтандартноеПриложение.ОписаниеПодсистемы(УниверсальныеМеханизмы.ИД_ПОДСИСТЕМЫ, {ОбменДанными.ИД_ПОДСИСТЕМЫ})
;

// Конец ПодсистемаПриложения

// Контракт ОбновляемаяПодсистема

@ВПроекте
@Реализация
метод ОбработчикиЗаполнения(): Массив<СтандартноеПриложение.ОписаниеОбработчикаЗаполнения>
    возврат []
;

@ВПроекте
@Реализация
метод ОбработчикиОбновления(): Массив<СтандартноеПриложение.ОписаниеОбработчикаОбновления>
    пер Обработчики: Массив<СтандартноеПриложение.ОписаниеОбработчикаОбновления>
    пер Сервис = УниверсальныеМеханизмыПоставщикВерсииПриложения.ПолучитьСервис()
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
        УниверсальныеМеханизмы.ИД_ПОДСИСТЕМЫ, 
        "СтроковыеРесурсыЗаполнитьГруппыРесурсов", 
        &СтроковыеРесурсы.ЗаполнитьГруппыРесурсов(),
        Сервис.СтроковыеРесурсыЗаполнитьГруппыРесурсов())) 
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
        УниверсальныеМеханизмы.ИД_ПОДСИСТЕМЫ, 
        "СтроковыеРесурсыУдалитьУстаревшие", 
        &СтроковыеРесурсы.УдалитьУстаревшие(),
        Сервис.СтроковыеРесурсыУдалитьУстаревшие()))
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
        УниверсальныеМеханизмы.ИД_ПОДСИСТЕМЫ, 
        "ШаблоныДокументовЗаполнитьНеобходимоПодписание", 
        &ШаблоныДокументов.ЗаполнитьНеобходимоПодписание(),
        Сервис.ШаблоныДокументовЗаполнитьНеобходимоПодписание()))
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
        УниверсальныеМеханизмы.ИД_ПОДСИСТЕМЫ, 
        "ФайлыПересчитатьРазрешенияДоступаДляОбъектов", 
        &Файлы.ПересчитатьРазрешенияДоступаДляОбъектов(),
        Сервис.ФайлыПересчитатьРазрешенияДоступаДляОбъектов()))
    возврат Обработчики
;

// Конец ОбновляемаяПодсистема

//Контракт ДанныеApi
@ВПроекте
@Реализация
метод МассивТипов(Получатель: ВидПриложения?, ВерсияФорматаОбмена: Версия?): Массив<Тип>
    пер Типы: Массив<Тип>
    возврат Типы
;

@ВПроекте
@Реализация
метод ТипДанныхJson(ТипОбъекта: Тип, ВерсияФорматаОбмена: Версия?): Массив<Тип>
    пер Типы: Массив<Тип>
    выбор ТипОбъекта
    когда Тип<СостояниеДокументов.Ссылка>
        Типы.Добавить(СостояниеДокументов.ТипДанныхJson(ВерсияФорматаОбмена))
    когда Тип<НастройкиПрисоединенныхФайлов.Ссылка>
        Типы.Добавить(НастройкиПрисоединенныхФайлов.ТипДанныхJson(ВерсияФорматаОбмена))
    ;
    возврат Типы
;

@ВПроекте
@Реализация
метод ТипКоллекцииДанныхJson(ТипОбъекта: Тип, ВерсияФорматаОбмена: Версия?): Массив<Тип>
    пер Типы: Массив<Тип>
    выбор ТипОбъекта
    когда Тип<НастройкиПрисоединенныхФайлов.Ссылка>
        Типы.Добавить(НастройкиПрисоединенныхФайлов.ТипКоллекцииДанныхJson(ВерсияФорматаОбмена))
    ;
    возврат Типы
;

@ВПроекте
@Реализация
метод ИнструментыМенеджераОбъекта(ТипОбъекта: Тип): Массив<ВебApiСервер.ИнструментыМенеджераОбъекта>
    пер НаборИнструментыМенеджераОбъекта: Массив<ВебApiСервер.ИнструментыМенеджераОбъекта>
    пер ИнструментыМенеджераОбъекта: ВебApiСервер.ИнструментыМенеджераОбъекта
    выбор ТипОбъекта
    когда Тип<НастройкиПрисоединенныхФайлов.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как НастройкиПрисоединенныхФайлов.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    ;
    возврат НаборИнструментыМенеджераОбъекта
;

@ВПроекте
@Реализация
метод ПолучитьДанныеJson(ТипОбъекта: Тип, Ссылка: ВходящиеДанные.Ссылка|ИсходящиеДанные.Ссылка, 
    Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?): Массив<Объект?>
    
    пер ДанныеJson: Массив<Объект?>
    возврат ДанныеJson
;

@ВПроекте
@Реализация
метод МассивСсылокПоФильтру(ТипОбъекта: Тип, Фильтр: () -> ЧитаемыйМассив<Справочник.Ссылка>): Массив<ЧитаемыйМассив<Справочник.Ссылка>>
    пер МассивСсылок: Массив<ЧитаемыйМассив<Справочник.Ссылка>>
    возврат МассивСсылок
;

@ВПроекте
@Реализация
метод УдалитьОбъекты(ТипОбъекта: Тип, ПараметрыЗапроса: ЧитаемоеСоответствие<Строка, Число|Булево|Ууид|Строка>, Сервисы: ВебApiСервер.СервисыУдаленияОбъектов)
;

@ВПроекте
@Реализация
метод ТипОбъектаJson(ТипОбъекта: Тип): Массив<Строка>
    пер ТипОбъектаJson: Массив<Строка>
    выбор ТипОбъекта
    когда Тип<СостояниеДокументов.Ссылка>
        ТипОбъектаJson.Добавить(СостояниеДокументов.ТипОбъектаJson())
    когда Тип<НастройкиПрисоединенныхФайлов.Ссылка>
        ТипОбъектаJson.Добавить(НастройкиПрисоединенныхФайлов.ТипОбъектаJson())
    ;
    возврат ТипОбъектаJson
;

@ВПроекте
@Реализация
метод ЗагрузитьОбъектИзJson(ТипОбъекта: Тип, ТипДанных: Тип, ДанныеJson: Объект?, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    выбор ТипОбъекта
    когда Тип<СостояниеДокументов.Ссылка>
        выбор ТипДанных
        когда Тип<Неопределено>
            СостояниеДокументов.ЗагрузитьОбъектИзJson(Неопределено, Сервисы)
        ;
    когда Тип<НастройкиПрисоединенныхФайлов.Ссылка>
        выбор ТипДанных
        когда Тип<НастройкиПрисоединенныхФайлов.ДанныеJson>
            НастройкиПрисоединенныхФайлов.ЗагрузитьОбъектИзJson(ДанныеJson как НастройкиПрисоединенныхФайлов.ДанныеJson, Сервисы)
        ;
    ;
;

@ВПроекте
@Реализация
метод ПослеЗаписиГруппыОбъектов(ТипОбъекта: Тип, МассивОбъектовОтложенногоОбновления: Массив<ВебApiСервер.ОбъектОтложенногоОбновления>)
;

@ВПроекте
@Реализация
метод ИзменитьОбъектИзJson(ТипОбъекта: Тип, ДанныеJson: Объект, Сервисы: ВебApiСервер.СервисыЗагрузкиJson, ЗаданиеМодификации: ВебApiСервер.ЗаданиеМодификации)
;

@ВПроекте
@Реализация
метод ЗавершитьИзменениеОбъектИзJson(ТипОбъекта: Тип, МассивСсылок: ЧитаемыйМассив<ВходящиеДанные.Ссылка>, ЗаданиеМодификации: ВебApiСервер.ЗаданиеМодификации)
;

@ВПроекте
@Реализация
метод ГруппаИзмененийВJson(ТипОбъекта: Тип, Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>,
    Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?): Массив<ЧитаемоеСоответствие<Строка, Массив<Объект?>>>
    
    пер ДанныеJson: Массив<ЧитаемоеСоответствие<Строка, Массив<Объект?>>>
    возврат ДанныеJson
;

//Конец ДанныеApi

// Контракт ПараметрыСеансаПоставщик
@ВПроекте
@Реализация
метод КоллекцияПараметровСеанса(МобильныйИнтерфейс: Булево): Соответствие<Строка, Объект>
    пер ПараметрыСеанса = новый УниверсальныеМеханизмы.ПараметрыСеанса()
    для Сервис из РеспондентАнкетированияПоставщик.ПолучитьСервисы()
        ПараметрыСеанса.РеспондентыТекущегоПользователя.ДобавитьВсе(Сервис.РеспондентыТекущегоПользователя())
    ;
    возврат {УниверсальныеМеханизмы.КЛЮЧ_ПАРАМЕТРОВ_СЕАНСА: ПараметрыСеанса}
;
// Конец ПараметрыСеансаПоставщик

// Контракт ДанныеФайлаПоставщик
@ВПроекте
@Реализация
метод ИдФайла(ДанныеФайла: Объект): Массив<Строка>
    пер МассивИд: Массив<Строка>
    МассивИд.Добавить((ДанныеФайла как Файлы.ДанныеФайла).Ссылка.Ид.ВСтроку())
    возврат МассивИд
;

@ВПроекте
@Реализация
метод ИдЗагруженногоФайла(Ид: Строка): Массив<Строка>
    пер МассивИд: Массив<Строка>
    возврат МассивИд
;
// Конец ДанныеФайлаПоставщик

// Контракт НастройкиРаботыСФайлами
@ВПроекте
@Реализация
метод МаксимальныйРазмерЗагружаемыхФайловВМегабайтах(): Число
    возврат УниверсальныеМеханизмы.НастройкиПрисоединенныхФайлов().МаксимальноДопустимыйРазмерФайлаВМегабайтах
;

@ВПроекте
@Реализация
метод АдресОбщихФайлов(): Строка
    возврат "%{СтандартноеПриложение.НастройкиПриложения().АдресПриложения}/api/v2.2/resources"
;

// Конец НастройкиРаботыСФайлами
