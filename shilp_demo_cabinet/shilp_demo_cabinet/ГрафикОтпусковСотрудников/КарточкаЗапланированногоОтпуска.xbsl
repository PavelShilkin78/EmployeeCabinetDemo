импорт ИнтерфейсныеКомпонентыСтандартные
импорт ЛичныеКабинетыПользователей
импорт Обсуждения
импорт ОбщиеСтандартные
импорт ФизическиеЛица
импорт УниверсальныеМеханизмы
импорт ГрафикОтпусков
импорт Компания

@Обработчик
метод ПослеСоздания()
    ОтпускНеПланирует = ДанныеСоставленияГрафикаОтпусков.ОтпускНеПланирует
    Компоненты.ЗапланированныеОтпуска.ДанныеСоставленияГрафикаОтпусков = ДанныеСоставленияГрафикаОтпусков
    Компоненты.Переписка.ПредметОбсуждения = ДанныеСоставленияГрафикаОтпусков.ГрафикОтпусковСотрудника
    пер Обсуждение = Обсуждения.ОбсуждениеПредмета(ДанныеСоставленияГрафикаОтпусков.ГрафикОтпусковСотрудника)
    Компоненты.Переписка.Обсуждение = Обсуждение
    СборГрафиковОтпусков.АктуализироватьУчастниковОбсужденияСВ(Обсуждение, ДанныеСоставленияГрафикаОтпусков.ГрафикОтпусковСотрудника)
    Компоненты.ЗапланированныеОтпуска.ОбновитьДанные()
    ИнтерфейсныеКомпоненты.ИнициализироватьПодчиненныеКомпоненты(Компоненты)
;

метод ПанельОсновнаяЗаписатьИЗакрытьПриНажатии(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    если МенеджерСущности.ЗначениеРеквизитаОбъекта(ГрафикОтпусковСотрудников.ПараметрыСеанса().ГрафикОтпусковПредприятияТекущейКампании, "Состояние") != СостояниеГрафикаОтпусков.Отказано
        ОтразитьЗапланированныеОтпускаФизическогоЛица()
    ;
    Закрыть()
;

метод ПанельОсновнаяЗакрытьПриНажатии(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    ЗакрытьБезИзменений()
    Закрыть()
;

метод ЗакрытьБезИзменений()
    для Период из Компоненты.ЗапланированныеОтпуска.КоллекцияИсточника()
        Период.Удалено = Ложь
    ;    
;

метод ОтразитьЗапланированныеОтпускаФизическогоЛица()
    пер КоллекцияИсточника = Компоненты.ЗапланированныеОтпуска.КоллекцияИсточника()
    если КоллекцияИсточника.Пусто()
        возврат
    ;
    пер КоллекцияДанных = новый Массив<СборГрафиковОтпусков.ПериодыЗапланированногоОтпуска>()
    для Элемент из КоллекцияИсточника
        КоллекцияДанных.Добавить(Элемент)    
    ;
    ОтразитьЗапланированныеОтпускаФизическогоЛица(
        ДанныеСоставленияГрафикаОтпусков.ФизическоеЛицо, 
        КоллекцияДанных, 
        ГрафикОтпусковСотрудников.ПараметрыСеанса().ГодТекущейКампанииСоставленияГрафикаОтпусков,
        ДанныеСоставленияГрафикаОтпусков.ЛичныйКабинетРуководителяСоздан ? СостояниеГрафикаОтпусков.Черновик : СостояниеГрафикаОтпусков.Утверждено
        )
    ИзмененЗапланированныйОтпускФизическогоЛица.Оповестить()
;

метод ПерепискаВидимость(): Булево
    возврат Обсуждения.ИспользуютсяОбсуждения() и ДанныеСоставленияГрафикаОтпусков.ГрафикОтпусковСотрудника != Неопределено
;

метод ПерепискаПодсказкаВвода(): Строка
    пер РодительныйПадеж: Падежи = Падежи.Родительный
    если ДанныеСоставленияГрафикаОтпусков.ФизическоеЛицо == ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо 
        возврат "Введите комментарий к своим пожеланиям..."
    иначе
        возврат "Введите комментарий к пожеланиям %{СклоненияПредставленийОбъектов.ПредставлениеВПадеже(ДанныеСоставленияГрафикаОтпусков.ФизическоеЛицо, РодительныйПадеж)}..."
    ;    
;    

метод КарточкаЗапланированногоОтпускаДоступность(): Булево
    возврат ДанныеСоставленияГрафикаОтпусков.ПервичноеСостояниеКампанииПодразделения != СостояниеГрафикаОтпусков.Утверждено
                или не ДанныеСоставленияГрафикаОтпусков.ЛичныйКабинетРуководителяСоздан
;

метод ФлагОтпускНеПланируюПриИзменении(Источник: Флажок, Событие: СобытиеПриИзменении<Булево?>)
    ВызовСервера.ИзменитьФлагГрафикаОтпуска(ДанныеСоставленияГрафикаОтпусков.ГрафикОтпусковСотрудника, ОтпускНеПланирует)
    ИзмененЗапланированныйОтпускФизическогоЛица.Оповестить()
;

метод ПоказРуководителю(): Булево
    пер ПодразделенияРуководителя = Компания.ПараметрыСеанса().ПодразделенияРуководителя
    возврат ПодразделенияРуководителя.Найти(ДанныеСоставленияГрафикаОтпусков.Подразделение) != Неопределено
;

//Область СлужебныеПроцедурыИФункции

@ВПодсистеме
@НаСервере @ДоступноСКлиента
статический метод ОтразитьЗапланированныеОтпускаФизическогоЛица(ФизическоеЛицо: ФизическиеЛица.Ссылка, КоллекцияДанных: ЧитаемыйМассив<СборГрафиковОтпусков.ПериодыЗапланированногоОтпуска>, ГодТекущейКампанииСоставленияГрафикаОтпусков: Число, СостояниеПериодаОтпуска: СостояниеГрафикаОтпусков)
    // удаляем помеченные периоды
    УдалитьПериодыОтпуска(КоллекцияДанных)     
    // добавляем новые или изменяем отредактированные периоды
    ДобавитьИзменитьПериодыОтпуска(ФизическоеЛицо, КоллекцияДанных, ГодТекущейКампанииСоставленияГрафикаОтпусков, СостояниеПериодаОтпуска)     
;

@НаСервере 
статический метод УдалитьПериодыОтпуска(КоллекцияДанных: ЧитаемыйМассив<СборГрафиковОтпусков.ПериодыЗапланированногоОтпуска>)
    исп Транзакции.Начать()
    для Период из КоллекцияДанных
        если Период.Удалено и Период.ПериодОтпускаСсылка != Неопределено
            пер ПериодОтпуска = Период.ПериодОтпускаСсылка.ЗагрузитьОбъект(Истина)
            если ПериодОтпуска != Неопределено
                ПериодОтпуска.Удалить()
            ;
        ;
    ;
;

@НаСервере 
статический метод ДобавитьИзменитьПериодыОтпуска(ФизическоеЛицо: ФизическиеЛица.Ссылка, КоллекцияДанных: ЧитаемыйМассив<СборГрафиковОтпусков.ПериодыЗапланированногоОтпуска>, ГодТекущейКампанииСоставленияГрафикаОтпусков: Число, СостояниеПериодаОтпуска: СостояниеГрафикаОтпусков)
    исп Транзакции.Начать()
    для Период из КоллекцияДанных
        если Период.Удалено
            или Период.ОшибкаЗаполнения
            или Период.ДатаНачалаПериода.Год != ГодТекущейКампанииСоставленияГрафикаОтпусков
            или Период.ДатаОкончанияПериода.Год != ГодТекущейКампанииСоставленияГрафикаОтпусков
            продолжить
        ;
        если Период.Добавлено
            // добавляем 
            пер ПериодОтпуска = новый ПериодыОтпуска.Объект(
                                    ФизическоеЛицо = ФизическоеЛицо,
                                    ДатаНачала = Период.ДатаНачалаПериода,
                                    ДатаОкончания = Период.ДатаОкончанияПериода,
                                    Состояние = Период.СостояниеЗапланированногоОтпуска)
            ПериодОтпуска.Записать()   
        иначе если Период.ПериодОтпускаСсылка != Неопределено
            пер РедактируемыйПериодОтпуска = Период.ПериодОтпускаСсылка.ЗагрузитьОбъект(Истина)
            если РедактируемыйПериодОтпуска.ФизическоеЛицо == ФизическоеЛицо
                и (РедактируемыйПериодОтпуска.ДатаНачала != Период.ДатаНачалаПериода
                    или РедактируемыйПериодОтпуска.ДатаОкончания != Период.ДатаОкончанияПериода)
                РедактируемыйПериодОтпуска.ДатаНачала = Период.ДатаНачалаПериода
                РедактируемыйПериодОтпуска.ДатаОкончания = Период.ДатаОкончанияПериода
                РедактируемыйПериодОтпуска.Состояние = Период.СостояниеЗапланированногоОтпуска
                РедактируемыйПериодОтпуска.Записать()
            ;
        ;        
    ;
;

//КонецОбласти