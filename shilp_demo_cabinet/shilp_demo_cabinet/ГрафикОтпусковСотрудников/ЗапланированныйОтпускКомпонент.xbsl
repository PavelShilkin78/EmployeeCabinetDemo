импорт Отпуск
импорт ГрафикОтпусков

@Обработчик
метод ПослеСоздания()
    ИзмененЗапланированныйОтпускФизическогоЛица.ПодключитьОбработчик(&ОбновитьДанные)
    ОбновитьДанные()
;

@ВПодсистеме
метод КоллекцияИсточника(): Массив<СборГрафиковОтпусков.ПериодыЗапланированногоОтпуска?>
    возврат Компоненты.ТаблицаЗапланированныхОтпусков.Источник.Данные
;

@ВПодсистеме
метод ОбновитьДанные()
    ЗаполнитьДанные(ДанныеСоставленияГрафикаОтпусков.ЗапланированоПоПериодам)
    НастройкиОтпусков = ТекущиеНастройкиОтпусков()
;

метод ЗаполнитьДанные(Данные: ЧитаемыйМассив<СборГрафиковОтпусков.ПериодыЗапланированногоОтпуска>): Булево
    пер КоллекцияДанных = КоллекцияИсточника()
    КоллекцияДанных.Очистить()
    КоллекцияДанных.ДобавитьВсе(Данные) 
    возврат не Данные.Пусто()
;

метод СписокПослеСозданияСтроки(Источник: Список<ИсточникДанныхМассив<СборГрафиковОтпусков.ПериодыЗапланированногоОтпуска?>>, Событие: СобытиеСДанными<СтрокаСписка<СборГрафиковОтпусков.ПериодыЗапланированногоОтпуска?>>)
    пер КомпонентСтроки: ЗапланированныйОтпускСтрока = Событие.Данные как ЗапланированныйОтпускСтрока
    КомпонентСтроки.СписокВладелец = Источник как ПроизвольныйСписок<ИсточникДанныхМассив<СборГрафиковОтпусков.ПериодыЗапланированногоОтпуска?>>
    КомпонентСтроки.КомпонентВладелец = этот
    КомпонентСтроки.ПоказРуководителю = ПоказРуководителю
    пер ДанныеДляСтроки = этот.ДанныеСоставленияГрафикаОтпусков
    КомпонентСтроки.ФизическоеЛицо = ДанныеДляСтроки.ФизическоеЛицо
    КомпонентСтроки.ПраздничныеДни = ДанныеДляСтроки.ПраздничныеДни
    КомпонентСтроки.ДопустимаяПродолжнительностьОтпускаМенее14Дней = ДанныеДляСтроки.ДопустимаяПродолжнительностьОтпускаМенее14Дней
    КомпонентСтроки.НастройкиОтпусков = этот.НастройкиОтпусков
    КомпонентСтроки.ПроверитьЗаполнение()
;

метод ВвестиПериодПриНажатии(Источник: Кнопка, Событие: СобытиеПриНажатии)
    ГрафикОтпусковСотрудников.ВвестиПериод(КоллекцияИсточника())      
;

метод ОтпускНеМенее14ДнейПрисутствуетВСписке(): Булево 
    пер КоллекцияИсточника = КоллекцияИсточника()
    пер ДанныеДляСтроки = этот.ДанныеСоставленияГрафикаОтпусков
    для СтрокаПериода из КоллекцияИсточника
        если СтрокаПериода.Удалено
            продолжить
        ;
        если Отпуск.ПроверитьПродолжительностьОтпуска(
                СтрокаПериода.ПериодЗапланированногоОтпуска, 
                НастройкиОтпусков, 
                ДанныеДляСтроки.ПраздничныеДни,
                ДанныеДляСтроки.ДопустимаяПродолжнительностьОтпускаМенее14Дней)
            возврат Истина
        ;
    ;
    возврат Ложь
;

//Область СлужебныеПроцедурыИФункции

@ВПодсистеме
@НаСервере @ДоступноСКлиента
статический метод ТекущиеНастройкиОтпусков(): Отпуск.НастройкиОтпусков
    возврат Отпуск.ТекущиеНастройкиОтпусков()    
;

//КонецОбласти