импорт ОбщиеСтандартные

@Обработчик
@ВыполнятьПриЗагрузкеДанных
метод ПередЗаписью(До: ЭкземплярыОценкиПерсоналаПоМетоду360.Данные, ПараметрыЗаписи: ЭкземплярыОценкиПерсоналаПоМетоду360.ПараметрыЗаписи)
    если ЭтоНовый()
        Дата = ДатаВремя.Сейчас()
    ;
    ПредставлениеДокумента = МенеджерСтрок.ПодстрокаСНачала("Лист оценки $Оцениваемый, оценивающий $Оценивающий", 100)
    для Обработчик из ЭкземплярОценкиОбработчики.ПолучитьСервисы()
        Обработчик.ПередЗаписьюЭкземпляраОценки(этот)
    ;
;

@Обработчик
@ВыполнятьПриЗагрузкеДанных
метод ПослеЗаписи(До: ЭкземплярыОценкиПерсоналаПоМетоду360.Данные, ПараметрыЗаписи: ЭкземплярыОценкиПерсоналаПоМетоду360.ПараметрыЗаписи)
    исп КонтекстДоступа.Привилегированный()
    ЭкземплярыОценкиПерсоналаПоМетоду360.ПослеЗаписиДополнение(
        Ссылка = Ссылка,
        ТребуетсяРегистрацияИзменений = ЭкземплярыОценкиПерсоналаПоМетоду360.ТребуетсяРегистрацияИзмененийПослеЗаписи(
            Статус = Статус, 
            СтатусИзменился = Статус != До.Статус, 
            ПараметрыЗаписи = ПараметрыЗаписи
        )
    )
    
    если Статус == СостояниеОценкиПерсонала.Запущена или Статус == СостояниеОценкиПерсонала.Завершена
        для Обработчик из ЭкземплярОценкиОбработчики.ПолучитьСервисы()
            Обработчик.ПослеЗапускаЭкземпляраОценки(этот)
        ;
    ;

    знч СервисыУведомления = УведомленияОценкиПерсонала.ПолучитьСервисы()
    для СервисУведомления из СервисыУведомления
        СервисУведомления.ПослеЗаписиЭкземпляраОценкиПерсоналаПоМетоду360(этот, До, ПараметрыЗаписи)
    ;
;

@Обработчик
@ВыполнятьПриЗагрузкеДанных
метод ПослеУдаления(ПараметрыУдаления: ЭкземплярыОценкиПерсоналаПоМетоду360.ПараметрыУдаления)
    исп КонтекстДоступа.Привилегированный()
    ЭкземплярыОценкиПерсоналаПоМетоду360.ПослеУдаленияДополнение(Ссылка, Истина)
;