импорт ИнтерфейсныеКомпонентыСтандартные
импорт СтандартноеПриложение
импорт Компания
импорт ОбменДанными
импорт ВебApi

// Контракт ОсновнойИнтерфейсПоставщик
@ВПроекте
@Реализация
метод РазделыПриложения(): ЧитаемаяКоллекция<ОсновнойИнтерфейс.ОписаниеРаздела>
    возврат []
;

@ВПроекте
@Реализация
метод Виджеты(): ЧитаемаяКоллекция<ОсновнойИнтерфейс.ОписаниеВиджета>
    если ИспользованиеВиджета()
        возврат [ОписаниеВиджета()]
    иначе
        возврат []
    ;
;

@ВПроекте
@Реализация
метод КомандыВсеФункции(): ЧитаемаяКоллекция<ОсновнойИнтерфейс.ОписательКомандыВсеФункции>
    знч Группа = новый ОсновнойИнтерфейс.ОписательГруппыКомандВсеФункции(ОценкаПерсонала.ИМЯ_РАЗДЕЛА_ОЦЕНКА_ПЕРСОНАЛА, 17)
    возврат [
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Библиотеки компетенций",
            СоздательФормыСписка = метод()-> возврат новый БиблиотекиКомпетенций.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый БиблиотекиКомпетенций.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Компетенции",
            СоздательФормыСписка = метод()-> возврат новый Компетенции.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый Компетенции.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Индикаторы компетенций",
            СоздательФормыСписка = метод()-> возврат новый ИндикаторыКомпетенций.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый ИндикаторыКомпетенций.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Шкалы оценок",
            СоздательФормыСписка = метод()-> возврат новый ШкалыОценок.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый ШкалыОценок.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Экземпляры оценки персонала по методу 360",
            СоздательФормыСписка = метод()-> возврат новый ЭкземплярыОценкиПерсоналаПоМетоду360.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый ЭкземплярыОценкиПерсоналаПоМетоду360.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Используемая функциональность (Оценка персонала)",
            СоздательФормыСписка = метод()-> возврат новый ИспользуемаяФункциональность.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый ИспользуемаяФункциональность.АвтоматическаяФормаОбъекта();
            )
    ]
;

@ВПроекте
@Реализация
метод ДополнительныеКоманды(): ЧитаемыйМассив<Команда>
    возврат []
;

@ВПроекте
@Реализация
метод КомандыПанелиДействий(): ЧитаемыйМассив<Команда>
    возврат []
;

@ВПроекте
@Реализация
метод ДополнительныеКомандыПанелиГлавное(): ЧитаемыйМассив<Команда>
    возврат []
;

// Конец ОсновнойИнтерфейсПоставщик

метод ОписаниеВиджета(): ОсновнойИнтерфейс.ОписаниеВиджета
    возврат новый ОсновнойИнтерфейс.ОписаниеВиджета(
        Ид = ОценкаПерсонала.ИД_РАЗДЕЛА_ОЦЕНКА_ПЕРСОНАЛА,
        ИдРаздела = ОценкаПерсонала.ИД_РАЗДЕЛА_ОЦЕНКА_ПЕРСОНАЛА,
        Имя = "Оценка персонала",
        Компонент = новый ОценкаПерсоналаВиджетСодержимое(),
        Команда = ОценкаПерсонала.СформироватьКомандыВиджета(),
        Пиктограмма = Ресурс{ПиктограммаРаздела.svg}.Ссылка,
        ЦветПиктограммы = БиблиотекаЦветов.ВидыЦвета.Синий
    )    
;

метод ИспользованиеВиджета(): Булево
    возврат ОценкаПерсонала.ПараметрыСеанса().ФункциональныеОпции.ИспользованиеПодсистемы
        и Компания.ПараметрыСеанса().ТекущийПользовательСотрудник
        и ОбменДанными.ВидТекущегоПриложения() == ВидПриложения.Ess
        и ОценкаПерсонала.КоличествоОцениваемыхЭкземпляровТекущегоПользователя() != 0
;