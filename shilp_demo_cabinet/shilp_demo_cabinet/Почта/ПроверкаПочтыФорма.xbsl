импорт ОбщиеСтандартные
импорт ИнтерфейсныеКомпонентыСтандартные

@НаСервере @НаКлиенте
конст ТЕМА_ТЕСТОВОГО_ПИСЬМА = "Тестовое письмо"
конст КОЛИЧЕСТВО_ПРОВЕРОК_СБОРА = 18
конст ИНТЕРВАЛ_ПРОВЕРОК_СБОРА = 10с

@НаСервере @НаКлиенте
@ВПодсистеме
структура ДанныеПочты
    пер Протокол: ПротоколыПочты = ПротоколыПочты.Smtp
    пер Адрес: Строка
;

@НаКлиенте
@ВПодсистеме
перечисление СостояниеПроверки
    Проверка умолчание,
    ТестОкончен
    Ошибка
    НетДанных
    Ожидание
;

@Обработчик
метод ПослеСоздания()
    знч Данные = ДанныеУчетнойЗаписи(УчетнаяЗапись)
    если Данные.Адрес.Пусто()
        Отображение = СостояниеПроверки.НетДанных
        возврат
    ;
    МаксимальныйШагТеста = (Данные.Протокол == ПротоколыПочты.Smtp) ? 2 : 3
    АдресПолучателя = Данные.Адрес
;

метод ЗапуститьТест(Источник: Кнопка, Событие: СобытиеПриНажатии)
    СообщениеОбОшибке = ""
    Отображение = СостояниеПроверки.Ожидание
    
    ТекущийШагТеста = 1
    знч ПодключениеДляОтправки = (ПодключениеОтправки != Неопределено) ? ПодключениеОтправки : ПодключениеКПочте(УчетнаяЗапись)
    пер РезультатОтправки = ОтправитьТестовоеПисьмо(ПодключениеДляОтправки)
    если РезультатОтправки.Статус == СтатусыОтправки.Отправлено
        ТекущийШагТеста = 2
        Отображение = СостояниеПроверки.ТестОкончен
    иначе
        ОбработкаОшибок(РезультатОтправки.Ошибка)
        возврат
    ;
    если МаксимальныйШагТеста == 3
        ТекущийШагТеста = 3
        Отображение = СостояниеПроверки.Ожидание
        если не ПодключениеУстановлено(УчетнаяЗапись)
            Отображение = СостояниеПроверки.Ошибка
            СообщениеОбОшибке = "Ошибка подключения к серверу почты. Проверьте правильность заполнения данных Учетной записи."
            возврат
        ;
    ;
    если ТекущийШагТеста == МаксимальныйШагТеста
        Отображение = СостояниеПроверки.ТестОкончен
    ;
;

метод ОбработкаОшибок(ТипОшибки: ТипыОшибок?)
    Отображение = СостояниеПроверки.Ошибка
    если ТипОшибки == ТипыОшибок.НеВерныйФорматЭлектронногоАдреса
        СообщениеОбОшибке = "Указан неверный формат электроной почты.\нПроверьте правильность написания электронного адреса."
    иначе
        ТекущийШагТеста = 2
        СообщениеОбОшибке = "Ошибка отправки. Проверьте правильность заполнения данных Учетной записи протокола \"SMTP\"."
    ;    
;

метод ПолучитьИзображениеШага(НомерШага: Число): ДвоичныйОбъект.Ссылка
    если Отображение == СостояниеПроверки.Ошибка
        если НомерШага == ТекущийШагТеста
            возврат Ресурс{ОшибкаВКруге.svg}.Ссылка
        ;
    ;
    если НомерШага <= ТекущийШагТеста
        возврат Ресурс{ГалочкаВКруге.svg}.Ссылка
    ;
    выбор НомерШага
    когда 1
        возврат Ресурс{Редактировать.svg}.Ссылка
    когда 2
        возврат Ресурс{ПисьмоКонтур.svg}.Ссылка
    когда 3
        возврат Ресурс{Письмо.svg}.Ссылка
    ;
    возврат Ресурс{Письмо.svg}.Ссылка
;

метод ПолучитьКоннотациюШага(НомерШага: Число): Цвет | Авто
    если Отображение == СостояниеПроверки.Ошибка
        если НомерШага == ТекущийШагТеста
            возврат БиблиотекаЦветов.Цвет(ЦветКоннотацияОшибка)
        ;
    ;
    если НомерШага <= ТекущийШагТеста
        возврат БиблиотекаЦветов.Цвет(ЦветКоннотацияУспех)
    ;
    возврат БиблиотекаЦветов.Цвет(ЦветОсновнаяКоннотация)
;

метод ПолучитьНадписьШага(НомерШага: Число): Строка
    если Отображение == СостояниеПроверки.Ошибка
        если НомерШага == ТекущийШагТеста
            возврат СообщениеОбОшибке
        ;
    ;
    выбор НомерШага
    когда 1
        возврат "Проверка корректности адреса Учетной записи - \"%{АдресПолучателя}\""
    когда 2
        возврат "Проверка отправки по адресу \"%{АдресПолучателя}\" по протоколу \"Smtp\""
    когда 3
        возврат "Проверка подключения с почтовым сервером по адресу \"%{АдресПолучателя}\", для приема почты"
    ;
    возврат ""
;

@НаСервере @ДоступноСКлиента
статический метод ДанныеУчетнойЗаписи(УчетнаяЗапись: УчетныеЗаписиПочты.Ссылка): ДанныеПочты?
    знч УчетнаяЗаписьОбъект = УчетнаяЗапись.ЗагрузитьОбъект()
    пер Данные: ДанныеПочты
    если УчетнаяЗаписьОбъект != Неопределено и не УчетнаяЗаписьОбъект.УчетнаяЗапись.Пусто()
        Данные = новый ДанныеПочты(УчетнаяЗаписьОбъект.Протокол, УчетнаяЗаписьОбъект.АдресЭлектроннойПочты)
    ;
    возврат Данные
;

@НаСервере @ДоступноСКлиента
статический метод ОтправитьТестовоеПисьмо(ПодключениеУчетнойЗаписи: ПодключениеПочтовогоСервера): РезультатОтправки
    знч Сообщение = новый ПочтовоеСообщение(
        Тема = ТЕМА_ТЕСТОВОГО_ПИСЬМА,
        ПолучателиПисьма = [ПодключениеУчетнойЗаписи.АдресЭлектроннойПочты],
        ОтправительПочта = ПодключениеУчетнойЗаписи.АдресЭлектроннойПочты,
        ДатаОтправки = МенеджерДат.ТекущаяДатаВремя()
    )
    
    пер РезультатОтправки = Почта.ОтправитьСообщение(Сообщение, ПодключениеУчетнойЗаписи)
    возврат РезультатОтправки
;

@НаСервере @ДоступноСКлиента
статический метод ПодключениеКПочте(УчетнаяЗапись: УчетныеЗаписиПочты.Ссылка): ПодключениеПочтовогоСервера
    возврат УчетныеЗаписиПочты.Подключение(УчетнаяЗапись)
;

@НаСервере @ДоступноСКлиента
статический метод ПодключениеУстановлено(УчетнаяЗапись: УчетныеЗаписиПочты.Ссылка): Булево
    пер Подключение = УчетныеЗаписиПочты.Подключение(УчетнаяЗапись)
    если Подключение это ПодключениеPop3
        пер Соединение: СоединениеPop3?
        попытка
            Соединение = новый СоединениеPop3(Подключение.Параметры() как ПараметрыПодключенияPop3)
        поймать Ошибка: Исключение
            возврат Ложь
        ;
        возврат Соединение!.Подключено()
        
    иначе если Подключение это ПодключениеImap
        пер Соединение: СоединениеImap?
        попытка
            Соединение = новый СоединениеImap(Подключение.Параметры() как ПараметрыПодключенияImap)
        поймать Ошибка: Исключение
            возврат Ложь
        ;
        возврат Соединение!.Подключено()
    ;
    возврат Ложь
;

метод ЗаглушкаВидимость(): Булево
    возврат Отображение == ПроверкаПочтыФорма.СостояниеПроверки.НетДанных или Отображение == ПроверкаПочтыФорма.СостояниеПроверки.Ожидание
;

метод ЗаглушкаКартинка(): ДвоичныйОбъект.Ссылка
    возврат Отображение == ПроверкаПочтыФорма.СостояниеПроверки.НетДанных ? Ресурс{ПредупреждениеКонтур.svg}.Ссылка : Ресурс{ВремяКонтур.svg}.Ссылка
;

метод ЗаглушкаТекст(): Строка
    возврат Отображение == ПроверкаПочтыФорма.СостояниеПроверки.НетДанных ? "Не передана учетная запись" : "Идет проверка"
;

метод ЗаглушкаПояснение(): Строка
    возврат Отображение == ПроверкаПочтыФорма.СостояниеПроверки.НетДанных ? "Обновите список и откройте окно заново" : "Время ожидания не более 3 минут. Не закрывайте окно до окончания проверки"
;
