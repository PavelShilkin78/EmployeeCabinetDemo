импорт УниверсальныеМеханизмы

//КонтрольДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): ЧитаемаяКоллекция<РазрешениеДоступа>
    возврат ПочтаКонтрольДоступаПоставщик.ПолучитьСервис().ВычислитьРазрешенияДоступаНастройкиПочты()
;

//Конец КонтрольДоступа

@ВПроекте
метод Создать(ДанныеПодключения: ПодключениеПочтовогоСервера)
    знч ПодсистемаВладелец = ДанныеПодключения.ИдПодсистемы.Пусто() ? Почта.ИД_ПОДСИСТЕМЫ : ДанныеПодключения.ИдПодсистемы
    знч УчетнаяЗапись = Подсистема(ПодсистемаВладелец)
    пер НоваяУчетнаяЗапись = УчетнаяЗапись?.ЗагрузитьОбъект() ?? новый УчетныеЗаписиПочты.Объект()
    НоваяУчетнаяЗапись.Наименование = ДанныеПодключения.Наименование
    НоваяУчетнаяЗапись.СерверПочты = ДанныеПодключения.СерверПочты
    НоваяУчетнаяЗапись.ПортСервераПочты = ДанныеПодключения.ПортСервераПочты
    НоваяУчетнаяЗапись.УчетнаяЗапись = ДанныеПодключения.УчетнаяЗапись
    НоваяУчетнаяЗапись.ПарольУчетнойЗаписи = ДанныеПодключения.ПарольУчетнойЗаписи
    НоваяУчетнаяЗапись.Наименование = ДанныеПодключения.Наименование
    НоваяУчетнаяЗапись.РазрешитьStartTls = ДанныеПодключения.РазрешитьStartTls
    НоваяУчетнаяЗапись.ИспользоватьЗащищенноеСоединение = ДанныеПодключения.ИспользоватьЗащищенноеСоединение
    НоваяУчетнаяЗапись.ВладелецПочтыПодсистема = ПодсистемаВладелец
    НоваяУчетнаяЗапись.АдресЭлектроннойПочты = ДанныеПодключения.АдресЭлектроннойПочты
    НоваяУчетнаяЗапись.Записать()
;

@ВПроекте
метод УдалитьСистемнуюУчетнуюЗапись()
    знч УчетнаяЗапись = Подсистема(Почта.ИД_ПОДСИСТЕМЫ)
    если УчетнаяЗапись == Неопределено
        возврат
    ;
    УчетнаяЗапись.ЗагрузитьОбъект().Удалить()
;

@ВПроекте
метод Подсистема(ПодсистемаВладелец: Строка, Протокол: ПротоколыПочты = ПротоколыПочты.Smtp): УчетныеЗаписиПочты.Ссылка?
    знч Запрос = Запрос{
        Выбрать 
            Ссылка
        Из 
            УчетныеЗаписиПочты
        Где
            ВладелецПочтыОбъект == Неопределено
            И ВладелецПочтыПодсистема == %ПодсистемаВладелец
            И Протокол == %Протокол
    }
    исп Результат = Запрос.Выполнить()
    знч РезультатСтроки = новый ЧитаемыйМассив(Результат)
    возврат РезультатСтроки.ПервыйИлиУмолчание()?.Ссылка
;

@ВПроекте
метод ПоПротоколам(Протоколы: Массив<ПротоколыПочты>, РазрешенСбор: Булево = Истина): Массив<УчетныеЗаписиПочты.Ссылка>
    знч Запрос = Запрос{
        Выбрать 
            Ссылка
        Из 
            УчетныеЗаписиПочты
        Где
            Протокол в (%Протоколы)
            И СборПочты == %РазрешенСбор
    }
    пер УчетныеЗаписи = новый Массив<УчетныеЗаписиПочты.Ссылка>()
    для СтрокаРезультата из Запрос.Выполнить()
        УчетныеЗаписи.Добавить(СтрокаРезультата.Ссылка)
    ;
    возврат УчетныеЗаписи
;

@ВПроекте
метод Подключение(УчетнаяЗапись: УчетныеЗаписиПочты.Ссылка): ПодключениеПочтовогоСервера?
    пер Запрос = новый ПроизвольныйЗапрос()
    пер УсловиеФильтра = "УчетныеЗаписи.Ссылка == &УчетнаяЗапись\н"
    Запрос.УстановитьПараметр("УчетнаяЗапись", УчетнаяЗапись)

    пер УчетныеЗаписиПоПротоколу = ФильтрПоУсловию(Запрос, УсловиеФильтра)
    если не УчетныеЗаписиПоПротоколу.Пусто()
        возврат УчетныеЗаписиПоПротоколу.Значения().ПервыйИлиУмолчание()
    ;
    возврат Неопределено
;

@ВПроекте
метод ПодключениеПодсистемы(ПодсистемаВладелец: Строка, ПротоколыПочты = ПротоколыПочты.Smtp): ПодключениеПочтовогоСервера?
    пер Запрос = новый ПроизвольныйЗапрос()
    пер УчетныеЗаписиПоПротоколу = ФильтрПоУсловию(
        Запрос,
        УсловиеФильтра(Запрос, ПодсистемаВладелец, Неопределено, ПротоколыПочты)
    )
    если не УчетныеЗаписиПоПротоколу.Пусто()
        возврат УчетныеЗаписиПоПротоколу.Значения().ПервыйИлиУмолчание()
    ;
    возврат Неопределено
;

@ВПроекте
метод ПодключенияПоВладельцу(ПодсистемаВладелец: Строка, Владелец: ВладелецЭлектроннойПочты.Ссылка? = Неопределено,
            Протокол: ПротоколыПочты? = Неопределено): Соответствие<УчетныеЗаписиПочты.Ссылка, ПодключениеПочтовогоСервера>
    пер Запрос = новый ПроизвольныйЗапрос()
    пер УчетныеЗаписиПоПротоколу = ФильтрПоУсловию(
        Запрос,
        УсловиеФильтра(Запрос, ПодсистемаВладелец, Владелец, Протокол)
    )
    возврат УчетныеЗаписиПоПротоколу
;

@ВПроекте
метод ПодключениеДляСбора(ПодсистемаВладелец: Строка, Владелец: ВладелецЭлектроннойПочты.Ссылка? = Неопределено): ПодключениеПочтовогоСервера?
    пер Запрос = новый ПроизвольныйЗапрос()
    пер УсловиеФильтра = УсловиеФильтра(Запрос, ПодсистемаВладелец, Владелец, Неопределено)
    УсловиеФильтра += " И УчетныеЗаписи.СборПочты == Истина"
    
    пер УчетныеЗаписиСбора = ФильтрПоУсловию(Запрос, УсловиеФильтра)
    если не УчетныеЗаписиСбора.Пусто()
        возврат УчетныеЗаписиСбора.Значения().ПервыйИлиУмолчание()
    ;
    возврат Неопределено
;

@ВПроекте
метод ПодключенияПоПротоколам(Протоколы: Массив<ПротоколыПочты>, СборПочты: Булево = Истина): Соответствие<УчетныеЗаписиПочты.Ссылка, ПодключениеПочтовогоСервера>
    пер Запрос = новый ПроизвольныйЗапрос()
    пер УсловиеФильтра = "УчетныеЗаписи.СборПочты == &СборПочты\н И ("
    Запрос.УстановитьПараметр("СборПочты", СборПочты)
    для Индекс = 0 по Протоколы.Граница()
        если Индекс != 0
            УсловиеФильтра += "\н ИЛИ "
        ;
        УсловиеФильтра += "УчетныеЗаписи.Протокол == ПротоколыПочты." + Протоколы[Индекс].ВСтроку()
    ;
    УсловиеФильтра += ")"
    пер УчетныеЗаписиПоПротоколу = ФильтрПоУсловию(Запрос, УсловиеФильтра)
    возврат УчетныеЗаписиПоПротоколу
;

метод УсловиеФильтра(Запрос: ПроизвольныйЗапрос, ПодсистемаВладелец: Строка, 
        ОбъектВладелец: ВладелецЭлектроннойПочты.Ссылка? = Неопределено, Протокол: ПротоколыПочты?): Строка
    пер ПравилаФильтра = "УчетныеЗаписи.ВладелецПочтыПодсистема == &ПодсистемаВладелец\н"
    Запрос.УстановитьПараметр("ПодсистемаВладелец", ПодсистемаВладелец)
    
    если ОбъектВладелец != Неопределено
        ПравилаФильтра += "И УчетныеЗаписи.ВладелецПочтыОбъект == &ОбъектВладелец\н"
        Запрос.УстановитьПараметр("ОбъектВладелец", ОбъектВладелец)
    иначе
        ПравилаФильтра += "И УчетныеЗаписи.ВладелецПочтыОбъект == Неопределено\н"
    ;
    если Протокол != Неопределено
        ПравилаФильтра += "И УчетныеЗаписи.Протокол == ПротоколыПочты." + Протокол.ВСтроку()
    ;
    возврат ПравилаФильтра
;

метод ФильтрПоУсловию(Запрос: ПроизвольныйЗапрос, ПравилаФильтра: Строка): Соответствие<УчетныеЗаписиПочты.Ссылка, ПодключениеПочтовогоСервера>
    Запрос.Текст = 
    "Выбрать
            УчетныеЗаписи.Ссылка как Ссылка,
            УчетныеЗаписи.Протокол как Протокол,
            УчетныеЗаписи.СерверПочты как СерверПочты,
            УчетныеЗаписи.ПортСервераПочты как ПортСервераПочты,
            УчетныеЗаписи.УчетнаяЗапись как УчетнаяЗапись,
            УчетныеЗаписи.ПарольУчетнойЗаписи как ПарольУчетнойЗаписи,
            УчетныеЗаписи.ИспользоватьЗащищенноеСоединение как ИспользоватьЗащищенноеСоединение,
            УчетныеЗаписи.Наименование как Наименование,
            УчетныеЗаписи.ВладелецПочтыПодсистема как ИдПодсистемы,
            УчетныеЗаписи.РазрешитьStartTls как РазрешитьStartTls,
            УчетныеЗаписи.АдресЭлектроннойПочты как АдресЭлектроннойПочты
        Из 
            УчетныеЗаписиПочты Как УчетныеЗаписи
        Где
            %ПравилаФильтра"

    пер ПодключениеУчетнойЗаписи = новый Соответствие<УчетныеЗаписиПочты.Ссылка, ПодключениеПочтовогоСервера>()
    для СтрокаРезультата из Запрос.Выполнить()
        пер Подключение: ПодключениеПочтовогоСервера?
        если СтрокаРезультата.Протокол == ПротоколыПочты.Smtp
            Подключение = новый ПодключениеSmtp()
        иначе если СтрокаРезультата.Протокол == ПротоколыПочты.Pop3
            Подключение = новый ПодключениеPop3()
        иначе если СтрокаРезультата.Протокол == ПротоколыПочты.Imap
            Подключение = новый ПодключениеImap()
        ;
        Подключение.ИдПодсистемы = СтрокаРезультата.ИдПодсистемы
        Подключение.Наименование = СтрокаРезультата.Наименование
        Подключение.СерверПочты = СтрокаРезультата.СерверПочты
        Подключение.ПортСервераПочты = СтрокаРезультата.ПортСервераПочты
        Подключение.УчетнаяЗапись = СтрокаРезультата.УчетнаяЗапись
        Подключение.ПарольУчетнойЗаписи = СтрокаРезультата.ПарольУчетнойЗаписи
        Подключение.ИспользоватьЗащищенноеСоединение = СтрокаРезультата.ИспользоватьЗащищенноеСоединение
        Подключение.РазрешитьStartTls = СтрокаРезультата.РазрешитьStartTls
        Подключение.АдресЭлектроннойПочты = СтрокаРезультата.АдресЭлектроннойПочты
        ПодключениеУчетнойЗаписи.Вставить(СтрокаРезультата.Ссылка, Подключение)
    ;
    возврат ПодключениеУчетнойЗаписи
;