импорт Стд::ЭлектроннаяПочта
импорт СтандартноеПриложение

@Реализация
@ВПодсистеме
метод АктуальныйЗагрузчик(Подключение: ПодключениеПочтовогоСервера): Булево
    возврат Подключение это ПодключениеImap
;

@Реализация
@ВПодсистеме
метод СинхронизироватьЗаголовки(Подключение: ПодключениеПочтовогоСервера, Фильтр: ФильтрЗаголовков)
    исп Соединение = ПолучитьСоединение(Подключение)
    если Соединение == Неопределено
        возврат
    ;
    пер Входящие = Соединение.ПолучитьКаталог(ВидКаталогаПочты.Входящие)
    Входящие.Открыть(РежимОткрытияКаталогаImap.ЧтениеИЗапись)
    
    для Заголовок из Входящие.ПолучитьЗаголовкиПисем()
        Фильтр.Применить(Заголовок.Заголовки)
        если Фильтр.УсловияВыполнены
            пер Входящее = ЭлектронноеПисьмо.Создать(Заголовок)
            Входящее.Записать()
        ;
    ;
;

@Реализация
@ВПодсистеме
метод Выгрузить(Подключение: ПодключениеПочтовогоСервера, Идентификатор: Объект, ОтметитьНаУдаление: Булево = Ложь): Письмо?
    исп Соединение = ПолучитьСоединение(Подключение)
    если Соединение == Неопределено
        возврат Неопределено
    ;
    пер ИндексПисьма: Число
    попытка
        ИндексПисьма = новый Число(Идентификатор.ВСтроку())
    поймать Ошибка: ИсключениеНедопустимыйФормат
        пер ТекстОшибки = Почта.ТекстОшибки(ТипыОшибок.НеВерныйФорматUid, Ошибка.Описание)
        Журналирование.ЗарегистрироватьОшибку("ОшибкаПочты", ТекстОшибки, Важность = ВажностьСобытияЖурналаСобытий.Высокая)
        возврат Неопределено
    ;
    пер Входящие = Соединение.ПолучитьКаталог(ВидКаталогаПочты.Входящие)
    Входящие.Открыть(РежимОткрытияКаталогаImap.ЧтениеИЗапись)

    знч Письмо = Входящие.НайтиПисьмоПоUid(ИндексПисьма)?.Письмо
    если ОтметитьНаУдаление
        Входящие.ОтметитьНаУдалениеПоUid([ИндексПисьма])
    ;
    возврат Письмо
;

@Реализация
@ВПодсистеме
метод Заполнить(Подключение: ПодключениеПочтовогоСервера, Письма: Множество<ЭлектронноеПисьмо.Ссылка>)
    исп Соединение = ПолучитьСоединение(Подключение)
    если Соединение == Неопределено
        возврат
    ;
    пер Входящие = Соединение.ПолучитьКаталог(ВидКаталогаПочты.Входящие)
    Входящие.Открыть(РежимОткрытияКаталогаImap.ЧтениеИЗапись)
    
    пер ЗаголовкиПоИд = новый Соответствие<Строка, ЗаголовкиПисьмаВСоединенииImap>()
    для Заголовок из Входящие.ПолучитьЗаголовкиПисем()
        если Заголовок.Заголовки.ИдСообщения != Неопределено
            ЗаголовкиПоИд.Вставить(Заголовок.Заголовки.ИдСообщения!.ВНижнийРегистр(), Заголовок)
        ;
    ;
    для ПисьмоСсылка из Письма
        знч ПисьмоОбъект = ПисьмоСсылка.ЗагрузитьОбъект()
        попытка 
            СборПисем.ПередЗагрузкой(ПисьмоОбъект)
        поймать Ошибка: Исключение
            Журналирование.ЗарегистрироватьОшибку(Ошибка)
        ;
        знч ИдСообщения = ПисьмоОбъект.ИдСообщения.ВНижнийРегистр()
        если ЗаголовкиПоИд.Ключи().Содержит(ИдСообщения)
            знч Индекс = ЗаголовкиПоИд.Получить(ИдСообщения).Uid
            пер НайденноеПисьмо = Входящие.НайтиПисьмоПоUid(Индекс).Письмо
            попытка 
                ПисьмоОбъект.Заполнить(НайденноеПисьмо)
                СборПисем.ПослеЗаполнения(ПисьмоОбъект)
                ПисьмоОбъект.Записать()
                СборПисем.ПослеСохранения(ПисьмоОбъект)
            поймать Ошибка: Исключение
                Журналирование.ЗарегистрироватьОшибку(Ошибка)
            ;
        ;
    ;
;

@Реализация
@ВПодсистеме
метод Заполнить(Подключение: ПодключениеПочтовогоСервера, Письмо: ЭлектронноеПисьмо.Ссылка)
    исп Соединение = ПолучитьСоединение(Подключение)
    если Соединение == Неопределено
        возврат
    ;
    пер Входящие = Соединение.ПолучитьКаталог(ВидКаталогаПочты.Входящие)
    Входящие.Открыть(РежимОткрытияКаталогаImap.ЧтениеИЗапись)
    
    знч ПисьмоОбъект = Письмо.ЗагрузитьОбъект()
    СборПисем.ПередЗагрузкой(ПисьмоОбъект)
    
    для Заголовок из Входящие.ПолучитьЗаголовкиПисем()
        если Заголовок.Заголовки.ИдСообщения != Неопределено
            и Заголовок.Заголовки.ИдСообщения.Сравнить(ПисьмоОбъект.ИдСообщения, Истина) == 0
            
            знч НайденноеПисьмо = Входящие.НайтиПисьмоПоUid(Заголовок.Uid)?.Письмо
            если НайденноеПисьмо != Неопределено
                ПисьмоОбъект.Заполнить(НайденноеПисьмо)
                СборПисем.ПослеЗаполнения(ПисьмоОбъект)
                
                ПисьмоОбъект.Записать()
                СборПисем.ПослеСохранения(ПисьмоОбъект)
            ;
        ;
    ;
;

@ВПодсистеме
метод ПолучитьСоединение(Подключение: ПодключениеПочтовогоСервера): СоединениеImap?
    пер Соединение: СоединениеImap?
    попытка
        Соединение = новый СоединениеImap(Подключение.Параметры() как ПараметрыПодключенияImap)
    поймать Ошибка: Исключение
        Журналирование.ЗарегистрироватьОшибку(Ошибка)
        возврат Неопределено
    ;
    если не Соединение.Подключено()
        пер ТекстОшибки = Почта.ТекстОшибки(ТипыОшибок.СоединениеНеУстановленоImap, Подключение.СформироватьПредставление())
        Журналирование.ЗарегистрироватьОшибку("ОшибкаПочты", ТекстОшибки, Неопределено, ВажностьСобытияЖурналаСобытий.Высокая)
        возврат Неопределено
    ;
    возврат Соединение
;
