@Реализация
@ВПроекте
метод Отправить(Сообщение: ПочтовоеСообщение)
    пер ПисьмоОтправляемое: Письмо?
    попытка 
        ПисьмоОтправляемое = КонструкторПисьма.СоздатьИзСообщения(Сообщение)
        КонструкторПисьма.ДобавитьВложения(Сообщение, ПисьмоОтправляемое)
    поймать Ошибка: ИсключениеАдресаПочты
        ОтправкаОтменена += 1
        Результаты.Добавить(
            новый РезультатОтправки(
                Статус = СтатусыОтправки.ПроверкаНеПройдена,
                Ошибка = ТипыОшибок.НеВерныйФорматЭлектронногоАдреса
            )
        )
        возврат
    ;
    Отправить(ПисьмоОтправляемое)
;

@Реализация
@ВПроекте
метод Отправить(ПисьмоОбъект: ЭлектронноеПисьмо.Объект)
    пер ПисьмоОтправляемое: Письмо?
    попытка 
        ПисьмоОтправляемое = КонструкторПисьма.Создать(ПисьмоОбъект)
        КонструкторПисьма.ДобавитьВложения(ПисьмоОбъект.Ссылка, ПисьмоОтправляемое)
    поймать Ошибка: ИсключениеАдресаПочты
        ОтправкаОтменена += 1
        Результаты.Добавить(
            новый РезультатОтправки(
                Статус = СтатусыОтправки.ПроверкаНеПройдена,
                Ошибка = ТипыОшибок.НеВерныйФорматЭлектронногоАдреса,
                ПодробноеОписание = Ошибка.Описание
            )
        )
        возврат
    ;
    Отправить(ПисьмоОтправляемое)
;

@Реализация
@ВПроекте
метод Отправить(Сообщения: Массив<ПочтовоеСообщение>)
    пер ПисьмаНаОтправку: Массив<Письмо>?
    для Сообщение из Сообщения
        попытка
            ПисьмаНаОтправку.Добавить(КонструкторПисьма.СоздатьИзСообщения(Сообщение))
        поймать Ошибка: ИсключениеАдресаПочты
            ОтправкаОтменена += 1
            Результаты.Добавить(
                новый РезультатОтправки(
                    Статус = СтатусыОтправки.ПроверкаНеПройдена,
                    Ошибка = ТипыОшибок.НеВерныйФорматЭлектронногоАдреса
                )
            )
        ;
    ;
    пер ДанныеОтправки = КлиентSmtp.Отправить(
        Подключение.Параметры() как ПараметрыПодключенияSmtp,
        новый ЧитаемыйМассив<Письмо>(ПисьмаНаОтправку)
    )
    для ОтправкаПисьма из ДанныеОтправки
        если ОтправкаПисьма.Успешно()
            ОтправленоУспешно += 1
            Результаты.Добавить(
                новый РезультатОтправки(
                    Статус = СтатусыОтправки.Отправлено,
                    ДатаОтправки = ОтправкаПисьма.Сообщение.ДатаОтправления,
                    ИдСообщения = ОтправкаПисьма.Сообщение.ИдСообщения,
                    РазмерПисьма = ОтправкаПисьма.Сообщение.ВБайты().Размер().ВБайтах()
                )
            )
        иначе
            ОтправкаОтменена += 1
            Результаты.Добавить(
                новый РезультатОтправки(
                    Статус = СтатусыОтправки.ПроверкаНеПройдена,
                    Ошибка = ТипыОшибок.ОтправкаПрервана,
                    ПодробноеОписание = ОтправкаПисьма.Исключение.Описание
                )
            )
        ;
    ;
;

метод Отправить(ЭлектронноеПисьмо: Письмо)
    попытка
        КлиентSmtp.Отправить(
            Подключение.Параметры() как ПараметрыПодключенияSmtp, 
            ЭлектронноеПисьмо
        )
        ОтправленоУспешно = 1
        Результаты.Добавить(
            новый РезультатОтправки(
                Статус = СтатусыОтправки.Отправлено,
                ДатаОтправки = ЭлектронноеПисьмо.ДатаОтправления,
                ИдСообщения = ЭлектронноеПисьмо.ИдСообщения,
                РазмерПисьма = ЭлектронноеПисьмо.ВБайты().Размер().ВБайтах()
            )
        )
    поймать Ошибка: ИсключениеОтправкиПочты
        ОтправкаОтменена += 1
        Результаты.Добавить(
            новый РезультатОтправки(
                Статус = СтатусыОтправки.ОшибкаОтправки,
                Ошибка = ТипыОшибок.ОтправкаПрервана,
                ПодробноеОписание = Ошибка.Описание
            )
        )
    ;
;