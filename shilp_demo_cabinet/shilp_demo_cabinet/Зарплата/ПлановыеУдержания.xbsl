импорт Компания
импорт КонтрольДоступа
импорт ОбщиеСтандартные
импорт ФизическиеЛица
импорт ВебApi

//Область РазрешенияДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): Массив<РазрешениеДоступа>
    возврат [КонтрольДоступа.ЧтениеАутентифицированным(этот),
            КонтрольДоступа.ПолныйДоступИнформационнойСистеме(этот)]    
;

@Обработчик
метод ВычислитьРазрешенияДоступаДляОбъектов(Элементы: ЧитаемыйМассив<ПлановыеУдержания.ДанныеРасчетаРазрешений>): ЧитаемоеСоответствие<ПлановыеУдержания.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    знч Разрешения: Соответствие<ПлановыеУдержания.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    для Элемент из Элементы
        знч РазрешенияЭлемента: Множество<РазрешениеДоступа>
        РазрешенияЭлемента.Добавить(КонтрольДоступа.ПолныйДоступИнформационнойСистеме(этот))
        РазрешенияЭлемента.ДобавитьВсе(КонтрольДоступа.ЧтениеДанныхСправочниковПоПолномочиям(
            [Зарплата.ПолномочиеПросмотрЗарплаты()],
            Элемент.ФизическоеЛицо
        ))
        РазрешенияЭлемента.ДобавитьВсе(КонтрольДоступа.ЧтениеДанныхСправочниковПерсонально([Элемент.ФизическоеЛицо]))
        Разрешения.Вставить(Элемент, РазрешенияЭлемента)
    ;
    возврат Разрешения
;

//КонецОбласти

//Область СлужебныйПрограммныйИнтерфейс

@ВПроекте
структура ДанныеJson
    обз знч employerID:     Строка
    обз знч personID:       Строка
    обз знч contributions:  ЧитаемыйМассив<ВзносыJson>?
;

@ВПодсистеме
структура ВзносыJson
    обз знч expirationDate:     Дата?
    обз знч calculationMethod:  МетодРасчетаJson?
    обз знч percentage:         Число?
    обз знч amount:             Число?
    обз знч presentation:       Строка
;

@ВПодсистеме
перечисление МетодРасчетаJson
    percentage,
    fixedAmount,
    percentageUpToAmount
;


метод СпособРасчетаСоответствие() : Соответствие<МетодРасчетаJson, СпособыРасчетаУдержания>
    знч СпособРасчетаСоответствие: Соответствие<МетодРасчетаJson, СпособыРасчетаУдержания>
    СпособРасчетаСоответствие.Вставить(МетодРасчетаJson.percentage,             СпособыРасчетаУдержания.Процентом)
    СпособРасчетаСоответствие.Вставить(МетодРасчетаJson.fixedAmount,            СпособыРасчетаУдержания.Суммой)
    СпособРасчетаСоответствие.Вставить(МетодРасчетаJson.percentageUpToAmount,   СпособыРасчетаУдержания.ПроцентомНеБолееЗаданнойСуммы)
    возврат СпособРасчетаСоответствие
;

@ВПодсистеме
метод ТипДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    если ВерсияФорматаОбмена == Неопределено
        возврат Тип<ДанныеJson>
    иначе если ВерсияФорматаОбмена >= Версия{1.0}
        возврат Тип<ДанныеJson>
    ;
;

@ВПодсистеме
метод ТипКоллекцииДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    если ВерсияФорматаОбмена == Неопределено
        возврат Тип<Массив<ДанныеJson>>
    иначе если ВерсияФорматаОбмена >= Версия{1.0}
        возврат Тип<Массив<ДанныеJson>>
    ;
;

@ВПодсистеме
метод ТипОбъектаJson(): Строка
    возврат "contributions"
;

@ВПодсистеме
метод ЗагрузитьОбъектИзJson(ДанныеJSON: ДанныеJson, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    
    знч СтрокиУдержаний: Массив<ПлановыеУдержания.Объект>
    знч СпособРасчетаСоответствие = СпособРасчетаСоответствие()
    знч Ключ: Соответствие<Строка, Объект>
        Ключ.Вставить("ГоловнаяОрганизация", Сервисы.ПолучитьСсылку(Организации.ВнешняяСсылка(ДанныеJSON.employerID)))
        Ключ.Вставить("ФизическоеЛицо", Сервисы.ПолучитьСсылку(ФизическиеЛица.ВнешняяСсылка(ДанныеJSON.personID)))
    
    исп Транзакции.Начать()

    если ДанныеJSON.contributions != Неопределено
        знч ФизическоеЛицоСсылка = Сервисы.ПолучитьСсылку(ФизическиеЛица.ВнешняяСсылка(ДанныеJSON.personID)) как ФизическиеЛица.Ссылка
        знч ГоловнаяОрганизацияСсылка = Сервисы.ПолучитьСсылку(Организации.ВнешняяСсылка(ДанныеJSON.employerID)) как Организации.Ссылка  
        для ДанныеСтрокиJSON из ДанныеJSON.contributions
            знч СтрокаУдержаний = новый ПлановыеУдержания.Объект()
            СтрокаУдержаний.ФизическоеЛицо          = ФизическоеЛицоСсылка
            СтрокаУдержаний.ГоловнаяОрганизация     = ГоловнаяОрганизацияСсылка
            СтрокаУдержаний.ДатаОкончания           = ДанныеСтрокиJSON.expirationDate
            если ДанныеСтрокиJSON.calculationMethod != Неопределено
                СтрокаУдержаний.СпособРасчета           = СпособРасчетаСоответствие[ДанныеСтрокиJSON.calculationMethod]
            ;
            если ДанныеСтрокиJSON.percentage != Неопределено
                СтрокаУдержаний.РазмерУдержанияПроцент  = ДанныеСтрокиJSON.percentage
            ;
            если ДанныеСтрокиJSON.amount != Неопределено
                СтрокаУдержаний.РазмерУдержанияСумма    = ДанныеСтрокиJSON.amount    
            ;
            СтрокаУдержаний.ПредставлениеУдержания  = ДанныеСтрокиJSON.presentation 
            СтрокиУдержаний.Добавить(СтрокаУдержаний)
        ;
    ; 

    Сервисы.ЗаписатьКоллекцию(СтрокиУдержаний, Ключ, Тип<ПлановыеУдержания.Ссылка>, Сервисы.ИнструментыМенеджераОбъекта)
;

@ВПодсистеме
метод УдалитьОбъекты(ПараметрыЗапроса: ЧитаемоеСоответствие<Строка, Число|Булево|Ууид|Строка>, Сервисы: ВебApiСервер.СервисыУдаленияОбъектов)
    знч Ключ = {
        "Организация": Сервисы.ПолучитьСсылку(Организации.ВнешняяСсылка(ПараметрыЗапроса["employerID"] как Строка)),
        "ФизическоеЛицо": Сервисы.ПолучитьСсылку(ФизическиеЛица.ВнешняяСсылка(ПараметрыЗапроса["personID"] как Строка))
    }
    Сервисы.УдалитьКоллекцию(Ключ, Тип<ПлановыеУдержания.Ссылка>)
;

//КонецОбласти

//Область JSON

метод ДанныеПлановыхУдержаний(ФизическоеЛицо: ФизическиеЛица.Ссылка, ГоловнаяОрганизация: Организации.Ссылка): ЧитаемоеСоответствие<Строка, Объект?>
    
    знч Запрос = Запрос{
        Выбрать 
            ФизическоеЛицо,
            ГоловнаяОрганизация,
            ДатаОкончания,
            СпособРасчета,
            РазмерУдержанияПроцент,
            РазмерУдержанияСумма,
            ПредставлениеУдержания
        Из 
            ПлановыеУдержания
        Где
            ФизическоеЛицо == %ФизическоеЛицо
            И ГоловнаяОрганизация == %ГоловнаяОрганизация}
    знч Удержания: Массив<ЧитаемоеСоответствие<Строка, Объект?>>
    исп Результат = Запрос.Выполнить() 
    для РезультатСтрока из Результат
        Удержания.Добавить(МенеджерЗапросов.СтрокаРезультатаЗапросаВСоответствие(РезультатСтрока, Результат))
    ;
    возврат {
        "ФизическоеЛицо": ФизическоеЛицо,
        "ГоловнаяОрганизация": ГоловнаяОрганизация,
        "Элементы": Удержания}
;

//КонецОбласти