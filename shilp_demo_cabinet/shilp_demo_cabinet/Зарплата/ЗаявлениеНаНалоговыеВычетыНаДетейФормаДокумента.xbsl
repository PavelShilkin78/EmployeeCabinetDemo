импорт СтандартноеПриложение
импорт ИнтерфейсныеКомпонентыСтандартные
импорт Криптография
импорт ОбменДанными
импорт ОбщегоНазначения
импорт УниверсальныеМеханизмы
импорт ФизическиеЛица
импорт ВладельцыКабинетов
импорт Компания
импорт Компания::Согласования

// Методы заполнения формы

метод ПанельОсновнаяИспользованиеСохранитьЧерновик(): Булево
    возврат не ТолькоПросмотр()
;

метод ЗаявлениеНаНалоговыеВычетыНаДетейФормаДокументаЗаголовок(): Строка
    возврат Компоненты.Содержимое.ЗаголовокФормы()    
;

метод ЗаявлениеНаНалоговыеВычетыНаДетейФормаДокументаВысота(): Число
    возврат ОсновнойИнтерфейс.ВысотаФормыДокумента(100)
;

метод ПанельОсновнаяЗаголовокКнопкиЗаписатьИЗакрыть(): Строка
    возврат не ТолькоПросмотр() ? "Отправить" : "Закрыть" 
;

метод ОсновнойКомпонентПанели(): Компонент
    возврат Компоненты.Содержимое
;

// Конец

// Обработчики событий формы

@Обработчик
метод ПослеЧтения()
    Компоненты.Содержимое.УстановитьТекущееЗаявление(Объект)
    УстановитьРежимПросмотра()
    ИнтерфейсныеКомпоненты.ИнициализироватьПодчиненныеКомпоненты(Компоненты)        
;

метод ПанельОсновнаяСохранитьЧерновик(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    ЗаписатьИЗакрыть(Ложь)
;

метод ПанельОсновнаяЗаписатьИЗакрыть(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    ЗаписатьИЗакрыть(Истина)
;

метод СодержимоеПрисоединенныеФайлыНачатаЗагрузкаФайлов(Источник: ЗаявлениеНаНалоговыеВычетыНаДетейКомпонент, Событие: неизвестно)
    УстановитьДоступностьКоманд(Ложь)
;

метод СодержимоеПрисоединенныеФайлыЗавершенаЗагрузкаФайлов(Источник: ЗаявлениеНаНалоговыеВычетыНаДетейКомпонент, Событие: неизвестно)
    УстановитьДоступностьКоманд(Истина)
;

метод СодержимоеЗавершеноЧтениеДанных(Источник: ЗаявлениеНаНалоговыеВычетыНаДетейКомпонент, Событие: неизвестно)
    Компоненты.ГлавнаяГруппа.ЧтениеДанныхЗавершено = Истина 
;

// Конец

// Прочее

метод ЗаписатьИЗакрыть(ОтправитьНаСогласование: Булево)
    если ТолькоПросмотр()
        Закрыть()
        возврат
    ;
    если ОтправитьНаСогласование и не Криптография.ВвестиПарольЗакрытогоКлюча(Объект.ФизическоеЛицо, Объект.Ссылка)
        возврат
    ;
    
    // Признак ЭтоНовый получаем до записи 
    пер ЭтоНовый = ЭтоНовый()
    пер Состояние: СостоянияДокумента 
    пер ТаблицаДети = Компоненты.Содержимое.ТаблицаДети
    пер ПрисоединенныеФайлы = Компоненты.Содержимое.ПрисоединенныеФайлы()
    если ОтправитьНаСогласование
        если ТаблицаДети.Дети.Пусто() или Объект.Комментарий.Пусто() и ПрисоединенныеФайлы.Пустой()
            выбросить новый ОбщегоНазначения.ОшибкаПроверкиЗаполненияФормы("Добавьте сведения о детях, приложите копии документов или опишите в поле Комментарий причину обращения с этим заявлением.")
        ;
        Состояние = СостоянияДокумента.Подготовлен
    ;
    пер ТабличныеЧасти = новый ЗаявлениеНаНалоговыеВычетыНаДетейКомпонент.ТабличныеЧастиДанные()
    пер ЗаявлениеДети = Компоненты.Содержимое.ЗаявлениеДети()
    если ЗаявлениеДети.СобственнаяМодифицированность
        ТабличныеЧасти.ТаблицаДети = ТаблицаДети
    ;
    пер ТаблицаФайлы = Компоненты.Содержимое.ТаблицаФайлы
    если ПрисоединенныеФайлы.СобственнаяМодифицированность
        если Компоненты.Содержимое.ПрисоединенныеФайлы().ОшибкаЗагрузки
            ОбщегоНазначения.УведомлениеОшибкиЗагрузкиФайлов()
            возврат
        ;
        ОбщегоНазначения.ОчиститьКлиентскиеДанные(ТаблицаФайлы)
        ТабличныеЧасти.ТаблицаФайлы = ТаблицаФайлы
    ;
    пер ДанныеДокумента = новый ДанныеДокумента()
        
    ДанныеДокумента.Ссылка = Объект.Ссылка
    ДанныеДокумента.ФизическоеЛицо = Объект.ФизическоеЛицо
    ДанныеДокумента.Организация = Объект.Организация
    ДанныеДокумента.Дата = Объект.Дата
    ДанныеДокумента.МесяцПрименения = Объект.МесяцПрименения
    ДанныеДокумента.СуммаВычетовНаДетей = Объект.СуммаВычетовНаДетей
    ДанныеДокумента.Комментарий = Объект.Комментарий
    ДанныеДокумента.ПредставлениеДокумента = Заголовок
    пер СостояниеОбмена: ОбменДанными.СостояниеОбмена
    знч РезультатПодписания = Записать(
            ЭтоНовый(), 
            ДанныеДокумента, 
            ТабличныеЧасти, 
            ОтправитьНаСогласование,
            Криптография.ПараметрыСеанса().ПарольЗакрытогоКлючаПользователя, 
            ВладельцыКабинетов.ПараметрыСеанса().ИнформационныеСистемы, СостояниеОбмена)
    если РезультатПодписания.ЕстьОшибки
        СтандартныеФормы.ПоказатьУведомление(
            "Ошибка подписания документа",
            РезультатПодписания.ТекстОшибки,
            ОценкаИнформации.Отрицательная
        )
        возврат
    ;
    
    ЗаявлениеДети.СобственнаяМодифицированность = Ложь
    ПрисоединенныеФайлы.СобственнаяМодифицированность = Ложь
    
    если РассчитаннаяМодифицированность
        СобственнаяМодифицированность = Ложь
    ;
    // Опровещение выполянем перед закрытием - когда уже записаны все данные, сопровождающие запись документа
    знч ДанныеСостояния = СостояниеДокументаКомпонентДанных.Создать()
    ДанныеСостояния.Документ = ДанныеДокумента.Ссылка
    ДанныеСостояния.ДатаДокумента = ДанныеДокумента.Дата
    ДанныеСостояния.Состояние = Состояние
    ДанныеСостояния.ДополнительноеПредставление = СостДокументов.ПредставлениеПериодаДокумента(ДатаДокумента = ДанныеДокумента.Дата)
    ИзмененоСостояниеДокумента.Оповестить(ДанныеСостояния, ЭтоНовый)
    ЗаявленияНаВычетыКлиент.ОповеститьОВыполненномДействии(ОтправитьНаСогласование, СостояниеОбмена)
    Закрыть()
;

метод ТолькоПросмотр(): Булево
    возврат не Компоненты.Содержимое.ВозможноРедактирование()
        или Компоненты.Содержимое.РежимПросмотра
;

метод УстановитьДоступностьКоманд(Доступность: Булево)
    пер ГлавнаяГруппа: КорневойКомпонентМодальнойФормы = Компоненты.ГлавнаяГруппа
    для КоманднаяПанель из ГлавнаяГруппа.КомандныеПанели
         КоманднаяПанель.Доступность = Доступность
    ;
;
//(Источник: КоманднаяПанельФорм, Событие: СобытиеСДанными<Исключение>)
метод ОшибкаПриВыполненииКоманды(Источник: КоманднаяПанельФорм, Событие: СобытиеСДанными<Исключение>)
    Криптография.СброситьПарольЗакрытогоКлючаПриОшибкеВводаПароля(Событие.Данные)
    Компоненты.ГлавнаяГруппа.ПоказатьОшибку(
        ОбщегоНазначения.ОписаниеОшибкиПриДействииСДокументом(Событие.Данные, Объект.ФизическоеЛицо))
;

@НаСервере @НаКлиенте
структура ДанныеДокумента
    пер Ссылка: ЗаявлениеНаНалоговыеВычеты.Ссылка?
    пер ФизическоеЛицо: ФизическиеЛица.Ссылка?
    пер Организация: Организации.Ссылка?
    пер Дата: Дата?
    пер МесяцПрименения: Дата?
    пер ВычетыНаДетей: Булево
    пер СуммаВычетовНаДетей: Число
    пер Комментарий: Строка
    пер ПредставлениеДокумента: Строка
;

@НаСервере @ДоступноСКлиента
статический метод Записать(
            ЭтоНовый: Булево, 
            ДанныеДокумента: ДанныеДокумента, 
            ТабличныеЧасти: ЗаявлениеНаНалоговыеВычетыНаДетейКомпонент.ТабличныеЧастиДанные, 
            ОтправитьНаСогласование: Булево, 
            ПарольЗакрытогоКлюча: Строка?, 
            ИнформационныеСистемы: Соответствие<ИнформационныеСистемы.Ссылка, ОбменДанными.НастройкиИнформационнойСистемы>, 
            СостояниеОбмена: ОбменДанными.СостояниеОбмена): Криптография.РезультатПодписания

    пер Заявление: ЗаявлениеНаНалоговыеВычеты.Объект?
    пер ЗаявлениеСсылка: ЗаявлениеНаНалоговыеВычеты.Ссылка? = ДанныеДокумента.Ссылка
    если ЭтоНовый
        Заявление = новый ЗаявлениеНаНалоговыеВычеты.Объект(ЗаявлениеСсылка.Ид).Заполнить()
    иначе
        Заявление = ЗаявлениеСсылка!.ЗагрузитьОбъект()
    ;
    
    Заявление!.ФизическоеЛицо = ДанныеДокумента.ФизическоеЛицо
    Заявление!.Организация = ДанныеДокумента.Организация
    Заявление!.Дата = ДанныеДокумента.Дата
    Заявление!.МесяцПрименения = ДанныеДокумента.МесяцПрименения
    Заявление!.СуммаВычетовНаДетей = ДанныеДокумента.СуммаВычетовНаДетей
    Заявление!.Комментарий = ДанныеДокумента.Комментарий
    Заявление!.ВычетыНаДетей = Истина
    Заявление!.ПредставлениеДокумента = ДанныеДокумента.ПредставлениеДокумента
    исп Транзакции.Начать()
    Заявление!.Записать()
    если не ТабличныеЧасти.ТаблицаДети == Неопределено
        ЗаявлениеДетиМенеджер.Записать(ТабличныеЧасти.ТаблицаДети)
    ;
    если не ТабличныеЧасти.ТаблицаФайлы == Неопределено
        ПрисоединенныеФайлыМенеджер.Записать(ТабличныеЧасти.ТаблицаФайлы)
    ;
    ПредставленияДокументов.СформироватьПредставленияДокумента(ЗаявлениеСсылка, Истина)
    пер РезультатПодписания: Криптография.РезультатПодписания
    если ОтправитьНаСогласование
        знч ДанныеСогласующего = новый Согласования.ДанныеСогласующего(ДанныеДокумента.ФизическоеЛицо, Согласования.РольПодписантаСотрудник())
        РезультатПодписания = Согласования.ПодписатьИУстановитьСостояниеДокумента(ЗаявлениеСсылка, ДанныеСогласующего, ПарольЗакрытогоКлюча, СостоянияДокумента.Подготовлен, ДанныеДокумента.ФизическоеЛицо)
        если РезультатПодписания.ЕстьОшибки
            возврат РезультатПодписания
        ;
        СостояниеОбмена = ВладельцыКабинетов.ПроверитьСостояниеОбмена(ДанныеДокумента.ФизическоеЛицо)
    ;
    возврат РезультатПодписания
;

метод УстановитьРежимПросмотра()
    если не Компания.ПараметрыСеанса().ТекущийПользовательСотрудник
        Компоненты.Содержимое.РежимПросмотра = Истина
    ;
;

// Конец