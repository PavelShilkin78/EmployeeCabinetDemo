импорт СтандартноеПриложение
импорт УниверсальныеМеханизмы
импорт ОбщиеСтандартные
импорт ФизическиеЛица
импорт ВладельцыКабинетов
импорт ЛичныеКабинетыПользователей
импорт Компания

@Обработчик
метод ПослеСоздания()
    ПрочитатьНалоговыеВычеты()
    ПрочитатьУдержания()
;

метод КоллекцияИсточникаНалоговыеВычеты(): Массив<ПрименяемыйВычет>
    возврат Компоненты.СписокНалоговыхВычетов.Источник.Данные
;

метод ПрочитатьНалоговыеВычеты()
    пер КоллекцияДанных = КоллекцияИсточникаНалоговыеВычеты()
    КоллекцияДанных.Очистить()
    КоллекцияДанных.ДобавитьВсе(НалоговыеВычеты(ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо))
;

метод НалоговыеВычетыОтсутствуютВидимость(): Булево
    возврат КоллекцияИсточникаНалоговыеВычеты().Пусто()
; 

метод НалоговыеВычетыОтсутствуютЗаголовок(): Строка
    пер НалоговыеВычетыОтсутствуютЗаголовок = "При расчете вашей зарплаты налоговые вычеты не применяются."
    если Зарплата.ПараметрыСеанса().ФункциональныеОпции.ЗаявленияНаНалоговыеВычеты
        НалоговыеВычетыОтсутствуютЗаголовок += " Если вы имеете право на налоговые вычеты (на детей, по ипотеке и другие), подайте заявление на вычет."
    ;
    возврат НалоговыеВычетыОтсутствуютЗаголовок
;

метод УдержанияВидимость(): Булево
    возврат Зарплата.ПараметрыСеанса().ФункциональныеОпции.ЗаявленияНаУдержаниеДсвВПфр
;

метод УдержанияОтсутствуютВидимость(): Булево
    возврат КоллекцияИсточникаСписокУдержаний().Пусто()
;

метод СписокЗаявленийПриАктивацииСтроки(Источник: СостояниеДокументовКомпонент, Событие: неизвестно)
    пер Заявление = Событие.Данные
    если Заявление это ЗаявлениеНаНалоговыеВычеты.Ссылка
        пер ВычетыНаДетей: Булево = ЗначениеРеквизитаОбъекта(Заявление, "ВычетыНаДетей")
        если ВычетыНаДетей
            ЗаявлениеНаНалоговыеВычетыНаДетейФормаДокумента.ОткрытьВМодальномОкне(КлючОбъекта = Заявление)
        иначе
            ЗаявлениеНаНалоговыеВычетыФормаДокумента.ОткрытьВМодальномОкне(КлючОбъекта = Заявление)
        ;
    иначе
        ЗаявлениеНаУдержаниеДсвВПфрФормаДокумента.ОткрытьВМодальномОкне(КлючОбъекта = Заявление)
    ;
;

метод ЗаявленияВидимость(): Булево
    пер ЗаявленияВидимость: Булево
    пер ФункциональныеОпции: Зарплата.ФункциональныеОпции 
        = Зарплата.ПараметрыСеанса().ФункциональныеОпции
    если ФункциональныеОпции.ЗаявленияНаНалоговыеВычеты или ФункциональныеОпции.ЗаявленияНаУдержаниеДсвВПфр
        пер СписокЗаявлений: СостояниеДокументовКомпонент = Компоненты.СписокЗаявлений
        ЗаявленияВидимость = не СписокЗаявлений.Пусто()
    ; 
    возврат ЗаявленияВидимость 
;

метод ВычетыИЗаявленияУстановленнаяШиринаОбластиРазмещения(): Число
    возврат ОсновнойИнтерфейс.ШиринаОсновногоОкнаПриложения()
;

метод КоллекцияИсточникаСписокУдержаний(): Массив<ПлановоеУдержание>
    возврат Компоненты.СписокУдержаний.Источник.Данные
;

метод ПрочитатьУдержания()
    пер КоллекцияДанных = КоллекцияИсточникаСписокУдержаний()
    КоллекцияДанных.Очистить()
    КоллекцияДанных.ДобавитьВсе(Удержания(ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо))
;

метод СписокУдержанийВидимость(): Булево
    возврат не УдержанияОтсутствуютВидимость()
;

метод ДополнительноеНаименованиеЗаголовок(ДанныеЭлемента: ПрименяемыйВычет): Строка
    пер ДополнительноеНаименование: Строка
    пер МесяцОкончания: Дата? = ДанныеЭлемента.МесяцОкончания
    если МесяцОкончания != Неопределено
        ДополнительноеНаименование = "Применяется по %{МенеджерДат.ФорматДаты(МесяцОкончания, "ММММ гггг")}"
    ;
    пер СуммаОстатка: Число = ДанныеЭлемента.Остаток
    если СуммаОстатка != 0
        ДополнительноеНаименование = "Остаток: " + (СуммаОстатка).ВСтроку()
    ;
    возврат ДополнительноеНаименование
;

метод СуммаЗаголовок(ДанныеЭлемента: ПрименяемыйВычет): Строка
    пер Сумма: Строка
    если ДанныеЭлемента.Сумма > 9
        Сумма = МенеджерСтрок.ФорматЧисла(ДанныеЭлемента.Сумма)
    ;
    возврат Сумма
;

метод СпособРасчетаЗаголовок(ДанныеЭлемента: ПлановоеУдержание): Строка
    возврат ДанныеЭлемента.СпособРасчета.Представление()
;

метод ПредставлениеУдержанияВидимость(ДанныеЭлемента: ПлановоеУдержание): Булево
    возврат не ДанныеЭлемента.ПредставлениеУдержания.Пусто()
;

метод СпособРасчетаШрифт(ДанныеЭлемента: ПлановоеУдержание): СтилевойШрифт
    возврат ПредставлениеУдержанияВидимость(ДанныеЭлемента) ? СтилевыеШрифты.Мелкий : СтилевыеШрифты.ЗаголовокОбычный
;

метод СпособРасчетаМаксимальнаяВысотаВСтроках(ДанныеЭлемента: ПлановоеУдержание): Число
    возврат ПредставлениеУдержанияВидимость(ДанныеЭлемента) ? 1 : 2
;

метод РазмерУдержанияПредставлениеВысотаВСтроках(ДанныеЭлемента: ПлановоеУдержание): Число
    возврат ДатаОкончанияВидимость(ДанныеЭлемента) ? 1 : 2
;

метод ДатаОкончанияЗаголовок(ДанныеЭлемента: ПлановоеУдержание): Строка
    пер ДатаОкончанияСтрокой: Строка
    если ДанныеЭлемента.ДатаОкончания != Неопределено
        пер ДатаОкончания = МенеджерДат.ФорматДаты(ДанныеЭлемента.ДатаОкончания, "дд.ММ.гггг")
        ДатаОкончанияСтрокой = "до %ДатаОкончания"
    ;
    возврат ДатаОкончанияСтрокой
;

метод ДатаОкончанияВидимость(ДанныеЭлемента: ПлановоеУдержание): Булево
    возврат ДанныеЭлемента.ДатаОкончания != Неопределено
;

метод РазмерУдержанияПредставлениеЗаголовок(ДанныеЭлемента: ПлановоеУдержание): Строка
    пер РазмерУдержанияСтрокой: Строка
    если ДанныеЭлемента.РазмерУдержанияПроцент != 0
        или ДанныеЭлемента.РазмерУдержанияСумма != 0

        если ДанныеЭлемента.СпособРасчета == СпособыРасчетаУдержания.Процентом
            РазмерУдержанияСтрокой = "%{ДанныеЭлемента.РазмерУдержанияПроцент} \%"
        иначе если ДанныеЭлемента.СпособРасчета == СпособыРасчетаУдержания.Суммой
            РазмерУдержанияСтрокой = "%{ДанныеЭлемента.РазмерУдержанияСумма}"
        иначе если ДанныеЭлемента.СпособРасчета == СпособыРасчетаУдержания.ПроцентомНеБолееЗаданнойСуммы
            РазмерУдержанияСтрокой = "%{ДанныеЭлемента.РазмерУдержанияПроцент} \% (не более %{ДанныеЭлемента.РазмерУдержанияСумма})"
        ;
    ;
    возврат РазмерУдержанияСтрокой
;

@НаСервере @ДоступноСКлиента
статический метод НалоговыеВычеты(ФизическоеЛицо: ФизическиеЛица.Ссылка): Массив<ПрименяемыйВычет>
    знч Запрос = Запрос{
        Выбрать 
            Вычеты.МесяцОкончания Как МесяцОкончания, 
            Вычеты.Сумма Как Сумма, 
            Вычеты.Остаток Как Остаток, 
            Вычеты.Комментарий Как Комментарий 
        Из 
            ПрименяемыеВычеты Как Вычеты 
        Где 
            Вычеты.ФизическоеЛицо == %ФизическоеЛицо}

    пер Данные = новый Массив<ПрименяемыйВычет>()
    пер Элемент: ПрименяемыйВычет
    исп Результат = Запрос.Выполнить() 
    для РезультатСтрока из Результат
        Элемент = новый ПрименяемыйВычет()
        Элемент.МесяцОкончания = РезультатСтрока.МесяцОкончания
        Элемент.Сумма = РезультатСтрока.Сумма
        Элемент.Остаток = РезультатСтрока.Остаток
        Элемент.Комментарий = РезультатСтрока.Комментарий
        Данные.Добавить(Элемент)
    ;
    возврат Данные
;

@НаСервере @ДоступноСКлиента
статический метод ЗначениеРеквизитаОбъекта(Ссылка: неизвестно, ИмяРеквизита: Строка): неизвестно
    возврат МенеджерСущности.ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита)
;

@НаСервере @ДоступноСКлиента
статический метод Удержания(ФизическоеЛицо: ФизическиеЛица.Ссылка): Массив<ПлановоеУдержание>
    знч Запрос = Запрос{
        Выбрать 
            ПлановыеУдержания.ДатаОкончания Как ДатаОкончания, 
            ПлановыеУдержания.СпособРасчета Как СпособРасчета, 
            ПлановыеУдержания.РазмерУдержанияПроцент Как РазмерУдержанияПроцент, 
            ПлановыеУдержания.РазмерУдержанияСумма Как РазмерУдержанияСумма, 
            ПлановыеУдержания.ПредставлениеУдержания Как ПредставлениеУдержания 
        Из 
            ПлановыеУдержания Как ПлановыеУдержания 
        Где 
            ПлановыеУдержания.ФизическоеЛицо == %ФизическоеЛицо
            И (%{Дата.Сейчас(ВладельцыКабинетов.ЧасовойПоясФизическогоЛица(ФизическоеЛицо))} <=| ПлановыеУдержания.ДатаОкончания ИЛИ ПлановыеУдержания.ДатаОкончания == Неопределено)}

    пер Данные = новый Массив<ПлановоеУдержание>()
    пер Элемент: ПлановоеУдержание
    исп Результат = Запрос.Выполнить() 
    для РезультатСтрока из Результат
        Элемент = новый ПлановоеУдержание()
        Элемент.ДатаОкончания = РезультатСтрока.ДатаОкончания
        Элемент.СпособРасчета = РезультатСтрока.СпособРасчета
        Элемент.РазмерУдержанияПроцент = РезультатСтрока.РазмерУдержанияПроцент
        Элемент.РазмерУдержанияСумма = РезультатСтрока.РазмерУдержанияСумма
        Элемент.ПредставлениеУдержания = РезультатСтрока.ПредставлениеУдержания
        Данные.Добавить(Элемент)
    ;
    возврат Данные
;

// Контракт ВладелецСостояниеДокументовКомпонент

@ВПроекте
@Реализация
метод ПредставленияДокументов(): ЧитаемаяКоллекция<СостояниеДокументаКомпонентДанных>
    возврат Зарплата.ПредставленияЗаявленийФизлица(ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо)
;

@ВПроекте
@Реализация
метод ПриНажатии(Документ: ДокументИмеющийСостояние.Ссылка, ИдКомпонента: Строка = "")
;

@ВПроекте
@Реализация
метод ТипыОтображаемыхДокументов(): Массив<Тип>
    возврат []
;

// Конец ВладелецСостояниеДокументовКомпонент

метод ЗаявлениеНаВычетыКнопкаВидимость(): Булево
    возврат Компания.ПараметрыСеанса().ТекущийПользовательСотрудник
;