импорт ФизическиеЛица
импорт Компания::Согласования
импорт Криптография
импорт ОбщиеСтандартные
импорт КлиентСервисаПодписания

@ВПодсистеме конст ПОДСИСТЕМА_ЗАРПЛАТА = "Зарплата"

@ВПодсистеме конст РАСЧЕТНЫЙ_ЛИСТ_ОПУБЛИКОВАН_SMS = "РасчетныйЛистОпубликованSms"
@ВПодсистеме конст РАСЧЕТНЫЙ_ЛИСТ_ОПУБЛИКОВАН_PUSH = "РасчетныйЛистОпубликованPush"
@ВПодсистеме конст РАСЧЕТНЫЙ_ЛИСТ_ОПУБЛИКОВАН_EMAIL = "РасчетныйЛистОпубликованEmail"
@ВПодсистеме конст РАСЧЕТНЫЙ_ЛИСТ_ОПУБЛИКОВАН_ТЕМА = "РасчетныйЛистОпубликованТема"
@ВПодсистеме конст РАСЧЕТНЫЙ_ЛИСТ_НАПОМИНАНИЕ_SMS = "РасчетныйЛистНапоминаниеSms"
@ВПодсистеме конст РАСЧЕТНЫЙ_ЛИСТ_НАПОМИНАНИЕ_PUSH = "РасчетныйЛистНапоминаниеPush"
@ВПодсистеме конст РАСЧЕТНЫЙ_ЛИСТ_НАПОМИНАНИЕ_EMAIL = "РасчетныйЛистНапоминаниеEmail"
@ВПодсистеме конст РАСЧЕТНЫЙ_ЛИСТ_НАПОМИНАНИЕ_ТЕМА = "РасчетныйЛистНапоминаниеТема"

@ВПодсистеме
структура ДанныеДляКраткогоЛиста
    обз пер РасчетныйЛист: РасчетныеЛисты.Ссылка
    обз пер Месяц: Дата
    обз пер ПерваяПоловинаМесяца: Булево
    пер Начислено: Число
    пер ВыплаченоНаличными: Число
    пер ВыплаченоНаКарту: Число
    пер Ознакомлен: Булево
;     

@ВПодсистеме
метод КраткиеРасчетныеЛисты(ФизическоеЛицо: ФизическиеЛица.Ссылка, КоличествоМесяцев: Число = 0, ГруппировкаПоГодам: Булево = Ложь): Массив<КраткийРасчетныйЛист>
    пер ТекущийЛист: КраткийРасчетныйЛист
    пер КраткиеРасчетныеЛисты = новый Массив<КраткийРасчетныйЛист>()
    пер ПервыйМесяц: Дата = Дата{1980-01-01}
    знч ИспользованиеКЭДО = Криптография.НастройкиЭлектронныхПодписей().ИспользованиеКЭДО
    
    знч Запрос = Запрос{
        Выбрать
            РасчетныеЛисты.Ссылка Как РасчетныйЛист, 
            Сумма(Выбор Когда ЗарплатаСотрудников.СоставнаяЧасть.Группа == %{ГруппыСоставныхЧастейЗарплаты.Начисления} Тогда ЗарплатаСотрудников.Сумма Иначе 0 Конец).ЗаменитьNull(0) Как Начислено, 
            Сумма(Выбор Когда ЗарплатаСотрудников.СоставнаяЧасть.Вид == %{ВидыСоставныхЧастейЗарплаты.ВыплатаНаличными} Тогда ЗарплатаСотрудников.Сумма Иначе 0 Конец).ЗаменитьNull(0) Как ВыплаченоНаличными, 
            Сумма(Выбор Когда ЗарплатаСотрудников.СоставнаяЧасть.Вид == %{ВидыСоставныхЧастейЗарплаты.ВыплатаЧерезБанк} Тогда ЗарплатаСотрудников.Сумма Иначе 0 Конец).ЗаменитьNull(0) Как ВыплаченоНаКарту, 
            (Не Подписи.Документ Есть Null) или (%ИспользованиеКЭДО и Не СостоянияЗапросовПодписания.Документ Есть Null) Как Ознакомлен, 
            РасчетныеЛисты.Месяц Как Месяц,
            РасчетныеЛисты.ПерваяПоловинаМесяца Как ПерваяПоловинаМесяца 
        Из
            РасчетныеЛисты Как РасчетныеЛисты
            Левое Соединение ЗарплатаСотрудников Как ЗарплатаСотрудников
            По РасчетныеЛисты.Ссылка == ЗарплатаСотрудников.РасчетныйЛист
                И ЗарплатаСотрудников.СоставнаяЧасть.Группа В (%{[ГруппыСоставныхЧастейЗарплаты.Начисления, ГруппыСоставныхЧастейЗарплаты.Выплаты]})
            Левое Соединение СогласованияДокументов Как Подписи
                По РасчетныеЛисты.Ссылка == Подписи.Документ
            Левое Соединение СостоянияЗапросовПодписания Как СостоянияЗапросовПодписания
                По РасчетныеЛисты.Ссылка == СостоянияЗапросовПодписания.Документ
                И СостоянияЗапросовПодписания.СрокИсполнения >= %{МенеджерДат.ТекущаяДатаВремя()}
                И РасчетныеЛисты.ФизическоеЛицо == СостоянияЗапросовПодписания.ВладелецУнэп
        Где
            РасчетныеЛисты.ФизическоеЛицо == %ФизическоеЛицо
            И РасчетныеЛисты.Месяц >=| %ПервыйМесяц
        Сгруппировать По 
            РасчетныеЛисты.Ссылка,
            РасчетныеЛисты.Месяц,
            РасчетныеЛисты.ПерваяПоловинаМесяца,
            Подписи.Документ,
            СостоянияЗапросовПодписания.Документ
        Упорядочить По 
            РасчетныеЛисты.Месяц Убыв,
            РасчетныеЛисты.ПерваяПоловинаМесяца}
    если КоличествоМесяцев != 0
        пер ПоследнийМесяц: Дата? = МесяцПоследнегоОпубликованногоЛиста(ФизическоеЛицо)
        если ПоследнийМесяц == Неопределено
            возврат КраткиеРасчетныеЛисты
        ;
        ПервыйМесяц = ПоследнийМесяц.ДобавитьМесяцы(-КоличествоМесяцев)
    ;
    пер ТекущийГод: Дата?
    пер Год: Дата?
    пер ПервыйГод: Булево = Истина
    исп Результат = Запрос.Выполнить() 
    для РезультатСтрока из Результат
        если ГруппировкаПоГодам
            Год = РезультатСтрока.Месяц.НачалоГода()
            если ТекущийГод != Год
                ТекущийЛист = новый КраткийРасчетныйЛист()
                ТекущийЛист.Месяц = Год
                ТекущийЛист.ЭтоГод = Истина
                ТекущийЛист.ЭтоПервыйГод = ПервыйГод
                ПервыйГод = Ложь 
                КраткиеРасчетныеЛисты.Добавить(ТекущийЛист)
                ТекущийГод = Год
            ;
        ;
        ТекущийЛист = новый КраткийРасчетныйЛист()
        пер Данные: ДанныеДляКраткогоЛиста = новый ДанныеДляКраткогоЛиста(РезультатСтрока.РасчетныйЛист, РезультатСтрока.Месяц, РезультатСтрока.ПерваяПоловинаМесяца)
        Данные.ВыплаченоНаКарту = РезультатСтрока.ВыплаченоНаКарту
        Данные.ВыплаченоНаличными = РезультатСтрока.ВыплаченоНаличными
        Данные.Начислено = РезультатСтрока.Начислено
        Данные.Ознакомлен = РезультатСтрока.Ознакомлен
        ЗаполнитьКраткийРасчетныйЛист(ТекущийЛист, Данные)
        ТекущийЛист.ФизическоеЛицо = ФизическоеЛицо
        ТекущийЛист.ПерваяПоловинаМесяца = РезультатСтрока.ПерваяПоловинаМесяца
        КраткиеРасчетныеЛисты.Добавить(ТекущийЛист)
    ;
    возврат КраткиеРасчетныеЛисты
;

@ВПодсистеме
метод СпособРасчетаУдержанияПоУмолчанию(): СпособыРасчетаУдержания?
    пер ФункциональныеОпции = ИспользуемаяФункциональность.ФункциональныеОпции()
    если ФункциональныеОпции.СпособРасчетаУдержанияПроцентом
        возврат СпособыРасчетаУдержания.Процентом
    иначе если ФункциональныеОпции.СпособРасчетаУдержанияСуммой
        возврат СпособыРасчетаУдержания.Суммой
    иначе если ФункциональныеОпции.СпособРасчетаУдержанияПроцентомНеБолееЗаданнойСуммы
        возврат СпособыРасчетаУдержания.ПроцентомНеБолееЗаданнойСуммы
    ;
    возврат Неопределено  
;

@ВПодсистеме
метод ЗаполнитьКраткийРасчетныйЛист(РасчетныйЛист: КраткийРасчетныйЛист, Данные: ДанныеДляКраткогоЛиста)
    пер Наличными: Число = Данные.ВыплаченоНаличными
    пер НаКарту: Число = Данные.ВыплаченоНаКарту
    пер ВидВыплаты: ВидыСоставныхЧастейЗарплаты?
    если Наличными == 0 и НаКарту == 0
        ВидВыплаты = Неопределено
    иначе если Наличными == 0 и НаКарту > 0
        ВидВыплаты = ВидыСоставныхЧастейЗарплаты.ВыплатаЧерезБанк
    иначе если Наличными > 0 и НаКарту == 0
        ВидВыплаты = ВидыСоставныхЧастейЗарплаты.ВыплатаНаличными
    иначе
        ВидВыплаты = Неопределено
    ;
    РасчетныйЛист.РасчетныйЛист = Данные.РасчетныйЛист
    РасчетныйЛист.Месяц = Данные.Месяц 
    РасчетныйЛист.Начислено = Данные.Начислено 
    РасчетныйЛист.Выплачено = Наличными + НаКарту
    РасчетныйЛист.ВидВыплаты = ВидВыплаты
    РасчетныйЛист.КартинкаВидаВыплаты = АдресКартинкиВидаВыплаты(ВидВыплаты)
    РасчетныйЛист.Ознакомлен = Данные.Ознакомлен
;

/**
Описание: Получает месяц последнего опублиованного расчетного листа для заданного физлица
    если опубликованных листов нет - Неопределено
Параметры:
ФизическоеЛицо - ссылка на физическое лицо
Возвращает:
    Дата начала месяца последнего расчетного листа или Неопределено        
*/
метод МесяцПоследнегоОпубликованногоЛиста(ФизическоеЛицо: ФизическиеЛица.Ссылка): Дата?
    знч Запрос = Запрос{
        Выбрать Первые 1 
             Месяц Как Месяц 
         Из РасчетныеЛисты Как РасчетныеЛисты 
         Где ФизическоеЛицо == %ФизическоеЛицо
         Упорядочить По Месяц Убыв, РасчетныеЛисты.ПерваяПоловинаМесяца}
    исп Результат = Запрос.Выполнить() 
    знч РезультатСтроки = новый ЧитаемыйМассив(Результат)
    если (не РезультатСтроки.Пусто())
        возврат РезультатСтроки[0].Месяц
    иначе
        возврат Неопределено
    ;                        
;

/**
Описание: Получает хронологически последний расчетный лист
    если опубликованных листов нет - Неопределено
Параметры:
ФизическоеЛицо - ссылка на физическое лицо
Возвращает:
    Ссылку на последний расчетный листа или Неопределено        
*/
@ВПодсистеме
метод ПоследнийРасчетныйЛистИнфо(ФизическоеЛицо: ФизическиеЛица.Ссылка): Зарплата.ИнформацияОРасчетномЛисте?
    пер ПоследнийРасчетныйЛистИнфо: Зарплата.ИнформацияОРасчетномЛисте?
    знч Запрос = Запрос{
        Выбрать Первые 1  
             Ссылка Как РасчетныйЛист, 
             Месяц Как Месяц, 
             ПерваяПоловинаМесяца Как ПерваяПоловинаМесяца 
         Из РасчетныеЛисты Как РасчетныеЛисты 
        Где ФизическоеЛицо == %ФизическоеЛицо
        Упорядочить По Месяц Убыв, РасчетныеЛисты.ПерваяПоловинаМесяца}
    исп Результат = Запрос.Выполнить() 
    знч РезультатСтроки = новый ЧитаемыйМассив(Результат)
    если (не РезультатСтроки.Пусто())
        ПоследнийРасчетныйЛистИнфо = новый Зарплата.ИнформацияОРасчетномЛисте(РезультатСтроки[0].РасчетныйЛист, РезультатСтроки[0].Месяц, РезультатСтроки[0].ПерваяПоловинаМесяца)
    ;                        
    возврат ПоследнийРасчетныйЛистИнфо
;

метод АдресКартинкиВидаВыплаты(ВидВыплаты: ВидыСоставныхЧастейЗарплаты?): ДвоичныйОбъект.Ссылка
    если ВидВыплаты == ВидыСоставныхЧастейЗарплаты.ВыплатаНаличными
        возврат Ресурс{ВидыСоставныхЧастей/ВыплатаНаличными.svg}.Ссылка
    иначе если ВидВыплаты == ВидыСоставныхЧастейЗарплаты.ВыплатаЧерезБанк
        возврат Ресурс{ВидыСоставныхЧастей/ВыплатаЧерезБанк.svg}.Ссылка
    иначе
        возврат Ресурс{ВидыСоставныхЧастей/СмешаннаяВыплата.svg}.Ссылка
    ;
;    
