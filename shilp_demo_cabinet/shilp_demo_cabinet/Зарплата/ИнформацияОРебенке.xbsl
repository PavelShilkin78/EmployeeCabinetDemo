импорт СтандартноеПриложение
импорт ИнтерфейсныеКомпонентыСтандартные

@ВПодсистеме
статический метод ОткрытьМодально(ДанныеРебенка: ЗаявлениеДетиСтрока, ТолькоЧтение: Булево = Ложь): Булево
    знч КомпонентИнформацияОРебенке = новый ИнформацияОРебенке(
        ТолькоЧтение = ТолькоЧтение,
        ИсходноеЗаявлениеНаВычетыНаДетей = ДанныеРебенка)
    КомпонентИнформацияОРебенке.Инициализировать()
    знч Записано = КомпонентИнформацияОРебенке.ОткрытьВМодальномОкне() ?? Ложь
    возврат Записано
;

метод Инициализировать()
    СкопироватьДанныеЗаявления(ЗаявлениеНаВычетыНаДетей, ИсходноеЗаявлениеНаВычетыНаДетей)
;

метод ПанельОсновнаяЗаписатьИЗакрыть(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    если ДанныеЗаполнены()
        СкопироватьДанныеЗаявления(ИсходноеЗаявлениеНаВычетыНаДетей, ЗаявлениеНаВычетыНаДетей)
        ИсходноеЗаявлениеНаВычетыНаДетей.Модифицированность = Истина
        Закрыть(Истина)
    ;
;

метод ПанельОсновнаяСохранитьЧерновик(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    Закрыть()
;

метод СкопироватьДанныеЗаявления(ЦелевоеЗаявление: ЗаявлениеДетиСтрока, ИсходноеЗаявление: ЗаявлениеДетиСтрока)
    ЦелевоеЗаявление.Ссылка = ИсходноеЗаявление.Ссылка
    ЦелевоеЗаявление.ФИО = ИсходноеЗаявление.ФИО
    ЦелевоеЗаявление.ДатаРождения = ИсходноеЗаявление.ДатаРождения
    ЦелевоеЗаявление.СтаршинствоРебенка = ИсходноеЗаявление.СтаршинствоРебенка
    ЦелевоеЗаявление.РебенокИнвалид = ИсходноеЗаявление.РебенокИнвалид
    ЦелевоеЗаявление.ЕдинственныйРодитель = ИсходноеЗаявление.ЕдинственныйРодитель
    ЦелевоеЗаявление.Опекун = ИсходноеЗаявление.Опекун
    ЦелевоеЗаявление.ДатаОкончанияПрименения = ИсходноеЗаявление.ДатаОкончанияПрименения
    ЦелевоеЗаявление.Модифицированность = ИсходноеЗаявление.Модифицированность            
;

метод ИнформацияОДетяхФормаВысота(): Число
    возврат ОсновнойИнтерфейс.ВысотаФормыДокумента(100)
;

метод ФиоРезультатПроверкиДанных(): РезультатПроверкиДанных
    возврат СообщениеОбОшибкеФио.Пусто() ? РезультатПроверкиДанных.Отсутствует : РезультатПроверкиДанных.Ошибка   
;

метод ДатаРожденияРезультатПроверкиДанных(): РезультатПроверкиДанных
    возврат СообщениеОбОшибкеДатыРождения.Пусто() ? РезультатПроверкиДанных.Отсутствует : РезультатПроверкиДанных.Ошибка       
;

метод ДанныеЗаполнены(): Булево
    пер РезультатПроверки = Истина
    если ЗаявлениеНаВычетыНаДетей.ФИО.Пусто()
        СообщениеОбОшибкеФио = "Не указано имя"
        РезультатПроверки = Ложь
    иначе
        СообщениеОбОшибкеФио = ""
    ;
    если ЗаявлениеНаВычетыНаДетей.ДатаРождения == Неопределено или ЗаявлениеНаВычетыНаДетей.ДатаРождения == Дата{}
        СообщениеОбОшибкеДатыРождения = "Не указана дата рождения"
        РезультатПроверки = Ложь
    иначе
        СообщениеОбОшибкеДатыРождения = ""
    ;
    возврат РезультатПроверки
;