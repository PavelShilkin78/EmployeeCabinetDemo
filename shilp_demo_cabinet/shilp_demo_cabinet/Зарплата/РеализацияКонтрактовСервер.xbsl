импорт ОбщиеСтандартные
импорт ВебApi
импорт ФизическиеЛица
импорт Компания::Согласования
импорт ОбменДанными
импорт Обсуждения
импорт КонтрольДоступа
импорт УниверсальныеМеханизмы
импорт Криптография
импорт СтандартноеПриложение
импорт ВладельцыКабинетов
импорт Компания
импорт Уведомления
импорт ЛичныеКабинетыПользователей
импорт Статистика
импорт Документы
импорт ПоказателиСтатистики
импорт УниверсальныеМеханизмы::ШаблоныДокументов
импорт КлиентСервисаПодписания
импорт ОбщегоНазначения

//Контракт ОбменДаннымиТипыDtoОбъектовСервис

@ВПроекте
@Реализация
метод ЗаполнитьПредопределенныеТипыDtoОбъектов()
    Зарплата.ДобавитьТипDtoОбъекта()
;

//Конец ОбменДаннымиТипыDtoОбъектовСервис

// Контракт ПараметрыСеансаПоставщик
@ВПроекте
@Реализация
метод КоллекцияПараметровСеанса(МобильныйИнтерфейс: Булево): Соответствие<Строка, Объект>
    пер ПараметрыСеанса = новый Зарплата.ПараметрыСеанса()
    ЗаполнитьПараметрыСеанса(ПараметрыСеанса)
    возврат {Зарплата.КЛЮЧ_ПАРАМЕТРОВ_СЕАНСА: ПараметрыСеанса}
;
// Конец ПараметрыСеансаПоставщик

// Контракт ПредметыОбсужденияПоставщик

@ВПроекте
@Реализация
метод СтруктураСохраненияОбсуждения(ПредметОбсуждения: ПредметОбсуждения.Ссылка?, ТекстСообщения: Строка, ТемаОбсуждения: Строка): Обсуждения.СтруктураСохраненияОбсуждения?
    знч СтруктураСохраненияОбсуждения: Обсуждения.СтруктураСохраненияОбсуждения
    
    если ПредметОбсуждения это РасчетныеЛисты.Ссылка
        знч АвторОбсуждения = ПользователиСистемы.ТекущееФизическоеЛицо()
        
        СтруктураСохраненияОбсуждения.Тема = МенеджерСущности.ПредставлениеСсылки(ПредметОбсуждения)
        СтруктураСохраненияОбсуждения.Представление = СтруктураСохраненияОбсуждения.Тема
        СтруктураСохраненияОбсуждения.Участники = Обсуждения.УчастникиРаспределяемыхОбсуждений()
        СтруктураСохраненияОбсуждения.УчастникиСохраняемые.Добавить(АвторОбсуждения)
        СтруктураСохраненияОбсуждения.ТекстСообщения = ТекстСообщения
        СтруктураСохраненияОбсуждения.ПредметОбсуждения = ПредметОбсуждения
        СтруктураСохраненияОбсуждения.АвторОбсуждения = АвторОбсуждения
        СтруктураСохраненияОбсуждения.Видимость = Ложь
        СтруктураСохраненияОбсуждения.ДопДанные = СериализацияJson.ЗаписатьОбъект(КонтекстОбсужденияРасчетныйЛист(АвторОбсуждения, ПредметОбсуждения как РасчетныеЛисты.Ссылка))
        СтруктураСохраненияОбсуждения.Ключ = новый Ууид().ВСтроку()
        возврат СтруктураСохраненияОбсуждения
    иначе
        возврат Неопределено
    ;
;

метод КонтекстОбсужденияРасчетныйЛист(АвторОбсуждения: ФизическиеЛица.Ссылка, РасчетныйЛист: РасчетныеЛисты.Ссылка): Обсуждения.КонтекстОбсуждения?
    
    пер КонтекстОбсуждения = новый Обсуждения.КонтекстОбсуждения()
    знч Объект: РасчетныеЛисты.Ссылка = РасчетныйЛист
    
    исп ПривилегированныйРежим = КонтекстДоступа.Привилегированный() 
    знч Запрос = Запрос{
        Выбрать первые 1
            ЗарплатаСотрудников.ФизическоеЛицо.Ид как ФизлицоУуид,
            ЗарплатаСотрудников.Организация.Ид как ОрганизацияУуид,
            РасчетныеЛистыНаПодпись.Элемент как Элемент
        Поместить ВТДанныеРасчетногоЛиста
        Из ЗарплатаСотрудников как ЗарплатаСотрудников
            Внутреннее Соединение РасчетныеЛисты.РасчетныеЛистыНаПодпись как РасчетныеЛистыНаПодпись
            по ЗарплатаСотрудников.РасчетныйЛист == РасчетныеЛистыНаПодпись.Владелец 
        Где ЗарплатаСотрудников.РасчетныйЛист == %Объект
        И ЗарплатаСотрудников.ФизическоеЛицо == %{АвторОбсуждения}
        ;            
        Выбрать 
            ФизлицоУуид как ФизлицоУуид,
            ОрганизацияУуид как ОрганизацияУуид,
            СоответствиеИдентификаторовОбъектов.ИдентификаторВнешнегоОбъекта как РасчетныйЛистУуид
        Из ВТДанныеРасчетногоЛиста как ДанныеРасчетногоЛиста
        Внутреннее Соединение СоответствиеИдентификаторовОбъектов как СоответствиеИдентификаторовОбъектов
        По ДанныеРасчетногоЛиста.Элемент == СоответствиеИдентификаторовОбъектов.ИдентификаторЛокальногоОбъекта
        }
        
        
    исп РезультатЗапроса = Запрос.Выполнить()  
    ПривилегированныйРежим.Закрыть() 
   
    знч РезультатЗапросаСтроки = новый ЧитаемыйМассив(РезультатЗапроса)
    если (не РезультатЗапросаСтроки.Пусто())
        КонтекстОбсуждения.personID     = ФизическиеЛица.ВнешняяСсылка(РезультатЗапросаСтроки[0].ФизлицоУуид.ВСтроку()).Идентификатор
        КонтекстОбсуждения.employerID   = Организации.ВнешняяСсылка(РезультатЗапросаСтроки[0].ОрганизацияУуид.ВСтроку()).Идентификатор
        КонтекстОбсуждения.documentID   =  РезультатЗапросаСтроки[0].РасчетныйЛистУуид.ВСтроку()
        КонтекстОбсуждения.applicationID = ИспользованиеОбсуждений.ПолучитьСервис().ИдТекущегоПриложения()
    ;
    
    возврат КонтекстОбсуждения
;

// Конец ПредметыОбсужденияПоставщик

// Контракт СтатистикаПоставщик

@ВПроекте
@Реализация
метод СтатистикаСправочников(): Массив<СтатистикаДанных.Справочник>
    знч СправочникиСтатистика: Массив<СтатистикаДанных.Справочник>
    СправочникиСтатистика.Добавить(СтатистикаДанных.СтатистикаПоСправочнику(Тип<СоставныеЧастиЗарплаты.Ссылка>))
    СправочникиСтатистика.Добавить(СтатистикаДанных.СтатистикаПоСправочнику(Тип<ПрименяемыеВычеты.Ссылка>))
    СправочникиСтатистика.Добавить(СтатистикаДанных.СтатистикаПоСправочнику(Тип<ПлановыеУдержания.Ссылка>))
    возврат СправочникиСтатистика
;

@ВПроекте
@Реализация
метод СтатистикаДокументов(): Массив<СтатистикаДанных.Документ>
    знч ДокументыСтатистика: Массив<СтатистикаДанных.Документ>
    ДокументыСтатистика.ДобавитьВсе(СтатистикаДанных.СтатистикаПоДокументу(ЗаявлениеНаУдержаниеДсвВПфр))
    ДокументыСтатистика.ДобавитьВсе(СтатистикаДанных.СтатистикаПоДокументу(ЗаявлениеНаНалоговыеВычеты))
    возврат ДокументыСтатистика
;

// Конец СтатистикаПоставщик

// Контракт ПодсистемаПриложения

@ВПроекте
@Реализация
метод ОписаниеПодсистемы(): СтандартноеПриложение.ОписаниеПодсистемы
    возврат новый СтандартноеПриложение.ОписаниеПодсистемы(
        Зарплата.ИД_ПОДСИСТЕМЫ,
        {
            ВладельцыКабинетов.ИД_ПОДСИСТЕМЫ, 
            ФизЛица.ИД_ПОДСИСТЕМЫ,
            Компания.ИД_ПОДСИСТЕМЫ,
            Криптография.ИД_ПОДСИСТЕМЫ,
            // Отпуск.ИД_ПОДСИСТЕМЫ,
            // Руководителю.ИД_ПОДСИСТЕМЫ,
            ПолученныеДокументы.ИД_ПОДСИСТЕМЫ,
            КонтрольДоступа.ИД_ПОДСИСТЕМЫ,
            ЛичныеКабинетыПользователей.ИД_ПОДСИСТЕМЫ,
            Уведомления.ИД_ПОДСИСТЕМЫ,
            // ПриложениеНастройки.ИД_ПОДСИСТЕМЫ,
            Статистика.ИД_ПОДСИСТЕМЫ,
            Обсуждения.ИД_ПОДСИСТЕМЫ,
            УниверсальныеМеханизмы.ИД_ПОДСИСТЕМЫ
        }
    )
;

// Конец ПодсистемаПриложения

// Контракт ОбновляемаяПодсистема

@ВПроекте
@Реализация
метод ОбработчикиЗаполнения(): Массив<СтандартноеПриложение.ОписаниеОбработчикаЗаполнения>
    возврат [новый СтандартноеПриложение.ОписаниеОбработчикаЗаполнения(
                    Зарплата.ИД_ПОДСИСТЕМЫ, 
                    "ЗарплатаОбновитьСтроковыеРесурсы", 
                    &Зарплата.ОбновитьСтроковыеРесурсы()
                )
            ]
;

@ВПроекте
@Реализация
метод ОбработчикиОбновления(): Массив<СтандартноеПриложение.ОписаниеОбработчикаОбновления>
    возврат []
;

// Конец ОбновляемаяПодсистема

//Контракт КонтрольДоступаПоПолномочиямСервис

@ВПроекте
@Реализация
метод ЗаполнитьПредопределенныеПолномочия()
    Зарплата.ДобавитьПолномочия()
;

@ВПроекте
@Реализация
метод ЗаполнитьПредопределенныеРоли()
;

@ВПроекте
@Реализация
метод ЗаполнитьПредопределенныеТипыАтрибутов()
;

@ВПроекте
@Реализация
метод СоздатьНаборыОграниченийДоступа()
;

@ВПроекте
@Реализация
метод ТипыАтрибутовПоТипамЗначений(): ЧитаемоеСоответствие<Тип, ТипыАтрибутов.Ссылка>
    возврат {:}
;

//Конец КонтрольДоступаПоПолномочиямСервис

//Контракт ДанныеAPI
@ВПроекте
@Реализация
метод МассивТипов(Получатель: ВидПриложения?, ВерсияФорматаОбмена: Версия?): Массив<Тип>
    пер Типы: Массив<Тип>
    если Получатель == ВидПриложения.Hrm или Получатель == ВидПриложения.Ess
        Типы.Добавить(Тип<ЗаявлениеНаНалоговыеВычеты.Ссылка>)
        Типы.Добавить(Тип<ЗаявлениеНаУдержаниеДсвВПфр.Ссылка>)
    ;
    возврат Типы
;

@ВПроекте
@Реализация
метод ТипДанныхJson(ТипОбъекта: Тип, ВерсияФорматаОбмена: Версия?): Массив<Тип>
    пер Типы: Массив<Тип>
    выбор ТипОбъекта
    когда Тип<ЗарплатаСотрудников.Ссылка>
        Типы.Добавить(ЗарплатаСотрудников.ТипДанныхJson(ВерсияФорматаОбмена))
    когда Тип<ПлановыеУдержания.Ссылка>
        Типы.Добавить(ПлановыеУдержания.ТипДанныхJson(ВерсияФорматаОбмена))
    когда Тип<ПрименениеВычетовНаДетей.Ссылка>
        Типы.Добавить(ПрименениеВычетовНаДетей.ТипДанныхJson(ВерсияФорматаОбмена))
    когда Тип<ПрименяемыеВычеты.Ссылка>
        Типы.Добавить(ПрименяемыеВычеты.ТипДанныхJson(ВерсияФорматаОбмена))
    когда Тип<СоставныеЧастиЗарплаты.Ссылка>
        Типы.Добавить(СоставныеЧастиЗарплаты.ТипДанныхJson(ВерсияФорматаОбмена))
    ;
    возврат Типы
;

@ВПроекте
@Реализация
метод ТипКоллекцииДанныхJson(ТипОбъекта: Тип, ВерсияФорматаОбмена: Версия?): Массив<Тип>
    пер Типы: Массив<Тип>
    выбор ТипОбъекта
    когда Тип<ЗарплатаСотрудников.Ссылка>
        Типы.Добавить(ЗарплатаСотрудников.ТипКоллекцииДанныхJson(ВерсияФорматаОбмена))
    когда Тип<ПлановыеУдержания.Ссылка>
        Типы.Добавить(ПлановыеУдержания.ТипКоллекцииДанныхJson(ВерсияФорматаОбмена))
    когда Тип<ПрименениеВычетовНаДетей.Ссылка>
        Типы.Добавить(ПрименениеВычетовНаДетей.ТипКоллекцииДанныхJson(ВерсияФорматаОбмена))
    когда Тип<ПрименяемыеВычеты.Ссылка>
        Типы.Добавить(ПрименяемыеВычеты.ТипКоллекцииДанныхJson(ВерсияФорматаОбмена))
    когда Тип<СоставныеЧастиЗарплаты.Ссылка>
        Типы.Добавить(СоставныеЧастиЗарплаты.ТипКоллекцииДанныхJson(ВерсияФорматаОбмена))
    ;
    возврат Типы
;

@ВПроекте
@Реализация
метод ИнструментыМенеджераОбъекта(ТипОбъекта: Тип): Массив<ВебApiСервер.ИнструментыМенеджераОбъекта>
    пер НаборИнструментыМенеджераОбъекта: Массив<ВебApiСервер.ИнструментыМенеджераОбъекта>
    пер ИнструментыМенеджераОбъекта: ВебApiСервер.ИнструментыМенеджераОбъекта
    выбор ТипОбъекта
    когда Тип<ЗарплатаСотрудников.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как ЗарплатаСотрудников.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    когда Тип<ПлановыеУдержания.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как ПлановыеУдержания.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    когда Тип<ПрименениеВычетовНаДетей.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как ПрименениеВычетовНаДетей.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    когда Тип<ПрименяемыеВычеты.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как ПрименяемыеВычеты.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    когда Тип<СоставныеЧастиЗарплаты.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как СоставныеЧастиЗарплаты.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    ;
    возврат НаборИнструментыМенеджераОбъекта
;

@ВПроекте
@Реализация
метод ПолучитьДанныеJson(ТипОбъекта: Тип, Ссылка: ВходящиеДанные.Ссылка|ИсходящиеДанные.Ссылка, 
    Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?): Массив<Объект?>
    
    пер ДанныеJson: Массив<Объект?>
    выбор ТипОбъекта
    когда Тип<ЗаявлениеНаНалоговыеВычеты.Ссылка>
        ДанныеJson.Добавить(ЗаявлениеНаНалоговыеВычеты.ПолучитьДанныеJson(Ссылка как ЗаявлениеНаНалоговыеВычеты.Ссылка, Сервисы, ВерсияФорматаОбмена))
    когда Тип<ЗаявлениеНаУдержаниеДсвВПфр.Ссылка>
        ДанныеJson.Добавить(ЗаявлениеНаУдержаниеДсвВПфр.ПолучитьДанныеJson(Ссылка как ЗаявлениеНаУдержаниеДсвВПфр.Ссылка, Сервисы, ВерсияФорматаОбмена))
    ;
    возврат ДанныеJson
;

@ВПроекте
@Реализация
метод МассивСсылокПоФильтру(ТипОбъекта: Тип, Фильтр: () -> ЧитаемыйМассив<Справочник.Ссылка>): Массив<ЧитаемыйМассив<Справочник.Ссылка>>
    пер МассивСсылок: Массив<ЧитаемыйМассив<Справочник.Ссылка>>
    возврат МассивСсылок
;

@ВПроекте
@Реализация
метод УдалитьОбъекты(ТипОбъекта: Тип, ПараметрыЗапроса: ЧитаемоеСоответствие<Строка, Число|Булево|Ууид|Строка>, Сервисы: ВебApiСервер.СервисыУдаленияОбъектов)
    выбор ТипОбъекта
    когда Тип<ЗарплатаСотрудников.Ссылка>
        ЗарплатаСотрудников.УдалитьОбъекты(ПараметрыЗапроса, Сервисы)
    когда Тип<ПлановыеУдержания.Ссылка>
        ПлановыеУдержания.УдалитьОбъекты(ПараметрыЗапроса, Сервисы)
    когда Тип<ПрименениеВычетовНаДетей.Ссылка>
        ПрименениеВычетовНаДетей.УдалитьОбъекты(ПараметрыЗапроса, Сервисы)
    когда Тип<ПрименяемыеВычеты.Ссылка>
        ПрименяемыеВычеты.УдалитьОбъекты(ПараметрыЗапроса, Сервисы)
    ;
;

@ВПроекте
@Реализация
метод ТипОбъектаJson(ТипОбъекта: Тип): Массив<Строка>
    пер ТипОбъектаJson: Массив<Строка>
    выбор ТипОбъекта
    когда Тип<ЗарплатаСотрудников.Ссылка>
        ТипОбъектаJson.Добавить(ЗарплатаСотрудников.ТипОбъектаJson())
    когда Тип<ПлановыеУдержания.Ссылка>
        ТипОбъектаJson.Добавить(ПрименениеВычетовНаДетей.ТипОбъектаJson())
    когда Тип<ПрименениеВычетовНаДетей.Ссылка>
        ТипОбъектаJson.Добавить(ПрименениеВычетовНаДетей.ТипОбъектаJson())
    когда Тип<ПрименяемыеВычеты.Ссылка>
        ТипОбъектаJson.Добавить(ПрименяемыеВычеты.ТипОбъектаJson())
    когда Тип<СоставныеЧастиЗарплаты.Ссылка>
        ТипОбъектаJson.Добавить(СоставныеЧастиЗарплаты.ТипОбъектаJson())
    ;
    возврат ТипОбъектаJson
;

@ВПроекте
@Реализация
метод ЗагрузитьОбъектИзJson(ТипОбъекта: Тип, ТипДанных: Тип, ДанныеJson: Объект?, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    выбор ТипОбъекта
    когда Тип<ЗарплатаСотрудников.Ссылка>
        выбор ТипДанных
        когда Тип<ЗарплатаСотрудников.ДанныеJson>
            ЗарплатаСотрудников.ЗагрузитьОбъектИзJson(ДанныеJson как ЗарплатаСотрудников.ДанныеJson, Сервисы)
        ;
    когда Тип<ПлановыеУдержания.Ссылка>
        выбор ТипДанных
        когда Тип<ПлановыеУдержания.ДанныеJson>
            ПлановыеУдержания.ЗагрузитьОбъектИзJson(ДанныеJson как ПлановыеУдержания.ДанныеJson, Сервисы)
        ;
    когда Тип<ПрименениеВычетовНаДетей.Ссылка>
        выбор ТипДанных
        когда Тип<ПрименениеВычетовНаДетей.ДанныеJson>
            ПрименениеВычетовНаДетей.ЗагрузитьОбъектИзJson(ДанныеJson как ПрименениеВычетовНаДетей.ДанныеJson, Сервисы)
        ;
    когда Тип<ПрименяемыеВычеты.Ссылка>
        выбор ТипДанных
        когда Тип<ПрименяемыеВычеты.ДанныеJson>
            ПрименяемыеВычеты.ЗагрузитьОбъектИзJson(ДанныеJson как ПрименяемыеВычеты.ДанныеJson, Сервисы)
        ;
    когда Тип<СоставныеЧастиЗарплаты.Ссылка>
        выбор ТипДанных
        когда Тип<СоставныеЧастиЗарплаты.ДанныеJson>
            СоставныеЧастиЗарплаты.ЗагрузитьОбъектИзJson(ДанныеJson как СоставныеЧастиЗарплаты.ДанныеJson, Сервисы)
        ;
    ;
;

@ВПроекте
@Реализация
метод ПослеЗаписиГруппыОбъектов(ТипОбъекта: Тип, МассивОбъектовОтложенногоОбновления: Массив<ВебApiСервер.ОбъектОтложенногоОбновления>)
;

@ВПроекте
@Реализация
метод ИзменитьОбъектИзJson(ТипОбъекта: Тип, ДанныеJson: Объект, Сервисы: ВебApiСервер.СервисыЗагрузкиJson, ЗаданиеМодификации: ВебApiСервер.ЗаданиеМодификации)
;

@ВПроекте
@Реализация
метод ЗавершитьИзменениеОбъектИзJson(ТипОбъекта: Тип, МассивСсылок: ЧитаемыйМассив<ВходящиеДанные.Ссылка>, ЗаданиеМодификации: ВебApiСервер.ЗаданиеМодификации)
;

@ВПроекте
@Реализация
метод ГруппаИзмененийВJson(ТипОбъекта: Тип, Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>,
    Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?): Массив<ЧитаемоеСоответствие<Строка, Массив<Объект?>>>
    
    пер ДанныеJson: Массив<ЧитаемоеСоответствие<Строка, Массив<Объект?>>>
    выбор ТипОбъекта
    когда Тип<ЗаявлениеНаНалоговыеВычеты.Ссылка>
        ДанныеJson.Добавить(ЗаявлениеНаНалоговыеВычеты.ГруппаИзмененийВJson(Ссылки, Сервисы, ВерсияФорматаОбмена))
    когда Тип<ЗаявлениеНаУдержаниеДсвВПфр.Ссылка>
        ДанныеJson.Добавить(ЗаявлениеНаУдержаниеДсвВПфр.ГруппаИзмененийВJson(Ссылки, Сервисы, ВерсияФорматаОбмена))
    ;
    возврат ДанныеJson
;

//Конец ДанныеApi

// Контракт СогласованияПользователь
@ВПроекте
@Реализация
метод СформироватьПредставленияДокумента(Документ: ПодписываемыйДокумент.Ссылка)
    выбор Документ
    когда это ЗаявлениеНаНалоговыеВычеты.Ссылка,
        это ЗаявлениеНаУдержаниеДсвВПфр.Ссылка
        
        ПредставленияДокументов.СформироватьПредставленияДокумента(Документ как Справочник.Ссылка, Ложь)
    ;
;

@ВПроекте
@Реализация
метод ДокументСогласованияJson(ДанныеОбъекта: ЧитаемоеСоответствие<Строка, Объект?>,
    Сервисы: ВебApiСервер.СервисыУпаковкиJson): СогласованияДокументов.ДокументСогласованияJson?
    
    знч Документ = ДанныеОбъекта["Документ"] как Справочник.Ссылка
    выбор Документ
    когда это ЗаявлениеНаНалоговыеВычеты.Ссылка,
        это ЗаявлениеНаУдержаниеДсвВПфр.Ссылка
        
        возврат новый СогласованияДокументов.ДокументСогласованияJson(
            Документ.Ид.ВСтроку()
        )
    ;
    
    возврат Неопределено
;

@ВПроекте
@Реализация
метод ПослеПодписанияДокумента(Документ: ПодписываемыйДокумент.Ссылка, ДанныеСогласующего: Согласования.ДанныеСогласующего, ОбновитьПредставление: Булево)
    пер ЭтоДокументПодсистемы = Ложь
    выбор Документ
    когда это ЗаявлениеНаНалоговыеВычеты.Ссылка
        ЭтоДокументПодсистемы = Истина
        ЗаявлениеНаНалоговыеВычеты.ПослеПодписания(Документ как ЗаявлениеНаНалоговыеВычеты.Ссылка, ДанныеСогласующего)
    когда это ЗаявлениеНаУдержаниеДсвВПфр.Ссылка
        ЭтоДокументПодсистемы = Истина
        ЗаявлениеНаУдержаниеДсвВПфр.ПослеПодписания(Документ как ЗаявлениеНаУдержаниеДсвВПфр.Ссылка, ДанныеСогласующего)
    ;
    если ЭтоДокументПодсистемы и ОбновитьПредставление
        СформироватьПредставленияДокумента(Документ)
    ;
;

@ВПроекте
@Реализация
метод ОтправлятьСогласование(Документ: ПодписываемыйДокумент.Ссылка): Булево
    выбор Документ
    когда это ЗаявлениеНаНалоговыеВычеты.Ссылка,
        это ЗаявлениеНаУдержаниеДсвВПфр.Ссылка
        
        возврат ОбменДанными.ЭтоОтправляемыйДокумент(Документ как ИсходящиеДанные.Ссылка)
    ;
    
    возврат Ложь
;

@ВПроекте
@Реализация
метод ДокументыНаСогласовании(Согласующий: ФизическиеЛица.Ссылка): ЧитаемыйМассив<ПодписываемыйДокумент.Ссылка>
    возврат []
;

@ВПроекте
@Реализация
метод ДокументыСогласованные(Согласующий: ФизическиеЛица.Ссылка): ЧитаемыйМассив<ПодписываемыйДокумент.Ссылка>
    возврат []
;

@ВПроекте
@Реализация
метод ДокументДляОзнакомления(Документ: ПодписываемыйДокумент.Ссылка): Булево
    возврат Ложь
;

@ВПроекте
@Реализация
метод ПравилаСогласованияПоУмолчанию(): ЧитаемыйМассив<Согласования.ПравилоСогласования>
    возврат []
;

@ВПроекте
@Реализация
метод ЗаполнитьПредопределенныеВидыСогласуемыхЗаявлений()
;

@ВПроекте
@Реализация
метод ЗаполнитьПредопределенныеРолиПодписантов()
;

конст ЗАЯВЛЕНИЕ_НА_НАЛОГОВЫЕ_ВЫЧЕТЫ = "ЗаявлениеНаНалоговыеВычеты"
конст ЗАЯВЛЕНИЕ_НА_УДЕРЖАНИЕ_ДСВ_В_ПФР = "ЗаявлениеНаУдержаниеДсвВПфр"
конст РАСЧЕТНЫЕ_ЛИСТЫ = "РасчетныеЛисты"

@ВПроекте
@Реализация
метод ЗаполнитьПредопределенныеТипыСогласуемыхДокументов()
    Согласования.ДобавитьПредопределенныйТипСогласуемогоДокумента(ЗАЯВЛЕНИЕ_НА_НАЛОГОВЫЕ_ВЫЧЕТЫ)
    Согласования.ДобавитьПредопределенныйТипСогласуемогоДокумента(ЗАЯВЛЕНИЕ_НА_УДЕРЖАНИЕ_ДСВ_В_ПФР)
    Согласования.ДобавитьПредопределенныйТипСогласуемогоДокумента(РАСЧЕТНЫЕ_ЛИСТЫ)
;

@ВПроекте
@Реализация
метод ТипСогласуемогоДокумента(ОбъектСогласования: ПодписываемыйДокумент.Ссылка|ВидыСогласуемыхЗаявлений.Ссылка): ТипыСогласуемыхДокументов.Ссылка?
    выбор ОбъектСогласования
    когда это ЗаявлениеНаНалоговыеВычеты.Ссылка
        возврат Согласования.НайтиТипСогласуемогоДокумента(ЗАЯВЛЕНИЕ_НА_НАЛОГОВЫЕ_ВЫЧЕТЫ)
    когда это ЗаявлениеНаУдержаниеДсвВПфр.Ссылка
        возврат Согласования.НайтиТипСогласуемогоДокумента(ЗАЯВЛЕНИЕ_НА_УДЕРЖАНИЕ_ДСВ_В_ПФР)
    когда это РасчетныеЛисты.Ссылка
        возврат Согласования.НайтиТипСогласуемогоДокумента(РАСЧЕТНЫЕ_ЛИСТЫ)
    ;
    
    возврат Неопределено
;

@ВПроекте
@Реализация
метод ТипыСогласуемыхДокументовПолучателя(Получатель: ВидПриложения?): Массив<ТипыСогласуемыхДокументов.Ссылка>
    пер Типы: Массив<ТипыСогласуемыхДокументов.Ссылка>
    если Получатель == ВидПриложения.Hrm
        Типы.Добавить(Согласования.НайтиТипСогласуемогоДокумента(ЗАЯВЛЕНИЕ_НА_НАЛОГОВЫЕ_ВЫЧЕТЫ))
        Типы.Добавить(Согласования.НайтиТипСогласуемогоДокумента(ЗАЯВЛЕНИЕ_НА_УДЕРЖАНИЕ_ДСВ_В_ПФР))
        Типы.Добавить(Согласования.НайтиТипСогласуемогоДокумента(РАСЧЕТНЫЕ_ЛИСТЫ))
    ;
    возврат Типы
;

@ВПроекте
@Реализация
метод РольСогласующегоЗаявления(ВидЗаявления: ВидыСогласуемыхЗаявлений.Ссылка): Роли.Ссылка?
    возврат Неопределено
;

@ВПроекте
@Реализация
метод ВидСогласуемогоЗаявления(Документ: ПодписываемыйДокумент.Ссылка): ВидыСогласуемыхЗаявлений.Ссылка?
    возврат Неопределено
;

@ВПроекте
@Реализация
метод Согласуемый(Документ: ПодписываемыйДокумент.Ссылка): ФизическиеЛица.Ссылка?
    возврат Неопределено
;

@ВПроекте
@Реализация
метод ИдентификаторыЭлектронныхДокументов(Документ: ПодписываемыйДокумент.Ссылка): ЧитаемыйМассив<Строка>
    возврат []
;

// Конец СогласованияПользователь

// Контракт ПодписываемыйДокументПоставщикОграничений

@ВПроекте
@Реализация
метод РазрешенияДоступаПодписываемыхДокументов(Документы: ЧитаемыйМассив<ПодписываемыйДокумент.Ссылка>): ЧитаемоеСоответствие<ПодписываемыйДокумент.Ссылка, ЧитаемыйМассив<РазрешениеДоступа>>
    знч Разрешения: Соответствие<ПодписываемыйДокумент.Ссылка, ЧитаемыйМассив<РазрешениеДоступа>>
    знч ВладельцыСогласуемыхДокументов: Соответствие<ПодписываемыйДокумент.Ссылка, ЧитаемыйМассив<ФизическиеЛица.Ссылка>>
    знч ДокументыЗаявлениеНаНалоговыеВычеты: Массив<ЗаявлениеНаНалоговыеВычеты.Ссылка>
    знч ДокументыЗаявлениеНаУдержаниеДсвВПфр: Массив<ЗаявлениеНаУдержаниеДсвВПфр.Ссылка>
    знч ДокументыРасчетныеЛисты: Массив<РасчетныеЛисты.Ссылка>
    знч ДокументыПодсистемы: Массив<ПодписываемыйДокумент.Ссылка>
    для Документ из Документы
        выбор Документ
        когда это ЗаявлениеНаНалоговыеВычеты.Ссылка
            ДокументыЗаявлениеНаНалоговыеВычеты.Добавить(Документ как ЗаявлениеНаНалоговыеВычеты.Ссылка)
            ДокументыПодсистемы.Добавить(Документ)
        когда это ЗаявлениеНаУдержаниеДсвВПфр.Ссылка
            ДокументыЗаявлениеНаУдержаниеДсвВПфр.Добавить(Документ как ЗаявлениеНаУдержаниеДсвВПфр.Ссылка)
            ДокументыПодсистемы.Добавить(Документ)
        когда это РасчетныеЛисты.Ссылка
            ДокументыРасчетныеЛисты.Добавить(Документ как РасчетныеЛисты.Ссылка)
            ДокументыПодсистемы.Добавить(Документ)
        ;
    ;   
        
    ВладельцыСогласуемыхДокументов.ВставитьВсе(ЗаявлениеНаНалоговыеВычеты.ФизическиеЛицаДокументов(ДокументыЗаявлениеНаНалоговыеВычеты))
    ВладельцыСогласуемыхДокументов.ВставитьВсе(ЗаявлениеНаУдержаниеДсвВПфр.ФизическиеЛицаДокументов(ДокументыЗаявлениеНаУдержаниеДсвВПфр))
    ВладельцыСогласуемыхДокументов.ВставитьВсе(РасчетныеЛисты.ФизическиеЛицаДокументов(ДокументыРасчетныеЛисты))
    
    для Документ из ДокументыПодсистемы
        Разрешения.Вставить(Документ, КонтрольДоступа.ЧтениеДанныхСправочниковПерсонально(ВладельцыСогласуемыхДокументов.ПолучитьИлиУмолчание(Документ)))
    ;
    
    возврат Разрешения
;

// Конец ПодписываемыйДокументПоставщикОграничений

метод ЗаполнитьПараметрыСеанса(ПараметрыСеанса: Зарплата.ПараметрыСеанса)
    пер ФизическоеЛицо: ФизическиеЛица.Ссылка? = ПользователиСистемы.ТекущееФизическоеЛицо()
    если ФизическоеЛицо == Неопределено
        возврат
    ;

    ПараметрыСеанса.ФункциональныеОпции = ИспользуемаяФункциональность.ФункциональныеОпции()
;

// Контракт ДанныеПодписанияСервис
@ВПроекте
@Реализация
метод ДанныеОрганизации(ДокументСсылка: ДокументПодписываемыйВСервисеПодписания.Ссылка): Соответствие<Строка, ОрганизацияПодписываемогоДокумента.Ссылка?>?
    если ДокументСсылка это ЗаявлениеНаНалоговыеВычеты.Ссылка или ДокументСсылка это ЗаявлениеНаУдержаниеДсвВПфр.Ссылка
        возврат {"" : МенеджерСущности.ЗначениеРеквизитаОбъекта(ДокументСсылка как Справочник.Ссылка, "Организация")}
    ;
    возврат Неопределено
;

@ВПроекте
@Реализация
метод ДанныеДокументов(ДокументСсылка: ДокументПодписываемыйВСервисеПодписания.Ссылка): Массив<ДокументПодписываемыйВСервисеПодписания.Ссылка>?
    пер ДокументыНаПодпись: Массив<ДокументПодписываемыйВСервисеПодписания.Ссылка>?
    если ДокументСсылка это РасчетныеЛисты.Ссылка
        ДокументыНаПодпись = новый Массив<ДокументПодписываемыйВСервисеПодписания.Ссылка>()
        знч Запрос = Запрос{
            Выбрать Различные
                РасчетныеЛистыНаПодпись.Элемент Как ДокументНаПодпись
            Из
                РасчетныеЛисты.РасчетныеЛистыНаПодпись Как РасчетныеЛистыНаПодпись
            Где
                РасчетныеЛистыНаПодпись.Владелец == %ДокументСсылка}
        знч Результат = Запрос.Выполнить()
        для Элемент из Результат
            ДокументыНаПодпись.Добавить(Элемент.ДокументНаПодпись)
        ;
    ;
    возврат ДокументыНаПодпись
;

// Конец ДанныеПодписанияСервис

// Контракт ВторичныеДанные

@ВПроекте
@Реализация
метод Пересчитать()
    Зарплата.ОбновитьСтроковыеРесурсы()
;

// Конец ВторичныеДанные

// Контракт ИсходящиеДокументыСОписанием

@ВПроекте
@Реализация
метод ДокументСнабжаетсяФайломОписания(СсылкаНаДокумент: Сущность.Ключ): Булево
    если СсылкаНаДокумент это ЗаявлениеНаНалоговыеВычеты.Ссылка
        возврат Истина
    иначе если СсылкаНаДокумент это ЗаявлениеНаУдержаниеДсвВПфр.Ссылка
        возврат Истина
    ;
    возврат Ложь
;

@ВПроекте
@Реализация
метод ДанныеДляПодготовкиОписаний(СсылкаНаДокумент: Сущность.Ключ): Соответствие<Строка, Согласования.ДанныеДляПодготовкиОписания>?
    
    если СсылкаНаДокумент это ЗаявлениеНаНалоговыеВычеты.Ссылка
        возврат ЗаявлениеНаНалоговыеВычеты.ДанныеДокументаДляПодготовкиОписаний(СсылкаНаДокумент)
    иначе если СсылкаНаДокумент это ЗаявлениеНаУдержаниеДсвВПфр.Ссылка
        возврат ЗаявлениеНаУдержаниеДсвВПфр.ДанныеДокументаДляПодготовкиОписаний(СсылкаНаДокумент)
    ;
    возврат Неопределено
;

// Конец ИсходящиеДокументыСОписанием

// Контракт ПоставщикДанныхДляСервисаСтатистики

@ВПроекте
@Реализация
метод СтатистикаРасчетныхЛистов(): Массив<ПоказателиСтатистики.РасчетныеЛистки>
    пер РасчетныеЛистыСтатистика = новый Массив<ПоказателиСтатистики.РасчетныеЛистки>()
    знч Запрос = Запрос{
        Выбрать
        РасчетныеЛисты.Месяц Как Месяц, 
        РасчетныеЛисты.ПерваяПоловинаМесяца Как ПерваяПоловинаМесяца,
        Выбор Когда СогласованияДокументов.Ссылка Есть Null Тогда Ложь Иначе Истина Конец Как Подписан, 
        Количество(*) Как КоличествоЭлементов 
    Из РасчетныеЛисты Как РасчетныеЛисты
    Левое Соединение СогласованияДокументов Как СогласованияДокументов
    По РасчетныеЛисты.Ссылка == СогласованияДокументов.Документ
    Сгруппировать По 
        Месяц,
        ПерваяПоловинаМесяца,
        Выбор Когда СогласованияДокументов.Ссылка Есть Null Тогда Ложь Иначе Истина Конец}
    исп РезультатЗапроса = Запрос.Выполнить()
    для РезультатЗапросаСтрока из РезультатЗапроса
        РасчетныеЛистыСтатистика.Добавить(
            новый ПоказателиСтатистики.РасчетныеЛистки(
                РезультатЗапросаСтрока.Месяц, 
                РезультатЗапросаСтрока.ПерваяПоловинаМесяца, 
                РезультатЗапросаСтрока.Подписан, 
                РезультатЗапросаСтрока.КоличествоЭлементов
            )
        )
    ;
    возврат РасчетныеЛистыСтатистика
;

@ВПроекте
@Реализация
метод СтатистикаЛичныхКабинетов(): Массив<ПоказателиСтатистики.ЛичныеКабинеты>
    возврат []
;

// Контракт ПоставщикШаблонов

@ВПроекте
@Реализация
метод ДанныеШаблонаДокумента(ДокументСсылка: Справочник.Ссылка, ДополнительныеПараметры: Соответствие<Строка, Объект>? = Неопределено): ШаблоныДокументовМенеджер.ДанныеДляШаблонаПечатнойФормы?
    выбор ДокументСсылка
    когда это ЗаявлениеНаНалоговыеВычеты.Ссылка
        знч Ид = УниверсальныеМеханизмы.Ид(Зарплата.ПОДСИСТЕМА_ЗАРПЛАТА, Зарплата.ШАБЛОН_ЗАЯВЛЕНИЯ_НА_НАЛОГОВЫЕ_ВЫЧЕТЫ)
        пер ДанныеДляШаблона =   новый ШаблоныДокументовМенеджер.ДанныеДляШаблонаПечатнойФормы(
            УниверсальныеМеханизмы.ДвоичныеДанные(Ид),
            УсловияВыводаОбластейШаблонов.УсловияВыводаОбластей(Ид),
            ЗаявлениеНаНалоговыеВычеты.ДанныеДокументаДляПечатнойФормы(ДокументСсылка))
        ШаблоныДокументовМенеджер.ДополнитьДанныеДополнительнымиРеквизитами(ДанныеДляШаблона, ДокументСсылка, Ид)
        возврат ДанныеДляШаблона
    когда это ЗаявлениеНаУдержаниеДсвВПфр.Ссылка
        знч Ид = УниверсальныеМеханизмы.Ид(Зарплата.ПОДСИСТЕМА_ЗАРПЛАТА, Зарплата.ШАБЛОН_ЗАЯВЛЕНИЯ_НА_УДЕРЖАНИЕ_ДСВ_В_ПФР)
        пер ДанныеДляШаблона =   новый ШаблоныДокументовМенеджер.ДанныеДляШаблонаПечатнойФормы(
            УниверсальныеМеханизмы.ДвоичныеДанные(Ид),
            УсловияВыводаОбластейШаблонов.УсловияВыводаОбластей(Ид),
            ЗаявлениеНаУдержаниеДсвВПфр.ДанныеДокументаДляПечатнойФормы(ДокументСсылка))
            
        ШаблоныДокументовМенеджер.ДополнитьДанныеДополнительнымиРеквизитами(ДанныеДляШаблона, ДокументСсылка, Ид)
        возврат ДанныеДляШаблона
    ;
    возврат Неопределено
;

@ВПроекте
@Реализация
метод ДополнитьДанныеШаблонаДокумента(ДокументСсылка: Справочник.Ссылка, ДанныеДокумента: Соответствие<Строка, ШаблоныДокументовМенеджер.ДанныеПечатныхФорм>): Булево
    выбор ДокументСсылка
    когда это ЗаявлениеНаНалоговыеВычеты.Ссылка
        ЗаявлениеНаНалоговыеВычеты.ДополнитьДанныеДокументаДляПечатнойФормы(ДанныеДокумента)
        возврат Истина
    когда это ЗаявлениеНаУдержаниеДсвВПфр.Ссылка
        ЗаявлениеНаУдержаниеДсвВПфр.ДополнитьДанныеДокументаДляПечатнойФормы(ДанныеДокумента)
        возврат Истина
    ;
    возврат Ложь
;

// Конец ПоставщикШаблонов

// Контракт ПоставщикОбщихДанныхДляПечатныхФорм

@ВПроекте
@Реализация
метод ДополнитьДанныеДокументаОбщимиДанными(ДанныеДокумента: ШаблоныДокументовМенеджер.ДанныеДляШаблонаПечатнойФормы)
    ДанныеДокумента.ЗначенияПеречислений.ВставитьВсе(ЗначенияПеречисленийОбщихДанных())
;

метод ЗначенияПеречисленийОбщихДанных(): Соответствие<Строка, Объект>
    пер ЗначенияПеречислений = новый Соответствие<Строка, Объект>()
    ЗначенияПеречислений.Вставить("calculationMethod.%{ПлановыеУдержания.МетодРасчетаJson.fixedAmount}", СпособыРасчетаУдержания.Суммой)
    ЗначенияПеречислений.Вставить("calculationMethod.%{ПлановыеУдержания.МетодРасчетаJson.percentage}", СпособыРасчетаУдержания.Процентом)
    ЗначенияПеречислений.Вставить("calculationMethod.%{ПлановыеУдержания.МетодРасчетаJson.percentageUpToAmount}", СпособыРасчетаУдержания.ПроцентомНеБолееЗаданнойСуммы)
    возврат ЗначенияПеречислений
;

// Конец ПоставщикОбщихДанныхДляПечатныхФорм

// Контракт СтроковыеРесурсыПоставщик

@ВПроекте
@Реализация
метод ИменаРесурсовПоГруппеРесурсов(УчитыватьИспользуемуюФункциональность: Булево): Соответствие<Строка, Коллекция<Строка>>
    возврат {
        Зарплата.ГРУППА_РЕСУРСОВ_ЗАРПЛАТА: [
            Сервер.РАСЧЕТНЫЙ_ЛИСТ_ОПУБЛИКОВАН_SMS,
            Сервер.РАСЧЕТНЫЙ_ЛИСТ_ОПУБЛИКОВАН_PUSH,
            Сервер.РАСЧЕТНЫЙ_ЛИСТ_ОПУБЛИКОВАН_EMAIL,
            Сервер.РАСЧЕТНЫЙ_ЛИСТ_ОПУБЛИКОВАН_ТЕМА,

            Сервер.РАСЧЕТНЫЙ_ЛИСТ_НАПОМИНАНИЕ_SMS,
            Сервер.РАСЧЕТНЫЙ_ЛИСТ_НАПОМИНАНИЕ_PUSH,
            Сервер.РАСЧЕТНЫЙ_ЛИСТ_НАПОМИНАНИЕ_EMAIL,
            Сервер.РАСЧЕТНЫЙ_ЛИСТ_НАПОМИНАНИЕ_ТЕМА]
    }
;

// Конец СтроковыеРесурсыПоставщик