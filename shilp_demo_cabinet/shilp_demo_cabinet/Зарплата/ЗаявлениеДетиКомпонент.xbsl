импорт ОбщиеСтандартные

// Контракт ИнициализируемыйКомпонент

@ВПроекте
@Реализация
метод Инициализировать()
    СобственнаяМодифицированность = Ложь
;

// Конец ИнициализируемыйКомпонент

метод ВычетыНаДетейИсточникДанные(): Массив<ЗаявлениеДетиСтрока>
    пер Данные: Массив<ЗаявлениеДетиСтрока>
    для ДанныеРебенка из ТаблицаДети.Дети
        если не ДанныеРебенка.Удалено
            Данные.Добавить(ДанныеРебенка)
        ;
    ;
    возврат Данные
;

метод ВычетыНаДетейВидимость(): Булево
    пер ВычетыНаДетейВидимость: Булево
    для ЭлементДанных из ТаблицаДети.Дети
        пер ЗаписьОРебенке: ЗаявлениеДетиСтрока = ЭлементДанных
        если ЗаписьОРебенке.Удалено
            продолжить
        ;
        ВычетыНаДетейВидимость = Истина
        прервать
    ;
    возврат ВычетыНаДетейВидимость
;

метод ВычетыНаДетейПриНажатииЭлемента(Источник: Список<ИсточникДанныхМассив<ЗаявлениеДетиСтрока>>, Событие: СобытиеСДанными<СтрокаСписка<ЗаявлениеДетиСтрока>>)
    пер ДанныеРебенка = Событие.Данные.ДанныеСтроки
    ИнформацияОРебенке.ОткрытьМодально(ДанныеРебенка, ТолькоЧтение)
;

метод ДобавитьРебенкаПриНажатии(Источник: Кнопка, Событие: СобытиеПриНажатии)
    пер НовоеЗаявление = новый ЗаявлениеДетиСтрока()
    НовоеЗаявление.ДатаОкончанияПрименения = Дата.Сейчас().КонецГода()
    если не ТаблицаДети.Дети.Пусто()
        пер ПоследнееЗаявление = ТаблицаДети.Дети.Последний()
        НовоеЗаявление.РебенокИнвалид = ПоследнееЗаявление.РебенокИнвалид
        НовоеЗаявление.ЕдинственныйРодитель = ПоследнееЗаявление.ЕдинственныйРодитель
        НовоеЗаявление.Опекун = ПоследнееЗаявление.Опекун
    ;
    НовоеЗаявление.Модифицированность = Истина
    
    если ИнформацияОРебенке.ОткрытьМодально(НовоеЗаявление)
        ТаблицаДети.Дети.Добавить(НовоеЗаявление)
    ;
    СобственнаяМодифицированность = Истина
;

метод ДобавитьРебенкаЗаголовок(): Строка
    пер ДобавитьРебенкаЗаголовок: Строка
    если ТаблицаДети.Дети.Пусто()
        ДобавитьРебенкаЗаголовок = "Ввести данные ребенка"
    иначе
        ДобавитьРебенкаЗаголовок = "Добавить ребенка"
    ;
    возврат ДобавитьРебенкаЗаголовок
;

метод УдалитьЗаявление(ДанныеЭлемента: ЗаявлениеДетиСтрока)
    пер Индекс: Число? = ТаблицаДети.Дети.Найти(ДанныеЭлемента)
    если Индекс != Неопределено
        пер Строка = ТаблицаДети.Дети.Получить(Индекс) 
        если Строка.Ссылка == Неопределено
            ТаблицаДети.Дети.УдалитьПоИндексу(Индекс)
        иначе
            Строка.Удалено = Истина
            СобственнаяМодифицированность = Истина
        ;
    ;
;

метод ДатаОкончанияПримененияЗаголовок(ДанныеЭлемента: ЗаявлениеДетиСтрока): Строка
    пер ДатаОкончанияПрименения: Строка
    если ДанныеЭлемента.ДатаОкончанияПрименения != Неопределено
        ДатаОкончанияПрименения = "до %{МенеджерДат.ФорматДаты(ДанныеЭлемента.ДатаОкончанияПрименения, "дд.ММ.гггг")}" 
    ; 
    возврат ДатаОкончанияПрименения
;

метод ВидимостьЗаявления(ДанныеЭлемента: ЗаявлениеДетиСтрока): Булево
    возврат не ДанныеЭлемента.Удалено
;

метод УдалитьЗаписьОРебенкеПриНажатии(Источник: Картинка, Событие: СобытиеПриНажатии, ДанныеЭлемента: ЗаявлениеДетиСтрока)
    УдалитьЗаявление(ДанныеЭлемента)
;

метод ПредставлениеЗаписиЗаголовок(ДанныеЭлемента: ЗаявлениеДетиСтрока): Строка
    пер ПредставлениеЗаписи: Строка
    если ДанныеЭлемента.ФИО.Пусто()
        ПредставлениеЗаписи = "Имя не указано"
    иначе
        ПредставлениеЗаписи = ДанныеЭлемента.ФИО
    ;
    если ДанныеЭлемента.ДатаРождения != Неопределено
        ПредставлениеЗаписи += ", %{МенеджерДат.ФорматДаты(ДанныеЭлемента.ДатаРождения, "гггг")} год"
    ;
    возврат ПредставлениеЗаписи
;