импорт СтандартноеПриложение
импорт ИнтерфейсныеКомпонентыСтандартные
импорт Компания
импорт Криптография
импорт ОбменДанными
импорт ОбщегоНазначения
импорт Компания::Согласования
импорт УниверсальныеМеханизмы
импорт ОбщиеСтандартные
импорт ФизическиеЛица
импорт ВладельцыКабинетов
импорт ЛичныеКабинетыПользователей
импорт УниверсальныеМеханизмы::ШаблоныДокументов

@Обработчик
метод ПослеЧтения()
    Компоненты.Содержимое.УстановитьТекущееЗаявление(Объект)
    УстановитьРежимПросмотра()
    ИнтерфейсныеКомпоненты.ИнициализироватьПодчиненныеКомпоненты(Компоненты)
;

метод СодержимоеЗавершеноЧтениеДанных(Источник: ЗаявлениеНаУдержаниеДсвВПфрКомпонент, Событие: СобытиеКомпонента)
    Компоненты.ГлавнаяГруппа.ЧтениеДанныхЗавершено = Истина
;

метод ЗаявлениеНаУдержаниеДсвВПфрФормаДокументаВысота(): Число
    возврат ОсновнойИнтерфейс.ВысотаФормыДокумента(100)
;

метод ЗаявлениеНаУдержаниеДсвВПфрФормаДокументаЗаголовок(): Строка
    возврат Компоненты.Содержимое.ЗаголовокФормы()
;

метод ЗаголовокКнопкиЗаписатьИЗакрыть(): Строка
    возврат ОбщегоНазначения.ЗаголовокКнопкиЗаписатьИЗакрыть(
        ОбщегоНазначения.ЭтоЧерновик(Компоненты.Содержимое.Состояние),
        Компоненты.Содержимое.РедактированиеЗапрещено или Компоненты.Содержимое.РежимПросмотра, Ложь, "Отправить заявление")
;

метод ИспользованиеКнопкиСохранитьЧерновик(): Булево
    возврат не Компоненты.Содержимое.Отправлен и не Компоненты.Содержимое.РежимПросмотра
;

метод ЗаголовокКнопкиСохранитьЧерновик(): Строка
    возврат ОбщегоНазначения.ЗаголовокКнопкиСохранитьЧерновик(
        ОбщегоНазначения.ЭтоЧерновик(Компоненты.Содержимое.Состояние))
;

метод ИспользованиеКнопкиУдалить(): Булево
    возврат ОбщегоНазначения.ИспользованиеКнопкиУдалить(
        Компоненты.Содержимое.Состояние,
        Объект.ФизическоеЛицо,
        ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо, 
        ЭтоНовый(), 
        Компоненты.Содержимое.Отправлен, 
        Компоненты.Содержимое.ПодписанТекущимФизическимЛицом)
;

метод ЗаголовокКнопкиУдалить(): Строка
    возврат ОбщегоНазначения.ЗаголовокКнопкиУдалить(Компоненты.Содержимое.ПодписанТекущимФизическимЛицом)
;

метод ПанельОсновнаяЗаписатьИЗакрыть(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    ЗаписатьИЗакрыть(Истина)
;

метод ПанельОсновнаяСохранитьЧерновик(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    ЗаписатьИЗакрыть(Ложь)
;

метод ЗаписатьИЗакрыть(ОтправитьНаСогласование: Булево)
    если Компоненты.Содержимое.РедактированиеЗапрещено
        или Компоненты.Содержимое.РежимПросмотра
        
        Закрыть(СтандартныеФормы.ДействиеВФорме.НеИзменен)
        возврат
    ;
    если ОтправитьНаСогласование
        если не Компоненты.Содержимое.ПроверитьЗаполнение()
            возврат
        ; 
        если не Криптография.ВвестиПарольЗакрытогоКлюча(Объект.ФизическоеЛицо, Объект.Ссылка)
            возврат
        ;
        Компоненты.Содержимое.РедактированиеЗапрещено = Истина
    ;
    // Признак ЭтоНовый получаем до записи 
    пер ЭтоНовый: Булево = ЭтоНовый()
    пер Состояние: СостоянияДокумента 
    если ОтправитьНаСогласование
        Состояние = СостоянияДокумента.Подготовлен
    ;
    если Компоненты.Содержимое.ОшибкаЗагрузки
        ОбщегоНазначения.УведомлениеОшибкиЗагрузкиФайлов()
        возврат
    ;
    пер ТабличныеЧасти: ЗаявлениеНаУдержаниеДсвВПфрКлиентСервер.ТабличныеЧасти =
        Компоненты.Содержимое.МодифицированныеТабличныеЧасти()
    пер ДанныеДокумента = новый ДанныеДокумента()
    
    ДанныеДокумента.Ссылка = Объект.Ссылка
    ДанныеДокумента.ФизическоеЛицо = Объект.ФизическоеЛицо
    ДанныеДокумента.Организация = Объект.Организация
    ДанныеДокумента.Дата = Объект.Дата
    ДанныеДокумента.СпособРасчета = Объект.СпособРасчета
    ДанныеДокумента.РазмерУдержанияПроцент = Объект.РазмерУдержанияПроцент
    ДанныеДокумента.РазмерУдержанияСумма = Объект.РазмерУдержанияСумма
    ДанныеДокумента.Комментарий = Объект.Комментарий
    пер СостояниеОбмена: ОбменДанными.СостояниеОбмена
    знч РезультатПодписания = Записать(
            ЭтоНовый(), 
            ДанныеДокумента, 
            ТабличныеЧасти, 
            ОтправитьНаСогласование,
            Криптография.ПараметрыСеанса().ПарольЗакрытогоКлючаПользователя, 
            ВладельцыКабинетов.ПараметрыСеанса().ИнформационныеСистемы, СостояниеОбмена)
    если РезультатПодписания.ЕстьОшибки
        СтандартныеФормы.ПоказатьУведомление(
            "Ошибка подписания документа",
            РезультатПодписания.ТекстОшибки,
            ОценкаИнформации.Отрицательная
        )
        возврат
    ;
    если ОтправитьНаСогласование
        если Криптография.УстановитьПодписьВСервисеПодписания(
            Объект.Ссылка, ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо, Согласования.РольПодписантаСотрудник()) == Ложь
        
            Прочитать(Объект.Ссылка)
            возврат
        ;
    ;
    Компоненты.Содержимое.СброситьМодифицированностьТабличныхЧастей()
    если РассчитаннаяМодифицированность
        СобственнаяМодифицированность = Ложь
    ;
    знч ДанныеСостояния = СостояниеДокументаКомпонентДанных.Создать()
    ДанныеСостояния.Документ = ДанныеДокумента.Ссылка
    ДанныеСостояния.ДатаДокумента = ДанныеДокумента.Дата
    ДанныеСостояния.Состояние = Состояние
    ДанныеСостояния.ДополнительноеПредставление = СостДокументов.ПредставлениеПериодаДокумента(ДатаДокумента = ДанныеДокумента.Дата)
    ИзмененоСостояниеДокумента.Оповестить(ДанныеСостояния, ЭтоНовый)
    если ОтправитьНаСогласование 
        пер ЗаголовокУведомления = "Заявление отправлено"
        пер ТекстУведомления = "Заявление на удержание отправлено в кадровую службу. После его принятия бухгалтерией, при расчете вашей зарплаты будут удерживаться взносы ДСВ"
        пер КоннотацияУведомления: ОценкаИнформации = ОценкаИнформации.Обычная
        если СостояниеОбмена.ОповеститьОбОтсутствииОбмена
            ЗаголовокУведомления = "Приостановлена отправка заявления"
            ТекстУведомления = "Заявление на удержание сейчас не может быть отправлено. Заявление будет отправлено в кадровую службу, как только появится такая возможность." 
            если СостояниеОбмена.ОповеститьСотрудникаОВозобновленииОбмена
            ТекстУведомления += " Вы получите уведомление после его отправки."
            ;
            КоннотацияУведомления = ОценкаИнформации.Предупреждающая
        ;
        СтандартныеФормы.ПоказатьУведомление(ЗаголовокУведомления, ТекстУведомления, КоннотацияУведомления)
    ;
    Закрыть(СтандартныеФормы.ДействиеВФорме.Изменен)
;

метод ЗаписатьДокумент()
;

метод ПанельОсновнаяУдалить(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    СобственнаяМодифицированность = Ложь
    СобственнаяМодифицированность = Ложь
    УдалитьДокумент(Объект.Ссылка, Объект.ФизическоеЛицо,
        Компания.ПараметрыСеанса().РуководительТекущегоПользователя
    )
    УдаленДокумент.Оповестить(Объект.Ссылка, Объект.Дата)
    Закрыть(СтандартныеФормы.ДействиеВФорме.Удален)
;

метод ПанельСогласованияВыполненоСогласование(Источник: КоманднаяПанельСогласования, Событие: СобытиеКомпонента)
    Закрыть(СтандартныеФормы.ДействиеВФорме.Изменен)
;

метод ОтправитьНаСогласование(): ОбменДанными.СостояниеОбмена
    Компоненты.Содержимое.Состояние = СостоянияДокумента.Подготовлен
    
    пер СостояниеОбмена: ОбменДанными.СостояниеОбмена
    знч РезультатПодписания = ОтправитьНаСогласование(
        Объект.Ссылка,
        Объект.ФизическоеЛицо,
        Криптография.ПараметрыСеанса().ПарольЗакрытогоКлючаПользователя,
        СостояниеОбмена
    )
    
    если РезультатПодписания.ЕстьОшибки
        СтандартныеФормы.ПоказатьУведомление(
            "Ошибка подписания документа",
            РезультатПодписания.ТекстОшибки,
            ОценкаИнформации.Отрицательная
        )
    ;
    возврат СостояниеОбмена
;

метод СогласованиеДокументаВидимость(): Булево
    возврат Компоненты.Содержимое.Состояние != Неопределено
;

метод УстановитьДоступностьКоманд(Доступность: Булево)
    пер ГлавнаяГруппа: КорневойКомпонентМодальнойФормы = Компоненты.ГлавнаяГруппа
    для КоманднаяПанель из ГлавнаяГруппа.КомандныеПанели
         КоманднаяПанель.Доступность = Доступность
    ;
;

метод СодержимоеИзменениеСостоянияЗагрузкиФайлов(Источник: ЗаявлениеНаУдержаниеДсвВПфрКомпонент, Событие: СобытиеСДанными<Булево>)
    УстановитьДоступностьКоманд(не Событие.Данные)
;

метод ОшибкаПриВыполненииКоманды(Источник: КоманднаяПанельФорм, Событие: СобытиеСДанными<Исключение>)
    Компоненты.ГлавнаяГруппа.ПоказатьОшибку(
        ОбщегоНазначения.ОписаниеОшибкиПриДействииСДокументом(Событие.Данные, Объект.ФизическоеЛицо))
;

@НаСервере @НаКлиенте
структура ДанныеДокумента
    пер Ссылка: ЗаявлениеНаУдержаниеДсвВПфр.Ссылка?
    пер ФизическоеЛицо: ФизическиеЛица.Ссылка?
    пер Организация: Организации.Ссылка?
    пер Дата: Дата?
    пер СпособРасчета: СпособыРасчетаУдержания?
    пер РазмерУдержанияПроцент: Число
    пер РазмерУдержанияСумма: Число
    пер Комментарий: Строка
;

@НаСервере @ДоступноСКлиента
статический метод Записать(
            ЭтоНовый: Булево, 
            ДанныеДокумента: ДанныеДокумента, 
            ТабличныеЧасти: ЗаявлениеНаУдержаниеДсвВПфрКлиентСервер.ТабличныеЧасти, 
            ОтправитьНаСогласование: Булево, 
            ПарольЗакрытогоКлюча: Строка?, 
            ИнформационныеСистемы: Соответствие<ИнформационныеСистемы.Ссылка, ОбменДанными.НастройкиИнформационнойСистемы>, 
            СостояниеОбмена: ОбменДанными.СостояниеОбмена): Криптография.РезультатПодписания
            
    пер Заявление: ЗаявлениеНаУдержаниеДсвВПфр.Объект?
    пер ЗаявлениеСсылка: ЗаявлениеНаУдержаниеДсвВПфр.Ссылка? = ДанныеДокумента.Ссылка
    если ЭтоНовый
        Заявление = новый ЗаявлениеНаУдержаниеДсвВПфр.Объект(ЗаявлениеСсылка!.Ид).Заполнить()
    иначе
        Заявление = ЗаявлениеСсылка!.ЗагрузитьОбъект()
    ;
    Заявление!.ФизическоеЛицо = ДанныеДокумента.ФизическоеЛицо
    Заявление!.Организация = ДанныеДокумента.Организация
    Заявление!.Дата = ДанныеДокумента.Дата
    Заявление!.СпособРасчета = ДанныеДокумента.СпособРасчета
    Заявление!.РазмерУдержанияПроцент = ДанныеДокумента.РазмерУдержанияПроцент
    Заявление!.РазмерУдержанияСумма = ДанныеДокумента.РазмерУдержанияСумма
    Заявление!.Комментарий = ДанныеДокумента.Комментарий
    исп Транзакции.Начать()
    Заявление!.Записать()
    если не ТабличныеЧасти.ТаблицаФайлы == Неопределено
        ПрисоединенныеФайлыМенеджер.Записать(ТабличныеЧасти.ТаблицаФайлы)
    ;
    ШаблоныДокументовМенеджер.СохранитьРеквизиты(ТабличныеЧасти.ДополнительныеРеквизиты)
    ПредставленияДокументов.СформироватьПредставленияДокумента(ЗаявлениеСсылка, Истина)
    пер РезультатПодписания: Криптография.РезультатПодписания
    если ОтправитьНаСогласование
        знч ДанныеСогласующего = новый Согласования.ДанныеСогласующего(ДанныеДокумента.ФизическоеЛицо, Согласования.РольПодписантаСотрудник())
        РезультатПодписания = Согласования.ПодписатьИУстановитьСостояниеДокумента(ЗаявлениеСсылка, ДанныеСогласующего, ПарольЗакрытогоКлюча, СостоянияДокумента.Подготовлен, ДанныеДокумента.ФизическоеЛицо)
        если РезультатПодписания.ЕстьОшибки
            возврат РезультатПодписания
        ;
        СостояниеОбмена = ВладельцыКабинетов.ПроверитьСостояниеОбмена(ДанныеДокумента.ФизическоеЛицо)
    ;
    возврат РезультатПодписания
;

@НаСервере @ДоступноСКлиента
статический метод ОтправитьНаСогласование(ЗаявлениеСсылка: ЗаявлениеНаУдержаниеДсвВПфр.Ссылка,
    ФизическоеЛицо: ФизическиеЛица.Ссылка, ПарольЗакрытогоКлюча: Строка, СостояниеОбмена: ОбменДанными.СостояниеОбмена): Криптография.РезультатПодписания
    
    знч ДанныеСогласующего = новый Согласования.ДанныеСогласующего(ФизическоеЛицо, Согласования.РольПодписантаСотрудник())
    знч РезультатПодписания = Согласования.ПодписатьИУстановитьСостояниеДокумента(ЗаявлениеСсылка, ДанныеСогласующего, ПарольЗакрытогоКлюча, СостоянияДокумента.Подготовлен, ФизическоеЛицо)
    если РезультатПодписания.ЕстьОшибки
        возврат РезультатПодписания
    ;
    СостояниеОбмена = ВладельцыКабинетов.ПроверитьСостояниеОбмена(ФизическоеЛицо)

    возврат РезультатПодписания
;

@НаСервере @ДоступноСКлиента
статический метод УдалитьДокумент(Ссылка: ЗаявлениеНаУдержаниеДсвВПфр.Ссылка, ФизическоеЛицо: ФизическиеЛица.Ссылка?, 
        НепосредственныйРуководитель: ФизическиеЛица.Ссылка?)
    СогласованияДокументов.ОтозватьПодпись(Ссылка, ФизическоеЛицо)
    ЗаявлениеНаУдержаниеДсвВПфр.УдалитьДокумент(Ссылка, ФизическоеЛицо, НепосредственныйРуководитель)
;

метод ОсновнойКомпонентПанели(): Компонент
    возврат Компоненты.Содержимое
;

метод УстановитьРежимПросмотра()
    если не Компания.ПараметрыСеанса().ТекущийПользовательСотрудник
        Компоненты.Содержимое.РежимПросмотра = Истина
    ;
;
