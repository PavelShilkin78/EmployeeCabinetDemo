импорт ИнтерфейсныеКомпонентыСтандартные
импорт Компания
импорт Криптография
импорт ОбменДанными
импорт ОбщегоНазначения
импорт Компания::Согласования
импорт УниверсальныеМеханизмы
импорт ФизическиеЛица
импорт ВладельцыКабинетов
импорт УниверсальныеМеханизмы::ШаблоныДокументов

конст ПОЯСНЕНИЕ: Строка = "Приложите копии документов или опишите в поле Комментарий причину обращения с этим заявлением."


// Обработчики событий формы

@Обработчик
метод ПослеЧтения()
    Компоненты.Содержимое.УстановитьТекущееЗаявление(Объект)
    УстановитьРежимПросмотра()
    ИнтерфейсныеКомпоненты.ИнициализироватьПодчиненныеКомпоненты(Компоненты)    
;

метод ПанельОсновнаяСохранитьЧерновик(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    ЗаписатьИЗакрыть(Ложь)
;

метод ПанельОсновнаяЗаписатьИЗакрыть(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    ЗаписатьИЗакрыть(Истина)
;

метод СодержимоеПрисоединенныеФайлыНачатаЗагрузкаФайлов(Источник: ЗаявлениеНаНалоговыеВычетыКомпонент, Событие: неизвестно)
    УстановитьДоступностьКоманд(Ложь)
;

метод СодержимоеПрисоединенныеФайлыЗавершенаЗагрузкаФайлов(Источник: ЗаявлениеНаНалоговыеВычетыКомпонент, Событие: неизвестно)
    УстановитьДоступностьКоманд(Истина)
;

метод СодержимоеЗавершеноЧтениеДанных(Источник: ЗаявлениеНаНалоговыеВычетыКомпонент, Событие: неизвестно)
    Компоненты.ГлавнаяГруппа.ЧтениеДанныхЗавершено = Истина 
;

// Конец

// Методы заполнения формы

метод ПанельОсновнаяЗаголовокКнопкиЗаписатьИЗакрыть(): Строка
    возврат не ТолькоПросмотр() ? "Отправить" : "Закрыть"
;

метод ПанельОсновнаяИспользованиеСохранитьЧерновик(): Булево
    возврат не ТолькоПросмотр()
;

метод ОсновнойКомпонентПанели(): Компонент
    возврат Компоненты.Содержимое
;

// Конец

// Прочее

метод ЗаписатьИЗакрыть(ОтправитьНаСогласование: Булево)
    
    если ТолькоПросмотр()
        Закрыть()
        возврат
    ;
    если ОтправитьНаСогласование и не Криптография.ВвестиПарольЗакрытогоКлюча(Объект.ФизическоеЛицо, Объект.Ссылка)
        возврат
    ;

    // Признак ЭтоНовый получаем до записи 
    пер ЭтоНовый: Булево = ЭтоНовый()
    пер ПрисоединенныеФайлы = Компоненты.Содержимое.ПрисоединенныеФайлы()
    пер Состояние: СостоянияДокумента 
    если ОтправитьНаСогласование
        если Объект.Комментарий.Пусто() и ПрисоединенныеФайлы.Пустой()
            выбросить новый ОбщегоНазначения.ОшибкаПроверкиЗаполненияФормы(ПОЯСНЕНИЕ)
        ;
        Состояние = СостоянияДокумента.Подготовлен
    ;
    
    если ПрисоединенныеФайлы.СобственнаяМодифицированность
        если Компоненты.Содержимое.ПрисоединенныеФайлы().ОшибкаЗагрузки
            ОбщегоНазначения.УведомлениеОшибкиЗагрузкиФайлов()
            возврат
        ;
    ;
    
    пер ТабличныеЧасти = Компоненты.Содержимое.МодифицированныеТабличныеЧасти()

    пер ДанныеДокумента = новый ДанныеДокумента()

    ДанныеДокумента.Ссылка = Объект.Ссылка
    ДанныеДокумента.ФизическоеЛицо = Объект.ФизическоеЛицо
    ДанныеДокумента.Организация = Объект.Организация
    ДанныеДокумента.Дата = Объект.Дата
    ДанныеДокумента.МесяцПрименения = Объект.МесяцПрименения
    ДанныеДокумента.ЛичныйВычет = Объект.ЛичныйВычет
    ДанныеДокумента.ВычетыНаЛечение = Объект.ВычетыНаЛечение
    ДанныеДокумента.ВычетыНаНедвижимость = Объект.ВычетыНаНедвижимость
    ДанныеДокумента.ВычетыНаОбучение = Объект.ВычетыНаОбучение
    ДанныеДокумента.СуммаЛичногоВычета = Объект.СуммаЛичногоВычета
    ДанныеДокумента.СуммаВычетовПоУведомлениям = Объект.СуммаВычетовПоУведомлениям
    ДанныеДокумента.Комментарий = Объект.Комментарий
    ДанныеДокумента.ПредставлениеДокумента = Компоненты.Содержимое.ЗаголовокФормы()
    пер СостояниеОбмена: ОбменДанными.СостояниеОбмена
    знч РезультатПодписания = Записать(
            ЭтоНовый(), 
            ДанныеДокумента, 
            ТабличныеЧасти, 
            ОтправитьНаСогласование,
            Криптография.ПараметрыСеанса().ПарольЗакрытогоКлючаПользователя, 
            ВладельцыКабинетов.ПараметрыСеанса().ИнформационныеСистемы, СостояниеОбмена)
    если РезультатПодписания.ЕстьОшибки
        СтандартныеФормы.ПоказатьУведомление(
            "Ошибка подписания документа",
            РезультатПодписания.ТекстОшибки,
            ОценкаИнформации.Отрицательная
        )
        возврат
    ;
    
    если ОтправитьНаСогласование
        если Криптография.УстановитьПодписьВСервисеПодписания(
            Объект.Ссылка, ДанныеДокумента.ФизическоеЛицо, Согласования.РольПодписантаСотрудник()) == Ложь
            
            Прочитать(Объект.Ссылка)
            возврат
        ;
    ;
    ПрисоединенныеФайлы.СобственнаяМодифицированность = Ложь
    если РассчитаннаяМодифицированность
        СобственнаяМодифицированность = Ложь
    ;
    // Опровещение выполянем перед закрытием - когда уже записаны все данные, сопровождающие запись документа
    знч ДанныеСостояния = СостояниеДокументаКомпонентДанных.Создать()
    ДанныеСостояния.Документ = ДанныеДокумента.Ссылка
    ДанныеСостояния.ДатаДокумента = ДанныеДокумента.Дата
    ДанныеСостояния.Состояние = Состояние
    ДанныеСостояния.ДополнительноеПредставление = СостДокументов.ПредставлениеПериодаДокумента(ДатаДокумента = ДанныеДокумента.Дата)
    ИзмененоСостояниеДокумента.Оповестить(ДанныеСостояния, ЭтоНовый)
    ЗаявленияНаВычетыКлиент.ОповеститьОВыполненномДействии(ОтправитьНаСогласование, СостояниеОбмена)
    Закрыть()
;

метод ТолькоПросмотр(): Булево
    возврат не Компоненты.Содержимое.ВозможноРедактирование()
        или Компоненты.Содержимое.РежимПросмотра
;

метод ОшибкаПриВыполненииКоманды(Источник: КоманднаяПанельФорм, Событие: СобытиеСДанными<Исключение>)
    Криптография.СброситьПарольЗакрытогоКлючаПриОшибкеВводаПароля(Событие.Данные)
    Компоненты.ГлавнаяГруппа.ПоказатьОшибку(
        ОбщегоНазначения.ОписаниеОшибкиПриДействииСДокументом(Событие.Данные, Объект.ФизическоеЛицо))
;

метод УстановитьДоступностьКоманд(Доступность: Булево)
    пер ГлавнаяГруппа: КорневойКомпонентМодальнойФормы = Компоненты.ГлавнаяГруппа
    для КоманднаяПанель из ГлавнаяГруппа.КомандныеПанели
        КоманднаяПанель.Доступность = Доступность
    ;
;

@НаСервере @НаКлиенте
структура ДанныеДокумента
    пер Ссылка: ЗаявлениеНаНалоговыеВычеты.Ссылка?
    пер ФизическоеЛицо: ФизическиеЛица.Ссылка?
    пер Организация: Организации.Ссылка?
    пер Дата: Дата?
    пер МесяцПрименения: Дата?
    пер ЛичныйВычет: Булево
    пер ВычетыНаНедвижимость: Булево
    пер ВычетыНаЛечение: Булево
    пер ВычетыНаОбучение: Булево
    пер СуммаВычетовПоУведомлениям: Число
    пер СуммаЛичногоВычета: Число
    пер Комментарий: Строка
    пер ПредставлениеДокумента: Строка
;

@НаСервере @ДоступноСКлиента
статический метод Записать(
            ЭтоНовый: Булево, 
            ДанныеДокумента: ДанныеДокумента, 
            ТабличныеЧасти: ЗаявлениеНаНалоговыеВычетыКомпонент.ТабличныеЧасти, 
            ОтправитьНаСогласование: Булево, 
            ПарольЗакрытогоКлюча: Строка?, 
            ИнформационныеСистемы:Соответствие<ИнформационныеСистемы.Ссылка, ОбменДанными.НастройкиИнформационнойСистемы>, 
        СостояниеОбмена: ОбменДанными.СостояниеОбмена): Криптография.РезультатПодписания
    
    пер Заявление: ЗаявлениеНаНалоговыеВычеты.Объект?
    пер ЗаявлениеСсылка: ЗаявлениеНаНалоговыеВычеты.Ссылка? = ДанныеДокумента.Ссылка
    
    если ЭтоНовый
        Заявление = новый ЗаявлениеНаНалоговыеВычеты.Объект(ЗаявлениеСсылка.Ид).Заполнить()
    иначе
        Заявление = ЗаявлениеСсылка.ЗагрузитьОбъект()
    ;
    
    Заявление!.ФизическоеЛицо = ДанныеДокумента.ФизическоеЛицо
    Заявление!.Дата = ДанныеДокумента.Дата
    Заявление!.МесяцПрименения = ДанныеДокумента.МесяцПрименения
    Заявление!.Организация = ДанныеДокумента.Организация
    Заявление!.ЛичныйВычет = ДанныеДокумента.ЛичныйВычет
    Заявление!.ВычетыНаЛечение = ДанныеДокумента.ВычетыНаЛечение
    Заявление!.ВычетыНаНедвижимость = ДанныеДокумента.ВычетыНаНедвижимость
    Заявление!.ВычетыНаОбучение = ДанныеДокумента.ВычетыНаОбучение
    Заявление!.СуммаВычетовПоУведомлениям = ДанныеДокумента.СуммаВычетовПоУведомлениям
    Заявление!.СуммаЛичногоВычета = ДанныеДокумента.СуммаЛичногоВычета
    Заявление!.Комментарий = ДанныеДокумента.Комментарий
    Заявление!.ПредставлениеДокумента = ДанныеДокумента.ПредставлениеДокумента
    
    исп Транзакции.Начать()
    Заявление!.Записать()
    если не ТабличныеЧасти.ТаблицаФайлы == Неопределено
        ПрисоединенныеФайлыМенеджер.Записать(ТабличныеЧасти.ТаблицаФайлы)
    ;
    ШаблоныДокументовМенеджер.СохранитьРеквизиты(ТабличныеЧасти.ДополнительныеРеквизиты)
    ПредставленияДокументов.СформироватьПредставленияДокумента(ЗаявлениеСсылка, Истина)
    пер РезультатПодписания: Криптография.РезультатПодписания
    если ОтправитьНаСогласование
        знч ДанныеСогласующего = новый Согласования.ДанныеСогласующего(ДанныеДокумента.ФизическоеЛицо, Согласования.РольПодписантаСотрудник())
        РезультатПодписания = Согласования.ПодписатьИУстановитьСостояниеДокумента(ЗаявлениеСсылка, ДанныеСогласующего, ПарольЗакрытогоКлюча, СостоянияДокумента.Подготовлен, ДанныеДокумента.ФизическоеЛицо)
        если РезультатПодписания.ЕстьОшибки
            возврат РезультатПодписания
        ;
        СостояниеОбмена = ВладельцыКабинетов.ПроверитьСостояниеОбмена(ДанныеДокумента.ФизическоеЛицо)
    ;
    возврат РезультатПодписания
;

метод УстановитьРежимПросмотра()
    если не Компания.ПараметрыСеанса().ТекущийПользовательСотрудник
        Компоненты.Содержимое.РежимПросмотра = Истина
    ;
;

// Конец
