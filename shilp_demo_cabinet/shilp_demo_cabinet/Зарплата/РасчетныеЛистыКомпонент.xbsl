импорт КонтрольДоступа
импорт ОбщиеСтандартные
импорт ФизическиеЛица
импорт ИнтерфейсныеКомпонентыСтандартные
импорт ВладельцыКабинетов
импорт ЛичныеКабинетыПользователей

@Обработчик
метод ПослеСоздания()
    ИнтерфейсныеКомпоненты.ИнициализироватьТаблицу(Таблица = Компоненты.ВсеРасчетныеЛисты,
        ИспользоватьВыделениеСтроки = Истина, АвтоВыделениеСтроки = Авто)
    ПрочитатьВсеРасчетныеЛисты()
    МенеджерГлобальныхКлиентскихСобытий.ПодключитьОбработчик(метод (Источник, Параметры) ->
        если Источник != ФизЛица.ТРЕБУЕТСЯ_ОБНОВЛЕНИЕ_ДАННЫХ_ФИЗИЧЕСКОГО_ЛИЦА
            возврат
        ;
        ПриИзмененииДанныхФизическогоЛица()
    ;)
;

метод ПриИзмененииДанныхФизическогоЛица()
    ПрочитатьВсеРасчетныеЛисты()
;

метод КоллекцияИсточникаВсеРасчетныеЛисты(): Массив<КраткийРасчетныйЛист>
    возврат Компоненты.ВсеРасчетныеЛисты.Источник.Данные
;

метод РасчетныеЛистыКомпонентВидимость(): Булево
    возврат не КоллекцияИсточникаВсеРасчетныеЛисты().Пусто()
;

метод ПрочитатьВсеРасчетныеЛисты()
    пер КоллекцияДанных = КоллекцияИсточникаВсеРасчетныеЛисты()
    КоллекцияДанных.Очистить()
    пер РасчетныеЛисты = РасчетныеЛистыСотрудника(ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо!)
    КоллекцияДанных.ДобавитьВсе(РасчетныеЛисты)
;

метод НачисленоЗаголовок(ДанныеЭлемента: КраткийРасчетныйЛист): Строка
    если ДанныеЭлемента.ЭтоГод
        возврат "Начислено"
    иначе
        возврат МенеджерСтрок.ФорматЧисла(ДанныеЭлемента.Начислено, ДлинаДробнойЧасти = 2)
    ;
;

метод ВыплаченоЗаголовок(ДанныеЭлемента: КраткийРасчетныйЛист): Строка
    если ДанныеЭлемента.ЭтоГод
        возврат "Выплачено"
    иначе
        возврат МенеджерСтрок.ФорматЧисла(ДанныеЭлемента.Выплачено, ДлинаДробнойЧасти = 2)
    ;
;

метод МаскировкаВключена(ДанныеЭлемента: КраткийРасчетныйЛист): Булево
    если ДанныеЭлемента.ЭтоГод
        возврат Ложь
    иначе
        возврат ВладельцыКабинетов.ПараметрыСеанса().РежимПриватностиПриложения
    ;
;

метод МесяцЗаголовок(ДанныеЭлемента: КраткийРасчетныйЛист): Строка
    возврат Зарплата.ПредставлениеРасчтеногоЛиста(
        ДанныеЭлемента.Месяц,
        ДанныеЭлемента.ПерваяПоловинаМесяца,
        КлиентскоеУстройство.ВидИнтерфейса == ВидИнтерфейса.Компьютер,
        ДанныеЭлемента.ЭтоГод)
;

метод ВидВыплатыАдресКартинки(ДанныеЭлемента: КраткийРасчетныйЛист): ДвоичныйОбъект.Ссылка?
    возврат ДанныеЭлемента.КартинкаВидаВыплаты
;

метод РасчетныеЛистыСтрокаВысота(ДанныеЭлемента: КраткийРасчетныйЛист): Число
    если ДанныеЭлемента.ЭтоГод и не ДанныеЭлемента.ЭтоПервыйГод
        возврат 64
    ;
    возврат 40
;

метод ДанныеСтрокиВертикальноеПоложениеДочерних(ДанныеЭлемента: КраткийРасчетныйЛист): ВыравниваниеПоВертикали | Авто
    если ДанныеЭлемента.ЭтоГод и не ДанныеЭлемента.ЭтоПервыйГод
        возврат ВыравниваниеПоВертикали.Низ
    ;
    возврат ВыравниваниеПоВертикали.Центр
;

метод ВсеРасчетныеЛистыАвтоВыделениеСтроки(): АвтоВыделениеСтроки | Авто
    возврат КлиентскоеУстройство.ВидИнтерфейса == ВидИнтерфейса.Телефон ? АвтоВыделениеСтроки.Выключено : АвтоВыделениеСтроки.ВыделятьПервый
;

@НаСервере @ДоступноСКлиента
статический метод РасчетныеЛистыСотрудника(ТекущееФизическоеЛицо: ФизическиеЛица.Ссылка): Массив<КраткийРасчетныйЛист>
    возврат Сервер.КраткиеРасчетныеЛисты(ТекущееФизическоеЛицо, 0)
;