импорт ОбщиеСтандартные
импорт ФизическиеЛица
импорт ВладельцыКабинетов
импорт Документы
импорт КонтрольДоступа
импорт ВебApi
импорт Компания::Согласования
импорт УниверсальныеМеханизмы
импорт Криптография
импорт ОбщегоНазначения
импорт Уведомления
импорт КлиентСервисаПодписания

@ВПроекте
@НаСервере
структура ДанныеРасчетногоЛиста
    обз пер ФизическоеЛицо: ФизическиеЛица.Ссылка
    обз пер Месяц: Дата
    пер ПерваяПоловинаМесяца: Булево
;

//Область РазрешенияДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): Массив<РазрешениеДоступа>
    возврат [КонтрольДоступа.ЧтениеАутентифицированным(этот),
            КонтрольДоступа.ПолныйДоступИнформационнойСистеме(этот)]    
;

@Обработчик
метод ВычислитьРазрешенияДоступаДляОбъектов(Элементы: ЧитаемыйМассив<РасчетныеЛисты.ДанныеРасчетаРазрешений>): ЧитаемоеСоответствие<РасчетныеЛисты.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    знч Разрешения: Соответствие<РасчетныеЛисты.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    для Элемент из Элементы
        знч РазрешенияЭлемента: Множество<РазрешениеДоступа>
        РазрешенияЭлемента.Добавить(КонтрольДоступа.ПолныйДоступИнформационнойСистеме(этот))
        РазрешенияЭлемента.ДобавитьВсе(КонтрольДоступа.ЧтениеДанныхСправочниковПоПолномочиям(
            [Зарплата.ПолномочиеПросмотрЗарплаты()],
            Элемент.ФизическоеЛицо
        ))
        РазрешенияЭлемента.ДобавитьВсе(КонтрольДоступа.ЧтениеДанныхСправочниковПерсонально([Элемент.ФизическоеЛицо]))
        Разрешения.Вставить(Элемент, РазрешенияЭлемента)
    ;
    возврат Разрешения
;

//КонецОбласти

//Область СлужебныйПрограммныйИнтерфейс

@ВПодсистеме
метод ФизическиеЛицаДокументов(Документы: ЧитаемыйМассив<РасчетныеЛисты.Ссылка>): ЧитаемоеСоответствие<РасчетныеЛисты.Ссылка, ЧитаемыйМассив<ФизическиеЛица.Ссылка>>
    знч ФизическиеЛицаДокументов: Соответствие<РасчетныеЛисты.Ссылка, ЧитаемыйМассив<ФизическиеЛица.Ссылка>>
    знч Запрос = Запрос{
        Выбрать
            Ссылка,
            ФизическоеЛицо
        ИЗ
            РасчетныеЛисты
        ГДЕ
            Ссылка в (%Документы)   
    }
    
    исп Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        ФизическиеЛицаДокументов.Вставить(СтрокаРезультата.Ссылка, [СтрокаРезультата.ФизическоеЛицо])    
    ;
    возврат ФизическиеЛицаДокументов
;

метод ЗаполнитьРасчетныйЛист(РасчетныйЛист: РасчетныеЛисты.Объект, ДанныеЗаполнения: ДанныеРасчетногоЛиста)
    
    РасчетныйЛист.ФизическоеЛицо = ДанныеЗаполнения.ФизическоеЛицо
    РасчетныйЛист.Месяц = ДанныеЗаполнения.Месяц
    РасчетныйЛист.ПерваяПоловинаМесяца = ДанныеЗаполнения.ПерваяПоловинаМесяца
    
    РасчетныйЛист.ДатаПубликации = Дата.Сейчас() 
;

@ВПодсистеме
метод НайтиРасчетныйЛист(ДанныеЗаполнения: ДанныеРасчетногоЛиста): РасчетныеЛисты.Ссылка?
    возврат НайтиРасчетныйЛист(ДанныеЗаполнения.ФизическоеЛицо, ДанныеЗаполнения.Месяц, ДанныеЗаполнения.ПерваяПоловинаМесяца)
;

метод НайтиРасчетныйЛист(ФизическоеЛицо: ФизическиеЛица.Ссылка, Месяц: Дата, ПерваяПоловинаМесяца: Булево): РасчетныеЛисты.Ссылка?

    знч Запрос = Запрос{
        Выбрать Первые 1
            Ссылка
         Из 
            РасчетныеЛисты
         Где
            ФизическоеЛицо == %ФизическоеЛицо
            И Месяц == %Месяц
            И ПерваяПоловинаМесяца == %ПерваяПоловинаМесяца}
    исп Результат = Запрос.Выполнить() 
    знч РезультатСтроки = новый ЧитаемыйМассив(Результат)
    если (не РезультатСтроки.Пусто())
        возврат РезультатСтроки[0].Ссылка
    ;        
    возврат Неопределено
;

@ВПодсистеме
метод НовыйРасчетныйЛист(ДанныеЗаполнения: ДанныеРасчетногоЛиста): РасчетныеЛисты.Объект
    пер РасчетныйЛист = новый РасчетныеЛисты.Объект()
    ЗаполнитьРасчетныйЛист(РасчетныйЛист, ДанныеЗаполнения)
    возврат РасчетныйЛист
;

/**
Описание: Отмечает расчетный лист как подписанный  
Параметры:
    ФизическоеЛицо
    Месяц 
    ПерваяПоловинаМесяца - булев признак, что это - расчетный лист за первую половину  
*/
@ВПодсистеме
метод ПодписатьРасчетныйЛист(ФизическоеЛицо: ФизическиеЛица.Ссылка, Месяц: Дата, ПерваяПоловинаМесяца: Булево, ВидЭлектроннойПодписи: ВидыЭлектронныхПодписей)
    знч Запрос = Запрос{
        Выбрать Первые 1
            РасчетныеЛисты.Ссылка Как РасчетныйЛист,
            Выбор Когда Подписи.Документ Есть Null Тогда Ложь Иначе Истина Конец Как Ознакомлен
        Из РасчетныеЛисты Как РасчетныеЛисты
        Левое Соединение СогласованияДокументов Как Подписи
        По Подписи.Документ == РасчетныеЛисты.Ссылка
        Где РасчетныеЛисты.ФизическоеЛицо == %ФизическоеЛицо
            И РасчетныеЛисты.Месяц == %Месяц
            И РасчетныеЛисты.ПерваяПоловинаМесяца == %ПерваяПоловинаМесяца}
    пер РасчетныйЛист: РасчетныеЛисты.Ссылка?
    пер Ознакомлен: Булево
    исп Результат = Запрос.Выполнить() 
    знч РезультатСтроки = новый ЧитаемыйМассив(Результат)
    если (не РезультатСтроки.Пусто())
        РасчетныйЛист = РезультатСтроки[0].РасчетныйЛист
        Ознакомлен = РезультатСтроки[0].Ознакомлен
        если Ознакомлен
            возврат
        ;
    ;
    ПодписатьРасчетныйЛист(РасчетныйЛист, ФизическоеЛицо, "", ВидЭлектроннойПодписи)
;

@ВПодсистеме
метод ПодписатьРасчетныйЛист(РасчетныйЛист: РасчетныеЛисты.Ссылка, ФизическоеЛицо: ФизическиеЛица.Ссылка,
    ПарольЗакрытогоКлюча: Строка = "", ВидЭлектроннойПодписи: ВидыЭлектронныхПодписей)
    
    знч ФайлыЛиста = ФайлыРасчетногоЛиста(РасчетныйЛист)
    для ДанныеФайла из ФайлыЛиста
        если ДанныеФайла.Файл != Неопределено
            знч ДанныеСогласующего = новый Согласования.ДанныеСогласующего(ФизическоеЛицо, Согласования.РольПодписантаСотрудник())
            если ВидЭлектроннойПодписи == ВидыЭлектронныхПодписей.Госключ 
                или ВидЭлектроннойПодписи == ВидыЭлектронныхПодписей.УнэпАстралПлатформа
                или не Согласования.ПроверитьНастройкиИПодписатьФайлДокумента(ДанныеФайла.ДокументНаПодпись, ДанныеФайла.Файл, ДанныеСогласующего, ПарольЗакрытогоКлюча)
                
                СогласованияДокументов.ЗарегистрироватьСогласованиеПростойПодписью(ДанныеФайла.ДокументНаПодпись, ДанныеСогласующего)
            ;
            ПолученныеДокументы.ЗарегистрироватьОзнакомлениесОбъектом(
                ДанныеФайла.ДокументНаПодпись, ФизическоеЛицо)
        ;
    ;
;

@ВПодсистеме
метод ПослеЗаписиДополнение(Ссылка: РасчетныеЛисты.Ссылка, ФизическоеЛицо: ФизическиеЛица.Ссылка?)
    ВладельцыКабинетов.УстановитьПризнакТребуетсяОбновление(ФизическоеЛицо, Истина)
    РасчетныеЛистыКУведомлениям.ЗарегистрироватьРасчетныйЛистКУведомлению(Ссылка)
;

@ВПодсистеме
метод ФайлыРасчетногоЛиста(РасчетныйЛист: РасчетныеЛисты.Ссылка): Массив<ФайлРасчетногоЛиста>
    пер ФайлыРасчетногоЛиста = новый Массив<ФайлРасчетногоЛиста>()
    знч ИспользованиеКЭДО = Криптография.НастройкиЭлектронныхПодписей().ИспользованиеКЭДО
    знч Запрос = Запрос{
        Выбрать Различные
            РасчетныеЛистыНаПодпись.Элемент Как ДокументНаПодпись,
            РасчетныеЛистыНаПодпись.Элемент.Организация.ЗаменитьNull(Неопределено) Как Организация,
            РасчетныеЛистыНаПодпись.Элемент.Файл.ЗаменитьNull(Неопределено) Как Файл,
            Минимум(Файлы.Ссылка.ЗаменитьNull(Неопределено)) Как ФайлНаПечать,
            Максимум((Не Подписи.Документ Есть Null) или (%ИспользованиеКЭДО и Не СостоянияЗапросовПодписания.Документ Есть Null)) Как Ознакомлен
        Из
            РасчетныеЛисты.РасчетныеЛистыНаПодпись Как РасчетныеЛистыНаПодпись
                Левое Соединение СогласованияДокументов Как Подписи
                По РасчетныеЛистыНаПодпись.Элемент == Подписи.Документ
                Левое Соединение Файлы Как Файлы
                По РасчетныеЛистыНаПодпись.Элемент == Файлы.Владелец
                    И Файлы.ВидФайла == ВидыФайла.ДополнительноеПредставлениеЭлектронногоДокумента
                Левое Соединение СостоянияЗапросовПодписания Как СостоянияЗапросовПодписания
                    По РасчетныеЛистыНаПодпись.Элемент == СостоянияЗапросовПодписания.Документ
                    И СостоянияЗапросовПодписания.СрокИсполнения >= %{МенеджерДат.ТекущаяДатаВремя()}
        Где 
            РасчетныеЛистыНаПодпись.Владелец == %РасчетныйЛист
            И Не РасчетныеЛистыНаПодпись.Элемент.Организация Есть Null
            И Не РасчетныеЛистыНаПодпись.Элемент.Файл Есть Null
        Сгруппировать По
            РасчетныеЛистыНаПодпись.Элемент,
            РасчетныеЛистыНаПодпись.Элемент.Организация,
            РасчетныеЛистыНаПодпись.Элемент.Файл}
    исп Результат = Запрос.Выполнить()
    для РезультатСтрока из Результат
        пер ДанныеФайла = новый ФайлРасчетногоЛиста()
        ДанныеФайла.ДокументНаПодпись = РезультатСтрока.ДокументНаПодпись
        ДанныеФайла.Организация = РезультатСтрока.Организация
        ДанныеФайла.Файл = РезультатСтрока.Файл
        ДанныеФайла.ФайлНаПечать = РезультатСтрока.ФайлНаПечать
        ДанныеФайла.Ознакомлен = РезультатСтрока.Ознакомлен
        ФайлыРасчетногоЛиста.Добавить(ДанныеФайла)
    ;
    возврат ФайлыРасчетногоЛиста
;

@ВПодсистеме
метод ОзнакомленностьСРасчетнымЛистом(ЗапросHttp: HttpСервисЗапрос, ОжидаемыеПараметры: ЧитаемаяКоллекция<СервисыHttp.ОжидаемыйПараметр>)
    попытка 
        пер Результат = Ложь
        знч ПараметрыЗапроса = СервисыHttp.ПараметрыЗапроса(ЗапросHttp, ОжидаемыеПараметры)
        знч ФизическоеЛицо = ВебApiСервер.ПолучитьСсылку(
                ФизическиеЛица.ВнешняяСсылка(ПараметрыЗапроса["personID"] как Строка)) как ФизическиеЛица.Ссылка
        знч Месяц = Зарплата.ДатаИзМесяцаСтрокой(ПараметрыЗапроса["month"] как Строка)
        пер РасчетныйЛист = НайтиРасчетныйЛист(ФизическоеЛицо, Месяц, Ложь)
        если РасчетныйЛист == Неопределено
            РасчетныйЛист = НайтиРасчетныйЛист(ФизическоеЛицо, Месяц, Истина)
;
        если РасчетныйЛист != Неопределено
            знч ФайлыЛиста = ФайлыРасчетногоЛиста(РасчетныйЛист)
            Результат = не ФайлыЛиста.Пусто()
            для ДанныеФайла из ФайлыЛиста
                если не ДанныеФайла.Ознакомлен
                    Результат = Ложь
                    прервать
;
        ;
    ;
        если Результат
            СервисыHttp.ЗаполнитьОтвет(ЗапросHttp, СервисыHttp.КодыСостояний.ОК_200)
        иначе
            СервисыHttp.ЗаполнитьОтвет(ЗапросHttp, СервисыHttp.КодыСостояний.Удалено_204)
        ;
    поймать Ошибка: Исключение
        СервисыHttp.ЗаполнитьОтвет(ЗапросHttp, Ошибка)
    ;         
;
//КонецОбласти

@ВПодсистеме
метод ОбластьВТНеподписанныеРасчетныеЛисты(СписокФизическихЛиц: ЧитаемоеМножество<ФизическиеЛица.Ссылка>, ДатаПубликации: Дата)
    знч Запрос = Запрос{
        Выбрать Различные
            РасчетныеЛисты.Владелец.Ссылка Как РасчетныйЛист,
            РасчетныеЛисты.Владелец.Месяц Как Месяц,
            РасчетныеЛисты.Владелец.ДатаПубликации Как ДатаПубликации,
            ФизическиеЛица.Ссылка Как ФизическоеЛицо,
            ФизическиеЛица.Представление Как ФизическоеЛицоПредставление,
            ФизическиеЛица.Миниатюра Как Миниатюра
         Поместить ВТНеподписанныеРасчетныеЛисты
         Из 
            РасчетныеЛисты.РасчетныеЛистыНаПодпись Как РасчетныеЛисты
            Внутреннее Соединение ФизическиеЛица Как ФизическиеЛица
                По РасчетныеЛисты.Владелец.ФизическоеЛицо == ФизическиеЛица.Ссылка
            Внутреннее Соединение ДокументыНаПодпись Как ДокументыНаПодпись
                По РасчетныеЛисты.Элемент == ДокументыНаПодпись.Ссылка
            Левое Соединение СогласованияДокументов Как Подписи
                По РасчетныеЛисты.Элемент == Подписи.Документ
         Где 
            РасчетныеЛисты.Владелец.ФизическоеЛицо В(%СписокФизическихЛиц)
            И РасчетныеЛисты.Владелец.ДатаПубликации <=| %ДатаПубликации
            И (Не РасчетныеЛисты.Владелец.ПерваяПоловинаМесяца)
            И (Подписи.Документ Есть Null)}
    Запрос.Выполнить()
;

@ВПроекте
метод ОтправитьНапоминанияОРасчетныхЛистах(ДанныеРасчетныхЛистов: Массив<ЧитаемоеСоответствие<Строка, Объект?>>, УниверсальныеПараметры: Соответствие<ФизическиеЛица.Ссылка, Соответствие<Строка, Строка>>)
    
    пер ИменаРесурсов = [
        Сервер.РАСЧЕТНЫЙ_ЛИСТ_НАПОМИНАНИЕ_ТЕМА,
        Сервер.РАСЧЕТНЫЙ_ЛИСТ_НАПОМИНАНИЕ_SMS,
        Сервер.РАСЧЕТНЫЙ_ЛИСТ_НАПОМИНАНИЕ_PUSH,
        Сервер.РАСЧЕТНЫЙ_ЛИСТ_НАПОМИНАНИЕ_EMAIL]
    пер ЗначенияРесурсов = УниверсальныеМеханизмы.ЗначенияРесурсовПодсистемы(Сервер.ПОДСИСТЕМА_ЗАРПЛАТА, ИменаРесурсов)
    
    знч Формат = "ММММ гггг"
    для ДанныеРасчетногоЛиста из ДанныеРасчетныхЛистов
        пер МесяцРасчетногоЛиста = МенеджерДат.ФорматДаты(ДанныеРасчетногоЛиста.Получить("Месяц") как Дата?, Формат)
        пер СообщениеТема = ЗначенияРесурсов[Сервер.РАСЧЕТНЫЙ_ЛИСТ_НАПОМИНАНИЕ_ТЕМА].Заменить("\%МесяцРасчетногоЛиста\%", МесяцРасчетногоЛиста)
        пер СообщениеSMS = ЗначенияРесурсов[Сервер.РАСЧЕТНЫЙ_ЛИСТ_НАПОМИНАНИЕ_SMS].Заменить("\%МесяцРасчетногоЛиста\%", МесяцРасчетногоЛиста)
        пер СообщениеPUSH = ЗначенияРесурсов[Сервер.РАСЧЕТНЫЙ_ЛИСТ_НАПОМИНАНИЕ_PUSH].Заменить("\%МесяцРасчетногоЛиста\%", МесяцРасчетногоЛиста)
        пер СообщениеEMAIL = ЗначенияРесурсов[Сервер.РАСЧЕТНЫЙ_ЛИСТ_НАПОМИНАНИЕ_EMAIL].Заменить("\%МесяцРасчетногоЛиста\%", МесяцРасчетногоЛиста)
        пер ЗначенияПараметров = УниверсальныеПараметры[ДанныеРасчетногоЛиста.Получить("ФизическоеЛицо") как ФизическиеЛица.Ссылка?]
        СообщениеТема = ОбщегоНазначения.ЗаполнитьУниверсальныеПараметрыВСообщении(СообщениеТема, ЗначенияПараметров)
        СообщениеSMS = ОбщегоНазначения.ЗаполнитьУниверсальныеПараметрыВСообщении(СообщениеSMS, ЗначенияПараметров)
        СообщениеPUSH = ОбщегоНазначения.ЗаполнитьУниверсальныеПараметрыВСообщении(СообщениеPUSH, ЗначенияПараметров)
        СообщениеEMAIL = ОбщегоНазначения.ЗаполнитьУниверсальныеПараметрыВСообщении(СообщениеEMAIL, ЗначенияПараметров)
        пер ТекстыУведомлений = новый УведомленияСервер.ТекстыСообщений(СообщениеТема, СообщениеSMS, СообщениеPUSH, СообщениеEMAIL)
        пер ДанныеУведомления = новый УведомленияСервер.ДанныеУведомления(Уведомления.ВидыУведомлений.ОзнакомлениеПодПодпись, ДанныеРасчетногоЛиста.Получить("РасчетныйЛист") как Справочник.Ссылка) 
        УведомленияСервер.ОтправитьУведомление(ДанныеРасчетногоЛиста.Получить("ФизическоеЛицо") как ФизическиеЛица.Ссылка?, ТекстыУведомлений, ДанныеУведомления)
    ;
    
;