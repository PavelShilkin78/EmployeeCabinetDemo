импорт ОбщиеСтандартные
импорт ВебApi

//Область JSON

@ВПроекте
метод ТипДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    если ВерсияФорматаОбмена == Неопределено
        возврат Тип<ДанныеJson>
    иначе если ВерсияФорматаОбмена >= Версия{1.0}
        возврат Тип<ДанныеJson>
    ;
;

@ВПроекте
метод ТипКоллекцииДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    если ВерсияФорматаОбмена == Неопределено
        возврат Тип<Массив<ДанныеJson>>
    иначе если ВерсияФорматаОбмена >= Версия{1.0}
        возврат Тип<Массив<ДанныеJson>>
    ;
;

@ВПроекте
метод ТипОбъектаJson(): Строка
    возврат "salaryComponents"
;

@ВПроекте
метод ЗагрузитьОбъектИзJson(ДанныеJson: ДанныеJson, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)

    исп Транзакции.Начать() 

    знч Объект = Сервисы.ПрочитатьОбъект(ДанныеJson.ID, &СоставныеЧастиЗарплаты.Объект.новый(Ууид), Тип<СоставныеЧастиЗарплаты.Ссылка>) как СоставныеЧастиЗарплаты.Объект
    Объект.ЗаполнитьПоДаннымJSON(ДанныеJson, Сервисы)
    Сервисы.ЗаписатьОбъект(новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(Объект, ДанныеJson.ID), Сервисы.ИнструментыМенеджераОбъекта)
;

@ВПодсистеме
метод ВнешняяСсылка(Идентификатор: Строка): ВебApiСервер.ВнешняяСсылка
    возврат новый ВебApiСервер.ВнешняяСсылка(Идентификатор, (Ууид) -> СоставныеЧастиЗарплаты.ПолучитьСсылку(Ууид))
;

@ВПроекте
структура ДанныеJson
    обз знч ID: Строка
    обз знч name: Строка
    обз знч section: ГруппыСоставныхЧастейЗарплатыJson
    обз знч specificSalaryComponent: ВидыСоставныхЧастейЗарплатыJson?
    обз знч priority: Число?
    обз знч accrualType: ТипыНачисленийJson?
;

@ВПодсистеме
перечисление ГруппыСоставныхЧастейЗарплатыJson
    incomingBalance,
    accruals,
    deductions,
    payouts,
    outgoingBalance,
    additionalInfo,
    benefits,
    contributions,
    personalIncomeTaxInfo
;

@ВПодсистеме
перечисление ВидыСоставныхЧастейЗарплатыJson
    incomingEmployerDebt,
    incomingEmployeeDebt,
    civilContractAcrual,
    salaryDelayCompensation,
    allowance,
    loanInterestRepayment,
    loanRepayment,
    tax,
    appliedTaxDeductions,
    annualIncome,
    loanBenefits,
    cashPayment,
    bankPayment,
    outgoingEmployerDebt,
    outgoingEmployeeDebt,
    pensionContributions,
    voluntaryPensionContributions 
;

@ВПодсистеме
перечисление ТипыНачисленийJson
    permanent,
    variable,
    other
;

метод ДанныеСоставныхЧастей(СоставныеЧасти: ЧитаемаяКоллекция<СоставныеЧастиЗарплаты.Ссылка>): ЧитаемоеСоответствие<СоставныеЧастиЗарплаты.Ссылка, ЧитаемоеСоответствие<Строка, Объект?>>
    знч Данные: Соответствие<СоставныеЧастиЗарплаты.Ссылка, ЧитаемоеСоответствие<Строка, Объект?>>
    знч Запрос = Запрос{
        Выбрать
            Ссылка,
            Наименование,
            Приоритет,
            Группа,
            ТипНачисления,
            Вид
        Из
            СоставныеЧастиЗарплаты
        Где
            Ссылка В (%СоставныеЧасти)}
    исп Результат = Запрос.Выполнить() 
    для РезультатСтрока из Результат
        Данные.Вставить(
            РезультатСтрока.Ссылка, 
            МенеджерЗапросов.СтрокаРезультатаЗапросаВСоответствие(РезультатСтрока, Результат))
    ;
    возврат Данные
;

//КонецОбласти