@ВПодсистеме
метод ПроверкаЗаполнения(): Булево
    пер РезультатПроверки: Булево = Истина
    РазмерУдержанияПроцентСообщениеОбОшибкеВвода = ""
    РазмерУдержанияСуммаСообщениеОбОшибкеВвода = ""
    если СпособРасчета == Неопределено
        РезультатПроверки = Ложь
        РазмерУдержанияПроцентСообщениеОбОшибкеВвода = "Выберите способ удержания"
    ;
    если СпособРасчета == СпособыРасчетаУдержания.Процентом
        или СпособРасчета == СпособыРасчетаУдержания.ПроцентомНеБолееЗаданнойСуммы
        
        если РазмерУдержанияПроцент <= 0
            РезультатПроверки = Ложь
            РазмерУдержанияПроцентСообщениеОбОшибкеВвода = "Укажите процент удержания"
        иначе если РазмерУдержанияПроцент > 50
            РезультатПроверки = Ложь
            РазмерУдержанияПроцентСообщениеОбОшибкеВвода = "Процент удержания не может превышать 50\% от заработной платы"
        ;
    ;
    если СпособРасчета == СпособыРасчетаУдержания.Суммой
        или СпособРасчета == СпособыРасчетаУдержания.ПроцентомНеБолееЗаданнойСуммы
    
        если РазмерУдержанияСумма < 0
            или СпособРасчета == СпособыРасчетаУдержания.Суммой и РазмерУдержанияСумма == 0
              
            РезультатПроверки = Ложь
            РазмерУдержанияСуммаСообщениеОбОшибкеВвода = "Укажите сумму удержания"
        иначе если РазмерУдержанияСумма > 999999.99
            РезультатПроверки = Ложь
            РазмерУдержанияСуммаСообщениеОбОшибкеВвода = "Укажите сумму удержания не более 999999.99"
        ;
    ;
    возврат РезультатПроверки
;

метод ЗначенияГруппировка(): ОриентацияСодержимого
    возврат КлиентскоеУстройство.ВидИнтерфейса == ВидИнтерфейса.Телефон ? ОриентацияСодержимого.Вертикальная : ОриентацияСодержимого.Горизонтальная 
;

метод ЕдинственныйСпособРасчетаЗначение(): Строка
    пер СпособРасчетаЗначение: Строка
    если СпособРасчета != Неопределено
        СпособРасчетаЗначение = СпособРасчета.Представление()
    ;
    возврат СпособРасчетаЗначение
;

метод ЕдинственныйСпособРасчетаВидимость(): Булево
    возврат ТолькоЧтение или ДоступныеСпособыУдержания().Размер() == 1 
;

метод СпособРасчетаПроцентомВидимость(): Булево
    возврат СпособРасчетаВидимость(СпособыРасчетаУдержания.Процентом)
;

метод СпособРасчетаСуммойВидимость(): Булево
    возврат СпособРасчетаВидимость(СпособыРасчетаУдержания.Суммой)
;

метод СпособРасчетаПроцентомНеБолееЗаданнойСуммыВидимость(): Булево
    возврат СпособРасчетаВидимость(СпособыРасчетаУдержания.ПроцентомНеБолееЗаданнойСуммы)
;

метод РазмерУдержанияСуммаЗаголовокПоля(): Строка
    возврат СпособРасчета == СпособыРасчетаУдержания.ПроцентомНеБолееЗаданнойСуммы ? "Максимальный размер" : "Сумма удержания"
;

метод РазмерУдержанияПроцентВидимость(): Булево
    возврат СпособРасчета == СпособыРасчетаУдержания.Процентом или СпособРасчета == СпособыРасчетаУдержания.ПроцентомНеБолееЗаданнойСуммы
;

метод РазмерУдержанияСуммаВидимость(): Булево
    возврат СпособРасчета == СпособыРасчетаУдержания.Суммой или СпособРасчета == СпособыРасчетаУдержания.ПроцентомНеБолееЗаданнойСуммы
;

метод ДоступныеСпособыУдержания(): Массив<СпособыРасчетаУдержания>
    возврат Клиент.ДоступныеСпособыУдержания()
;

метод СпособРасчетаВидимость(ПроверяемыйСпособРасчета: СпособыРасчетаУдержания): Булево
    если ТолькоЧтение и ПроверяемыйСпособРасчета == СпособРасчета
        возврат Ложь
    ;
    если ТолькоЧтение
        возврат Ложь
    ;
    пер ДоступныеСпособы = ДоступныеСпособыУдержания()
    если ДоступныеСпособы.Размер() == 1
        возврат Ложь
    ;
    возврат ДоступныеСпособы.Содержит(ПроверяемыйСпособРасчета)
;

метод РедактированиеРазрешено(): Булево
    возврат не ТолькоЧтение
;