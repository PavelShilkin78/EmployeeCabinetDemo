импорт ОбщиеСтандартные
импорт ФизическиеЛица
импорт Компания
импорт ВебApi
импорт КонтрольДоступа

//Область РазрешенияДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): Массив<РазрешениеДоступа>
    возврат [КонтрольДоступа.ЧтениеАутентифицированным(этот),
            КонтрольДоступа.ПолныйДоступИнформационнойСистеме(этот)]
;

@Обработчик
метод ВычислитьРазрешенияДоступаДляОбъектов(Элементы: ЧитаемыйМассив<ПрименяемыеВычеты.ДанныеРасчетаРазрешений>): ЧитаемоеСоответствие<ПрименяемыеВычеты.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    знч Разрешения: Соответствие<ПрименяемыеВычеты.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    для Элемент из Элементы
        знч РазрешенияЭлемента: Множество<РазрешениеДоступа>
        РазрешенияЭлемента.Добавить(КонтрольДоступа.ПолныйДоступИнформационнойСистеме(этот))
        РазрешенияЭлемента.ДобавитьВсе(КонтрольДоступа.ЧтениеДанныхСправочниковПоПолномочиям(
            [Зарплата.ПолномочиеПросмотрНдфл()],
            Элемент.ФизическоеЛицо
        ))
        РазрешенияЭлемента.ДобавитьВсе(КонтрольДоступа.ЧтениеДанныхСправочниковПерсонально([Элемент.ФизическоеЛицо]))
        Разрешения.Вставить(Элемент, РазрешенияЭлемента)
    ;
    возврат Разрешения
;

//КонецОбласти

//Область JSON

@ВПодсистеме
метод ТипДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    если ВерсияФорматаОбмена == Неопределено
        возврат Тип<ДанныеJson>
    иначе если ВерсияФорматаОбмена >= Версия{1.0}
        возврат Тип<ДанныеJson>
    ;
;

@ВПодсистеме
метод ТипКоллекцииДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    если ВерсияФорматаОбмена == Неопределено
        возврат Тип<Массив<ДанныеJson>>
    иначе если ВерсияФорматаОбмена >= Версия{1.0}
        возврат Тип<Массив<ДанныеJson>>
    ;
;

@ВПроекте
структура ДанныеJson
    обз знч personID: Строка
    обз знч employerID: Строка
    обз знч deductions: ЧитаемыйМассив<НалоговыйВычетJson>?
;

@ВПодсистеме
структура НалоговыйВычетJson
    обз знч amount: Число
    обз знч restOfDeduction: Число?
    обз знч startDate: ДатаВремя
    обз знч endDate: ДатаВремя?
    обз знч note: Строка?
;

@ВПодсистеме
метод ТипОбъектаJson(): Строка
    возврат "taxDeductions"
;

@ВПодсистеме
метод ЗагрузитьОбъектИзJson(ДанныеJson: ДанныеJson, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    если ДанныеJson.deductions == Неопределено
        возврат
    ;

    знч СтрокиВычетов: Массив<Справочник.Объект>

    знч ФизическоеЛицо = Сервисы.ПолучитьСсылку(ФизическиеЛица.ВнешняяСсылка(ДанныеJson.personID)) как ФизическиеЛица.Ссылка
    знч ГоловнаяОрганизация = Сервисы.ПолучитьСсылку(Организации.ВнешняяСсылка(ДанныеJson.employerID)) как Организации.Ссылка
    
    знч Ключ: Соответствие<Строка, Объект>
    Ключ.Вставить("ФизическоеЛицо", ФизическоеЛицо)
    Ключ.Вставить("ГоловнаяОрганизация", ГоловнаяОрганизация)
    
    для ДанныеВычетов из ДанныеJson.deductions
        знч ПрименениеВычетовОбъект: ПрименяемыеВычеты.Объект = новый ПрименяемыеВычеты.Объект()
        ПрименениеВычетовОбъект.ГоловнаяОрганизация = ГоловнаяОрганизация
        ПрименениеВычетовОбъект.ФизическоеЛицо = ФизическоеЛицо
        ПрименениеВычетовОбъект.Сумма = ДанныеВычетов.amount
        ПрименениеВычетовОбъект.Остаток = ДанныеВычетов.restOfDeduction ?? 0
        ПрименениеВычетовОбъект.МесяцНачала = ДанныеВычетов.startDate.Дата
        ПрименениеВычетовОбъект.МесяцОкончания = ДанныеВычетов.endDate?.Дата
        ПрименениеВычетовОбъект.Комментарий = ДанныеВычетов.note ?? ""

        СтрокиВычетов.Добавить(ПрименениеВычетовОбъект)
    ;        

    Сервисы.ЗаписатьКоллекцию(СтрокиВычетов, Ключ, Тип<ПрименяемыеВычеты.Ссылка>, Сервисы.ИнструментыМенеджераОбъекта)
;

@ВПодсистеме
метод УдалитьОбъекты(ПараметрыЗапроса: ЧитаемоеСоответствие<Строка, Число|Булево|Ууид|Строка>, Сервисы: ВебApiСервер.СервисыУдаленияОбъектов)
    знч Ключ = {
        "ФизическоеЛицо": Сервисы.ПолучитьСсылку(ФизическиеЛица.ВнешняяСсылка(ПараметрыЗапроса["personID"] как Строка)),
        "ГоловнаяОрганизация": Сервисы.ПолучитьСсылку(Организации.ВнешняяСсылка(ПараметрыЗапроса["employerID"] как Строка))
    }
    Сервисы.УдалитьКоллекцию(Ключ, Тип<ПрименяемыеВычеты.Ссылка>)
;

метод ДанныеПрименяемыхВычетов(ФизическоеЛицо: ФизическиеЛица.Ссылка, ГоловнаяОрганизация: Организации.Ссылка): Соответствие<Строка, Объект?>
    знч Запрос = Запрос{
        Выбрать 
            ФизическоеЛицо,
            ГоловнаяОрганизация,
            МесяцНачала,
            МесяцОкончания,
            Сумма,
            Остаток,
            Комментарий
        Из 
            ПрименяемыеВычеты
        Где
            ФизическоеЛицо == %ФизическоеЛицо
            И ГоловнаяОрганизация == %ГоловнаяОрганизация}
    пер Вычеты: Массив<ЧитаемоеСоответствие<Строка, Объект?>>
    исп Результат = Запрос.Выполнить() 
    для РезультатСтрока из Результат
        Вычеты.Добавить(МенеджерЗапросов.СтрокаРезультатаЗапросаВСоответствие(РезультатСтрока, Результат))
    ;
    возврат <Строка, Объект?>{
        "ФизическоеЛицо": ФизическоеЛицо,
        "ГоловнаяОрганизация": ГоловнаяОрганизация,
        "Элементы": Вычеты}
;

//КонецОбласти