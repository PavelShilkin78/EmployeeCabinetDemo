импорт КонтрольДоступа
импорт ФизическиеЛица
импорт ОбщиеСтандартные
импорт ОбщегоНазначения
импорт Уведомления
импорт УниверсальныеМеханизмы

конст КЛЮЧ_ЗАДАНИЯ_ОТПРАВКИ_УВЕДОМЛЕНИЙ_О_РАСЧЕТНЫХ_ЛИСТАХ = "ОтправкаУведомленийОРасчетныхЛистах"

//Область РазрешенияДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): Массив<РазрешениеДоступа>
    возврат КонтрольДоступа.РегистрСведенийРедактированиеАдминистратору()
;

//КонецОбласти

@ВПодсистеме
метод ЗарегистрироватьРасчетныйЛистКУведомлению(РасчетныйЛист: РасчетныеЛисты.Ссылка)
    исп КонтекстДоступа.Привилегированный()
    пер НаборЗаписей = новый РасчетныеЛистыКУведомлениям.НаборЗаписей()
    НаборЗаписей.Фильтр.РасчетныйЛист.Установить(РасчетныйЛист)
    НаборЗаписей.ДобавитьЗапись(РасчетныйЛист = РасчетныйЛист)
    НаборЗаписей.Записать()
    ЗапланироватьОтправкуУведомлений(Истина)
;

метод ОтправитьУведомления()
    исп КонтекстДоступа.Привилегированный()
    знч Запрос = Запрос{
        ВЫБРАТЬ ПЕРВЫЕ 100
            РасчетныеЛистыКУведомлениям.РасчетныйЛист КАК РасчетныйЛист,
            РасчетныеЛистыКУведомлениям.РасчетныйЛист.ФизическоеЛицо.ЗаменитьNull(Неопределено) КАК ФизическоеЛицо,
            РасчетныеЛистыКУведомлениям.РасчетныйЛист.Месяц.ЗаменитьNull(Дата{}) КАК Месяц,
            РасчетныеЛистыКУведомлениям.РасчетныйЛист.ПерваяПоловинаМесяца.ЗаменитьNull(Ложь) КАК ПерваяПоловинаМесяца
        ИЗ
            РасчетныеЛистыКУведомлениям КАК РасчетныеЛистыКУведомлениям}
    исп Результат = Запрос.Выполнить()
    если Результат.Пусто()
        ЗапланироватьОтправкуУведомлений(Ложь)
    иначе
        для СтрокаРезультата из Результат
            если СтрокаРезультата.ФизическоеЛицо != Неопределено
                ОтправитьУведомлениеОНовом(СтрокаРезультата.РасчетныйЛист, СтрокаРезультата.ФизическоеЛицо,
                    СтрокаРезультата.Месяц, СтрокаРезультата.ПерваяПоловинаМесяца)
            ;
            пер НаборЗаписей = новый РасчетныеЛистыКУведомлениям.НаборЗаписей()
            НаборЗаписей.Фильтр.РасчетныйЛист.Установить(СтрокаРезультата.РасчетныйЛист)
            НаборЗаписей.Записать()
        ;
    ;
;

метод ОтправитьУведомлениеОНовом(РасчетныйЛист: РасчетныеЛисты.Ссылка, ФизическоеЛицо: ФизическиеЛица.Ссылка?, Месяц: Дата, ПерваяПоловинаМесяца: Булево)
    пер МесяцРасчетногоЛиста: Строка = МенеджерДат.ФорматДаты(Месяц, "ММММ")
    если ПерваяПоловинаМесяца
        МесяцРасчетногоЛиста = "первую половину " + МенеджерСтрок.Просклонять(МесяцРасчетногоЛиста, МенеджерСтрок.Падежи.Родительный)
    ;
    
    пер ИменаРесурсов = [
        Сервер.РАСЧЕТНЫЙ_ЛИСТ_ОПУБЛИКОВАН_ТЕМА,
        Сервер.РАСЧЕТНЫЙ_ЛИСТ_ОПУБЛИКОВАН_SMS,
        Сервер.РАСЧЕТНЫЙ_ЛИСТ_ОПУБЛИКОВАН_PUSH,
        Сервер.РАСЧЕТНЫЙ_ЛИСТ_ОПУБЛИКОВАН_EMAIL]
    пер ЗначенияРесурсов = УниверсальныеМеханизмы.ЗначенияРесурсовПодсистемы(Сервер.ПОДСИСТЕМА_ЗАРПЛАТА, ИменаРесурсов)
    пер СообщениеТема = ЗначенияРесурсов[Сервер.РАСЧЕТНЫЙ_ЛИСТ_ОПУБЛИКОВАН_ТЕМА].Заменить("\%МесяцРасчетногоЛиста\%", МесяцРасчетногоЛиста)
    пер СообщениеSMS = ЗначенияРесурсов[Сервер.РАСЧЕТНЫЙ_ЛИСТ_ОПУБЛИКОВАН_SMS].Заменить("\%МесяцРасчетногоЛиста\%", МесяцРасчетногоЛиста)
    пер СообщениеPUSH = ЗначенияРесурсов[Сервер.РАСЧЕТНЫЙ_ЛИСТ_ОПУБЛИКОВАН_PUSH].Заменить("\%МесяцРасчетногоЛиста\%", МесяцРасчетногоЛиста)
    пер СообщениеEMAIL = ЗначенияРесурсов[Сервер.РАСЧЕТНЫЙ_ЛИСТ_ОПУБЛИКОВАН_EMAIL].Заменить("\%МесяцРасчетногоЛиста\%", МесяцРасчетногоЛиста)
    
    пер УниверсальныеПараметры = ОбщегоНазначения.УниверсальныеПараметрыСтроковыхРесурсов(ЗначенияРесурсов, {ФизическоеЛицо})
    пер ЗначенияПараметров: Соответствие<Строка,Строка>? = УниверсальныеПараметры.ПолучитьИлиУмолчание(ФизическоеЛицо)
    если ЗначенияПараметров != Неопределено
        СообщениеТема = ОбщегоНазначения.ЗаполнитьУниверсальныеПараметрыВСообщении(СообщениеТема, ЗначенияПараметров!)
        СообщениеSMS = ОбщегоНазначения.ЗаполнитьУниверсальныеПараметрыВСообщении(СообщениеSMS, ЗначенияПараметров!)
        СообщениеPUSH = ОбщегоНазначения.ЗаполнитьУниверсальныеПараметрыВСообщении(СообщениеPUSH, ЗначенияПараметров!)
        СообщениеEMAIL = ОбщегоНазначения.ЗаполнитьУниверсальныеПараметрыВСообщении(СообщениеEMAIL, ЗначенияПараметров!)
    ;
    
    пер ТекстыУведомлений = новый УведомленияСервер.ТекстыСообщений(СообщениеТема, СообщениеSMS, СообщениеPUSH, СообщениеEMAIL)
    
    пер ДанныеУведомления = новый УведомленияСервер.ДанныеУведомления(Уведомления.ВидыУведомлений.ОзнакомлениеПодПодпись, РасчетныйЛист) 
    УведомленияСервер.ОтправитьУведомление(ФизическоеЛицо, ТекстыУведомлений, ДанныеУведомления)
;

метод ЗапланироватьОтправкуУведомлений(Запланировать: Булево)
    если Запланировать
        если ЗапланированныеЗадания.ПолучитьПоКлючу(КЛЮЧ_ЗАДАНИЯ_ОТПРАВКИ_УВЕДОМЛЕНИЙ_О_РАСЧЕТНЫХ_ЛИСТАХ) == Неопределено
            ЗапланированныеЗадания.Создать(&ОтправитьУведомления)
                .Настроить(
                    Ключ = КЛЮЧ_ЗАДАНИЯ_ОТПРАВКИ_УВЕДОМЛЕНИЙ_О_РАСЧЕТНЫХ_ЛИСТАХ,
                    Расписание = [Расписание.Периодическое(10м)],
                    ПовторыПриОшибке = СтратегияПовтораЗадания.Интервал(300с),
                    Описание = "Отправка уведомлений о расчетных листах"
                ).Запланировать()
        ;
    иначе
        если ЗапланированныеЗадания.ПолучитьПоКлючу(КЛЮЧ_ЗАДАНИЯ_ОТПРАВКИ_УВЕДОМЛЕНИЙ_О_РАСЧЕТНЫХ_ЛИСТАХ) != Неопределено
            ЗапланированныеЗадания.Удалить(КЛЮЧ_ЗАДАНИЯ_ОТПРАВКИ_УВЕДОМЛЕНИЙ_О_РАСЧЕТНЫХ_ЛИСТАХ)
        ;
    ;
;