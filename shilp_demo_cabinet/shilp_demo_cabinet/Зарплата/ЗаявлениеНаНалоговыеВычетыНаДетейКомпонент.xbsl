импорт Компания::Согласования
импорт УниверсальныеМеханизмы
импорт ИнтерфейсныеКомпонентыСтандартные
импорт Документы

// Контракт ДокументСотрудникаКомпонент

@ВПроекте
@Реализация
метод УстановитьТекущееЗаявление(Заявление: Объект)
    если Заявление это ЗаявлениеНаНалоговыеВычеты.Объект
        Объект = Заявление как ЗаявлениеНаНалоговыеВычеты.Объект
        ПрочитатьОбъект()
    ;
;

// Конец ДокументСотрудникаКомпонент

// Методы заполнения формы

метод ЗаявлениеНаНалоговыеВычетыНаДетейКомпонентЗаголовок(): Строка
    пер ЗаголовокФормы: Строка
    если РежимПросмотра
        ЗаголовокФормы = ЗаголовокФормы()
    ;
    возврат ЗаголовокФормы
;

метод ЗаявлениеНаНалоговыеВычетыНаДетейКомпонентОтступПоВертикали(): РазмерОтступа | Авто
    возврат РежимПросмотра ? РазмерОтступа.Двойной : РазмерОтступа.Отсутствует
;

метод ПояснениеЗаголовок(): Строка
    пер ПояснениеЗаголовок: Строка
    если ВозможноРедактирование()
        ПояснениеЗаголовок = "Заполните информацию о детях или напишите в поле Комментарий причину обращения с этим заявлением."
    иначе
        пер ДатаОтправки: Момент? = Объект?.МоментСоздания
        если СостояниеЗаявления != Неопределено 
            ПояснениеЗаголовок = ЗаявленияНаВычетыКлиент.ПояснениеЗаявленияПослеОтправки(ДатаОтправки, СостояниеЗаявления)
        ;
    ;
    возврат ПояснениеЗаголовок
;

метод ПрисоединенныеФайлыВспомогательноеПояснение(): Строка
    пер ЕстьДети: Булево
    пер ЯвляетсяЕдинственнымРодителем: Булево
    пер ЕстьДетиИнвалиды: Булево
    пер ЯвляетсяОпекуном: Булево
    пер ЕстьВзрослыеДети: Булево
    
    для Элемент из ТаблицаДети.Дети
        пер Ребенок: ЗаявлениеДетиСтрока = Элемент
        если Ребенок.Удалено
            продолжить
        ;
        ЕстьДети = Истина
        если Ребенок.ЕдинственныйРодитель
            ЯвляетсяЕдинственнымРодителем = Истина
        ;
        если Ребенок.РебенокИнвалид
            ЕстьДетиИнвалиды = Истина
        ;
        если Ребенок.Опекун
            ЯвляетсяОпекуном = Истина
        ;
        если Ребенок.ДатаРождения != Неопределено
            и Ребенок.ДатаОкончанияПрименения != Неопределено
            если Ребенок.ДатаРождения.ДобавитьГоды(18) < Ребенок.ДатаОкончанияПрименения
                ЕстьВзрослыеДети = Истина
            ;  
        ;  
    ;
    пер ВспомогательныйТекстПояснения: Строка
    если ЕстьДети 
        ВспомогательныйТекстПояснения += 
            "
            Свидетельство о рождении или Свидетельство об усыновлении (удочерении)"
    ;
    если ЕстьДетиИнвалиды
        ВспомогательныйТекстПояснения +=
            "
            Справку об инвалидности ребенка"
    ;
    если ЕстьВзрослыеДети
        ВспомогательныйТекстПояснения +=
            "
            Справку из учебного заведения для совершеннолетних учащихся"
    ;
    если ЯвляетсяЕдинственнымРодителем
        ВспомогательныйТекстПояснения +=
            "
            Документы, подтверждающие то, что вы - единственный родитель, получающий вычет. Например, справку с места работы второго родителя или подтверждение того, что вы не состоите в официальном браке"
    ;
    если ЯвляетсяОпекуном
        ВспомогательныйТекстПояснения +=
            "
            Документы, подтверждающие право на опекунство"
    ;
    если не ВспомогательныйТекстПояснения.Пусто()
        ВспомогательныйТекстПояснения =  "Приложите:" + ВспомогательныйТекстПояснения
    иначе
        ВспомогательныйТекстПояснения = "Здесь нужно будет приложить копии документов, подтверждающих ваше право на вычеты."
    ;
    возврат ВспомогательныйТекстПояснения
;

метод ТолькоПросмотр(): Булево
    возврат (не ВозможноРедактирование() или РежимПросмотра)
;

// Конец

// Обработчик событий формы

метод НачатьЗагрузкуФайлов(Источник: ПрисоединенныеФайлыКомпонент, Событие: неизвестно)
    ПрисоединенныеФайлыНачатаЗагрузкаФайлов(Событие)
;

метод ЗавершитьЗагрузкуФайлов(Источник: ПрисоединенныеФайлыКомпонент, Событие: неизвестно)
    ПрисоединенныеФайлыЗавершенаЗагрузкаФайлов(Событие)    
;

// Конец

// Заполнение из родительской формы

метод ПрочитатьОбъект()
    знч ДанныеСостояния = СостДокументов.ДанныеСостоянияДокумента(Объект.Ссылка)
    СостояниеЗаявления = ДанныеСостояния.Состояние
    пер Ссылка = Объект.Ссылка
    если Объект.ЭтоНовый()
        Объект.ВычетыНаДетей = Истина
        Объект.ПредставлениеДокумента = "Вычет на детей"
        ТаблицаДети.Владелец = Ссылка
        ТаблицаФайлы.Владелец = Ссылка
    иначе
        пер ТабличныеЧасти = ДанныеТабличныхЧастей(Ссылка)
        ТаблицаДети = ТабличныеЧасти.ТаблицаДети
        ТаблицаФайлы = ТабличныеЧасти.ТаблицаФайлы
        ТаблицаСогласующие = ТабличныеЧасти.ТаблицаСогласующие
        ОтслеживатьИзменениеДанных(Компоненты.ЗаявлениеДети, Истина)
        ОтслеживатьИзменениеДанных(Компоненты.ПрисоединенныеФайлы, Истина)
    ;
    
    ЗавершеноЧтениеДанных(новый СобытиеКомпонента())
    ИнтерфейсныеКомпоненты.ИнициализироватьПодчиненныеКомпоненты(Компоненты)
    СобственнаяМодифицированность = Ложь
    
;

@ВПодсистеме
@НаСервере @НаКлиенте
структура ТабличныеЧастиДанные
    пер ТаблицаДети: ЗаявлениеДети?
    пер ТаблицаФайлы: ПрисоединенныеФайлы?
    пер ТаблицаСогласующие: Согласующие?
;

@НаСервере @ДоступноСКлиента 
статический метод ДанныеТабличныхЧастей(Владелец: ЗаявлениеНаНалоговыеВычеты.Ссылка): ТабличныеЧастиДанные
    пер ДанныеТабличныхЧастей: ТабличныеЧастиДанные
    ДанныеТабличныхЧастей.ТаблицаДети = ЗаявлениеДетиМенеджер.ЗаявлениеДети(Владелец)
    ДанныеТабличныхЧастей.ТаблицаФайлы = ПрисоединенныеФайлыМенеджер.ПрисоединенныеФайлы(Владелец)
    ДанныеТабличныхЧастей.ТаблицаСогласующие = Согласования.Согласующие(Владелец)
    возврат ДанныеТабличныхЧастей
;

@НаСервере @ДоступноСКлиента
статический метод ЗагрузитьЗаявление(Заявление: ЗаявлениеНаНалоговыеВычеты.Ссылка): ЗаявлениеНаНалоговыеВычеты.Объект
    возврат Заявление.ЗагрузитьОбъект()
;
// Конец 

// Прочее

@ВПодсистеме
метод ВозможноРедактирование(): Булево
    возврат СостояниеЗаявления == СостоянияДокумента.Черновик
;

@ВПодсистеме
метод ПрисоединенныеФайлы(): ПрисоединенныеФайлыКомпонент
    возврат Компоненты.ПрисоединенныеФайлы    
;

@ВПодсистеме
метод ЗаявлениеДети(): ЗаявлениеДетиКомпонент
    возврат Компоненты.ЗаявлениеДети
;

@ВПодсистеме
метод ЗаголовокФормы(): Строка
    возврат Объект?.ПредставлениеДокумента ?? ""
;

// Конец