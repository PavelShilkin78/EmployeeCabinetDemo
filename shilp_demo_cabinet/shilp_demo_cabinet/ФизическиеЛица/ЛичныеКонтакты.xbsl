импорт СтандартноеПриложение

//Область РазрешенияДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): Массив<РазрешениеДоступа>
    возврат ДанныеФизическихЛицПоставщикОграничений.ПолучитьСервис().ЛичныеКонтактыРазрешения()
;

/**
Описание: Формирует РазрешенияДоступа для элементов справочника ЛичныеКонтакты, 
 имеющих ограничения на уровне записей ,
 доступ к которому ограничивается по физическому лицу. 
Параметры: Элементы - элементы справочника, для которых формируются РазрешенияДоступа,
Возвращает: РазрешенияДоступа доступа.
*/
@Обработчик
метод ВычислитьРазрешенияДоступаДляОбъектов(Элементы: ЧитаемыйМассив<ЛичныеКонтакты.ДанныеРасчетаРазрешений>): Соответствие<ЛичныеКонтакты.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    знч Разрешения: Соответствие<ЛичныеКонтакты.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    для Сервис из ЛичныеКонтактыПоставщикОграничений.ПолучитьСервисы()
        Разрешения.ВставитьВсе(Сервис.РазрешенияДоступаЛичныхКонтактов(Элементы))
    ;
    возврат Разрешения
;

//КонецОбласти

@ВПроекте
метод ПолучитьКонтакты(Владелец: ВладелецКонтактнойИнформации.Ссылка): ЛичныеКонтакты.Ссылка?
    знч Запрос = Запрос{
            Выбрать 
                Ссылка
            Из 
                ЛичныеКонтакты
            Где 
                Владелец == %Владелец}
    пер Результат = новый ЧитаемыйМассив(Запрос.Выполнить())
    если Результат.Пусто()
        возврат Неопределено
    ;
    возврат Результат[0].Ссылка
;

@ВПроекте
метод ПолучитьКонтакты(Владельцы: ЧитаемыйМассив<ВладелецКонтактнойИнформации.Ссылка>): Соответствие<ВладелецКонтактнойИнформации.Ссылка, ЛичныеКонтакты.Ссылка?>
    
    пер КонтактыВладельцев: Соответствие<ВладелецКонтактнойИнформации.Ссылка, ЛичныеКонтакты.Ссылка?>
    для Владелец из Владельцы
        КонтактыВладельцев.Вставить(Владелец, Неопределено)    
    ;
    
    знч Запрос = Запрос{
        Выбрать
            Владелец,
            Ссылка
        Из
            ЛичныеКонтакты
        Где
            Владелец в (%Владельцы)
    }    
    исп РезультатЗапроса = Запрос.Выполнить()
    для СтрокаРезультат из РезультатЗапроса
        КонтактыВладельцев[СтрокаРезультат.Владелец] = СтрокаРезультат.Ссылка    
    ;
    
    возврат КонтактыВладельцев    
;

@ВПроекте
метод ПолучитьПочтовыеКонтакты(Владельцы: ЧитаемыйМассив<ВладелецКонтактнойИнформации.Ссылка>): Соответствие<ВладелецКонтактнойИнформации.Ссылка, Строка?>
    
    пер КонтактыВладельцев: Соответствие<ВладелецКонтактнойИнформации.Ссылка, Строка?>
    для Владелец из Владельцы
        КонтактыВладельцев.Вставить(Владелец, Неопределено)    
    ;
    
    знч Запрос = Запрос{
        Выбрать 
            ЭлектроннаяПочта.Элемент.Данные как ЭлектроннаяПочта,
            ЭлектроннаяПочта.Владелец.Владелец.ЗаменитьNull(Неопределено) как Владелец
        Из 
            ЛичныеКонтакты.ЭлектроннаяПочта как ЭлектроннаяПочта
        Где
            ЭлектроннаяПочта.Владелец.Владелец в (%Владельцы)
    }    
    исп РезультатЗапроса = Запрос.Выполнить()
    для СтрокаРезультат из РезультатЗапроса
        КонтактыВладельцев[СтрокаРезультат.Владелец] = СтрокаРезультат.ЭлектроннаяПочта     
    ;
    
    возврат КонтактыВладельцев    
;

@ВПроекте
метод ПолучитьВладельцаПоПочте(ПочтовыйАдрес: Строка): ВладелецКонтактнойИнформации.Ссылка?
    знч Запрос = Запрос{
            Выбрать 
                Контакты.Владелец как Владелец
            Из 
                ЛичныеКонтакты как Контакты
                Внутреннее Соединение ЛичныеКонтакты.ЭлектроннаяПочта как Почта
                по Контакты.Ссылка == Почта.Владелец
            Где 
                Почта.Элемент.Данные == %ПочтовыйАдрес
            }
    пер Результат = новый ЧитаемыйМассив(Запрос.Выполнить())
    если Результат.Пусто()
        возврат Неопределено
    ;
    возврат Результат[0].Владелец
;

@ВПодсистеме
метод ЗаполнитьДанныеФизическихЛиц(
        ЗапрашиваемыеДанные: ФизЛица.ЗапрашиваемыеДанныеФизическихЛиц, 
        ДанныеФизическихЛиц: Соответствие<ФизическиеЛица.Ссылка, ФизЛица.ДанныеФизлица>)
        
    если ЗапрашиваемыеДанные.ЛичнаяКонтактнаяИнформация
        знч Запрос = Запрос{
            Выбрать 
                Контакты.ДомашнийТелефон,
                Контакты.Скайп,
                Контакты.Владелец
            Из 
                ЛичныеКонтакты как Контакты
            Где 
                Контакты.Владелец В (%{ДанныеФизическихЛиц.Ключи()})}
        исп Результат = Запрос.Выполнить()
        для РезультатСтрока из Результат
            пер ДанныеФизическогоЛица = ДанныеФизическихЛиц[РезультатСтрока.Владелец как ФизическиеЛица.Ссылка]
            ДанныеФизическогоЛица.ЛичнаяКонтактнаяИнформация.ДомашнийТелефон = РезультатСтрока.ДомашнийТелефон
            ДанныеФизическогоЛица.ЛичнаяКонтактнаяИнформация.Скайп = РезультатСтрока.Скайп
        ;
        пер ЗапросЭлектроннаяПочта = Запрос{
            Выбрать 
                ЭлектроннаяПочта.Элемент.Данные как ЭлектроннаяПочта,
                ЭлектроннаяПочта.Владелец.Владелец как Владелец
            Из 
                ЛичныеКонтакты.ЭлектроннаяПочта как ЭлектроннаяПочта
            Где 
                ЭлектроннаяПочта.Владелец В (%{ДанныеФизическихЛиц.Ключи()})}
        исп РезультатЭлектроннаяПочта = ЗапросЭлектроннаяПочта.Выполнить()
        для РезультатСтрока из РезультатЭлектроннаяПочта
            пер ДанныеФизическогоЛица = ДанныеФизическихЛиц[РезультатСтрока.Владелец как ФизическиеЛица.Ссылка]
            ДанныеФизическогоЛица.ЛичнаяКонтактнаяИнформация.ЭлектроннаяПочта = РезультатСтрока.ЭлектроннаяПочта
        ;
        пер ЗапросМобильныйТелефон = Запрос{
            Выбрать 
                МобильныйТелефон.Элемент.Данные как МобильныйТелефон,
                МобильныйТелефон.Владелец.Владелец как Владелец
            Из 
                ЛичныеКонтакты.МобильныйТелефон как МобильныйТелефон
            Где 
                МобильныйТелефон.Владелец В (%{ДанныеФизическихЛиц.Ключи()})}
        исп РезультатМобильныйТелефон = ЗапросМобильныйТелефон.Выполнить()
        для РезультатСтрока из РезультатМобильныйТелефон
            пер ДанныеФизическогоЛица = ДанныеФизическихЛиц[РезультатСтрока.Владелец как ФизическиеЛица.Ссылка]
            ДанныеФизическогоЛица.ЛичнаяКонтактнаяИнформация.МобильныйТелефон = РезультатСтрока.МобильныйТелефон
        ;
    ;
;

@ВПроекте
метод КонтактнаяИнформация(Владелец: ВладелецКонтактнойИнформации.Ссылка): ЛичныеКонтакты.Ссылка?
    знч Запрос = Запрос{
        Выбрать Первые 1
            Ссылка
        Из
            ЛичныеКонтакты
        Где
            Владелец == %Владелец}
    исп Результат = Запрос.Выполнить()
    возврат Результат.ЕдинственныйИлиУмолчание()?.Ссылка
;

// Область ПрограммныйИнтерфейс

@ВПроекте
@НаКлиенте @НаСервере
структура КонтактнаяИнформация
    пер МобильныйТелефон: Массив<ЛичныеКонтактыСтрока>
    пер ДомашнийТелефон: Строка
    пер ЭлектроннаяПочта: Массив<ЛичныеКонтактыСтрока>
    пер Скайп: Строка
;

@ВПроекте
метод ЗаписатьКонтактыВладельца(Владелец: ВладелецКонтактнойИнформации.Ссылка, КонтактнаяИнформация: КонтактнаяИнформация)
    знч КонтактыСсылка = ПолучитьКонтакты(Владелец)
    пер ЛичныеКонтактыОбъект = новый ЛичныеКонтакты.Объект()
    если КонтактыСсылка == Неопределено
        ЛичныеКонтактыОбъект.Владелец = Владелец
    иначе
        ЛичныеКонтактыОбъект = КонтактыСсылка.ЗагрузитьОбъект()
        ЛичныеКонтактыОбъект.МобильныйТелефон.Очистить()
        ЛичныеКонтактыОбъект.ЭлектроннаяПочта.Очистить()
    ;
    ЛичныеКонтактыОбъект.МобильныйТелефон.ДобавитьВсе(КонтактнаяИнформация.МобильныйТелефон)
    ЛичныеКонтактыОбъект.ДомашнийТелефон =  КонтактнаяИнформация.ДомашнийТелефон
    ЛичныеКонтактыОбъект.ЭлектроннаяПочта.ДобавитьВсе(КонтактнаяИнформация.ЭлектроннаяПочта)
    ЛичныеКонтактыОбъект.Скайп =  КонтактнаяИнформация.Скайп
    ЛичныеКонтактыОбъект.Записать()
;

@ВПроекте
метод СоздатьКопиюПоВладельцу(Приемник: ВладелецКонтактнойИнформации.Ссылка, Источник: ВладелецКонтактнойИнформации.Ссылка): ЛичныеКонтакты.Ссылка?
    знч КонтактыИсточникаСсылка = ПолучитьКонтакты(Источник)
    если КонтактыИсточникаСсылка == Неопределено
        возврат Неопределено
    ;
    знч ЛичныеКонтактыИсточника = КонтактыИсточникаСсылка.ЗагрузитьОбъект()
    пер ЛичныеКонтактыПриемника = новый ЛичныеКонтакты.Объект(
        Наименование = ЛичныеКонтактыИсточника.Наименование,
        Владелец = Приемник,
        Скайп = ЛичныеКонтактыИсточника.Скайп,
        ДомашнийТелефон = ЛичныеКонтактыИсточника.ДомашнийТелефон
    )
    для Элемент из ЛичныеКонтактыИсточника.ЭлектроннаяПочта
        ЛичныеКонтактыПриемника.ЭлектроннаяПочта.Добавить(
            новый ЛичныеКонтактыСтрока(Элемент.Данные, Элемент.Актуальный)
        )
    ;
    для Элемент из ЛичныеКонтактыИсточника.МобильныйТелефон
        ЛичныеКонтактыПриемника.МобильныйТелефон.Добавить(
            новый ЛичныеКонтактыСтрока(Элемент.Данные, Элемент.Актуальный)
        )
    ;
    ЛичныеКонтактыПриемника.Записать()
    возврат ЛичныеКонтактыПриемника.Ссылка
;

@ВПроекте
метод ПрочитатьКонтактыВладельца(Владелец: ВладелецКонтактнойИнформации.Ссылка): КонтактнаяИнформация
    знч КонтактыСсылка = ПолучитьКонтакты(Владелец)
    если КонтактыСсылка == Неопределено
        возврат новый КонтактнаяИнформация()
    ;
    знч ЛичныеКонтактыОбъект = КонтактыСсылка.ЗагрузитьОбъект()
    знч КонтактнаяИнформация = новый КонтактнаяИнформация()
    КонтактнаяИнформация.МобильныйТелефон.ДобавитьВсе(ЛичныеКонтактыОбъект.МобильныйТелефон)
    КонтактнаяИнформация.ДомашнийТелефон = ЛичныеКонтактыОбъект.ДомашнийТелефон
    КонтактнаяИнформация.ЭлектроннаяПочта.ДобавитьВсе(ЛичныеКонтактыОбъект.ЭлектроннаяПочта)
    КонтактнаяИнформация.Скайп = ЛичныеКонтактыОбъект.Скайп
    возврат КонтактнаяИнформация
;
// КонецОбласти

// Обновления
@ВПодсистеме
метод ПеренестиЛичныеКонтактныеДанные()
    знч Запрос = Запрос{
    Выбрать 
        МобильныйТелефон,
        ДомашнийТелефон,
        ЭлектроннаяПочта,
        Скайп,
        ФизическоеЛицо
    Из УдалитьЛичныеКонтактыФизическихЛиц
    }
    знч Результат = новый ЧитаемыйМассив(Запрос.Выполнить())
    если Результат.Размер() == 0
        возврат
    ;
    для РезультатСтрока из Результат
        знч ВладелецИнформации = РезультатСтрока.ФизическоеЛицо.ЗагрузитьОбъект()
        пер КонтактыФизЛица = новый ЛичныеКонтакты.Объект(
            ДомашнийТелефон = РезультатСтрока.ДомашнийТелефон,
            Наименование = ВладелецИнформации.Наименование,
            Владелец = РезультатСтрока.ФизическоеЛицо,
            Скайп = РезультатСтрока.ДомашнийТелефон
        )
        пер ЭлектроннаяПочта = РезультатСтрока.ЭлектроннаяПочта
        если РезультатСтрока.ЭлектроннаяПочта.Длина() > 150
            ЭлектроннаяПочта = ЭлектроннаяПочта.ПодстрокаСНачала(150)
            Журналирование.ЗарегистрироватьСобытие("ЛичныеКонтакты", Важность = ВажностьСобытияЖурналаСобытий.Высокая,
                Описание = "Сокращение электронной почты (%{РезультатСтрока.ЭлектроннаяПочта}) до 150 символов (%{ВладелецИнформации.Наименование})"
            )
        ;
        КонтактыФизЛица.ЭлектроннаяПочта.Добавить(новый ЛичныеКонтактыСтрока(ЭлектроннаяПочта, Истина))
        КонтактыФизЛица.МобильныйТелефон.Добавить(новый ЛичныеКонтактыСтрока(РезультатСтрока.МобильныйТелефон, Истина))
        КонтактыФизЛица.Записать()
    ;
;
// Конец Обновлений

// JSON

@ВПроекте
структура ДанныеJson_V2_0
    обз пер name: Строка?
    пер phoneNumbers: Массив<ЛичныеКонтактыСтрока.ДанныеJson_V2_0>?
    пер homePhoneNumber: Строка?
    пер emails: Массив<ЛичныеКонтактыСтрока.ДанныеJson_V2_0>?
    пер skype: Строка?
;

@ВПроекте
метод ОбновитьПоJson(Владелец: ВладелецКонтактнойИнформации.Ссылка, ДанныеJson: ДанныеJson_V2_0)
    пер ЛичныеКонтактыОбъект: ЛичныеКонтакты.Объект
    пер ЛичныеКонтактыСсылка = ПолучитьКонтакты(Владелец)
    если ЛичныеКонтактыСсылка == Неопределено
        ЛичныеКонтактыОбъект = новый ЛичныеКонтакты.Объект()
        ЛичныеКонтактыОбъект.Владелец = Владелец
    иначе
        ЛичныеКонтактыОбъект = ЛичныеКонтактыСсылка.ЗагрузитьОбъект()
    ;
    ЗаполнитьПоJson(ЛичныеКонтактыОбъект, ДанныеJson)
    ЛичныеКонтактыОбъект.Записать()
;

@ВПроекте
метод ЗаполнитьПоJson(ЛичныеКонтакты: ЛичныеКонтакты.Объект, ДанныеJson: ДанныеJson_V2_0)
    ЛичныеКонтакты.Наименование = ДанныеJson.name ?? ""
    ЛичныеКонтакты.ДомашнийТелефон = ДанныеJson.homePhoneNumber ?? ""
    ЛичныеКонтакты.Скайп = ДанныеJson.skype ?? ""
    
    если ДанныеJson.phoneNumbers != Неопределено
    ЛичныеКонтакты.МобильныйТелефон.Очистить()
        для СтрокаМобильныйТелефон из ДанныеJson.phoneNumbers 
            знч МобильныйТелефон = новый ЛичныеКонтактыСтрока()
            МобильныйТелефон.ЗаполнитьПоJson(СтрокаМобильныйТелефон)
            ЛичныеКонтакты.МобильныйТелефон.Добавить(МобильныйТелефон)
        ;
    ;
    если ДанныеJson.emails != Неопределено
    ЛичныеКонтакты.ЭлектроннаяПочта.Очистить()
        для СтрокаЭлектроннаяПочта из ДанныеJson.emails
            знч ЭлектроннаяПочта = новый ЛичныеКонтактыСтрока()
            ЭлектроннаяПочта.ЗаполнитьПоJson(СтрокаЭлектроннаяПочта)
            ЛичныеКонтакты.ЭлектроннаяПочта.Добавить(ЭлектроннаяПочта)
        ;
    ;
;

@ВПроекте
метод ПолучитьJson_V2_0(Данные: ЛичныеКонтакты.Объект): ДанныеJson_V2_0
    пер ДанныеJson = новый ДанныеJson_V2_0(Данные.Наименование)

    если не Данные.МобильныйТелефон.Пусто()
        ДанныеJson.phoneNumbers = новый Массив<ЛичныеКонтактыСтрока.ДанныеJson_V2_0>()
        для СтрокаМобильныйТелефон из Данные.МобильныйТелефон
            ДанныеJson.phoneNumbers.Добавить(СтрокаМобильныйТелефон.ПолучитьJson_V2_0())    
        ;
    ;
    если не Данные.ДомашнийТелефон.Пусто()
        ДанныеJson.homePhoneNumber = Данные.ДомашнийТелефон
    ;
    если не Данные.Скайп.Пусто()
        ДанныеJson.skype = Данные.Скайп
    ;
    если не Данные.ЭлектроннаяПочта.Пусто() 
        ДанныеJson.emails = новый Массив<ЛичныеКонтактыСтрока.ДанныеJson_V2_0>()
        для СтрокаЭлектроннаяПочта из Данные.ЭлектроннаяПочта
            ДанныеJson.emails.Добавить(СтрокаЭлектроннаяПочта.ПолучитьJson_V2_0())
        ;
    ;
    возврат ДанныеJson
;

// Конец JSON