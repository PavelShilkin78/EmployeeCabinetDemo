//Область РазрешенияДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): Массив<РазрешениеДоступа>
    возврат ДанныеФизическихЛицПоставщикОграничений.ПолучитьСервис().РабочиеКонтактыРазрешения()
;

/**
Описание: Формирует РазрешенияДоступа для элементов справочника РабочиеКонтактыФизическихЛиц, 
 имеющих ограничения на уровне записей ,
 доступ к которому ограничивается по физическому лицу. 
Параметры: Элементы - элементы справочника, для которых формируются РазрешенияДоступа,
Возвращает: РазрешенияДоступа доступа.
*/
@Обработчик
метод ВычислитьРазрешенияДоступаДляОбъектов(Элементы: ЧитаемыйМассив<РабочиеКонтактыФизическихЛиц.ДанныеРасчетаРазрешений>): Соответствие<РабочиеКонтактыФизическихЛиц.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    возврат РабочиеКонтактыПоставщикОграничений.ПолучитьСервис().РазрешенияДоступаРабочихКонтактов(Элементы)
;

//КонецОбласти

//Область СлужебныйПрограммныйИнтерфейс

@ВПодсистеме
метод Заполнить(КонтактнаяИнформация: РабочиеКонтактыФизическихЛиц.Объект, ДанныеФизлиц: ФизЛица.ДанныеФизлица)
    КонтактнаяИнформация.МобильныйТелефон = ДанныеФизлиц.РабочаяКонтактнаяИнформация.МобильныйТелефон
    КонтактнаяИнформация.РабочийТелефон = ДанныеФизлиц.РабочаяКонтактнаяИнформация.Телефон
    КонтактнаяИнформация.ЭлектроннаяПочта = ДанныеФизлиц.РабочаяКонтактнаяИнформация.ЭлектроннаяПочта
;

@ВПроекте
метод РабочиеКонтактыФизическихЛиц(ФизическоеЛицо: ФизическиеЛица.Ссылка): РабочиеКонтактыФизическихЛиц.Ссылка?
    пер СсылкаПоФизлицу: РабочиеКонтактыФизическихЛиц.Ссылка?
    знч Запрос = Запрос{
        Выбрать Ссылка
        Из РабочиеКонтактыФизическихЛиц
        Где Владелец == %ФизическоеЛицо}
    исп Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        СсылкаПоФизлицу = СтрокаРезультата.Ссылка
    ;
    возврат СсылкаПоФизлицу
;

@ВПроекте
метод ЗаполнитьДанныеФизическихЛиц(
        ЗапрашиваемыеДанные: ФизЛица.ЗапрашиваемыеДанныеФизическихЛиц, 
        ДанныеФизическихЛиц: Соответствие<ФизическиеЛица.Ссылка, ФизЛица.ДанныеФизлица>)
        
    пер ЗапрашиваемыеПоляТаблицы: Строка = ЗапрашиваемыеПоляТаблицы(ЗапрашиваемыеДанные)
    если не ЗапрашиваемыеПоляТаблицы.Пусто()
        пер Запрос = новый ПроизвольныйЗапрос() // текст запроса динамический
        ЗапрашиваемыеПоляТаблицы += ",Владелец"
        Запрос.Текст = 
            "Выбрать %ЗапрашиваемыеПоляТаблицы
            Из РабочиеКонтактыФизическихЛиц
            Где Владелец В (&ФизическиеЛица)"
        Запрос.УстановитьПараметр("ФизическиеЛица", ДанныеФизическихЛиц.Ключи())
        исп Результат = Запрос.Выполнить()
        для РезультатСтрока из Результат
            ЗаполнитьПоРезультатуЗапроса(ЗапрашиваемыеДанные, ДанныеФизическихЛиц, РезультатСтрока)
        ;
    ;
;

метод ЗапрашиваемыеПоляТаблицы(ЗапрашиваемыеДанные: ФизЛица.ЗапрашиваемыеДанныеФизическихЛиц): Строка
    пер ЗапрашиваемыеПоляТаблицы: Строка
    если ЗапрашиваемыеДанные.РабочаяКонтактнаяИнформация
        ЗапрашиваемыеПоляТаблицы = "МобильныйТелефон,РабочийТелефон,ЭлектроннаяПочта"
    ;
    возврат ЗапрашиваемыеПоляТаблицы
;

метод ЗаполнитьПоРезультатуЗапроса(
        ЗапрашиваемыеДанные: ФизЛица.ЗапрашиваемыеДанныеФизическихЛиц, 
        ДанныеФизическихЛиц: Соответствие<ФизическиеЛица.Ссылка, ФизЛица.ДанныеФизлица>, 
        СтрокаРезультата: СтрокаРезультатаПроизвольногоЗапроса)
    
    пер ДанныеФизическогоЛица: ФизЛица.ДанныеФизлица = ДанныеФизическихЛиц[СтрокаРезультата.Владелец]
    если ЗапрашиваемыеДанные.РабочаяКонтактнаяИнформация
        ДанныеФизическогоЛица.РабочаяКонтактнаяИнформация.МобильныйТелефон = СтрокаРезультата.МобильныйТелефон
        ДанныеФизическогоЛица.РабочаяКонтактнаяИнформация.Телефон = СтрокаРезультата.РабочийТелефон
        ДанныеФизическогоЛица.РабочаяКонтактнаяИнформация.ЭлектроннаяПочта = СтрокаРезультата.ЭлектроннаяПочта
    ;
;

//КонецОбласти