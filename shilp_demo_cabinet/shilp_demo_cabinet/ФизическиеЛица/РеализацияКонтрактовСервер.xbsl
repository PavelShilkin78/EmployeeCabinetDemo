импорт СтандартноеПриложение
импорт УниверсальныеМеханизмы
импорт ВебApi
импорт ОбменДанными
импорт УниверсальныеМеханизмы::ШаблоныДокументов

//Контракт ОбменДаннымиТипыDtoОбъектовСервис

@ВПроекте
@Реализация
метод ЗаполнитьПредопределенныеТипыDtoОбъектов()
    ФизЛица.ДобавитьТипDtoОбъекта()
;

//Конец ОбменДаннымиТипыDtoОбъектовСервис


// Контракт ПодсистемаПриложения

@ВПроекте
@Реализация
метод ОписаниеПодсистемы(): СтандартноеПриложение.ОписаниеПодсистемы
    возврат новый СтандартноеПриложение.ОписаниеПодсистемы(ФизЛица.ИД_ПОДСИСТЕМЫ, {ОбменДанными.ИД_ПОДСИСТЕМЫ, УниверсальныеМеханизмы.ИД_ПОДСИСТЕМЫ})
;

// Конец ПодсистемаПриложения

// Контракт ОбновляемаяПодсистема

@ВПроекте
@Реализация
метод ОбработчикиЗаполнения(): Массив<СтандартноеПриложение.ОписаниеОбработчикаЗаполнения>
    возврат []
;

@ВПроекте
@Реализация
метод ОбработчикиОбновления(): Массив<СтандартноеПриложение.ОписаниеОбработчикаОбновления>
    пер Обработчики: Массив<СтандартноеПриложение.ОписаниеОбработчикаОбновления>
    пер Сервис = ФизическиеЛицаПоставщикВерсииПриложения.ПолучитьСервис()
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
                ФизЛица.ИД_ПОДСИСТЕМЫ, 
                "ЛичныеКонтактыПеренестиЛичныеКонтактныеДанные", 
                &ЛичныеКонтакты.ПеренестиЛичныеКонтактныеДанные(), 
                Сервис.ЛичныеКонтактыПеренестиЛичныеКонтактныеДанные()))
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
                ФизЛица.ИД_ПОДСИСТЕМЫ, 
                "ФизическиеЛицаЗаполнитьМиниатюрыПоУмолчанию", 
                &ФизическиеЛица.ЗаполнитьМиниатюрыПоУмолчанию(), 
                Сервис.ФизическиеЛицаЗаполнитьМиниатюрыПоУмолчанию()))
    возврат Обработчики
;

// Конец ОбновляемаяПодсистема

// Контракт ФизическиеЛицаОбработчикСобытий
@ВПроекте
@Реализация
метод ПередУдалениемФизлица(ФизическоеЛицо: ФизическиеЛица.Ссылка)
    ЛичныеДанныеФизическихЛиц.ЛичныеДанныеФизическогоЛица(ФизическоеЛицо)?.ЗагрузитьОбъект()?.Удалить()
    РабочиеКонтактыФизическихЛиц.РабочиеКонтактыФизическихЛиц(ФизическоеЛицо)?.ЗагрузитьОбъект()?.Удалить()
;

@ВПроекте
@Реализация
метод ПослеЗаписиФизлицПриЗагрузке(Физлица: ЧитаемыйМассив<ФизическиеЛица.Ссылка>)
    ФизическиеЛица.ЗапланироватьОтключениеОтСервиса()
;

@ВПроекте
@Реализация
метод ПослеДеактивацииФизлица(Физлица: Массив<ФизическиеЛица.Ссылка>)
;

@ВПроекте
@Реализация
метод ПослеЗаписиГруппыОбъектов(ФизическоеЛицо: ФизическиеЛица.Ссылка, Отправитель: ВходящиеДанные.Ссылка)
;

// Конец ФизическиеЛицаОбработчикСобытий

// Контракт СтатистикаПоставщик

@ВПроекте
@Реализация
метод СтатистикаСправочников(): Массив<СтатистикаДанных.Справочник>
    знч СправочникиСтатистика: Массив<СтатистикаДанных.Справочник>
    СправочникиСтатистика.Добавить(СтатистикаДанных.СтатистикаПоСправочнику(Тип<ФизическиеЛица.Ссылка>))
    возврат СправочникиСтатистика
;

@ВПроекте
@Реализация
метод СтатистикаДокументов(): Массив<СтатистикаДанных.Документ>
    знч ДокументыСтатистика: Массив<СтатистикаДанных.Документ>
    возврат ДокументыСтатистика
;

// Конец СтатистикаПоставщик

//Контракт ДанныеApi

@ВПроекте
@Реализация
метод МассивТипов(Получатель: ВидПриложения?, ВерсияФорматаОбмена: Версия?): Массив<Тип>
    пер Типы: Массив<Тип>
    если Получатель == ВидПриложения.Hrm
        Типы.Добавить(Тип<ФизическиеЛица.Ссылка>)  
    иначе если Получатель == ВидПриложения.Ess
        Типы.Добавить(Тип<ФизическиеЛица.Ссылка>)  
    ;
    возврат Типы
;

@ВПроекте
@Реализация
метод ТипДанныхJson(ТипОбъекта: Тип, ВерсияФорматаОбмена: Версия?): Массив<Тип>
    пер Типы: Массив<Тип>
    выбор ТипОбъекта
    когда Тип<ФизическиеЛица.Ссылка>
        Типы.Добавить(ФизическиеЛица.ТипДанныхJson(ВерсияФорматаОбмена))
    ;
    возврат Типы
;

@ВПроекте
@Реализация
метод ТипКоллекцииДанныхJson(ТипОбъекта: Тип, ВерсияФорматаОбмена: Версия?): Массив<Тип>
    пер Типы: Массив<Тип>
    выбор ТипОбъекта
    когда Тип<ФизическиеЛица.Ссылка>
        Типы.Добавить(ФизическиеЛица.ТипКоллекцииДанныхJson(ВерсияФорматаОбмена))
    ;
    возврат Типы
;

@ВПроекте
@Реализация
метод ИнструментыМенеджераОбъекта(ТипОбъекта: Тип): Массив<ВебApiСервер.ИнструментыМенеджераОбъекта>
    пер НаборИнструментыМенеджераОбъекта: Массив<ВебApiСервер.ИнструментыМенеджераОбъекта>
    пер ИнструментыМенеджераОбъекта: ВебApiСервер.ИнструментыМенеджераОбъекта
    выбор ТипОбъекта
    когда Тип<ФизическиеЛица.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как ФизическиеЛица.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    когда Тип<ЛичныеКонтакты.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как ЛичныеКонтакты.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    ;
    возврат НаборИнструментыМенеджераОбъекта
;

@ВПроекте
@Реализация
метод ПолучитьДанныеJson(ТипОбъекта: Тип, Ссылка: ВходящиеДанные.Ссылка|ИсходящиеДанные.Ссылка, 
    Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?): Массив<Объект?>
    
    пер ДанныеJson: Массив<Объект?>
    выбор ТипОбъекта
    когда Тип<ФизическиеЛица.Ссылка>
        ДанныеJson.Добавить(ФизическиеЛица.ПолучитьДанныеJson(Ссылка как ФизическиеЛица.Ссылка, Сервисы, ВерсияФорматаОбмена))
    ;
    возврат ДанныеJson
;

@ВПроекте
@Реализация
метод МассивСсылокПоФильтру(ТипОбъекта: Тип, Фильтр: () -> ЧитаемыйМассив<Справочник.Ссылка>): Массив<ЧитаемыйМассив<Справочник.Ссылка>>
    пер МассивСсылок: Массив<ЧитаемыйМассив<Справочник.Ссылка>>
    выбор ТипОбъекта
    когда Тип<ФизическиеЛица.Ссылка>
        МассивСсылок.Добавить(ФизическиеЛица.МассивСсылокПоФильтру(Фильтр))
    ;
    возврат МассивСсылок
;

@ВПроекте
@Реализация
метод УдалитьОбъекты(ТипОбъекта: Тип, ПараметрыЗапроса: ЧитаемоеСоответствие<Строка, Число|Булево|Ууид|Строка>, Сервисы: ВебApiСервер.СервисыУдаленияОбъектов)
;

@ВПроекте
@Реализация
метод ТипОбъектаJson(ТипОбъекта: Тип): Массив<Строка>
    пер ТипОбъектаJson: Массив<Строка>
    выбор ТипОбъекта
    когда Тип<ФизическиеЛица.Ссылка>
        ТипОбъектаJson.Добавить(ФизическиеЛица.ТипОбъектаJson())
    ;
    возврат ТипОбъектаJson
;

@ВПроекте
@Реализация
метод ЗагрузитьОбъектИзJson(ТипОбъекта: Тип, ТипДанных: Тип, ДанныеJson: Объект?, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    выбор ТипОбъекта
    когда Тип<ФизическиеЛица.Ссылка>
        выбор ТипДанных
        когда Тип<ФизическиеЛица.ДанныеJson>
            ФизическиеЛица.ЗагрузитьОбъектИзJson(ДанныеJson как ФизическиеЛица.ДанныеJson, Сервисы)
        когда Тип<ФизическиеЛица.ФизическоеЛицо_V1_0>
            ФизическиеЛица.ЗагрузитьОбъектИзJson(ДанныеJson как ФизическиеЛица.ФизическоеЛицо_V1_0, Сервисы)
        когда Тип<ФизическиеЛица.ФизическоеЛицо_V2_0>
            ФизическиеЛица.ЗагрузитьОбъектИзJson(ДанныеJson как ФизическиеЛица.ФизическоеЛицо_V2_0, Сервисы)
        когда Тип<ФизическиеЛица.ФизическоеЛицо_V2_3>
            ФизическиеЛица.ЗагрузитьОбъектИзJson(ДанныеJson как ФизическиеЛица.ФизическоеЛицо_V2_3, Сервисы)
        когда Тип<ФизическиеЛица.ФизическоеЛицо_3_0>
            ФизическиеЛица.ЗагрузитьОбъектИзJson(ДанныеJson как ФизическиеЛица.ФизическоеЛицо_3_0, Сервисы)
        ;
    ;
;

@ВПроекте
@Реализация
метод ПослеЗаписиГруппыОбъектов(ТипОбъекта: Тип, МассивОбъектовОтложенногоОбновления: Массив<ВебApiСервер.ОбъектОтложенногоОбновления>)
    выбор ТипОбъекта
    когда Тип<ФизическиеЛица.Ссылка>
        ФизическиеЛица.ПослеЗаписиГруппыОбъектов(МассивОбъектовОтложенногоОбновления)
        знч Сервисы = ФизическиеЛицаОбработчикСобытий.ПолучитьСервисы()
        для ОбъектОтложенногоОбновления из МассивОбъектовОтложенногоОбновления
            для Сервис из Сервисы
                Сервис.ПослеЗаписиГруппыОбъектов(ОбъектОтложенногоОбновления.ОбновляемыйОбъект как ФизическиеЛица.Ссылка, ОбъектОтложенногоОбновления.Отправитель как ВходящиеДанные.Ссылка)
            ;
            исп ПривилегированныйРежим = КонтекстДоступа.Привилегированный() 
            ИнформационныеСистемыРазделителейДанных.ОбновитьИнформационныеСистемыРазделителейДанных(ОбъектОтложенногоОбновления.ОбновляемыйОбъект как РазделительВыгружаемыхДанных.Ссылка, ОбъектОтложенногоОбновления.Отправитель)
            ПривилегированныйРежим.Закрыть()
        ;
    ;
;

@ВПроекте
@Реализация
метод ИзменитьОбъектИзJson(ТипОбъекта: Тип, ДанныеJson: Объект, Сервисы: ВебApiСервер.СервисыЗагрузкиJson, ЗаданиеМодификации: ВебApiСервер.ЗаданиеМодификации)
    выбор ТипОбъекта
    когда Тип<ФизическиеЛица.Ссылка>
        ФизическиеЛица.ИзменитьОбъектИзJson(ДанныеJson, Сервисы, ЗаданиеМодификации)
    ;
;

@ВПроекте
@Реализация
метод ЗавершитьИзменениеОбъектИзJson(ТипОбъекта: Тип, МассивСсылок: ЧитаемыйМассив<ВходящиеДанные.Ссылка>, ЗаданиеМодификации: ВебApiСервер.ЗаданиеМодификации)
    выбор ТипОбъекта
    когда Тип<ФизическиеЛица.Ссылка>
        ФизическиеЛица.ЗавершитьИзменениеОбъектИзJson(МассивСсылок, ЗаданиеМодификации)
    ;
;

@ВПроекте
@Реализация
метод ГруппаИзмененийВJson(ТипОбъекта: Тип, Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>,
    Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?): Массив<ЧитаемоеСоответствие<Строка, Массив<Объект?>>>
    
    пер ДанныеJson: Массив<ЧитаемоеСоответствие<Строка, Массив<Объект?>>>
    выбор ТипОбъекта
    когда Тип<ФизическиеЛица.Ссылка>
        ДанныеJson.Добавить(ФизическиеЛица.ГруппаИзмененийВJson(Ссылки, Сервисы, ВерсияФорматаОбмена))
    ;
    возврат ДанныеJson
;

//Конец ДанныеApi

// Контаркт ДвоичныеДанныеПоставщик

@ВПроекте
@Реализация
метод ПолучитьРесурс(ИмяРесурса: Строка): УниверсальныеМеханизмы.ДанныеРесурса?
    пер ДанныеРесурса: УниверсальныеМеханизмы.ДанныеРесурса?
    если ИмяРесурса == "Неизвестный.svg"
        ДанныеРесурса = новый УниверсальныеМеханизмы.ДанныеРесурса(Ресурс{Неизвестный.svg}.Ссылка, "image/svg+xml")
    ;
    возврат ДанныеРесурса
;

// Конец ДвоичныеДанныеПоставщик

// Контракт ВторичныеДанные

@ВПроекте
@Реализация
метод Пересчитать()
    ФизическиеЛица.ЗаполнитьМиниатюрыПоУмолчанию()
;

// Конец ВторичныеДанные

// Контракт ПоставщикОбщихДанныхДляПечатныхФорм

@ВПроекте
@Реализация
метод ДополнитьДанныеДокументаОбщимиДанными(ДанныеДокумента: ШаблоныДокументовМенеджер.ДанныеДляШаблонаПечатнойФормы)
    ДанныеДокумента.ЗначенияПеречислений.ВставитьВсе(ЗначенияПеречисленийОбщихДанных())
;

метод ЗначенияПеречисленийОбщихДанных(): Соответствие<Строка, Объект>
    пер ЗначенияПеречислений = новый Соответствие<Строка, Объект>()
    для Элемент из ПолФизическогоЛица.Элементы()
        ЗначенияПеречислений.Вставить("gender.%{ФизическиеЛица.ПолФизическогоЛицаВJson(Элемент)}", Элемент)
    ;
    для Элемент из ДокументыУдостоверяющиеЛичность.Элементы()
        ЗначенияПеречислений.Вставить("identityDocumentType.%{ФизическиеЛица.ВидУдостоверенияЛичностиВJson(Элемент)}", Элемент)
    ;
    возврат ЗначенияПеречислений
;

// Конец ПоставщикОбщихДанныхДляПечатныхФорм