импорт СтандартноеПриложение
импорт ФизическиеЛица

// Контракт ОсновнойИнтерфейсПоставщик
@ВПроекте
@Реализация
метод РазделыПриложения(): ЧитаемаяКоллекция<ОсновнойИнтерфейс.ОписаниеРаздела>
    возврат []
;

@ВПроекте
@Реализация
метод Виджеты(): ЧитаемаяКоллекция<ОсновнойИнтерфейс.ОписаниеВиджета>
    возврат []
;

@ВПроекте
@Реализация
метод КомандыВсеФункции(): ЧитаемаяКоллекция<ОсновнойИнтерфейс.ОписательКомандыВсеФункции>
    знч Группа = новый ОсновнойИнтерфейс.ОписательГруппыКомандВсеФункции(ФизЛица.ИМЯ_ПОДСИСТЕМЫ, 28)
    возврат [
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Личные данные физических лиц",
            СоздательФормыСписка = метод()-> возврат новый ЛичныеДанныеФизическихЛиц.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый ЛичныеДанныеФизическихЛиц.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Личные контакты",
            СоздательФормыСписка = метод()-> возврат новый ЛичныеКонтакты.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый ЛичныеКонтакты.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Рабочие контакты физических лиц",
            СоздательФормыСписка = метод()-> возврат новый РабочиеКонтактыФизическихЛиц.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый РабочиеКонтактыФизическихЛиц.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Устройства физических лиц",
            СоздательФормыСписка = метод()-> возврат новый УстройстваФизическихЛиц.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый УстройстваФизическихЛиц.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Физические лица к обновлению",
            СоздательФормыСписка = метод()-> возврат новый ФизическиеЛицаКОбновлению.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый ФизическиеЛицаКОбновлению.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Физические лица",
            СоздательФормыСписка = метод()-> возврат новый ФизическиеЛица.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый ФизическиеЛица.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Текущее смещение клиента",
            СоздательФормыСписка = метод()-> возврат новый ТекущееСмещениеКлиента.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый ТекущееСмещениеКлиента.АвтоматическаяФормаОбъекта();
            )
    ]
;

@ВПроекте
@Реализация
метод ДополнительныеКоманды(): ЧитаемыйМассив<Команда>
    возврат []
;

@ВПроекте
@Реализация
метод КомандыПанелиДействий(): ЧитаемыйМассив<Команда>
    возврат []
;

@ВПроекте
@Реализация
метод ДополнительныеКомандыПанелиГлавное(): ЧитаемыйМассив<Команда>
    возврат []
;
// Конец ОсновнойИнтерфейсПоставщик
