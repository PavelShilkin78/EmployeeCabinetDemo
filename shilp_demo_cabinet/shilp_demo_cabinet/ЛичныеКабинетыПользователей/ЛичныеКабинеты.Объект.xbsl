импорт ОбщиеСтандартные

@Обработчик
@ВыполнятьПриЗагрузкеДанных
метод ПередЗаписью(ПредыдущееЗначение: ЛичныеКабинеты.Данные, ПараметрыЗаписи: ЛичныеКабинеты.ПараметрыЗаписи)
    ПриглашениеУспешноОтправлено = Ложь
    если (Состояние == СостоянияЛичногоКабинета.НеАктивирован или Состояние == СостоянияЛичногоКабинета.Активирован)
        и ДатаОтправкиПриглашения != Неопределено 
        и ОшибкаПриОтправкеПриглашения.Пусто()
        ПриглашениеУспешноОтправлено = Истина
    ;
    знч Кабинет: ЛичныеКабинеты.Ссылка? = ЛичныеКабинеты.ЛичныйКабинетФизлица(ФизическоеЛицо!) 
    если Кабинет != Неопределено и Кабинет != Ссылка
        знч ИмяФизическогоЛица = МенеджерСущности.ЗначениеРеквизитаОбъекта(ФизическоеЛицо!, "Наименование") как Строка 
        выбросить новый ЛичныеКабинетыПользователей.ИсключениеНеуникальныйЛичныйКабинет("Неуникальный личный кабинет для %ИмяФизическогоЛица")
    ;
;

@Обработчик
@ВыполнятьПриЗагрузкеДанных
метод ПослеЗаписи(ПредыдущееЗначение: ЛичныеКабинеты.Данные, ПараметрыЗаписи: ЛичныеКабинеты.ПараметрыЗаписи)
    исп КонтекстДоступа.Привилегированный()
    ОбработатьАктивациюЛичногоКабинета(ПредыдущееЗначение)
;

//Область СлужебныеПроцедурыИФункции

метод ОбработатьАктивациюЛичногоКабинета(ПредыдущееЗначение: ЛичныеКабинеты.Данные)
    если не ЭтоНовый()
        если Состояние == ПредыдущееЗначение.Состояние
            и Доступность == ПредыдущееЗначение.Доступность
            возврат
        ;
        если (Состояние != ПредыдущееЗначение.Состояние и ПредыдущееЗначение.Состояние == СостоянияЛичногоКабинета.НеСоздан)
            или (Доступность != ПредыдущееЗначение.Доступность и Доступность == ДоступностьЛичногоКабинета.Включен)
            
            для Сервис из ЛичныеКабинетыОбработчикСобытий.ПолучитьСервисы()
                Сервис.ПослеАктивацииЛичногоКабинета(ФизическоеЛицо)
            ;
        ;
    ;
;

//КонецОбласти