импорт ФизическиеЛица
импорт КонтрольДоступа
импорт КонтрольДоступаСтандартные

//Область РазрешенияДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): Массив<РазрешениеДоступа>
    возврат КонтрольДоступа.РазрешенияДоступаТаблицыСервисныхДанныхАбонента()
;

//КонецОбласти

//Область СлужебныйПрограммныйИнтерфейс

@ВПодсистеме
метод ЛичныйКабинетФизлица(ФизическоеЛицо: ФизическиеЛица.Ссылка): ЛичныеКабинеты.Ссылка? 
    пер ЛичныйКабинет: ЛичныеКабинеты.Ссылка?
    знч СведенияОЛичныхКабинетах = ЛичныеКабинетыПользователей.СведенияОЛичныхКабинетах([ФизическоеЛицо])
        
    если не СведенияОЛичныхКабинетах.Пусто()
        ЛичныйКабинет = СведенияОЛичныхКабинетах[ФизическоеЛицо].Ссылка
    ; 
    возврат ЛичныйКабинет     
; 

@ВПодсистеме
метод ОбновитьСостояниеЛичныхКабинетов(ПользователиПоИдентификаторам: ЧитаемоеСоответствие<ИдПользователя, ОписаниеПользователя>)
    знч Запрос = Запрос{
        Выбрать 
            Ссылка Как Ссылка,
            ЛичныеКабинеты.ФизическоеЛицо Как ФизическоеЛицо, 
            Выбор Когда ПользователиВладельцевКабинетов.Пользователь.БылУспешныйВход Есть Null Тогда Ложь Иначе ПользователиВладельцевКабинетов.Пользователь.БылУспешныйВход Конец Как БылУспешныйВход,
            ИдПользователя Как ИдПользователя,
            ЛогинПользователя Как ЛогинПользователя,
            ОшибкаПриСозданииЛичногоКабинета Как ОшибкаПриСозданииЛичногоКабинета,
            ПриглашениеУспешноОтправлено Как ПриглашениеУспешноОтправлено,
            ДатаОтправкиПриглашения,
            Состояние Как Состояние  
        Из 
            ЛичныеКабинеты Как ЛичныеКабинеты
        Левое соединение ПользователиВладельцевКабинетов как ПользователиВладельцевКабинетов
        По ЛичныеКабинеты.ФизическоеЛицо == ПользователиВладельцевКабинетов.ФизическоеЛицо}
         
    МенеджерПравДоступа.ПроверитьПраваАдминистратора()
    исп ПривилегированныйРежим: КонтекстДоступа = КонтекстДоступа.Привилегированный()
    исп РезультатЗапроса = Запрос.Выполнить()
    знч ИдСписка: Ууид = СпискиПользователей.ПолучитьСписокПоУмолчанию().Ид
    для РезультатЗапросаСтрока из РезультатЗапроса
        знч ИдПользователя: ИдПользователя = новый ИдПользователя(РезультатЗапросаСтрока.ИдПользователя, ИдСписка) 
        знч ОписаниеПользователя: ОписаниеПользователя? = ПользователиПоИдентификаторам.ПолучитьИлиУмолчание(ИдПользователя)
        пер НовоеСостояние: СостоянияЛичногоКабинета = РезультатЗапросаСтрока.Состояние
        пер НовыйЛогинПользователя: Строка
        пер НовоеОписаниеОшибки: Строка
        пер НоваяДатаОтправкиПриглашения: Момент? = РезультатЗапросаСтрока.ДатаОтправкиПриглашения
        если НовоеСостояние != СостоянияЛичногоКабинета.Активирован
            НовоеСостояние = ЛичныеКабинетыПользователей.СостояниеЛичногоКабинета(ОписаниеПользователя, РезультатЗапросаСтрока.ПриглашениеУспешноОтправлено, РезультатЗапросаСтрока.БылУспешныйВход)
        ;
        если  ОписаниеПользователя != Неопределено
            НовыйЛогинПользователя = ОписаниеПользователя!.Логин
        иначе
            НовоеОписаниеОшибки = РезультатЗапросаСтрока.ОшибкаПриСозданииЛичногоКабинета
        ;
        если НовоеСостояние == СостоянияЛичногоКабинета.НеСоздан
            НоваяДатаОтправкиПриглашения = Неопределено
        ;
        если РезультатЗапросаСтрока.Состояние != НовоеСостояние  
                или РезультатЗапросаСтрока.ЛогинПользователя != НовыйЛогинПользователя 
                или РезультатЗапросаСтрока.ОшибкаПриСозданииЛичногоКабинета != НовоеОписаниеОшибки
                или РезультатЗапросаСтрока.ДатаОтправкиПриглашения != НоваяДатаОтправкиПриглашения 
            знч ЛичныйКабинетОбъект: ЛичныеКабинеты.Объект = РезультатЗапросаСтрока.Ссылка.ЗагрузитьОбъект()
            если ОписаниеПользователя != Неопределено
                ЛичныйКабинетОбъект.ЛогинПользователя = НовыйЛогинПользователя
            ;
            ЛичныйКабинетОбъект.Состояние = НовоеСостояние
            ЛичныйКабинетОбъект.ОшибкаПриСозданииЛичногоКабинета = НовоеОписаниеОшибки
            ЛичныйКабинетОбъект.ДатаОтправкиПриглашения = НоваяДатаОтправкиПриглашения
            ЛичныйКабинетОбъект.Записать()
        ;
    ;
    ПривилегированныйРежим.Закрыть()
;

//КонецОбласти

@ВПодсистеме
метод УстановитьСостояние(ВыбранныеФизическиеЛица: ЧитаемаяКоллекция<ФизическиеЛица.Ссылка>, НовоеСостояние: ДоступностьЛичногоКабинета)
    знч Запрос = Запрос{
        Выбрать 
            Ссылка
        Из ЛичныеКабинеты
        Где
            ФизическоеЛицо В (%ВыбранныеФизическиеЛица)}
    исп Результат = Запрос.Выполнить()
    для РезультатСтрока из Результат
        знч Кабинет: ЛичныеКабинеты.Объект = РезультатСтрока.Ссылка.ЗагрузитьОбъект()
        Кабинет.Доступность = НовоеСостояние
        Кабинет.Записать()
    ;
;

@ВПодсистеме
метод УдалитьКабинетыФизическихЛиц(СсылкиФизическихЛиц: ЧитаемаяКоллекция<ФизическиеЛица.Ссылка>)
    
    знч Кабинеты = ЛичныеКабинетыПользователей.СведенияОЛичныхКабинетах(СсылкиФизическихЛиц)
        
    знч Запрос = Запрос{
        Выбрать 
           ФизическиеЛица.Ссылка Как Физлицо,
           Пользователи.Пользователь.ЗаменитьNull(Неопределено) Как Пользователь
        Из 
           ФизическиеЛица Как ФизическиеЛица
           Левое Соединение ПользователиВладельцевКабинетов Как Пользователи
           По ФизическиеЛица.Ссылка == Пользователи.ФизическоеЛицо
        Где
           ФизическиеЛица.Ссылка В(%СсылкиФизическихЛиц)}
    МенеджерПравДоступа.ПроверитьПраваАдминистратора()
    исп ПривилегированныйРежим: КонтекстДоступа = КонтекстДоступа.Привилегированный()
    исп РезультатЗапроса = Запрос.Выполнить()
    для РезультатЗапросаСтрока из РезультатЗапроса
        исп Транзакции.Начать()
        если РезультатЗапросаСтрока.Пользователь != Неопределено
            ПользователиСистемы.УдалитьПользователя(РезультатЗапросаСтрока.Пользователь, РезультатЗапросаСтрока.Физлицо)
        ;
        знч ЛичныйКабинет = Кабинеты.ПолучитьИлиУмолчание(РезультатЗапросаСтрока.Физлицо)
        если ЛичныйКабинет != Неопределено
            знч ЛичныйКабинетОбъект: ЛичныеКабинеты.Объект = ЛичныйКабинет!.Ссылка!.ЗагрузитьОбъект(Истина)!
            ЛичныеКабинеты.ОчиститьДанныеЛичногоКабинета(ЛичныйКабинетОбъект)
            ЛичныйКабинетОбъект.Записать()
        ;
    ;
    ПривилегированныйРежим.Закрыть() 
;

метод ОчиститьДанныеЛичногоКабинета(ЛичныйКабинетОбъект: ЛичныеКабинеты.Объект)
    ЛичныйКабинетОбъект.Состояние = СостоянияЛичногоКабинета.НеСоздан
    ЛичныйКабинетОбъект.ОшибкаПриСозданииЛичногоКабинета = ""
    ЛичныйКабинетОбъект.ДатаОтправкиПриглашения = Неопределено
    ЛичныйКабинетОбъект.ОшибкаПриОтправкеПриглашения = ""
    ЛичныйКабинетОбъект.ПриглашениеУспешноОтправлено = Ложь
    ЛичныйКабинетОбъект.Доступность = ДоступностьЛичногоКабинета.ВременноОтключен
;

@ВПодсистеме
метод ОтключитьКабинетыДеактивированныхФизическихЛиц()
    знч НеактивныеФизическиеЛица = ФизическиеЛица.СсылкиНеактивныхФизическихЛиц()
    знч Запрос = Запрос{
        Выбрать
            Ссылка,
            ФизическоеЛицо
        Из
            ЛичныеКабинеты
        Где
            ФизическоеЛицо в (%НеактивныеФизическиеЛица)
            и Состояние != СостоянияЛичногоКабинета.НеСоздан
            и Доступность == ДоступностьЛичногоКабинета.Включен
    }
    знч ФизическиеЛицаКОчистке: Массив<ФизическиеЛица.Ссылка>
    исп Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        ФизическиеЛицаКОчистке.Добавить(СтрокаРезультата.ФизическоеЛицо)
    ;
    
    если ФизическиеЛицаКОчистке.Пусто()
        возврат
    ;
    
    УдалитьКабинетыФизическихЛиц(ФизическиеЛицаКОчистке)
;