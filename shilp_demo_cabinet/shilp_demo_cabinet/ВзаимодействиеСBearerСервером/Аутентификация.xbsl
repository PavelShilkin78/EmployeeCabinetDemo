импорт СтандартноеПриложение

@ВПроекте
структура Токен
    обз знч Значение: Строка
    обз знч ВремяОкончания: Момент
    обз знч ПолученИзКэша: Булево    
;

структура ТокенАутентификации
    обз знч id_token: Строка
;

@ВПроекте
исключение ИсключениеАутентификации
    обз знч КодСостояния: Число
    обз знч ТелоОтвета: Строка   
;

@ВПроекте
исключение СервисАутентификацииНедоступен
    обз знч КодСостояния: Число
    обз знч ТелоОтвета: Строка  
;

@ВПодсистеме
метод ПолучитьТокен(АдресСервера: Строка, ИдКлиента:Строка, СекретКлиента: Строка, ДлительностьТокена: Длительность): Токен
    пер ЗаписьКэша: КэшТокенов.ДанныеТокена? = КэшТокенов.НайтиТокен(
           АдресСервера,
           ИдКлиента)
    
    если ЗаписьКэша != Неопределено
        и ЗаписьКэша.ВремяОкончания >= Момент.Сейчас()
        
        возврат новый Токен(ЗаписьКэша.Токен, ЗаписьКэша.ВремяОкончания, Истина)
    иначе
        возврат ОбновитьТокен(АдресСервера, ИдКлиента, СекретКлиента, ДлительностьТокена)
    ;
;

@ВПодсистеме
метод ОбновитьТокен(АдресСервера: Строка, ИдКлиента:Строка, СекретКлиента: Строка, ДлительностьТокена: Длительность): Токен
    пер Токен: Строка = ТокенАутентификации(АдресСервера, ИдКлиента, СекретКлиента)
    пер ИнформацияОТокене: Токен = новый Токен(Токен, Момент.Сейчас() + ДлительностьТокена, Ложь)   
    
    попытка 
        КэшТокенов.СохранитьТокен(
            АдресСервера, 
            ИдКлиента, 
            ИнформацияОТокене.Значение, 
            ИнформацияОТокене.ВремяОкончания)
    поймать ОшибкаСохранения: КэшТокенов.ИсключениеСохраненияТокена
        Журналирование.ЗарегистрироватьОшибку(ОшибкаСохранения)
    ;
    возврат ИнформацияОТокене
;

метод ТокенАутентификации(АдресСервера: Строка, ИдКлиента: Строка, СекретКлиента: Строка): Строка
   пер КлючАвторизации = Кодировки.Base64.КодироватьВСтроку("%ИдКлиента:%СекретКлиента")
   
   исп Ответ = СоединениеHttp.Клиент().ЗапросPost("%{АдресСервера}/auth/oidc/token")
    .УстановитьЗаголовок("Content-Type", "application/x-www-form-urlencoded")
    .УстановитьЗаголовок("Authorization", "Basic %КлючАвторизации")
    .УстановитьТело("grant_type=CLIENT_CREDENTIALS")
    .Выполнить()
    
    если Ответ.КодСостояния == 404
        выбросить новый СервисАутентификацииНедоступен("Сервис аутентификации не доступен",  Ответ.КодСостояния, Ответ.Тело.ПрочитатьКакСтроку())
    иначе если Ответ.КодСостояния != 200
        выбросить новый ИсключениеАутентификации("Не удалось получить токен", Ответ.КодСостояния, Ответ.Тело.ПрочитатьКакСтроку())
    ;
    
    знч Настройки = новый НастройкиЧтенияОбъектовJson()
    Настройки.ИгнорироватьНеизвестныеСвойства = Истина
    знч ТокенАутентификации = СериализацияJson.ПрочитатьОбъект(Ответ.Тело,  Тип<ТокенАутентификации>, Настройки)
    возврат ТокенАутентификации.id_token
;