импорт КонтрольДоступа
импорт СтандартноеПриложение
импорт ИнтерфейсныеКомпонентыСтандартные
импорт ПодборПерсонала

метод НадписьКодОтправленЗаголовок(): Строка
    если не ЭлектроннаяПочта.Пусто() 
        возврат "Код подтверждения отправлена на email %ЭлектроннаяПочта. Он будет действовать 3 минуты"    
    иначе 
        возврат "Код подтверждения отправлена на телефон %Телефон. Он будет действовать 3 минуты"
    ;    
;

метод ЗарегистрироватьсяПриНажатии(Источник: Кнопка, Событие: СобытиеПриНажатии)

    пер Логин: Строка

    если СпособРегистрации == СпособыРегистрации.Телефон
        если не ПройденаПроверкаТелефона()
            возврат
        ;
        
        Логин = Телефон.Удалить("+")
            
    иначе если СпособРегистрации == СпособыРегистрации.Почта
        если не ПройденаПроверкаПочты()
            возврат
        ;
        
        Логин = ЭлектроннаяПочта.Удалить("+")
        
    ;

    пер АдресПриложения = "%{АдресПриложения()}/?login_hint=%Логин"
    СоздатьКабинетКандидата(Логин, АдресПриложения)
    
    ПерейтиПоСсылке(АдресПриложения, Ложь)
     
;

метод СогласиеПриНажатии(Источник: Надпись, Событие: СобытиеПриНажатии)
    ПросмотрHtml.ОткрытьВМодальномОкне(Контент = ТекстСогласия())
;

@НаСервере @ДоступноСКлиента
статический метод ТекстСогласия(): Строка
    возврат СогласияНаОбработкуПдн.ТекстСогласия()
;

метод ПройденаПроверкаТелефона(): Булево
    ПроверитьТелефон()
    возврат РезультатПроверки == РезультатПроверкиДанных.Отсутствует
;

метод ПройденаПроверкаПочты(): Булево
    ПроверитьПочту()
    возврат РезультатПроверки == РезультатПроверкиДанных.Отсутствует
;

метод СоздатьКабинетКандидата(Логин: Строка, АдресПриложения: Строка)
    знч ДанныеСозданияПользователя = новый ЛичныеКабинетыКандидатов.ДанныеСозданияПользователя(
        Логин = Логин,
        Телефон = Телефон,
        ЭлектроннаяПочта = ЭлектроннаяПочта
    )
    ЛичныеКабинетыКандидатов.СоздатьКабинетКандидата(ДанныеСозданияПользователя, АдресПриложения, Неопределено, ВыбраннаяВакансия)
;

@НаСервере @ДоступноСКлиента
статический метод АдресПриложения():  Строка
    возврат СтандартноеПриложение.НастройкиПриложения().АдресПриложения
;

метод ПроверитьТелефон()
    если Телефон.Пусто()
        ТекстОшибки = "Для создания кабинета необходимо указать телефон"
        РезультатПроверки = РезультатПроверкиДанных.Ошибка
        возврат
    ;
    
    если ТелефонЗанят(Телефон)
        ТекстОшибки = "К данному номеру телефона уже привязан кабинет"
        РезультатПроверки = РезультатПроверкиДанных.Ошибка
        возврат
    ;
    
    ТекстОшибки = ""
    РезультатПроверки = РезультатПроверкиДанных.Отсутствует
;

метод ЭлектроннаяПочтаПриИзменении(Источник: ПолеВвода<Строка?>, Событие: СобытиеПриИзменении<Строка?>) 
    РезультатПроверки = РезультатПроверкиДанных.Отсутствует
;

метод ТелефонПриИзменении(Источник: ПолеВвода<Строка?>, Событие: СобытиеПриИзменении<Строка?>) 
    РезультатПроверки = РезультатПроверкиДанных.Отсутствует
;

метод ПроверитьПочту()
    
    если ЭлектроннаяПочта.Пусто()
        ТекстОшибки = "Для создания кабинета необходимо указать почту"
        РезультатПроверки = РезультатПроверкиДанных.Ошибка
        возврат
    ;

    если ПочтаЗанята(ЭлектроннаяПочта)
        ТекстОшибки = "К данной почте уже привязан кабинет"
        РезультатПроверки = РезультатПроверкиДанных.Ошибка
        возврат
    ;
    
    ТекстОшибки = ""
    РезультатПроверки = РезультатПроверкиДанных.Отсутствует

;

@НаСервере @ДоступноСКлиента
статический метод ТелефонЗанят(Телефон: Строка): Булево
    исп КонтекстДоступа.Привилегированный()
    
    знч ПользователиПоИдентификаторам = ПользователиСистемы.ПользователиПоИдентификаторам()
    знч ИспользованныеТелефоны = ПользователиСистемы.ИспользованныеТелефоны(ПользователиПоИдентификаторам)
    возврат ИспользованныеТелефоны.СодержитКлюч(Телефон) 
;

@НаСервере @ДоступноСКлиента
статический метод ПочтаЗанята(ЭлектроннаяПочта: Строка): Булево
    исп КонтекстДоступа.Привилегированный()
    
    знч ПользователиПоИдентификаторам = ПользователиСистемы.ПользователиПоИдентификаторам()
    знч ИспользованныеЭлектронныеПочты = ПользователиСистемы.ИспользованныеАдресаЭлектроннойПочты(ПользователиПоИдентификаторам)
    
    возврат ИспользованныеЭлектронныеПочты.СодержитКлюч(ЭлектроннаяПочта)
;

метод ЗарегистрироватьсяДоступность(): Булево
    если ВедетсяСборСогласий() и не СогласенНаОбработкуПерсДанных
        возврат Ложь
    ;
    
    если СпособРегистрации == СпособыРегистрации.Телефон
        возврат не Телефон.Пусто()
    иначе если СпособРегистрации == СпособыРегистрации.Почта
        возврат не ЭлектроннаяПочта.Пусто()
    ;
 
;

метод ВойтиПриНажатии(Источник: Кнопка, Событие: СобытиеПриНажатии)
    ПерейтиПоСсылке(АдресПриложения(), Ложь)
;

метод СборСогласийВидимость(): Булево
    возврат ВедетсяСборСогласий()
;

@НаСервере @ДоступноСКлиента
статический метод ВедетсяСборСогласий(): Булево
    возврат НастройкиПерсональныхДанных.ВедетсяСборСогласий()
;