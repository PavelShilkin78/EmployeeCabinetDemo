импорт ОбщиеСтандартные
импорт СтандартноеПриложение
импорт ПодборПерсонала
импорт Анкетирование
импорт УправлениеПерсоналом
импорт ФизическиеЛица
импорт УниверсальныеМеханизмы
импорт КонтрольДоступа
импорт Тестирование
импорт Уведомления
импорт Обсуждения

// Контракт ПараметрыСеансаПоставщик

@ВПроекте
@Реализация
метод КоллекцияПараметровСеанса(МобильныйИнтерфейс: Булево): Соответствие<Строка, Объект>
    
    пер ПараметрыСеанса = новый ЛичныеКабинетыКандидатов.ПараметрыСеанса()
    
    если Пользователи.ТекущийПользователь != Неопределено
        исп КонтекстДоступа.Привилегированный()
        знч ЗаписьПоПользователю = ПользователиКандидаты.ЗаписьПоПользователю(Пользователи.ТекущийПользователь)
        если ЗаписьПоПользователю != Неопределено
            ПараметрыСеанса.ЛичныйКабинетКандидата = Истина
            ПараметрыСеанса.Кандидат = ЗаписьПоПользователю.Кандидат
            ПараметрыСеанса.ЕстьОфферы = не ЛичныеКабинетыКандидатов.РассматриваемыеКандидатыСОфферами().Пусто()
            ПараметрыСеанса.ЕстьАнкеты = ЛичныеКабинетыКандидатов.ЕстьАнкетыКандидата()
            ПараметрыСеанса.ПолученоСогласие = ЛичныеКабинетыКандидатов.СогласиеПолучено(Пользователи.ТекущийПользователь)
        ;
        
        знч РезюмеКандидата = РезюмеКандидатов.РезюмеКандидата(Пользователи.ТекущийПользователь)
        если РезюмеКандидата != Неопределено
            ПараметрыСеанса.ЗаполненоРезюме = (РезюмеКандидата.Статус == СтатусыАнкет.Заполнена)
        ;
    ;
    
    ПараметрыСеанса.ШаблонАнкеты = НастройкиПодбораПерсонала.ШаблонАнкетыКандидата()
    
    возврат {ЛичныеКабинетыКандидатов.КЛЮЧ_ПАРАМЕТРОВ_СЕАНСА: ПараметрыСеанса}
;

// Конец ПараметрыСеансаПоставщик

// Контракт ПодсистемаПриложения

@ВПроекте
@Реализация
метод ОписаниеПодсистемы(): СтандартноеПриложение.ОписаниеПодсистемы
    возврат новый СтандартноеПриложение.ОписаниеПодсистемы(
        ЛичныеКабинетыКандидатов.ИД_ПОДСИСТЕМЫ,
        {
            ПодборПерсонала.ИД_ПОДСИСТЕМЫ, 
            Анкетирование.ИД_ПОДСИСТЕМЫ,
            Тестирование.ИД_ПОДСИСТЕМЫ,
            Обсуждения.ИД_ПОДСИСТЕМЫ,
            КонтрольДоступа.ИД_ПОДСИСТЕМЫ,
            Уведомления.ИД_ПОДСИСТЕМЫ,
            ФизЛица.ИД_ПОДСИСТЕМЫ,
            УниверсальныеМеханизмы.ИД_ПОДСИСТЕМЫ
        }
    )
;

// Конец ПодсистемаПриложения

// Контракт ОбновляемаяПодсистема

@ВПроекте
@Реализация
метод ОбработчикиЗаполнения(): Массив<СтандартноеПриложение.ОписаниеОбработчикаЗаполнения>
    возврат [новый СтандартноеПриложение.ОписаниеОбработчикаЗаполнения(
                    ЛичныеКабинетыКандидатов.ИД_ПОДСИСТЕМЫ, 
                    "ЛичныеКабинетыКандидатовОбновитьСтроковыеРесурсы", 
                    &ЛичныеКабинетыКандидатов.ОбновитьСтроковыеРесурсы()
                )
            ]
;

@ВПроекте
@Реализация
метод ОбработчикиОбновления(): Массив<СтандартноеПриложение.ОписаниеОбработчикаОбновления>
    пер Обработчики: Массив<СтандартноеПриложение.ОписаниеОбработчикаОбновления>
    пер Сервис = ЛичныеКабинетыКандидатовПоставщикВерсииПриложения.ПолучитьСервис()
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
                ЛичныеКабинетыКандидатов.ИД_ПОДСИСТЕМЫ, 
                "ЛичныеКабинетыКандидатовОбновитьСтроковыеРесурсы", 
                &ЛичныеКабинетыКандидатов.ОбновитьСтроковыеРесурсы(), 
                Сервис.ЛичныеКабинетыКандидатовОбновитьСтроковыеРесурсы()))
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
                ЛичныеКабинетыКандидатов.ИД_ПОДСИСТЕМЫ, 
                "ЛичныеКабинетыКандидатовОбновитьСтроковыеРесурсы", 
                &ЛичныеКабинетыКандидатов.ОбновитьСтроковыеРесурсы(), 
                Сервис.ЛичныеКабинетыКандидатовОбновитьСтроковыеРесурсыСогласий()))
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
                ЛичныеКабинетыКандидатов.ИД_ПОДСИСТЕМЫ, 
                "ЛичныеКабинетыКандидатовИнициализироватьНастройкиВитриныВакансий", 
                &ЛичныеКабинетыКандидатов.ИнициализироватьНастройкиВитриныВакансий(), 
                Сервис.ЛичныеКабинетыКандидатовИнициализироватьНастройкиВитриныВакансий()))
    возврат Обработчики
;

// Конец ОбновляемаяПодсистема

// Контракт СобытияКандидаты

@ВПроекте
@Реализация
метод ОкончаниеЗаписиГруппыОбъектов(Объекты: Массив<Кандидаты.Ссылка>)
;

@ВПроекте
@Реализация
метод ОкончаниеЗаписиОбъекта(Объект: Кандидаты.Ссылка)

    исп КонтекстДоступа.Привилегированный()
    знч КонтактыКандидата = ЛичныеКабинетыКандидатов.КонтактыКандидата(Объект)
    знч ОтсутствуетКабинет = ЛичныеКабинетыКандидатов.ОтсутствуетКабинетКандидата(Объект)
    если ОтсутствуетКабинет и ЕстьОткликПоКонтактам(КонтактыКандидата.Телефоны, КонтактыКандидата.ПочтовыеАдреса)
        МенеджерЗаданий.ПроверитьАвтозапускЗапланированныхЗаданийВключен()
        ЗапланированныеЗадания.Создать(&ЛичныеКабинетыКандидатов.ПодготовитьКабинетКандидату, Объект, КонтактыКандидата.Телефоны, КонтактыКандидата.ПочтовыеАдреса).Запланировать()
    ;   

;

метод ЕстьОткликПоКонтактам(Телефоны: Массив<Строка>, ПочтовыеАдреса: Массив<Строка>): Булево
    
    знч Запрос = Запрос{
    Выбрать
        Владелец.Владелец,
        Элемент
    ИЗ
        ЛичныеКонтакты.ЭлектроннаяПочта
    Где Владелец.Владелец.ПолучитьТип() == Тип<Отклики.Ссылка> и Элемент.Данные В (%ПочтовыеАдреса)
    Объединить
    Выбрать
        Владелец.Владелец,
        Элемент
    ИЗ
        ЛичныеКонтакты.МобильныйТелефон
    Где Владелец.Владелец.ПолучитьТип() == Тип<Отклики.Ссылка> и Элемент.Данные В (%Телефоны)
    }
    знч Результат = новый ЧитаемыйМассив(Запрос.Выполнить())
    возврат не Результат.Пусто()
;

@ВПроекте
@Реализация
метод ЗаполнитьРезюмеПоАнкете(ИмпортируемыйОтвет: Анкетирование.ИмпортируемыйОтвет)
    
    знч ОбразованиеУровень: Массив<УровниОбразования?>
    знч ОбразованиеНаименованиеУчебногоЗаведения: Массив<Строка>
    знч ОбразованиеСпециальность: Массив<Строка>
    знч ОбразованиеГодОкончания: Массив<Число>
    знч ОпытРаботыМестоРаботы: Массив<Строка>
    знч ОпытРаботыСфераДеятельности: Массив<Строка>
    знч ОпытРаботыДолжность: Массив<Строка>
    знч ОпытРаботыОбязанности: Массив<Строка>
    знч ОпытРаботыНачалоРаботы: Массив<Дата>
    знч ОпытРаботыОкончаниеРаботы: Массив<Дата>
    
    для Ответ из ИмпортируемыйОтвет.Ответы
        выбор Ответ.ИдВопроса
        когда ПредопределенныеВопросыАнкеты.ИД_ВОПРОСА_УРОВЕНЬ_ОБРАЗОВАНИЯ
            если не Ответ.Ответ.ЗначенияПредопределенные.Пусто()
                для УровеньОбразования из УровниОбразования.Элементы()
                    если УровеньОбразования.Представление() == Ответ.Ответ.ЗначенияПредопределенные[0].Представление()
                        ОбразованиеУровень.Добавить(УровеньОбразования)
                    ;
                ;
            иначе
                ОбразованиеУровень.Добавить(Неопределено)
            ;
        когда ПредопределенныеВопросыАнкеты.ИД_ВОПРОСА_МЕСТО_ОБРАЗОВАНИЯ
            ОбразованиеНаименованиеУчебногоЗаведения.Добавить(Ответ.Ответ.ЗначениеСтрока)    
        когда ПредопределенныеВопросыАнкеты.ИД_ВОПРОСА_ГОД_ВЫПУСКА
            ОбразованиеГодОкончания.Добавить(Ответ.Ответ.ЗначениеЧисло ?? 0)
        когда ПредопределенныеВопросыАнкеты.ИД_ВОПРОСА_СПЕЦИАЛЬНОСТЬ
            ОбразованиеСпециальность.Добавить(Ответ.Ответ.ЗначениеСтрока)
        когда ПредопределенныеВопросыАнкеты.ИД_ВОПРОСА_МЕСТО_РАБОТЫ
            ОпытРаботыМестоРаботы.Добавить(Ответ.Ответ.ЗначениеСтрока)
        когда ПредопределенныеВопросыАнкеты.ИД_ВОПРОСА_СФЕРА_ДЕЯТЕЛЬНОСТИ
            ОпытРаботыСфераДеятельности.Добавить(Ответ.Ответ.ЗначениеСтрока)
        когда ПредопределенныеВопросыАнкеты.ИД_ВОПРОСА_ДОЛЖНОСТЬ
            ОпытРаботыДолжность.Добавить(Ответ.Ответ.ЗначениеСтрока)
        когда ПредопределенныеВопросыАнкеты.ИД_ВОПРОСА_ОБЯЗАННОСТИ
            ОпытРаботыОбязанности.Добавить(Ответ.Ответ.ЗначениеСтрока)
        когда ПредопределенныеВопросыАнкеты.ИД_ВОПРОСА_НАЧАЛО_РАБОТЫ
            ОпытРаботыНачалоРаботы.Добавить(Ответ.Ответ.ЗначениеДата)
        когда ПредопределенныеВопросыАнкеты.ИД_ВОПРОСА_ОКОНЧАНИЕ_РАБОТЫ
            ОпытРаботыОкончаниеРаботы.Добавить(Ответ.Ответ.ЗначениеДата)
        ;
    ;
    
    знч Образование: Массив<ОписаниеОбразования>
    если не ОбразованиеУровень.Пусто()
        для Индекс = 0 по ОбразованиеУровень.Граница()
            знч МестоОбразования: ОписаниеОбразования
            МестоОбразования.Уровень = ОбразованиеУровень[Индекс]
            МестоОбразования.НаименованиеУчебногоЗаведения = ОбразованиеНаименованиеУчебногоЗаведения[Индекс]
            МестоОбразования.Специальность = ОбразованиеСпециальность[Индекс]
            МестоОбразования.ГодОкончания = ОбразованиеГодОкончания[Индекс]
            Образование.Добавить(МестоОбразования)
        ;
    ;
    
    знч ОпытРаботы: Массив<ОписаниеМестаРаботы>
    если не ОпытРаботыМестоРаботы.Пусто()
        для Индекс = 0 по ОпытРаботыМестоРаботы.Граница()
            знч МестоРаботы: ОписаниеМестаРаботы
            МестоРаботы.НаименованиеОрганизации = ОпытРаботыМестоРаботы[Индекс]
            МестоРаботы.Специальность = ОпытРаботыДолжность[Индекс]
            МестоРаботы.Обязанности = ОпытРаботыОбязанности[Индекс]
            МестоРаботы.НачалоРаботы = ОпытРаботыНачалоРаботы[Индекс]
            если ОпытРаботыОкончаниеРаботы[Индекс] == Дата{}
                МестоРаботы.ПоНастоящееВремя = Истина
            иначе
                МестоРаботы.ОкончаниеРаботы = ОпытРаботыОкончаниеРаботы[Индекс]
            ;
            ОпытРаботы.Добавить(МестоРаботы)
        ;
    ;
    
    знч ТекущийПользователь = Пользователи.ТекущийПользователь
    ОбразованиеКандидатов.ЗаписатьОбразованиеКандидата(ТекущийПользователь, Образование)
    ОпытРаботыКандидатов.ЗаписатьОпытРаботыКандидата(ТекущийПользователь, ОпытРаботы)
;



// Конец СобытияКандидаты

//Контракт КонтрольДоступаПоПолномочиямСервис

@ВПроекте
@Реализация
метод ЗаполнитьПредопределенныеПолномочия()
    ЛичныеКабинетыКандидатов.ДобавитьПолномочия()
;

@ВПроекте
@Реализация
метод ЗаполнитьПредопределенныеРоли()  
;

@ВПроекте
@Реализация
метод ЗаполнитьПредопределенныеТипыАтрибутов()
;

@ВПроекте
@Реализация
метод СоздатьНаборыОграниченийДоступа()
;

@ВПроекте
@Реализация
метод ТипыАтрибутовПоТипамЗначений(): ЧитаемоеСоответствие<Тип, ТипыАтрибутов.Ссылка>
    возврат {:}
;

//Конец КонтрольДоступаПоПолномочиямСервис

// Контракт КонтрольДоступаПоВладельцуСервис

@ВПроекте
@Реализация
метод ВладельцыКлючейПользователей(Пользователи: ЧитаемоеМножество<Пользователи.Ссылка>):
    ЧитаемоеСоответствие<Пользователи.Ссылка, ЧитаемыйМассив<ВладельцыКлючейДоступа.Ссылка|ФизическиеЛица.Ссылка>> 
    
    знч ВладельцыКлючейПользователей: Соответствие<Пользователи.Ссылка, Массив<ВладельцыКлючейДоступа.Ссылка|ФизическиеЛица.Ссылка>>
    для КлючИЗначение из ОткликиКандидатов.ОткликиПользователей(Пользователи)
        знч Значение = ВладельцыКлючейПользователей.ВставитьЕслиОтсутствует(КлючИЗначение.Ключ, [])
        Значение.ДобавитьВсе(КлючИЗначение.Значение)
    ;
    
    для КлючИЗначение из ПользователиКандидаты.КандидатыПользователей(Пользователи)
        знч Значение = ВладельцыКлючейПользователей.ВставитьЕслиОтсутствует(КлючИЗначение.Ключ, [])
        Значение.Добавить(КлючИЗначение.Значение)
    ;
    
    возврат ВладельцыКлючейПользователей
;

// Конец КонтрольДоступаПоВладельцуСервис

// Контракт РеспондентАнкетированияПоставщик
@ВПроекте
@Реализация
метод РеспондентыТекущегоПользователя(): Массив<РеспондентАнкетирования.Ссылка>
    возврат ЛичныеКабинетыКандидатов.РеспондентыТекущегоПользователя()
;

//Конец РеспондентАнкетированияПоставщик

// Контракт ВторичныеДанные

@ВПроекте
@Реализация
метод Пересчитать()
    ЛичныеКабинетыКандидатов.ОбновитьСтроковыеРесурсы()
;

// Конец ВторичныеДанные

// Контракт СтроковыеРесурсыПоставщик

@ВПроекте
@Реализация
метод ИменаРесурсовПоГруппеРесурсов(УчитыватьИспользуемуюФункциональность: Булево): Соответствие<Строка, Коллекция<Строка>>
    возврат {
        ЛичныеКабинетыКандидатов.ГРУППА_РЕСУРСОВ_ЛК_КАНДИДАТОВ: [
                ЛичныеКабинетыКандидатов.ПРИГЛАШЕНИЕ_КАНДИДАТА_ТЕМА_ПИСЬМА,
                ЛичныеКабинетыКандидатов.ПРИГЛАШЕНИЕ_КАНДИДАТА_ТЕКСТ_SMS,
                ЛичныеКабинетыКандидатов.ПРИГЛАШЕНИЕ_КАНДИДАТА_ТЕКСТ_ПИСЬМА,

                ЛичныеКабинетыКандидатов.СФОРМИРОВАНО_СОГЛАСИЕ_ТЕМА_ПИСЬМА,
                ЛичныеКабинетыКандидатов.СФОРМИРОВАНО_СОГЛАСИЕ_ТЕКСТ_ПИСЬМА,

                ЛичныеКабинетыКандидатов.ПОДПИСАНО_СОГЛАСИЕ_ТЕМА_ПИСЬМА,
                ЛичныеКабинетыКандидатов.ПОДПИСАНО_СОГЛАСИЕ_ТЕКСТ_ПИСЬМА]
    }
;

// Конец СтроковыеРесурсыПоставщик