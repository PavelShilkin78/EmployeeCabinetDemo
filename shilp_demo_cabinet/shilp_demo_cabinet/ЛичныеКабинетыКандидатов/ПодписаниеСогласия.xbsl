импорт ПодборПерсонала
импорт КонтрольДоступа
импорт СтандартноеПриложение

@Обработчик
метод ПослеСоздания()
    ТекстСогласия = ТекстСогласия()
;

@НаСервере @ДоступноСКлиента
статический метод ТекстСогласия(): Строка
    возврат СогласияНаОбработкуПдн.ТекстСогласия()
;

метод ДатьСогласие(Команда: ОбычнаяКоманда)
    
    знч ДанныеПользователяКандидата = ПолучитьКандидата()
    знч ИдПользователяСистемы = ИдПользователяСистемы()
    
    если ДанныеПользователяКандидата.Кандидат == Неопределено
        СформироватьСогласиеПоПользователю(ИдПользователяСистемы)
    иначе
        ПодписатьСогласие(ДанныеПользователяКандидата.Кандидат)
    ;
    
    ПерезагрузитьСеансСНовымиПараметрами()
;

метод ПерезагрузитьСеансСНовымиПараметрами()
    ПерейтиПоСсылке(СтандартноеПриложение.ПараметрыСеанса().АдресПриложения, Ложь)
;

@НаСервере @ДоступноСКлиента
статический метод ИдПользователяСистемы(): Ууид
    знч ТекущийПользователь = Пользователи.ТекущийПользователь
    возврат ПользователиСистемы.ИдПользователяСистемы(ТекущийПользователь)
;

@НаСервере @ДоступноСКлиента
статический метод СформироватьСогласиеПоПользователю(ИдПользователя: Ууид)
    СогласияНаОбработкуПдн.СформироватьСогласиеЕслиНеСоздано(Субъект = Неопределено, ИдПользователя = ИдПользователя, ПодписатьСразу = Истина)
;

@НаСервере @ДоступноСКлиента
статический метод ПодписатьСогласие(Субъект: Кандидаты.Ссылка)
    СогласияНаОбработкуПдн.СформироватьСогласиеЕслиНеСоздано(Субъект, Неопределено, Ложь)
    СогласияНаОбработкуПдн.ПодписатьСогласие(Субъект)
;

@НаСервере @ДоступноСКлиента
статический метод ПолучитьКандидата(): ДанныеПользователяКандидата?
    знч ТекущийПользователь = Пользователи.ТекущийПользователь
    
    знч Запрос = Запрос {
        Выбрать Первые 1
            Кандидат,
            ПерваяВакансия
        Породить ДанныеПользователяКандидата
        Из ПользователиКандидаты
        Где Пользователь == %ТекущийПользователь
    }
    
    исп КонтекстДоступа.Привилегированный()
    исп РезультатЗапроса = Запрос.Выполнить()
    
    возврат РезультатЗапроса.ЕдинственныйИлиУмолчание()
;

@НаСервере @ДоступноСКлиента
статический метод ЗаписатьОтклик(Вакансия: Вакансии.Ссылка): Отклики.Ссылка?

    исп КонтекстДоступа.Привилегированный()
    знч ТекущийПользователь = Пользователи.ТекущийПользователь
    знч КонтактнаяИнформацияПользователя = ПользователиСистемы.КонтактнаяИнформацияПользователя(ТекущийПользователь)
    пер ДанныеОтклика = новый Отклики.ДанныеОтклика(Вакансия = Вакансия, Источник = ИсточникиКандидатов.ВитринаВакансий) 
    
    если не КонтактнаяИнформацияПользователя.ЭлектроннаяПочта.Пусто()
        и ДанныеОтклика.ЭлектроннаяПочта.Содержит(КонтактнаяИнформацияПользователя.ЭлектроннаяПочта)
        ДанныеОтклика.ЭлектроннаяПочта.Добавить(КонтактнаяИнформацияПользователя.ЭлектроннаяПочта)
    ;
    
    если не КонтактнаяИнформацияПользователя.Телефон.Пусто()
        и ДанныеОтклика.Телефон.Содержит(КонтактнаяИнформацияПользователя.Телефон)
        ДанныеОтклика.Телефон.Добавить(КонтактнаяИнформацияПользователя.Телефон)
    ;
    знч НовыйОтклик = Отклики.СоздатьЧерновикОтклика(ДанныеОтклика)
    ОткликиКандидатов.ЗаписатьОткликКандидата(ТекущийПользователь, Вакансия, НовыйОтклик)
    
    возврат НовыйОтклик
;

метод Запретить(Команда: ОбычнаяКоманда)
     знч Ответ = Диалог.Вопрос(
                    "Личный кабинет будет закрыт. Без подписания согласия мы не сможем обрабатывать Ваши данные", 
                    [КнопкаДиалога.Да, КнопкаДиалога.Нет], 
                    "Вы уверены?")     
    знч ОтказПодтверждён = (Ответ == КнопкаДиалога.Да)
    если ОтказПодтверждён
        Аутентификация.ЗавершитьТекущийСеанс()
    ; 
;