импорт ВебApi
импорт Компания
импорт ФизическиеЛица
импорт ОбщиеСтандартные
импорт ОбменДанными

//Область РазрешенияДоступа
@Обработчик
метод ВычислитьРазрешенияДоступа(): Массив<РазрешениеДоступа>
    возврат ГрафикОтпусковПоставщикОграничений.ПолучитьСервис().ГрафикПредприятияРазрешения()
;

//КонецОбласти

//Область СлужебныйПрограммныйИнтерфейс

@ВПроекте
метод ПослеЗаписиГруппыОбъектов(ЗагруженныеОбъекты: Массив<ВходящиеДанные.Ссылка>, ЗависимыеОбъекты: Массив<Справочник.Ссылка>)
;

@ВПодсистеме
метод ПослеЗаписиДополнение(Ссылка: ГрафикОтпусковПредприятия.Ссылка, Год: Число, Состояние: СостояниеГрафикаОтпусков, ИнформационнаяСистемаИнициатор: ИнформационныеСистемы.Ссылка?, ЭтоНовый: Булево, СостояниеИзменилось: Булево)  
    знч ВидТекущегоПриложения = ОбменДанными.ВидТекущегоПриложения()
    если не ЭтоВнешнийГрафикПредприятияПереданныйВHR(ВидТекущегоПриложения, ИнформационнаяСистемаИнициатор)
        ЗаполнитьДанныеНастроекГрафиковОтпусковДляESS(ВидТекущегоПриложения, Состояние, ЭтоНовый)
        если ЭтоНовый 
            если ИнформационнаяСистемаИнициатор != Неопределено
                исп ПривилегированныйРежим = КонтекстДоступа.Привилегированный() 
                ИнформационныеСистемыРазделителейДанных.ОбновитьИнформационныеСистемыРазделителейДанных(
                    Ссылка, 
                    ИнформационнаяСистемаИнициатор
                )
                ПривилегированныйРежим.Закрыть()
            ;
            если Состояние == СостояниеГрафикаОтпусков.Черновик
                для Подразделение из Компания.ПодразделенияКампании()
                    СборГрафиковОтпусков.НачатьКампаниюПодразделения(Ссылка, Неопределено, Подразделение) 
                ;
                если Состояние != СостояниеГрафикаОтпусков.ВРаботе
                    пер ГрафикОтпусковПредприятия = Ссылка.ЗагрузитьОбъект()   
                    ГрафикОтпусковПредприятия.Состояние = СостояниеГрафикаОтпусков.ВРаботе
                    ГрафикОтпусковПредприятия.Записать()
                ;
            ; 
        ;
        если СостояниеИзменилось  
            ОбработатьСостояниеГрафикаОтпусковПредприятия(Ссылка, Год, Состояние)
        ;
        знч СервисРегистрацииИзменений = ГрафикОтпусковРегистрацияИзменений.ПолучитьСервис()
        пер ИнформационнаяСистемаИнициаторВидПриложения: ВидПриложения?
        если ИнформационнаяСистемаИнициатор != Неопределено
            ИнформационнаяСистемаИнициаторВидПриложения = МенеджерСущности.ЗначениеРеквизитаОбъекта(ИнформационнаяСистемаИнициатор, "ВидПриложения")
        ;
        если СервисРегистрацииИзменений.ГрафикОтпусковПредприятияТребуетсяРегистрация(Состояние, ИнформационнаяСистемаИнициаторВидПриложения)
            ОбменДанными.ЗарегистрироватьОтправляемыйДокумент(Ссылка, Истина)
            РегистрацияИзменений.ЗарегистрироватьИзменение(
                Ссылка,
                СервисРегистрацииИзменений.ГрафикОтпусковПредприятияРазделитель(Состояние)) 
            ТребуетсяРегистрацияГрафикОтпусковСтруктурныхЕдиниц(ВидТекущегоПриложения, Ссылка, Состояние)       
        ;
    ;
;

метод ОбработатьСостояниеГрафикаОтпусковПредприятия(Ссылка: ГрафикОтпусковПредприятия.Ссылка, Год: Число, Состояние: СостояниеГрафикаОтпусков)
    если Состояние == СостояниеГрафикаОтпусков.Черновик или Состояние == СостояниеГрафикаОтпусков.ВРаботе
        исп Транзакция = Транзакции.Начать()
        // переводим другие черновики в отказано
        знч Запрос = Запрос{
            Выбрать
                Ссылка
            Из
                ГрафикОтпусковПредприятия
            Где
                Состояние == %Состояние
                и Ссылка != %Ссылка 
                и Год == %Год              
            }
        исп Результат = Запрос.Выполнить() 
        для РезультатСтрока из Результат
            пер ГрафикОтпусковПредприятия = РезультатСтрока.Ссылка.ЗагрузитьОбъект(Истина)
            ГрафикОтпусковПредприятия.Состояние = СостояниеГрафикаОтпусков.Отказано
            ГрафикОтпусковПредприятия.Записать()
        ;     
        // возвращаем отказные графики (если такие были) в черновик
        пер ЗапросГрафиковОтпусковСтруктурнойЕдиницы = Запрос{
            Выбрать
                Ссылка
            Из
                ГрафикОтпусковСтруктурнойЕдиницы
            Где
                ГрафикОтпусковПредприятия == %Ссылка
                и Состояние == СостояниеГрафикаОтпусков.Отказано 
            }
        исп РезультатЗапроса = ЗапросГрафиковОтпусковСтруктурнойЕдиницы.Выполнить() 
        знч ДанныеНастроекГрафиковОтпусков = НастройкиГрафиковОтпусков.НастройкиГрафиковОтпусков()           
        для РезультатСтрока из РезультатЗапроса
            пер ГрафикОтпусковСтруктурнойЕдиницы = РезультатСтрока.Ссылка.ЗагрузитьОбъект(Истина)
            ГрафикОтпусковСтруктурнойЕдиницы.Состояние = ДанныеНастроекГрафиковОтпусков.СостояниеГрафикаОтпусковСтруктурнойЕдиницыПоУмолчанию 
            ГрафикОтпусковСтруктурнойЕдиницы.Записать()
        ; 
        Транзакция.Фиксировать()   
    иначе если Состояние == СостояниеГрафикаОтпусков.Отказано
        исп Транзакция = Транзакции.Начать()
        // переводим графики по подразделениям в отказано
        знч Запрос = Запрос{
            Выбрать
                Ссылка
            Из
                ГрафикОтпусковСтруктурнойЕдиницы
            Где
                ГрафикОтпусковПредприятия == %Ссылка
                и Состояние != %Состояние
            }
        исп Результат = Запрос.Выполнить() 
        для РезультатСтрока из Результат
            пер ГрафикОтпусковСтруктурнойЕдиницы = РезультатСтрока.Ссылка.ЗагрузитьОбъект(Истина)
            ГрафикОтпусковСтруктурнойЕдиницы.Состояние = Состояние
            ГрафикОтпусковСтруктурнойЕдиницы.Записать()
            // переводим уже введенные пожелания по периодам в черновики
            СборГрафиковОтпусков.ИзменитьСостоянияПериодовОтпускаГрафикаПодразделения(Ссылка, РезультатСтрока.Ссылка, СостояниеГрафикаОтпусков.Черновик)
        ; 
        Транзакция.Фиксировать()   
    ;
;

метод ЗаполнитьДанныеНастроекГрафиковОтпусковДляESS(ВидТекущегоПриложения: ВидПриложения, Состояние: СостояниеГрафикаОтпусков, ЭтоНовый: Булево)  
    если ВидТекущегоПриложения == ВидПриложения.Ess и ЭтоНовый
        знч Настройки: НастройкиГрафиковОтпусков.ДанныеНастроек
        // если сбор инициирован из HRM: СостояниеГрафикаОтпусков == Черновик
        // если сбор инициирован из HR:  СостояниеГрафикаОтпусков == ВРаботе
        Настройки.СостояниеГрафикаОтпусковСтруктурнойЕдиницыПоУмолчанию = Состояние
        НастройкиГрафиковОтпусков.ЗаполнитьДанныеНастроекПоУмолчанию(Настройки)
    ;
;

метод ЭтоВнешнийГрафикПредприятияПереданныйВHR(ВидТекущегоПриложения: ВидПриложения, ИнформационнаяСистемаИнициатор: ИнформационныеСистемы.Ссылка?): Булево
    возврат ВидТекущегоПриложения == ВидПриложения.Hr и ИнформационнаяСистемаИнициатор != Неопределено
;

метод ТребуетсяРегистрацияГрафикОтпусковСтруктурныхЕдиниц(ВидТекущегоПриложения: ВидПриложения, ГрафикОтпусковПредприятияСсылка: ГрафикОтпусковПредприятия.Ссылка, ГрафикОтпусковПредприятияСостояние: СостояниеГрафикаОтпусков)
    // если сбор инициирован из HR, после завершения кампании, дополнительно регистрируем к обмену сборы по структурным единицам
    если ВидТекущегоПриложения == ВидПриложения.Hr и ГрафикОтпусковПредприятияСостояние == СостояниеГрафикаОтпусков.Утверждено
        знч Запрос = Запрос{
        Выбрать  
            ГрафикОтпусковСтруктурнойЕдиницы.Ссылка.ЗаменитьNull(Неопределено) Как Ссылка,
            ГрафикОтпусковСтруктурнойЕдиницы.Состояние.ЗаменитьNull(Неопределено) КАК Состояние
        Из 
            ПодразделенияИСотрудники КАК ПодразделенияИСотрудники
            Левое Соединение ГрафикОтпусковСотрудника КАК ГрафикОтпусковСотрудника
                Внутреннее соединение ГрафикОтпусковСтруктурнойЕдиницы КАК ГрафикОтпусковСтруктурнойЕдиницы
                    Внутреннее соединение ГрафикОтпусковПредприятия КАК ГрафикОтпусковПредприятияСсылка
                        ПО ГрафикОтпусковСтруктурнойЕдиницы.ГрафикОтпусковПредприятия == ГрафикОтпусковПредприятияСсылка.Ссылка
                    ПО ГрафикОтпусковСотрудника.ГрафикОтпусковПодразделения == ГрафикОтпусковСтруктурнойЕдиницы.Ссылка
                ПО ПодразделенияИСотрудники.ФизическоеЛицо == ГрафикОтпусковСотрудника.ФизическоеЛицо         
        Где 
            ПодразделенияИСотрудники.ФизическоеЛицо != Неопределено
            И ПодразделенияИСотрудники.ОсновноеМестоРаботы
            И ГрафикОтпусковПредприятияСсылка.Ссылка == %ГрафикОтпусковПредприятияСсылка
	        И ГрафикОтпусковСтруктурнойЕдиницы.Ответственный.ЗаменитьNull(Неопределено) != Неопределено
        Сгруппировать По
            ГрафикОтпусковСтруктурнойЕдиницы.Ссылка.ЗаменитьNull(Неопределено),
            ГрафикОтпусковСтруктурнойЕдиницы.Состояние.ЗаменитьNull(Неопределено)
        }
        исп ПривилегированныйРежим: КонтекстДоступа = КонтекстДоступа.Привилегированный()
        исп Результат = Запрос.Выполнить() 
        ПривилегированныйРежим.Закрыть()
        для РезультатСтрока из Результат
            ОбменДанными.ЗарегистрироватьОтправляемыйДокумент(РезультатСтрока.Ссылка, Истина)
            РегистрацияИзменений.ЗарегистрироватьИзменение(
                РезультатСтрока.Ссылка,
                ГрафикОтпусковРегистрацияИзменений.ПолучитьСервис().ГрафикОтпусковСтруктурнойЕдиницыРазделитель(ГрафикОтпусковПредприятияСсылка, РезультатСтрока.Состояние)
            )
        ;
    ;
;

//КонецОбласти

// JSON

@ВПодсистеме
структура ГрафикОтпусковПредприятия_1_1
    @JsonСвойство("ID")
    обз знч Ид: Строка?
    @JsonСвойство("year")
    обз знч Год: Число?
    @JsonСвойство("status")
    обз знч Состояние: СборГрафиковОтпусков.СостояниеГрафикаОтпусковJson?
;

@ВПроекте
структура ГрафикОтпусковПредприятия_1_2
    @JsonСвойство("ID")
    обз знч Ид: Строка?
    @JsonСвойство("year")
    обз знч Год: Число?
    @JsonСвойство("status")
    обз знч Состояние: СборГрафиковОтпусков.СостояниеГрафикаОтпусковJson?
    @JsonСвойство("initiatorID")
    обз знч Инициатор: Строка?
;

@ВПроекте
структура ГрафикОтпусковПредприятия_2_0
    @JsonСвойство("ID")
    обз знч Ид: Строка?
    @JsonСвойство("year")
    обз знч Год: Число?
    @JsonСвойство("status")
    обз знч Состояние: СборГрафиковОтпусков.СостояниеГрафикаОтпусковJson?
    @JsonСвойство("initiatorID")
    обз знч Инициатор: Строка?
    @JsonСвойство("version")
    обз знч Версия: Число?
;

@ВПроекте
метод ТипДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    если ВерсияФорматаОбмена == Неопределено
        возврат Тип<ГрафикОтпусковПредприятия_1_1>
    иначе если ВерсияФорматаОбмена >= Версия{2.0}
        возврат Тип<ГрафикОтпусковПредприятия_2_0>
    иначе если ВерсияФорматаОбмена >= Версия{1.2}
        возврат Тип<ГрафикОтпусковПредприятия_1_2>
    иначе если ВерсияФорматаОбмена >= Версия{1.1}
        возврат Тип<ГрафикОтпусковПредприятия_1_1>
    ;
;

@ВПроекте
метод ТипКоллекцииДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    если ВерсияФорматаОбмена == Неопределено
        возврат Тип<Массив<ГрафикОтпусковПредприятия_1_1>>
    иначе если ВерсияФорматаОбмена >= Версия{2.0}
        возврат Тип<Массив<ГрафикОтпусковПредприятия_2_0>>
    иначе если ВерсияФорматаОбмена >= Версия{1.2}
        возврат Тип<Массив<ГрафикОтпусковПредприятия_1_2>>
    иначе если ВерсияФорматаОбмена >= Версия{1.1}
        возврат Тип<Массив<ГрафикОтпусковПредприятия_1_1>>
    ;
;

@ВПроекте
метод ТипОбъектаJson(): Строка
    возврат "enterpriseVacationsSchedule"
;

@ВПроекте
метод ЗагрузитьОбъектИзJson(ДанныеJson: ГрафикОтпусковПредприятия_1_1, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    исп Транзакции.Начать() 
    знч ГрафикОтпусковПредприятия = Сервисы.ПрочитатьОбъект(
        ДанныеJson.Ид, 
        &ГрафикОтпусковПредприятия.Объект.новый(Ууид),
        Тип<ГрафикОтпусковПредприятия.Ссылка>) как ГрафикОтпусковПредприятия.Объект
    ГрафикОтпусковПредприятия.Год = ДанныеJson.Год
    ГрафикОтпусковПредприятия.Состояние = ДанныеJson.Состояние != Неопределено ? СборГрафиковОтпусков.СостояниеИзJson(ДанныеJson.Состояние) : СостояниеГрафикаОтпусков.Черновик
    Сервисы.ЗаписатьОбъект(
        новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(ГрафикОтпусковПредприятия, ДанныеJson.Ид), 
        Сервисы.ИнструментыМенеджераОбъекта)
;

@ВПроекте
метод ЗагрузитьОбъектИзJson(ДанныеJson: ГрафикОтпусковПредприятия_1_2, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    исп Транзакции.Начать() 
    знч ГрафикОтпусковПредприятия = Сервисы.ПрочитатьОбъект(
        ДанныеJson.Ид, 
        &ГрафикОтпусковПредприятия.Объект.новый(Ууид),
        Тип<ГрафикОтпусковПредприятия.Ссылка>) как ГрафикОтпусковПредприятия.Объект
    ГрафикОтпусковПредприятия.Год = ДанныеJson.Год
    ГрафикОтпусковПредприятия.Состояние = ДанныеJson.Состояние != Неопределено ? СборГрафиковОтпусков.СостояниеИзJson(ДанныеJson.Состояние) : СостояниеГрафикаОтпусков.Черновик
    если ДанныеJson.Инициатор != Неопределено
        ГрафикОтпусковПредприятия.Инициатор
            = Сервисы.ПолучитьСсылку(ФизическиеЛица.ВнешняяСсылка(ДанныеJson.Инициатор)) как ФизическиеЛица.Ссылка
    ;
    Сервисы.ЗаписатьОбъект(
        новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(ГрафикОтпусковПредприятия, ДанныеJson.Ид), 
        Сервисы.ИнструментыМенеджераОбъекта)
;

@ВПроекте
метод ЗагрузитьОбъектИзJson(ДанныеJson: ГрафикОтпусковПредприятия_2_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    исп Транзакции.Начать() 
    знч ГрафикОтпусковПредприятия = Сервисы.ПрочитатьОбъект(
        ДанныеJson.Ид, 
        &ГрафикОтпусковПредприятия.Объект.новый(Ууид),
        Тип<ГрафикОтпусковПредприятия.Ссылка>) как ГрафикОтпусковПредприятия.Объект
    ГрафикОтпусковПредприятия.Год = ДанныеJson.Год
    ГрафикОтпусковПредприятия.Состояние = ДанныеJson.Состояние != Неопределено ? СборГрафиковОтпусков.СостояниеИзJson(ДанныеJson.Состояние) : СостояниеГрафикаОтпусков.Черновик
    если ДанныеJson.Инициатор != Неопределено
        ГрафикОтпусковПредприятия.Инициатор
            = Сервисы.ПолучитьСсылку(ФизическиеЛица.ВнешняяСсылка(ДанныеJson.Инициатор)) как ФизическиеЛица.Ссылка
    ;
    ГрафикОтпусковПредприятия.ИнформационнаяСистемаИнициатор = Сервисы.Отправитель как ИнформационныеСистемы.Ссылка?
    Сервисы.ЗаписатьОбъект(
        новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(ГрафикОтпусковПредприятия, ДанныеJson.Ид), 
        Сервисы.ИнструментыМенеджераОбъекта)
;

@ВПодсистеме
метод УдалитьОбъекты(ПараметрыЗапроса: ЧитаемоеСоответствие<Строка, Число|Булево|Ууид|Строка>, Сервисы: ВебApiСервер.СервисыУдаленияОбъектов)
    исп Транзакции.Начать()
    знч Идентификатор = новый Ууид(ПараметрыЗапроса["ID"] как Строка)
    знч ГрафикОтпусковПредприятияСсылка = ГрафикОтпусковПредприятия.ПолучитьСсылку(Идентификатор)
    знч Ключ = {"Ссылка": ГрафикОтпусковПредприятияСсылка}
    Сервисы.УдалитьКоллекцию(Ключ, Тип<ГрафикОтпусковПредприятия.Ссылка>)
;

@ВПроекте
метод ПолучитьДанныеJson(Ссылка: ГрафикОтпусковПредприятия.Ссылка?, Сервисы: ВебApiСервер.СервисыУпаковкиJson): Массив<Объект?>?
    если Ссылка == Неопределено 
        возврат Неопределено
    ;
    возврат ГруппаИзмененийВJson([Ссылка], Сервисы)["enterpriseVacationsSchedules"]
;

@ВПодсистеме
метод ГруппаИзмененийВJson(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): ЧитаемоеСоответствие<Строка, Массив<Объект?>>
    возврат {"enterpriseVacationsSchedules": ДанныеГрафиковОтпусковПредприятияВJson(Ссылки, Сервисы)}
;


метод ДанныеГрафиковОтпусковПредприятияВJson(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson, ДляПредставления: Булево = Ложь): Массив<Объект?>
    знч Данные: Массив<Объект?>
    для КлючИЗначение из ДанныеГрафиковОтпусковПредприятия(Ссылки)
        Данные.Добавить(ДанныеГрафиковОтпусковПредприятияВJson_V2_0(КлючИЗначение.Значение, Сервисы, ДляПредставления))
    ;
    возврат Данные
;

метод ДанныеГрафиковОтпусковПредприятия(ГрафикиОтпусковПредприятия: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>): ЧитаемоеСоответствие<ГрафикОтпусковПредприятия.Ссылка, ЧитаемоеСоответствие<Строка, Объект?>>

    знч ДанныеГрафиков: Соответствие<ГрафикОтпусковПредприятия.Ссылка, ЧитаемоеСоответствие<Строка, Объект?>>

    знч Запрос = Запрос{
        Выбрать
            Ссылка,
            Год,
            Состояние,
            Инициатор
        Из
            ГрафикОтпусковПредприятия
        Где
            Ссылка В (%ГрафикиОтпусковПредприятия)
    }    
    исп РезультатЗапроса = Запрос.Выполнить()
    для СтрокаРезультата из РезультатЗапроса
        ДанныеГрафиков.Вставить(
            СтрокаРезультата.Ссылка,
            МенеджерЗапросов.СтрокаРезультатаЗапросаВСоответствие(СтрокаРезультата, РезультатЗапроса)
        )    
    ;
    
    возврат ДанныеГрафиков        
;

метод ДанныеГрафиковОтпусковПредприятияВJson_V2_0(ДанныеОбъекта: ЧитаемоеСоответствие<Строка, Объект?>, Сервисы: ВебApiСервер.СервисыУпаковкиJson, ДляПредставления: Булево): ГрафикОтпусковПредприятия_2_0
    знч ДанныеJson = новый ГрафикОтпусковПредприятия_2_0(
        (ДанныеОбъекта["Ссылка"] как ГрафикОтпусковПредприятия.Ссылка).Ид.ВСтроку(),
        ДанныеОбъекта["Год"] как Число?,
        СборГрафиковОтпусков.СостояниеВJson(ДанныеОбъекта["Состояние"] как СостояниеГрафикаОтпусков?),
        ДанныеОбъекта["Инициатор"] != Неопределено ? 
            Сервисы.ПолучитьИдентификатор(ДанныеОбъекта["Инициатор"] как ФизическиеЛица.Ссылка?) : "",
        Сервисы.ПолучитьВерсию != Неопределено ? 
            Сервисы.ПолучитьВерсию(ДанныеОбъекта["Ссылка"] как ГрафикОтпусковПредприятия.Ссылка) : Неопределено
    )
    возврат ДанныеJson    
;

@ВПроекте
метод ВнешняяСсылка(Идентификатор: Строка): ВебApiСервер.ВнешняяСсылка
    возврат новый ВебApiСервер.ВнешняяСсылка(Идентификатор, (Ууид) -> ГрафикОтпусковПредприятия.ПолучитьСсылку(Ууид))
;

// Конец JSON