импорт ВебApi
импорт Компания
импорт ОбменДанными
импорт ОбщиеСтандартные
импорт ФизическиеЛица

//Область РазрешенияДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): Массив<РазрешениеДоступа>
    возврат ГрафикОтпусковПоставщикОграничений.ПолучитьСервис().ГрафикПодразделенияРазрешения()
;

//КонецОбласти


метод СформироватьПредставлениеДляОбсуждения(ГрафикОтпусковСтруктурнойЕдиницы: ГрафикОтпусковСтруктурнойЕдиницы.Ссылка): Строка
    возврат ГрафикОтпусковСтруктурнойЕдиницы.Представление()
;

@ВПодсистеме
структура КонтекстРегистрацииИзменений

    обз знч ТекущееЗначение: ГрафикОтпусковСтруктурнойЕдиницы.Объект
        знч ПредыдущееЗначение: ГрафикОтпусковСтруктурнойЕдиницы.Данные?
        знч ЭтоНовый: Булево = Ложь
    обз знч ПараметрыЗаписи: ГрафикОтпусковСтруктурнойЕдиницы.ПараметрыЗаписи
    обз знч РегистрацияВОбменеДанными: () -> Булево

    метод ТребуетсяРегистрацияИзменений(): Булево
        если ПараметрыЗаписи.ТребуетсяРегистрацияИзменений == Ложь
            возврат Ложь
        иначе если (ПараметрыЗаписи.ТребуетсяРегистрацияИзменений == Истина)
               или (ПараметрыЗаписи.ТребуетсяРегистрацияИзменений == Неопределено
                    и (ЭтоНовый или (ПредыдущееЗначение != Неопределено и ТекущееЗначение.Состояние != ПредыдущееЗначение.Состояние)))
            возврат РегистрацияВОбменеДанными()
        ;
        возврат Ложь
    ;

    @ВПодсистеме
    метод Записать()
        если ТребуетсяРегистрацияИзменений()
            знч Разделитель = ГрафикОтпусковРегистрацияИзменений.ПолучитьСервис().ГрафикОтпусковСтруктурнойЕдиницыРазделитель(ТекущееЗначение.ГрафикОтпусковПредприятия, ТекущееЗначение.Состояние)
            ОбменДанными.ЗарегистрироватьОтправляемыйДокумент(ТекущееЗначение.Ссылка, Истина)
            РегистрацияИзменений.ЗарегистрироватьИзменение(ТекущееЗначение.Ссылка, Разделитель)
        ;
    ;
;

@ВПодсистеме
метод УтвердитьПериодыОтпусков(ДанныеСбораГрафиковОтпусков: ЧитаемоеСоответствие<ГрафикОтпусковСтруктурнойЕдиницы.Ссылка, ЧитаемаяКоллекция<ПериодыОтпуска.Ссылка>>)
    для Данные из ДанныеСбораГрафиковОтпусков
        Данные.Значение.ДляКаждого(Период -> УтвердитьПериодОтпусков(Период))
    ;
;

@ВПодсистеме
метод УтвердитьПериодОтпусков(Ссылка: ПериодыОтпуска.Ссылка)
    исп Транзакции.Начать()
    знч Объект = Ссылка.ЗагрузитьОбъект(Истина)
    если не [СостояниеГрафикаОтпусков.Утверждено,
             СостояниеГрафикаОтпусков.Отказано].Содержит(Объект.Состояние)
        Объект.Состояние = СостояниеГрафикаОтпусков.Утверждено
        Объект.Записать()
    ;
;

@ВПодсистеме
метод ДанныеСбораГрафиковОтпусков(ГрафикиСсылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>):
        ЧитаемоеСоответствие<ГрафикОтпусковСтруктурнойЕдиницы.Ссылка, ЧитаемаяКоллекция<ПериодыОтпуска.Ссылка>>
    знч Графики: Массив<ГрафикОтпусковСтруктурнойЕдиницы.Ссылка>
    для График из ГрафикиСсылки
        Графики.Добавить(График как ГрафикОтпусковСтруктурнойЕдиницы.Ссылка)
    ;
    знч ПериодыОтпуска: Массив<ПериодыОтпуска.Ссылка>
    знч ДанныеПериодыГрафиков: Соответствие<ГрафикОтпусковСтруктурнойЕдиницы.Ссылка, ЧитаемаяКоллекция<ПериодыОтпуска.Ссылка>>
    знч ДатыПериодов: Множество<Дата>
    
    знч Запрос = Запрос{
        Выбрать
            ГрафикОтпусковСтруктурнойЕдиницы.Ссылка.ЗаменитьNull(Неопределено) Как Ссылка,
            ГрафикОтпусковСтруктурнойЕдиницы.ГрафикОтпусковПредприятия.Год.ЗаменитьNull(Неопределено) Как ГодГрафикаОтпусковПредприятия,
            ГрафикОтпусковСотрудника.ФизическоеЛицо.ЗаменитьNull(Неопределено) Как ФизическоеЛицо,
            ГрафикОтпусковСотрудника.ОтпускНеПланирует.ЗаменитьNull(Ложь) Как ОтпускНеПланирует,
            ПериодыЗапланированногоОтпуска.Ссылка.ЗаменитьNull(Неопределено) Как ПериодЗапланированногоОтпуска,
            ПериодыЗапланированногоОтпуска.Состояние.ЗаменитьNull(Неопределено) Как СостояниеЗапланированногоОтпуска,
            ПериодыЗапланированногоОтпуска.ДатаНачала.ЗаменитьNull(Неопределено) Как ДатаНачалаПериодаЗапланированногоОтпуска,           
            ПериодыЗапланированногоОтпуска.ДатаНачала.Год.ЗаменитьNull(Неопределено) Как ГодНачалаПериодаЗапланированногоОтпуска
        Из
            ГрафикОтпусковСтруктурнойЕдиницы КАК ГрафикОтпусковСтруктурнойЕдиницы
            Левое соединение ГрафикОтпусковСотрудника КАК ГрафикОтпусковСотрудника
                ПО ГрафикОтпусковСтруктурнойЕдиницы.Ссылка == ГрафикОтпусковСотрудника.ГрафикОтпусковПодразделения
			        Левое соединение ПериодыОтпуска КАК ПериодыЗапланированногоОтпуска
		                ПО ГрафикОтпусковСотрудника.ФизическоеЛицо == ПериодыЗапланированногоОтпуска.ФизическоеЛицо
		    Левое соединение ГрафикОтпусковПредприятия КАК ГрафикОтпусковПредприятияСсылка
                ПО ГрафикОтпусковСтруктурнойЕдиницы.ГрафикОтпусковПредприятия == ГрафикОтпусковПредприятияСсылка.Ссылка
        Где
            ГрафикОтпусковСтруктурнойЕдиницы.Ссылка В (%Графики)
        Упорядочить По
            ГрафикОтпусковСтруктурнойЕдиницы.Ссылка.ЗаменитьNull(Неопределено),
            ГрафикОтпусковСотрудника.ФизическоеЛицо.Представление.ЗаменитьNull(""),
            ПериодыЗапланированногоОтпуска.ДатаНачала.ЗаменитьNull(Неопределено)
        }
    исп ПривилегированныйРежим: КонтекстДоступа = КонтекстДоступа.Привилегированный()
    исп Результат = Запрос.Выполнить()
    ПривилегированныйРежим.Закрыть()
    пер ТекущийГрафик: ГрафикОтпусковСтруктурнойЕдиницы.Ссылка?
    пер ФизическоеЛицо: ФизическиеЛица.Ссылка?
    для РезультатСтрока из Результат
        если ТекущийГрафик != Неопределено и ТекущийГрафик != РезультатСтрока.Ссылка
            ДанныеПериодыГрафиков.Вставить(ТекущийГрафик, новый Массив<ПериодыОтпуска.Ссылка>(ПериодыОтпуска))
            ПериодыОтпуска.Очистить()
        ;
        если ФизическоеЛицо != Неопределено и ФизическоеЛицо != РезультатСтрока.ФизическоеЛицо
            ДатыПериодов.Очистить()
        ;
        ТекущийГрафик = РезультатСтрока.Ссылка
        ФизическоеЛицо = РезультатСтрока.ФизическоеЛицо
        если РезультатСтрока.СостояниеЗапланированногоОтпуска != Неопределено
           и не [СостояниеГрафикаОтпусков.Отказано].Содержит(РезультатСтрока.СостояниеЗапланированногоОтпуска)
           и РезультатСтрока.ГодГрафикаОтпусковПредприятия != Неопределено
           и РезультатСтрока.ГодНачалаПериодаЗапланированногоОтпуска == РезультатСтрока.ГодГрафикаОтпусковПредприятия
           и не РезультатСтрока.ОтпускНеПланирует
           и не ПериодыОтпуска.Содержит(РезультатСтрока.ПериодЗапланированногоОтпуска)
           и не ДатыПериодов.Содержит(РезультатСтрока.ДатаНачалаПериодаЗапланированногоОтпуска)
            ПериодыОтпуска.Добавить(РезультатСтрока.ПериодЗапланированногоОтпуска)
            ДатыПериодов.Добавить(РезультатСтрока.ДатаНачалаПериодаЗапланированногоОтпуска)
        ;
    ;
    если ТекущийГрафик != Неопределено
        ДанныеПериодыГрафиков.Вставить(ТекущийГрафик, новый Массив<ПериодыОтпуска.Ссылка>(ПериодыОтпуска))
    ;
    возврат ДанныеПериодыГрафиков
;

@ВПроекте
@НаСервере @НаКлиенте
структура ИзмененияВГрафикеОтпусковПодразделения
    обз знч Ссылка: ГрафикОтпусковСтруктурнойЕдиницы.Ссылка
    знч ЗаполнениеГрафикаЯвляетсяСкрытым: Булево | Авто = Авто
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ЗаписатьИзмененияВГрафикеОтпусковПодразделения(Изменения: ИзмененияВГрафикеОтпусковПодразделения)
    исп Транзакции.Начать()
    знч ГрафикОбъект = Изменения.Ссылка.ЗагрузитьОбъект(Истина)
    если Изменения.ЗаполнениеГрафикаЯвляетсяСкрытым != Авто
        ГрафикОбъект.ЗаполнениеГрафикаЯвляетсяСкрытым = Изменения.ЗаполнениеГрафикаЯвляетсяСкрытым как Булево
    ;
    ГрафикОбъект.Записать()
;


// JSON

структура ГруппаИзмененийJson
    обз знч divisionVacationsScheduleRequest: Массив<ГрафикОтпусковСтруктурнойЕдиницы_1_1>
;

@ВПодсистеме
метод ГруппаИзмененийВJson(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?): ЧитаемоеСоответствие<Строка, Массив<Объект?>>
    возврат {"divisionVacationsScheduleRequests": ДанныеСбораГрафиковОтпусковВJson(Ссылки, Сервисы, ВерсияФорматаОбмена)}
;

метод ДанныеСбораГрафиковОтпусковВJson(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?, ДляПредставления: Булево = Ложь): Массив<Объект?>
    знч Данные: Массив<Объект?>
    для КлючИЗначение из ДанныеСбораГрафиковОтпусков(Ссылки)
        если ВерсияФорматаОбмена == Неопределено
            Данные.Добавить(ДанныеСбораГрафиковОтпусковВJson_V1_1(КлючИЗначение.Ключ, КлючИЗначение.Значение, Сервисы, ДляПредставления))
        иначе если ВерсияФорматаОбмена >= Версия{3.0}
            Данные.Добавить(ДанныеСбораГрафиковОтпусковВJson_V3_0(КлючИЗначение.Ключ, КлючИЗначение.Значение, Сервисы, ДляПредставления))
        иначе если ВерсияФорматаОбмена >= Версия{2.0}
            Данные.Добавить(ДанныеСбораГрафиковОтпусковВJson_V2_0(КлючИЗначение.Ключ, КлючИЗначение.Значение, Сервисы, ДляПредставления))
        иначе если ВерсияФорматаОбмена >= Версия{1.2}
            Данные.Добавить(ДанныеСбораГрафиковОтпусковВJson_V1_2(КлючИЗначение.Ключ, КлючИЗначение.Значение, Сервисы, ДляПредставления))
        иначе если ВерсияФорматаОбмена >= Версия{1.1}
            Данные.Добавить(ДанныеСбораГрафиковОтпусковВJson_V1_1(КлючИЗначение.Ключ, КлючИЗначение.Значение, Сервисы, ДляПредставления))
        ;
    ;
    возврат Данные
;

метод ДанныеСбораГрафиковОтпусковВJson_V1_1(Ссылка: ГрафикОтпусковСтруктурнойЕдиницы.Ссылка, Периоды: ЧитаемаяКоллекция<ПериодыОтпуска.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson, ДляПредставления: Булево): ГрафикОтпусковСтруктурнойЕдиницы_1_1
    пер Год = ГодСоставленияГрафикаОтпусковСтруктурнойЕдиницы(Ссылка)
    пер Подразделение = МенеджерСущности.ЗначениеРеквизитаОбъекта(Ссылка, "СтруктурнаяЕдиница")
    пер Состояние = СборГрафиковОтпусков.СостояниеВJson(МенеджерСущности.ЗначениеРеквизитаОбъекта(Ссылка, "Состояние"))
    знч ДанныеВJson = новый ГрафикОтпусковСтруктурнойЕдиницы_1_1(
        Ссылка.Ид.ВСтроку(),
        Сервисы.ПолучитьИдентификатор(Подразделение как СтруктураПредприятия.Ссылка),
        Год,
        Состояние,
        ПериодыОтпуска.ДанныеПериодовВJson(Периоды, Сервисы),
        Сервисы.ПолучитьВерсию != Неопределено ?
            Сервисы.ПолучитьВерсию(Ссылка) : Неопределено
    )
    возврат ДанныеВJson
;

метод ДанныеСбораГрафиковОтпусковВJson_V1_2(Ссылка: ГрафикОтпусковСтруктурнойЕдиницы.Ссылка, Периоды: ЧитаемаяКоллекция<ПериодыОтпуска.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson, ДляПредставления: Булево): ГрафикОтпусковСтруктурнойЕдиницы_1_2
    пер Год = ГодСоставленияГрафикаОтпусковСтруктурнойЕдиницы(Ссылка)
    пер Подразделение = МенеджерСущности.ЗначениеРеквизитаОбъекта(Ссылка, "СтруктурнаяЕдиница")
    пер Ответственный = МенеджерСущности.ЗначениеРеквизитаОбъекта(Ссылка, "Ответственный")
    пер Состояние = СборГрафиковОтпусков.СостояниеВJson(МенеджерСущности.ЗначениеРеквизитаОбъекта(Ссылка, "Состояние"))
    знч ДанныеВJson = новый ГрафикОтпусковСтруктурнойЕдиницы_1_2(
        Ссылка.Ид.ВСтроку(),
        Сервисы.ПолучитьИдентификатор(Подразделение как СтруктураПредприятия.Ссылка),
        Год,
        Состояние,
        Ответственный == Неопределено ? Неопределено : Сервисы.ПолучитьИдентификатор(Ответственный как ФизическиеЛица.Ссылка),
        ПериодыОтпуска.ДанныеПериодовВJson(Периоды, Сервисы),
        Сервисы.ПолучитьВерсию != Неопределено ?
            Сервисы.ПолучитьВерсию(Ссылка) : Неопределено
    )
    возврат ДанныеВJson
;

метод ДанныеСбораГрафиковОтпусковВJson_V2_0(Ссылка: ГрафикОтпусковСтруктурнойЕдиницы.Ссылка, Периоды: ЧитаемаяКоллекция<ПериодыОтпуска.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson, ДляПредставления: Булево): ГрафикОтпусковСтруктурнойЕдиницы_2_0
    пер Год = ГодСоставленияГрафикаОтпусковСтруктурнойЕдиницы(Ссылка)
    пер Подразделение = МенеджерСущности.ЗначениеРеквизитаОбъекта(Ссылка, "СтруктурнаяЕдиница")
    пер Ответственный = МенеджерСущности.ЗначениеРеквизитаОбъекта(Ссылка, "Ответственный")
    пер ГрафикОтпусковПредприятия = МенеджерСущности.ЗначениеРеквизитаОбъекта(Ссылка, "ГрафикОтпусковПредприятия")
    пер Состояние = СборГрафиковОтпусков.СостояниеВJson(МенеджерСущности.ЗначениеРеквизитаОбъекта(Ссылка, "Состояние"))
    знч СервисРегистрацииИзменений = ГрафикОтпусковРегистрацияИзменений.ПолучитьСервис()
    знч ДанныеВJson = новый ГрафикОтпусковСтруктурнойЕдиницы_2_0(
        Ссылка.Ид.ВСтроку(),
        Сервисы.ПолучитьИдентификатор(Подразделение как СтруктураПредприятия.Ссылка),
        Год,
        Состояние,
        Ответственный == Неопределено ? Неопределено : Сервисы.ПолучитьИдентификатор(Ответственный как ФизическиеЛица.Ссылка),
        СервисРегистрацииИзменений.ГрафикОтпусковПредприятияИдентификатор(
            ГрафикОтпусковПредприятия как ГрафикОтпусковПредприятия.Ссылка,
            Сервисы
        ),
        ПериодыОтпуска.ДанныеПериодовВJson(Периоды, Сервисы),
        Сервисы.ПолучитьВерсию != Неопределено ?
            Сервисы.ПолучитьВерсию(Ссылка) : Неопределено
    )
    возврат ДанныеВJson
;

метод ДанныеСбораГрафиковОтпусковВJson_V3_0(Ссылка: ГрафикОтпусковСтруктурнойЕдиницы.Ссылка, Периоды: ЧитаемаяКоллекция<ПериодыОтпуска.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson, ДляПредставления: Булево): ГрафикОтпусковСтруктурнойЕдиницы_3_0
    пер Год = ГодСоставленияГрафикаОтпусковСтруктурнойЕдиницы(Ссылка)
    пер Подразделение = МенеджерСущности.ЗначениеРеквизитаОбъекта(Ссылка, "СтруктурнаяЕдиница")
    пер Ответственный = МенеджерСущности.ЗначениеРеквизитаОбъекта(Ссылка, "Ответственный")
    пер ГрафикОтпусковПредприятия = МенеджерСущности.ЗначениеРеквизитаОбъекта(Ссылка, "ГрафикОтпусковПредприятия")
    пер Состояние = СборГрафиковОтпусков.СостояниеВJson(МенеджерСущности.ЗначениеРеквизитаОбъекта(Ссылка, "Состояние"))
    пер ЗаполнениеГрафикаЯвляетсяСкрытым = МенеджерСущности.ЗначениеРеквизитаОбъекта(Ссылка, "ЗаполнениеГрафикаЯвляетсяСкрытым")
    знч СервисРегистрацииИзменений = ГрафикОтпусковРегистрацияИзменений.ПолучитьСервис()
    знч ДанныеВJson = новый ГрафикОтпусковСтруктурнойЕдиницы_3_0(
        Ид = Ссылка.Ид.ВСтроку(),
        СтруктурнаяЕдиница = Сервисы.ПолучитьИдентификатор(Подразделение как СтруктураПредприятия.Ссылка),
        Год = Год,
        Состояние = Состояние,
        Ответственный = Ответственный == Неопределено ? Неопределено : Сервисы.ПолучитьИдентификатор(Ответственный как ФизическиеЛица.Ссылка),
        ЗаполнениеГрафикаЯвляетсяСкрытым = ЗаполнениеГрафикаЯвляетсяСкрытым,
        ГрафикОтпусковПредприятия = СервисРегистрацииИзменений.ГрафикОтпусковПредприятияИдентификатор(
            ГрафикОтпусковПредприятия как ГрафикОтпусковПредприятия.Ссылка,
            Сервисы),
        ПериодыОтпуска = ПериодыОтпуска.ДанныеПериодовВJson(Периоды, Сервисы),
        Версия = Сервисы.ПолучитьВерсию != Неопределено ? Сервисы.ПолучитьВерсию(Ссылка) : Неопределено)
    возврат ДанныеВJson
;

метод ГодСоставленияГрафикаОтпусковСтруктурнойЕдиницы(ГрафикОтпусковСтруктурнойЕдиницы: ГрафикОтпусковСтруктурнойЕдиницы.Ссылка): Число
    возврат МенеджерСущности.ЗначениеРеквизитаОбъекта(
        МенеджерСущности.ЗначениеРеквизитаОбъекта(ГрафикОтпусковСтруктурнойЕдиницы, "ГрафикОтпусковПредприятия"),
        "Год")
;

@ВПроекте
метод ПолучитьДанныеJson(Ссылка: ГрафикОтпусковСтруктурнойЕдиницы.Ссылка?, Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?): Массив<Объект?>?
    если Ссылка == Неопределено
        возврат Неопределено
    ;
    возврат ГруппаИзмененийВJson([Ссылка], Сервисы, ВерсияФорматаОбмена)["divisionVacationsScheduleRequests"]
;

структура ГрафикОтпусковСтруктурнойЕдиницы_1_1
    @JsonСвойство("ID")
    обз знч Ид: Строка?
    @JsonСвойство("divisionID")
    обз знч СтруктурнаяЕдиница: Строка
    @JsonСвойство("year")
    обз знч Год: Число?
    @JsonСвойство("status")
    обз знч Состояние: СборГрафиковОтпусков.СостояниеГрафикаОтпусковJson?
    @JsonСвойство("periods")
    обз знч ПериодыОтпуска: Массив<ПериодыОтпуска.ПериодОтпуска>
    @JsonСвойство("version")
    обз знч Версия: Число?
;

@ВПроекте
структура ГрафикОтпусковСтруктурнойЕдиницы_1_2
    @JsonСвойство("ID")
    обз знч Ид: Строка?
    @JsonСвойство("divisionID")
    обз знч СтруктурнаяЕдиница: Строка
    @JsonСвойство("year")
    обз знч Год: Число?
    @JsonСвойство("status")
    обз знч Состояние: СборГрафиковОтпусков.СостояниеГрафикаОтпусковJson?
    @JsonСвойство("responsibleID")
    обз знч Ответственный: Строка?
    @JsonСвойство("periods")
    обз знч ПериодыОтпуска: Массив<ПериодыОтпуска.ПериодОтпуска>
    @JsonСвойство("version")
    обз знч Версия: Число?
;

@ВПроекте
структура ГрафикОтпусковСтруктурнойЕдиницы_2_0
    @JsonСвойство("ID")
    обз знч Ид: Строка?
    @JsonСвойство("divisionID")
    обз знч СтруктурнаяЕдиница: Строка
    @JsonСвойство("year")
    обз знч Год: Число?
    @JsonСвойство("status")
    обз знч Состояние: СборГрафиковОтпусков.СостояниеГрафикаОтпусковJson?
    @JsonСвойство("responsibleID")
    обз знч Ответственный: Строка?
    @JsonСвойство("enterpriseVacationsSchedule")
    обз знч ГрафикОтпусковПредприятия: Строка
    @JsonСвойство("periods")
    обз знч ПериодыОтпуска: Массив<ПериодыОтпуска.ПериодОтпуска>
    @JsonСвойство("version")
    обз знч Версия: Число?
;


@ВПроекте
структура ГрафикОтпусковСтруктурнойЕдиницы_3_0
    @JsonСвойство("ID")
    обз знч Ид: Строка?
    @JsonСвойство("divisionID")
    обз знч СтруктурнаяЕдиница: Строка
    @JsonСвойство("year")
    обз знч Год: Число?
    @JsonСвойство("status")
    обз знч Состояние: СборГрафиковОтпусков.СостояниеГрафикаОтпусковJson?
    @JsonСвойство("responsibleID")
    обз знч Ответственный: Строка?
    @JsonСвойство("scheduleManagementIsPrivate")
    обз знч ЗаполнениеГрафикаЯвляетсяСкрытым: Булево
    @JsonСвойство("enterpriseVacationsSchedule")
    обз знч ГрафикОтпусковПредприятия: Строка
    @JsonСвойство("periods")
    обз знч ПериодыОтпуска: Массив<ПериодыОтпуска.ПериодОтпуска>
    @JsonСвойство("version")
    обз знч Версия: Число?

    @ИменованныеПараметры
    конструктор
;


@ВПодсистеме
метод ТипДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    если ВерсияФорматаОбмена == Неопределено или ВерсияФорматаОбмена < Версия{2.0}
        выбросить новый ИсключениеВыполнения("Неверный формат")
    ;

    если ВерсияФорматаОбмена >= Версия{3.0}
        возврат Тип<ГрафикОтпусковСтруктурнойЕдиницы_3_0>
    иначе если ВерсияФорматаОбмена >= Версия{2.0}
        возврат Тип<ГрафикОтпусковСтруктурнойЕдиницы_2_0>
    ;
;

@ВПодсистеме
метод ТипКоллекцииДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    если ВерсияФорматаОбмена == Неопределено или ВерсияФорматаОбмена < Версия{2.0}
        выбросить новый ИсключениеВыполнения("Неверный формат")
    ;

    если ВерсияФорматаОбмена >= Версия{3.0}
        возврат Тип<Массив<ГрафикОтпусковСтруктурнойЕдиницы_3_0>>
    иначе если ВерсияФорматаОбмена >= Версия{2.0}
        возврат Тип<Массив<ГрафикОтпусковСтруктурнойЕдиницы_2_0>>
    ;
;

@ВПодсистеме
метод ЗагрузитьОбъектИзJson(ДанныеJson: ГрафикОтпусковСтруктурнойЕдиницы_2_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)

    исп Транзакции.Начать()

    пер ГрафикОтпусковСтруктурнойЕдиницыСсылка = ОбменДанными.ИдентификаторыЛокальныхОбъектов([ДанныеJson.Ид])
                        .ПолучитьИлиУмолчание(ДанныеJson.Ид) как ГрафикОтпусковСтруктурнойЕдиницы.Ссылка?
    пер ГрафикОтпусковСтруктурнойЕдиницы: ГрафикОтпусковСтруктурнойЕдиницы.Объект?
    если ГрафикОтпусковСтруктурнойЕдиницыСсылка == Неопределено
        ГрафикОтпусковСтруктурнойЕдиницы = Сервисы.ПрочитатьОбъект(
            ДанныеJson.Ид,
            &ГрафикОтпусковСтруктурнойЕдиницы.Объект.новый(Ууид),
            Тип<ГрафикОтпусковСтруктурнойЕдиницы.Ссылка>) как ГрафикОтпусковСтруктурнойЕдиницы.Объект
    иначе
        ГрафикОтпусковСтруктурнойЕдиницы = ГрафикОтпусковСтруктурнойЕдиницыСсылка.ЗагрузитьОбъект()
    ;
    ГрафикОтпусковСтруктурнойЕдиницы.СтруктурнаяЕдиница =
        Сервисы.ПолучитьСсылку(СтруктураПредприятия.ВнешняяСсылка(ДанныеJson.СтруктурнаяЕдиница)) как СтруктураПредприятия.Ссылка
    если ДанныеJson.Состояние != Неопределено
        ГрафикОтпусковСтруктурнойЕдиницы.Состояние = СборГрафиковОтпусков.СостояниеИзJson(ДанныеJson.Состояние)
    иначе
        ГрафикОтпусковСтруктурнойЕдиницы.Состояние = СостояниеГрафикаОтпусков.Черновик
    ;
    если ДанныеJson.Ответственный != Неопределено
        ГрафикОтпусковСтруктурнойЕдиницы.Ответственный =
            Сервисы.ПолучитьСсылку(ФизическиеЛица.ВнешняяСсылка(ДанныеJson.Ответственный)) как ФизическиеЛица.Ссылка
    ;

    УдалитьСвязанныеПериоды(ГрафикОтпусковСтруктурнойЕдиницы.Ссылка)
    для Период из ДанныеJson.ПериодыОтпуска
        ПериодыОтпуска.ЗагрузитьОбъектИзJson(Период, Сервисы)
    ;
    ГрафикОтпусковСтруктурнойЕдиницы.ГрафикОтпусковПредприятия =
        Сервисы.ПолучитьСсылку(ГрафикОтпусковПредприятия.ВнешняяСсылка(ДанныеJson.ГрафикОтпусковПредприятия)) как ГрафикОтпусковПредприятия.Ссылка

    Сервисы.ЗаписатьОбъект(
        новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(ГрафикОтпусковСтруктурнойЕдиницы, ДанныеJson.Ид),
        Сервисы.ИнструментыМенеджераОбъекта
    )
    если ГрафикОтпусковСтруктурнойЕдиницы.Состояние == СостояниеГрафикаОтпусков.Черновик
         и НастройкиГрафиковОтпусков.НастройкиГрафиковОтпусков().СостояниеГрафикаОтпусковСтруктурнойЕдиницыПоУмолчанию != СостояниеГрафикаОтпусков.Черновик
        СборГрафиковОтпусков.НачатьКампаниюПодразделения(
            ГрафикОтпусковСтруктурнойЕдиницы.ГрафикОтпусковПредприятия,
            ГрафикОтпусковСтруктурнойЕдиницы.Ссылка,
            ГрафикОтпусковСтруктурнойЕдиницы.СтруктурнаяЕдиница
        )
    ;
;

@ВПодсистеме
метод ЗагрузитьОбъектИзJson(ДанныеJson: ГрафикОтпусковСтруктурнойЕдиницы_3_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)

    исп Транзакции.Начать()

    пер ГрафикОтпусковСтруктурнойЕдиницыСсылка = ОбменДанными.ИдентификаторыЛокальныхОбъектов([ДанныеJson.Ид])
                        .ПолучитьИлиУмолчание(ДанныеJson.Ид) как ГрафикОтпусковСтруктурнойЕдиницы.Ссылка?
    пер ГрафикОтпусковСтруктурнойЕдиницы: ГрафикОтпусковСтруктурнойЕдиницы.Объект?
    если ГрафикОтпусковСтруктурнойЕдиницыСсылка == Неопределено
        ГрафикОтпусковСтруктурнойЕдиницы = Сервисы.ПрочитатьОбъект(
            ДанныеJson.Ид,
            &ГрафикОтпусковСтруктурнойЕдиницы.Объект.новый(Ууид),
            Тип<ГрафикОтпусковСтруктурнойЕдиницы.Ссылка>) как ГрафикОтпусковСтруктурнойЕдиницы.Объект
    иначе
        ГрафикОтпусковСтруктурнойЕдиницы = ГрафикОтпусковСтруктурнойЕдиницыСсылка.ЗагрузитьОбъект()
    ;
    ГрафикОтпусковСтруктурнойЕдиницы.СтруктурнаяЕдиница =
        Сервисы.ПолучитьСсылку(СтруктураПредприятия.ВнешняяСсылка(ДанныеJson.СтруктурнаяЕдиница)) как СтруктураПредприятия.Ссылка
    если ДанныеJson.Состояние != Неопределено
        ГрафикОтпусковСтруктурнойЕдиницы.Состояние = СборГрафиковОтпусков.СостояниеИзJson(ДанныеJson.Состояние)
    иначе
        ГрафикОтпусковСтруктурнойЕдиницы.Состояние = СостояниеГрафикаОтпусков.Черновик
    ;
    если ДанныеJson.Ответственный != Неопределено
        ГрафикОтпусковСтруктурнойЕдиницы.Ответственный =
            Сервисы.ПолучитьСсылку(ФизическиеЛица.ВнешняяСсылка(ДанныеJson.Ответственный)) как ФизическиеЛица.Ссылка
    ;

    ГрафикОтпусковСтруктурнойЕдиницы.ГрафикОтпусковПредприятия =
        Сервисы.ПолучитьСсылку(ГрафикОтпусковПредприятия.ВнешняяСсылка(ДанныеJson.ГрафикОтпусковПредприятия)) как ГрафикОтпусковПредприятия.Ссылка

    ГрафикОтпусковСтруктурнойЕдиницы.ЗаполнениеГрафикаЯвляетсяСкрытым = ДанныеJson.ЗаполнениеГрафикаЯвляетсяСкрытым

    Сервисы.ЗаписатьОбъект(
        новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(ГрафикОтпусковСтруктурнойЕдиницы, ДанныеJson.Ид),
        Сервисы.ИнструментыМенеджераОбъекта
    )
    
    ГрафикОтпусковОбработкаИзменений.ПолучитьСервис().ГрафикОтпусковЗагрузитьПериодыОтпуска(
        Год = ДанныеJson.Год, 
        ПериодыОтпуска = ДанныеJson.ПериодыОтпуска,
        Сервисы = Сервисы
    )
    
    если ГрафикОтпусковСтруктурнойЕдиницы.Состояние == СостояниеГрафикаОтпусков.Черновик
         и НастройкиГрафиковОтпусков.НастройкиГрафиковОтпусков().СостояниеГрафикаОтпусковСтруктурнойЕдиницыПоУмолчанию != СостояниеГрафикаОтпусков.Черновик
        СборГрафиковОтпусков.НачатьКампаниюПодразделения(
            ГрафикОтпусковСтруктурнойЕдиницы.ГрафикОтпусковПредприятия,
            ГрафикОтпусковСтруктурнойЕдиницы.Ссылка,
            ГрафикОтпусковСтруктурнойЕдиницы.СтруктурнаяЕдиница
        )
    ;
;

@ВПроекте
метод УдалитьСвязанныеПериоды(ГрафикОтпусковСтруктурнойЕдиницы: ГрафикОтпусковСтруктурнойЕдиницы.Ссылка?)
    если ГрафикОтпусковСтруктурнойЕдиницы != Неопределено
        знч Запрос = Запрос{
            Выбрать
                ГрафикОтпусковСотрудника.ФизическоеЛицо КАК ФизическоеЛицо,
		        ГрафикОтпусковПредприятияСсылка.Год КАК Год
            Поместить
                ВТГрафикОтпусковСотрудника
            Из
                ГрафикОтпусковСотрудника КАК ГрафикОтпусковСотрудника
                Внутреннее соединение ГрафикОтпусковСтруктурнойЕдиницы КАК ГрафикОтпусковСтруктурнойЕдиницы
                    Внутреннее соединение ГрафикОтпусковПредприятия КАК ГрафикОтпусковПредприятияСсылка
                        ПО ГрафикОтпусковСтруктурнойЕдиницы.ГрафикОтпусковПредприятия == ГрафикОтпусковПредприятияСсылка.Ссылка
                    ПО ГрафикОтпусковСотрудника.ГрафикОтпусковПодразделения == ГрафикОтпусковСтруктурнойЕдиницы.Ссылка
            Где
                ГрафикОтпусковПодразделения == %ГрафикОтпусковСтруктурнойЕдиницы
            ;
            Выбрать
                ПериодыОтпуска.Ссылка Как ПериодОтпуска
            Из
                ВТГрафикОтпусковСотрудника как ВТГрафикОтпусковСотрудника
                Внутреннее Соединение ПериодыОтпуска как ПериодыОтпуска
                    По ВТГрафикОтпусковСотрудника.ФизическоеЛицо == ПериодыОтпуска.ФизическоеЛицо
                    И ВТГрафикОтпусковСотрудника.Год == ПериодыОтпуска.ДатаНачала.Год
        }
        исп ПривилегированныйРежим: КонтекстДоступа = КонтекстДоступа.Привилегированный()
        исп РезультатЗапроса = Запрос.Выполнить()
        ПривилегированныйРежим.Закрыть()
        для СтрокаРезультата из РезультатЗапроса
            СтрокаРезультата.ПериодОтпуска.ЗагрузитьОбъект().Удалить()
        ;
    ;
;

@ВПодсистеме
метод УдалитьОбъекты(ПараметрыЗапроса: ЧитаемоеСоответствие<Строка, Число|Булево|Ууид|Строка>, Сервисы: ВебApiСервер.СервисыУдаленияОбъектов)
    исп Транзакции.Начать()
    знч Идентификатор = новый Ууид(ПараметрыЗапроса["ID"] как Строка)
    знч ГрафикОтпусковСтруктурнойЕдиницыСсылка = ГрафикОтпусковСтруктурнойЕдиницы.ПолучитьСсылку(Идентификатор)
    знч Ключ = {"Ссылка": ГрафикОтпусковСтруктурнойЕдиницыСсылка}
    Сервисы.УдалитьКоллекцию(Ключ, Тип<ГрафикОтпусковСтруктурнойЕдиницы.Ссылка>)
;

@ВПроекте
метод ТипОбъектаJson(): Строка
    возврат "divisionVacationsScheduleRequest"
;

// Конец JSON