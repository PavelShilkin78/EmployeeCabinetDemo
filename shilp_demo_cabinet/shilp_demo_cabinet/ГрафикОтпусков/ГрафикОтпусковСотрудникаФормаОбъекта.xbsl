импорт ФизическиеЛица

@Обработчик
метод ПослеСоздания()
    
;

@Обработчик
метод ПослеЧтения()
    УстановитьФильтрСписка()  
;

//Область ОбработчикиКоманд

@ВПроекте
метод ЗаписатьПриНажатии(Источник: Кнопка, Событие: СобытиеПриНажатии)
    если не ПроверитьЗаполнение()
        возврат
    ;   
    Записать()   
    этот.Закрыть(Истина)
;

метод УдалитьПриНажатии(Источник: Кнопка, Событие: СобытиеПриНажатии)
    Удалить()
;

//КонецОбласти

//Область СлужебныеПроцедурыИФункции

метод ПриИзмененииФизическогоЛица(Источник: ПолеВвода<ФизическиеЛица.Ссылка?>, Событие: СобытиеПриИзменении<неизвестно>)
    УстановитьФильтрСписка()   
;

метод ПериодыОтпусковИсточник(): ДинамическийСписок
    возврат Компоненты.ТабличнаяЧасть.Источник
;

метод УстановитьФильтрСписка()

    знч ИсточникДанныхФильтр = ПериодыОтпусковИсточник().Фильтр
    
    пер ЭлементФильтра: неизвестно
    ЭлементФильтра = ИсточникДанныхФильтр.Элементы[0] как ЭлементФильтра
    ЭлементФильтра.Значение = Объект.ФизическоеЛицо
    ЭлементФильтра.Использовать = Истина
;


метод ПроверитьЗаполнение(): Булево
    пер РезультатПроверки = Истина
    РезультатПроверки = ПроверитьЗаполнениеГрафикОтпусковПодразделения() и РезультатПроверки
    РезультатПроверки = ПроверитьЗаполнениеФизическоеЛицо() и РезультатПроверки
    возврат РезультатПроверки
;

метод ПроверитьЗаполнениеГрафикОтпусковПодразделения(): Булево
    пер РезультатПроверки = Истина
    если Объект.ГрафикОтпусковПодразделения == Неопределено
        РезультатПроверки = Ложь
        СообщениеОшибкаЗаполненияГрафикаПодразделения = "Не заполнен график отпусков подразделения"
    ;
    возврат РезультатПроверки
;

метод ПроверитьЗаполнениеФизическоеЛицо(): Булево
    пер РезультатПроверки = Истина
    если Объект.ФизическоеЛицо == Неопределено
        РезультатПроверки = Ложь
        СообщениеОшибкаЗаполненияФизическоеЛицо = "Не заполнено физическое лицо"
    ;
    возврат РезультатПроверки
;

//КонецОбласти