импорт Компания

@Обработчик
метод ПослеСоздания()
    ОбновитьСписокДоступныхПодразделений()
;

метод КоллекцияИсточника(): Массив<УчетВремени.ДанныеНастройкиИсключенийУчетаВремени>
    возврат этот.СписокВладелец.Источник.Данные
;

метод ОбновитьСписокДоступныхПодразделений()
    ДоступныеЗначенияПодразделений = СписокДоступныхДляИсключенияПодразделений(КомпонентВладелец.СотрудникиФиксируютРабочееВремя)
;

метод ПриИзмененииПодразделения(Источник: ПолеВвода<СтруктураПредприятия.Ссылка?>, Событие: СобытиеПриИзменении<СтруктураПредприятия.Ссылка?>)
    ДобавитьИсключениеУчетаВремени(ДанныеСтроки.Подразделение, ДанныеСтроки.ФиксацияРабочегоВремени) 
    ДанныеСтроки.Добавлено = Ложь
    ИзмененаНастройкаФиксацииРабочегоВремени.Оповестить()
    КомпонентВладелец.ОбновитьДанные()
    ОбновитьСписокДоступныхПодразделений()
;

метод КартинкаУдалитьПриНажатии(Источник: Картинка, Событие: СобытиеПриНажатии)
    ДанныеСтроки.Удалено = Истина
    если ДанныеСтроки.Подразделение != Неопределено
        УдалитьИсключениеУчетаВремени(ДанныеСтроки.Подразделение!) 
        ИзмененаНастройкаФиксацииРабочегоВремени.Оповестить()
    ;
    если ДанныеСтроки.Добавлено и ДанныеСтроки.Удалено 
        пер КоллекцияДанных = КоллекцияИсточника()
        КоллекцияДанных.Удалить(ДанныеСтроки)
    иначе
        КомпонентВладелец.ОбновитьДанные()
        ОбновитьСписокДоступныхПодразделений()
    ;
;

@НаСервере @ДоступноСКлиента
статический метод ДобавитьИсключениеУчетаВремени(Подразделение: СтруктураПредприятия.Ссылка, ФиксацияРабочегоВремениПоУмолчаниюВключена: Булево)
    пер НаборЗаписей: НастройкиУчетаВремени.НаборЗаписей
        НаборЗаписей.Фильтр.Установить(
            Подразделение = Подразделение
        )    
        НаборЗаписей.ДобавитьЗапись(
            Подразделение = Подразделение,
            ФиксацияРабочегоВремени = ФиксацияРабочегоВремениПоУмолчаниюВключена    
        )
        НаборЗаписей.Записать(Истина)    
;

@НаСервере @ДоступноСКлиента
статический метод УдалитьИсключениеУчетаВремени(Подразделение: СтруктураПредприятия.Ссылка)
    пер НаборЗаписей: НастройкиУчетаВремени.НаборЗаписей
        НаборЗаписей.Фильтр.Установить(
            Подразделение = Подразделение
        )    
        НаборЗаписей.Прочитать()
        НаборЗаписей.Очистить()
        НаборЗаписей.Записать(Истина)    
;

@НаСервере @ДоступноСКлиента
статический метод СписокДоступныхДляИсключенияПодразделений(ФиксацияРабочегоВремениПоУмолчаниюВключена: Булево): Массив<ЭлементСпискаЗначений<СтруктураПредприятия.Ссылка?>>
    пер СписокДоступныхПодразделений: Массив<ЭлементСпискаЗначений<СтруктураПредприятия.Ссылка?>>
    знч Запрос = Запрос{
        Выбрать 
            СтруктураПредприятия.Ссылка Как Подразделение, 
            СтруктураПредприятия.Ссылка.Представление.ЗаменитьNull("") Как ПодразделениеПредставление
        Из 
            СтруктураПредприятия Как СтруктураПредприятия
            ЛЕВОЕ СОЕДИНЕНИЕ НастройкиУчетаВремени Как НастройкиУчетаВремени
                ПО СтруктураПредприятия.Ссылка == НастройкиУчетаВремени.Подразделение
                И Подразделение != Неопределено
                И ФиксацияРабочегоВремени != Неопределено
                И ФиксацияРабочегоВремени != %ФиксацияРабочегоВремениПоУмолчаниюВключена
        Где
            НастройкиУчетаВремени.Подразделение Есть Null            
        Упорядочить по
            СтруктураПредприятия.Ссылка.Представление
        }
    исп Результат = Запрос.Выполнить() 
    для РезультатСтрока из Результат
        пер СтрокаСписка = новый ЭлементСпискаЗначений<СтруктураПредприятия.Ссылка?>()
        СтрокаСписка.Значение = РезультатСтрока.Подразделение
        СтрокаСписка.Представление = РезультатСтрока.ПодразделениеПредставление
        СписокДоступныхПодразделений.Добавить(СтрокаСписка)
    ;
    возврат СписокДоступныхПодразделений 
;