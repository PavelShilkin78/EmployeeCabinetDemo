импорт СтандартноеПриложение
импорт ЛичныеКабинетыПользователей
импорт Компания
импорт ИнтерфейсныеКомпонентыСтандартные
импорт ОбщиеСтандартные

// Контракт ОсновнойИнтерфейсПоставщик
@ВПроекте
@Реализация
метод РазделыПриложения(): ЧитаемаяКоллекция<ОсновнойИнтерфейс.ОписаниеРаздела>
    знч Разделы: Массив<ОсновнойИнтерфейс.ОписаниеРаздела>
    если РазделУчетВремениДоступен()
        Разделы.Добавить(ОписаниеРазделаУчетВремени())
    ;
    возврат Разделы
;

@ВПроекте
@Реализация
метод Виджеты(): ЧитаемаяКоллекция<ОсновнойИнтерфейс.ОписаниеВиджета>
    если РазделУчетВремениДоступен()
        возврат [ОписаниеВиджетаУчетВремениПлеер()]
    иначе
        возврат []
    ;
;

@ВПроекте
@Реализация
метод КомандыВсеФункции(): ЧитаемаяКоллекция<ОсновнойИнтерфейс.ОписательКомандыВсеФункции>
    возврат [
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Представление = "Учет рабочего времени",
            СоздательФормыСписка = метод()-> возврат новый УчетРабочегоВремени.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый УчетРабочегоВремени.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Представление = "Настройки учета времени",
            СоздательФормыСписка = метод()-> возврат новый НастройкиУчетаВремени.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый НастройкиУчетаВремени.АвтоматическаяФормаОбъекта();
            )
    ]
;

@ВПроекте
@Реализация
метод ДополнительныеКоманды(): ЧитаемыйМассив<Команда>
    возврат []
;

@ВПроекте
@Реализация
метод КомандыПанелиДействий(): ЧитаемыйМассив<Команда>
    возврат []
;

@ВПроекте
@Реализация
метод ДополнительныеКомандыПанелиГлавное(): ЧитаемыйМассив<Команда>
    возврат []
;
// Конец ОсновнойИнтерфейсПоставщик

@НаКлиенте
метод РазделУчетВремениДоступен(): Булево        
    возврат     ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо != Неопределено и
                УчетВремени.ПараметрыСеанса().ФиксацияРабочегоВремени и
                Компания.ПараметрыСеанса().ТекущийПользовательСотрудник
;

@НаКлиенте
метод ОписаниеРазделаУчетВремени(): ОсновнойИнтерфейс.ОписаниеРаздела
    возврат новый ОсновнойИнтерфейс.ОписаниеРаздела(
        Ид = УчетВремени.ИД_РАЗДЕЛА_УЧЕТ_ВРЕМЕНИ,
        Имя = УчетВремени.УчетВремениВиджетЗаголовок(), //"Учет времени",
        Пиктограмма = НавигацияУчетВремени.Изображение,
        ЦветПиктограммы = БиблиотекаЦветов.ВидыЦвета.Синий,
        НавигационнаяКомандаРаздела = НавигацияУчетВремени,
        ШиринаДляПанелиНавигации = 144)
;

@НаКлиенте
метод ОписаниеВиджетаУчетВремениПлеер(): ОсновнойИнтерфейс.ОписаниеВиджета
    знч Сегодня = МенеджерДат.ФорматМомента(МенеджерДат.ТекущаяДатаВремя(), "д ММММ")
    возврат новый ОсновнойИнтерфейс.ОписаниеВиджета(
        Ид = УчетВремени.ИД_ВИДЖЕТА_УЧЕТ_ВРЕМЕНИ_ПЛЕЕР,
        ИдРаздела = УчетВремени.ИД_РАЗДЕЛА_УЧЕТ_ВРЕМЕНИ,
        Имя = "Рабочий день %Сегодня",
        Компонент = новый УчетВремениПлеерСодержимое())
;
