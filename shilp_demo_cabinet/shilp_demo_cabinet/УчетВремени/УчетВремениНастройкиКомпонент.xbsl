импорт ИнтерфейсныеКомпонентыСтандартные

@Обработчик
метод ПослеСоздания()
    СотрудникиФиксируютРабочееВремя = ВызовСервера.ФиксацияРабочегоВремениПоУмолчаниюВключена()  
    ОбновитьДанные()
;

метод СписокПослеСозданияСтроки(Источник: Список<ИсточникДанныхМассив<УчетВремени.ДанныеНастройкиИсключенийУчетаВремени>>, Событие: СобытиеСДанными<СтрокаСписка<УчетВремени.ДанныеНастройкиИсключенийУчетаВремени>>)
    пер КомпонентСтроки: УчетВремениНастройкиИсключенийСтрока = Событие.Данные как УчетВремениНастройкиИсключенийСтрока
    КомпонентСтроки.СписокВладелец = Источник как ПроизвольныйСписок<ИсточникДанныхМассив<УчетВремени.ДанныеНастройкиИсключенийУчетаВремени>>
    КомпонентСтроки.КомпонентВладелец = этот
;

метод ФиксироватьРабочееВремяПриИзмененииЗначения(Источник: ФлажокРасширенный, Событие: СобытиеПриИзменении<Булево?>)
    ЗаписатьНастройкиУчетаВремени()
;

метод ЗаписатьНастройкиУчетаВремени()
    ЗаписатьНастройкуУчетаВремени(СотрудникиФиксируютРабочееВремя)
    ОбновитьДанные()
    ИзмененаНастройкаФиксацииРабочегоВремени.Оповестить()
;

@ВПодсистеме
метод КоллекцияИсточника(): Массив<УчетВремени.ДанныеНастройкиИсключенийУчетаВремени>
    возврат Компоненты.Список.Источник.Данные
;

@ВПодсистеме
метод ОбновитьДанные()
    ЗаполнитьДанные(ПрочитатьДанные(СотрудникиФиксируютРабочееВремя))
;

метод ЗаполнитьДанные(Данные: ЧитаемыйМассив<УчетВремени.ДанныеНастройкиИсключенийУчетаВремени>): Булево
    пер КоллекцияДанных = КоллекцияИсточника()
    КоллекцияДанных.Очистить()
    КоллекцияДанных.ДобавитьВсе(Данные) 
    возврат не Данные.Пусто()
;

метод ДобавитьПриНажатии(Источник: Кнопка, Событие: СобытиеПриНажатии)
    пер КоллекцияИсточника = КоллекцияИсточника()
    пер КомпонентДанных = новый УчетВремени.ДанныеНастройкиИсключенийУчетаВремени()
    КомпонентДанных.ФиксацияРабочегоВремени = не СотрудникиФиксируютРабочееВремя
    КомпонентДанных.Добавлено = Истина
    КоллекцияИсточника.Вставить(0, КомпонентДанных)
;

@НаСервере @ДоступноСКлиента
статический метод ЗаписатьНастройкуУчетаВремени(ФиксацияРабочегоВремениПоУмолчаниюВключена: Булево)
    пер НаборЗаписей: НастройкиУчетаВремени.НаборЗаписей
        НаборЗаписей.Фильтр.Установить(
            Подразделение = Неопределено
        )    
        НаборЗаписей.ДобавитьЗапись(
            Подразделение = Неопределено,
            ФиксацияРабочегоВремени = ФиксацияРабочегоВремениПоУмолчаниюВключена    
        )
        НаборЗаписей.Записать(Истина)    
;

@НаСервере @ДоступноСКлиента
статический метод ПрочитатьДанные(ФиксацияРабочегоВремениПоУмолчаниюВключена: Булево): Массив<УчетВремени.ДанныеНастройкиИсключенийУчетаВремени> 
    пер КоллекцияДанных = новый Массив<УчетВремени.ДанныеНастройкиИсключенийУчетаВремени>() 
    знч Запрос = Запрос{
        Выбрать 
            Подразделение Как Подразделение,
            Подразделение.Представление.ЗаменитьNull("") Как ПодразделениеПредставление,
            ФиксацияРабочегоВремени Как ФиксацияРабочегоВремени
        Из 
            НастройкиУчетаВремени
        Где
            Подразделение != Неопределено
            И ФиксацияРабочегоВремени != Неопределено
            И ФиксацияРабочегоВремени != %ФиксацияРабочегоВремениПоУмолчаниюВключена
        Упорядочить по
            Подразделение.Представление
        }
    пер КомпонентДанных: УчетВремени.ДанныеНастройкиИсключенийУчетаВремени
    исп Результат = Запрос.Выполнить() 
    для РезультатСтрока из Результат
        КомпонентДанных = новый УчетВремени.ДанныеНастройкиИсключенийУчетаВремени()
        КомпонентДанных.Подразделение = РезультатСтрока.Подразделение
        КомпонентДанных.ПодразделениеПредставление = РезультатСтрока.ПодразделениеПредставление
        КомпонентДанных.ФиксацияРабочегоВремени = РезультатСтрока.ФиксацияРабочегоВремени
        КоллекцияДанных.Добавить(КомпонентДанных)
    ;
    возврат КоллекцияДанных
;