импорт СтандартноеПриложение
импорт КонтрольДоступаСтандартные
импорт КонтрольДоступа
импорт ОбщиеСтандартные
импорт ОбменДанными
импорт ФизическиеЛица
импорт Компания
импорт ВебApi
импорт Компания::Согласования
импорт ОбщегоНазначения
импорт УниверсальныеМеханизмы
импорт ЛичныеКабинетыПользователей
импорт Криптография
импорт Уведомления
импорт ПоказателиСтатистики
импорт УниверсальныеМеханизмы::ШаблоныДокументов
импорт КлиентСервисаПодписания

// Контракт ПараметрыСеансаПоставщик
@ВПроекте
@Реализация
метод КоллекцияПараметровСеанса(МобильныйИнтерфейс: Булево): Соответствие<Строка, Объект>
    пер ПараметрыСеанса = новый ВладельцыКабинетов.ПараметрыСеанса()
    ЗаполнитьПараметрыСеанса(ПараметрыСеанса, МобильныйИнтерфейс)
    возврат {ВладельцыКабинетов.КЛЮЧ_ПАРАМЕТРОВ_СЕАНСА: ПараметрыСеанса}
;
// Конец ПараметрыСеансаПоставщик

// Контракт ПодсистемаПриложения

@ВПроекте
@Реализация
метод ОписаниеПодсистемы(): СтандартноеПриложение.ОписаниеПодсистемы
    возврат новый СтандартноеПриложение.ОписаниеПодсистемы(
        ВладельцыКабинетов.ИД_ПОДСИСТЕМЫ,
        {
            КонтрольДоступа.ИД_ПОДСИСТЕМЫ, 
            ФизЛица.ИД_ПОДСИСТЕМЫ,
            ОбменДанными.ИД_ПОДСИСТЕМЫ,
            ЛичныеКабинетыПользователей.ИД_ПОДСИСТЕМЫ,
            Компания.ИД_ПОДСИСТЕМЫ,
            Криптография.ИД_ПОДСИСТЕМЫ,
            Уведомления.ИД_ПОДСИСТЕМЫ,
            // Документы.ИД_ПОДСИСТЕМЫ, - циклическая ссылка
            // Статистика.ИД_ПОДСИСТЕМЫ, - циклическая ссылка
            // ПриложениеНастройки.ИД_ПОДСИСТЕМЫ, - циклическая ссылка
            УниверсальныеМеханизмы.ИД_ПОДСИСТЕМЫ
        }
    )
;

// Конец ПодсистемаПриложения

// Контракт ОбновляемаяПодсистема

@ВПроекте
@Реализация
метод ОбработчикиЗаполнения(): Массив<СтандартноеПриложение.ОписаниеОбработчикаЗаполнения>
    возврат []
;

@ВПроекте
@Реализация
метод ОбработчикиОбновления(): Массив<СтандартноеПриложение.ОписаниеОбработчикаОбновления>
    пер Обработчики: Массив<СтандартноеПриложение.ОписаниеОбработчикаОбновления>
    пер Сервис = ВладельцыКабинетовПоставщикВерсииПриложения.ПолучитьСервис()
    
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
                ВладельцыКабинетов.ИД_ПОДСИСТЕМЫ, 
                "НастройкиФизическихЛицПеренестиНастройкиУведомлений", 
                &НастройкиФизическихЛиц.ПеренестиНастройкиУведомлений(), 
                Сервис.НастройкиФизическихЛицПеренестиНастройкиУведомлений()))
    
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
                ВладельцыКабинетов.ИД_ПОДСИСТЕМЫ, 
                "ЗаполнитьГруппыДоступаИОбновитьРазрешенияКонтактнойИнформации", 
                &ОграниченияДоступаКЛичнымКонтактам.ЗаполнитьГруппыДоступаИОбновитьРазрешенияКонтактнойИнформации(), 
                Сервис.ЗаполнитьГруппыДоступаИОбновитьРазрешенияКонтактнойИнформации()))
                
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
                ВладельцыКабинетов.ИД_ПОДСИСТЕМЫ, 
                "ПеренестиДанныеНастройкиУведомляемыеОбОтсутствии", 
                &НастройкиУведомляемыеОбОтсутствии.ПеренестиДанные(), 
                Сервис.ПеренестиДанныеНастройкиУведомляемыеОбОтсутствии()))
                
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
                ВладельцыКабинетов.ИД_ПОДСИСТЕМЫ, 
                "ПеренестиДанныеУведомляемыеОбОтсутствии", 
                &УведомляемыеОбОтсутствии.ПеренестиДанные(), 
                Сервис.ПеренестиДанныеУведомляемыеОбОтсутствии()))
                
    возврат Обработчики
;

// Конец ОбновляемаяПодсистема

// Контракт ФизическиеЛицаОбработчикСобытий

@ВПроекте
@Реализация
метод ПередУдалениемФизлица(ФизическоеЛицо: ФизическиеЛица.Ссылка)
    ОграниченияДоступаКРабочимКонтактам.ОграничениеДоступаКРабочимКонтактам(ФизическоеЛицо)?.ЗагрузитьОбъект()?.Удалить()
    НастройкиФизическихЛиц.НастройкиФизическогоЛица(ФизическоеЛицо)?.ЗагрузитьОбъект()?.Удалить()
    
    // Удалить пользователя
    знч Запрос = Запрос{
        Выбрать Пользователь
        Из ПользователиВладельцевКабинетов как ПользователиВладельцевКабинетов
        Где ПользователиВладельцевКабинетов.ФизическоеЛицо == %ФизическоеЛицо
    }
    исп Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        если СтрокаРезультата.Пользователь != Неопределено
            ПользователиСистемы.УдалитьПользователя(СтрокаРезультата.Пользователь)
        ;
    ;
    знч НаборЗаписей = новый ПользователиВладельцевКабинетов.НаборЗаписей() 
    НаборЗаписей.Фильтр.ФизическоеЛицо.Установить(ФизическоеЛицо)
    НаборЗаписей.Записать()
;
    
@ВПроекте
@Реализация
метод ПослеЗаписиФизлицПриЗагрузке(Физлица: ЧитаемыйМассив<ФизическиеЛица.Ссылка>)
    для ФизическоеЛицо из Физлица
        НастройкиФизическихЛиц.СоздатьНастройкиПоУмолчанию(ФизическоеЛицо)
    ;
;

@ВПроекте
@Реализация
метод ПослеДеактивацииФизлица(Физлица: Массив<ФизическиеЛица.Ссылка>)
;

@ВПроекте
@Реализация
метод ПослеЗаписиГруппыОбъектов(ФизическоеЛицо: ФизическиеЛица.Ссылка, Отправитель: ВходящиеДанные.Ссылка)
;

// Конец ФизическиеЛицаОбработчикСобытий

// Контракт РабочиеКонтактыПоставщикОграничений

@ВПроекте
@Реализация
метод РазрешенияДоступаРабочихКонтактов(Элементы: ЧитаемыйМассив<РабочиеКонтактыФизическихЛиц.ДанныеРасчетаРазрешений>): Соответствие<РабочиеКонтактыФизическихЛиц.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    знч Разрешения: Соответствие<РабочиеКонтактыФизическихЛиц.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    пер ВладельцыКонтактнойИнформации = новый Множество<ФизическиеЛица.Ссылка>()
    для Элемент из Элементы
        ВладельцыКонтактнойИнформации.Добавить(Элемент.Владелец)
    ; 
    знч ЗапрашиваемыеДанные: ВладельцыКабинетов.ЗапрашиваемыеДанныеВладельцевКабинетов
    ЗапрашиваемыеДанные.НастройкиДоступа = Истина
    пер СведенияОДоступе = ВладельцыКабинетов.ДанныеВладельцевКабинетов(ВладельцыКонтактнойИнформации, ЗапрашиваемыеДанные)
    
    для Элемент из Элементы
        знч РазрешенияОбъекта: Множество<РазрешениеДоступа>
        РазрешенияОбъекта.Добавить(КонтрольДоступа.ПолныйДоступИнформационнойСистеме(РабочиеКонтактыФизическихЛиц))
        РазрешенияОбъекта.Добавить(КонтрольДоступа.ПолныйДоступМенеджеруСервиса(РабочиеКонтактыФизическихЛиц))
        если СведенияОДоступе[Элемент.Владелец].НастройкиДоступа.РабочаяКонтактнаяИнформацияДоступнаВсем
            РазрешенияОбъекта.Добавить(КонтрольДоступа.ЧтениеАутентифицированным(РабочиеКонтактыФизическихЛиц))
        иначе
            РазрешенияОбъекта.ДобавитьВсе(КонтрольДоступа.ЧтениеДанныхСправочниковПоПолномочиям(
                [ВладельцыКабинетов.ПолномочиеПросмотрРабочихКонтактов()],
                Элемент.Владелец
            ))
            РазрешенияОбъекта.ДобавитьВсе(КонтрольДоступа.ЧтениеДанныхСправочниковПерсонально([Элемент.Владелец]))
            РазрешенияОбъекта.Добавить(КонтрольДоступа.ЧтениеАдминистраторуАбонента(РабочиеКонтактыФизическихЛиц))
        ;
        Разрешения.Вставить(Элемент, РазрешенияОбъекта)
    ;
     
    возврат Разрешения
;
   
// Конец РабочиеКонтактыПоставщикОграничений

// Контракт ЛичныеКонтактыПоставщикОграничений

@ВПроекте
@Реализация
метод РазрешенияДоступаЛичныхКонтактов(Элементы: ЧитаемыйМассив<ЛичныеКонтакты.ДанныеРасчетаРазрешений>): Соответствие<ЛичныеКонтакты.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    знч Разрешения: Соответствие<ЛичныеКонтакты.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    знч ВладельцыКонтактнойИнформации = новый Множество<ФизическиеЛица.Ссылка>()
    знч ЛичныеКонтактыФизическихЛиц: Массив<ЛичныеКонтакты.ДанныеРасчетаРазрешений>
    для Элемент из Элементы
        если Элемент.Владелец это ФизическиеЛица.Ссылка
            ВладельцыКонтактнойИнформации.Добавить(Элемент.Владелец как ФизическиеЛица.Ссылка)
            ЛичныеКонтактыФизическихЛиц.Добавить(Элемент)
        ;
    ; 
    
    если ВладельцыКонтактнойИнформации.Пусто()
        возврат Разрешения
    ;
    
    знч ЗапрашиваемыеДанные: ВладельцыКабинетов.ЗапрашиваемыеДанныеВладельцевКабинетов
    ЗапрашиваемыеДанные.НастройкиДоступа = Истина
    пер СведенияОДоступе = ВладельцыКабинетов.ДанныеВладельцевКабинетов(ВладельцыКонтактнойИнформации, ЗапрашиваемыеДанные)
    
    для Элемент из ЛичныеКонтактыФизическихЛиц
        знч РазрешенияОбъекта: Множество<РазрешениеДоступа>
        РазрешенияОбъекта.Добавить(КонтрольДоступа.ПолныйДоступИнформационнойСистеме(ЛичныеКонтакты))
        РазрешенияОбъекта.Добавить(КонтрольДоступа.ПолныйДоступМенеджеруСервиса(ЛичныеКонтакты))
        РазрешенияОбъекта.ДобавитьВсе(КонтрольДоступа.ЧтениеДанныхСправочниковПоПолномочиям(
            [ВладельцыКабинетов.ПолномочиеПросмотрЛичныхКонтактов()],
            Элемент.Владелец как ФизическиеЛица.Ссылка
        ))
        РазрешенияОбъекта.ДобавитьВсе(КонтрольДоступа.ЧтениеРедактированиеУдалениеДанныхСправочниковПерсонально([Элемент.Владелец как ФизическиеЛица.Ссылка]))
        если СведенияОДоступе[Элемент.Владелец как ФизическиеЛица.Ссылка].НастройкиДоступа.ЛичнаяКонтактнаяИнформацияДоступнаВсем
            РазрешенияОбъекта.Добавить(КонтрольДоступа.ЧтениеАутентифицированным(ЛичныеКонтакты))
        ;
        Разрешения.Вставить(Элемент, РазрешенияОбъекта)
    ;
    возврат Разрешения
;
// Конец ЛичныеКонтактыПоставщикОграничений

// Контракт ЛичныеДанныеОбработчикСобытий

@ВПроекте
@Реализация
метод ПослеЗаписиЛичныхДанных(ТекущееЗначение: ЛичныеДанныеФизическихЛиц.Объект, ПредыдущееЗначение: ЛичныеДанныеФизическихЛиц.Данные)
    если ПредыдущееЗначение.ИНН != ТекущееЗначение.ИНН или ПредыдущееЗначение.СНИЛС != ТекущееЗначение.СНИЛС
        ПользователиСистемы.ОбновитьУчетнуюЗаписьЕсиа(ТекущееЗначение.Владелец, ТекущееЗначение.СНИЛС, ТекущееЗначение.ИНН)
    ;
;

// Конец ЛичныеДанныеОбработчикСобытий

// Контракт РабочиеКонтактыОбработчикСобытий

@ВПроекте
@Реализация
метод ПослеЗаписиРабочихКонтактов(ТекущееЗначение: РабочиеКонтактыФизическихЛиц.Объект, ПредыдущееЗначение: РабочиеКонтактыФизическихЛиц.Данные)
    если ПредыдущееЗначение.МобильныйТелефон != ТекущееЗначение.МобильныйТелефон или ПредыдущееЗначение.ЭлектроннаяПочта != ТекущееЗначение.ЭлектроннаяПочта
        ПользователиСистемы.ИзменитьКонтактныеДанныеПользователя(ТекущееЗначение.Владелец, ТекущееЗначение.МобильныйТелефон, ТекущееЗначение.ЭлектроннаяПочта)
    ;
;
// Конец РабочиеКонтактыОбработчикСобытий

//Контракт КонтрольДоступаПоПолномочиямСервис

@ВПроекте
@Реализация
метод ЗаполнитьПредопределенныеПолномочия()
    ВладельцыКабинетов.ДобавитьПолномочия()
;

@ВПроекте
@Реализация
метод ЗаполнитьПредопределенныеРоли()
    ВладельцыКабинетов.ДобавитьРоли()
;

@ВПроекте
@Реализация
метод ЗаполнитьПредопределенныеТипыАтрибутов()
;

@ВПроекте
@Реализация
метод СоздатьНаборыОграниченийДоступа()
;

@ВПроекте
@Реализация
метод ТипыАтрибутовПоТипамЗначений(): ЧитаемоеСоответствие<Тип, ТипыАтрибутов.Ссылка>
    возврат {:}
;

//Конец КонтрольДоступаПоПолномочиямСервис

//Контракт ДанныеAPI
@ВПроекте
@Реализация
метод МассивТипов(Получатель: ВидПриложения?, ВерсияФорматаОбмена: Версия?): Массив<Тип>
    пер Типы: Массив<Тип>
    если Получатель == ВидПриложения.Hrm или Получатель == ВидПриложения.Ess
        Типы.Добавить(Тип<ЗапросИзмененияЛичныхДанных.Ссылка>)
    ;
    возврат Типы
;

@ВПроекте
@Реализация
метод ТипДанныхJson(ТипОбъекта: Тип, ВерсияФорматаОбмена: Версия?): Массив<Тип>
    пер Типы: Массив<Тип>
    выбор ТипОбъекта
    когда Тип<ДоступныеФункцииФизическихЛиц.Ссылка>
        Типы.Добавить(ДоступныеФункцииФизическихЛиц.ТипДанныхJson(ВерсияФорматаОбмена))
    когда Тип<СогласиеНаПрисоединениеККэдо.Ссылка>
        Типы.Добавить(СогласиеНаПрисоединениеККэдо.ТипДанныхJson(ВерсияФорматаОбмена))
    когда Тип<ОграниченияДоступаКРабочимКонтактам.Ссылка>
        Типы.Добавить(ОграниченияДоступаКРабочимКонтактам.ТипДанныхJson(ВерсияФорматаОбмена))
    ;
    возврат Типы
;

@ВПроекте
@Реализация
метод ТипКоллекцииДанныхJson(ТипОбъекта: Тип, ВерсияФорматаОбмена: Версия?): Массив<Тип>
    пер Типы: Массив<Тип>
    выбор ТипОбъекта
    когда Тип<ДоступныеФункцииФизическихЛиц.Ссылка>
        Типы.Добавить(ДоступныеФункцииФизическихЛиц.ТипКоллекцииДанныхJson(ВерсияФорматаОбмена))
    когда Тип<СогласиеНаПрисоединениеККэдо.Ссылка>
        Типы.Добавить(СогласиеНаПрисоединениеККэдо.ТипКоллекцииДанныхJson(ВерсияФорматаОбмена))
    когда Тип<ОграниченияДоступаКРабочимКонтактам.Ссылка>
        Типы.Добавить(ОграниченияДоступаКРабочимКонтактам.ТипКоллекцииДанныхJson(ВерсияФорматаОбмена))
    ;
    возврат Типы
;

@ВПроекте
@Реализация
метод ИнструментыМенеджераОбъекта(ТипОбъекта: Тип): Массив<ВебApiСервер.ИнструментыМенеджераОбъекта>
    пер НаборИнструментыМенеджераОбъекта: Массив<ВебApiСервер.ИнструментыМенеджераОбъекта>
    пер ИнструментыМенеджераОбъекта: ВебApiСервер.ИнструментыМенеджераОбъекта
    выбор ТипОбъекта
    когда Тип<ДоступныеФункцииФизическихЛиц.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как СостояниеДокументов.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    когда Тип<СогласиеНаПрисоединениеККэдо.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как СогласиеНаПрисоединениеККэдо.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    когда Тип<ОграниченияДоступаКРабочимКонтактам.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как ОграниченияДоступаКРабочимКонтактам.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    ;
    возврат НаборИнструментыМенеджераОбъекта
;

@ВПроекте
@Реализация
метод ПолучитьДанныеJson(ТипОбъекта: Тип, Ссылка: ВходящиеДанные.Ссылка|ИсходящиеДанные.Ссылка, 
    Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?): Массив<Объект?>
    
    пер ДанныеJson: Массив<Объект?>
    выбор ТипОбъекта
    когда Тип<ЗапросИзмененияЛичныхДанных.Ссылка>
        ДанныеJson.Добавить(ЗапросИзмененияЛичныхДанных.ПолучитьДанныеJson(Ссылка как ЗапросИзмененияЛичныхДанных.Ссылка, Сервисы, ВерсияФорматаОбмена))
    ;
    возврат ДанныеJson
;

@ВПроекте
@Реализация
метод МассивСсылокПоФильтру(ТипОбъекта: Тип, Фильтр: () -> ЧитаемыйМассив<Справочник.Ссылка>): Массив<ЧитаемыйМассив<Справочник.Ссылка>>
    пер МассивСсылок: Массив<ЧитаемыйМассив<Справочник.Ссылка>>
    выбор ТипОбъекта
    ;
    возврат МассивСсылок
;

@ВПроекте
@Реализация
метод УдалитьОбъекты(ТипОбъекта: Тип, ПараметрыЗапроса: ЧитаемоеСоответствие<Строка, Число|Булево|Ууид|Строка>, Сервисы: ВебApiСервер.СервисыУдаленияОбъектов)
;

@ВПроекте
@Реализация
метод ТипОбъектаJson(ТипОбъекта: Тип): Массив<Строка>
    пер ТипОбъектаJson: Массив<Строка>
    выбор ТипОбъекта
    когда Тип<ДоступныеФункцииФизическихЛиц.Ссылка>
        ТипОбъектаJson.Добавить(ДоступныеФункцииФизическихЛиц.ТипОбъектаJson())
    когда Тип<СогласиеНаПрисоединениеККэдо.Ссылка>
        ТипОбъектаJson.Добавить(СогласиеНаПрисоединениеККэдо.ТипОбъектаJson())
    когда Тип<ОграниченияДоступаКРабочимКонтактам.Ссылка>
        ТипОбъектаJson.Добавить(ОграниченияДоступаКРабочимКонтактам.ТипОбъектаJson())
    ;
    возврат ТипОбъектаJson
;

@ВПроекте
@Реализация
метод ЗагрузитьОбъектИзJson(ТипОбъекта: Тип, ТипДанных: Тип, ДанныеJson: Объект?, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    выбор ТипОбъекта
    когда Тип<ДоступныеФункцииФизическихЛиц.Ссылка>
        выбор ТипДанных
        когда Тип<ДоступныеФункцииФизическихЛиц.ДанныеJson>
            ДоступныеФункцииФизическихЛиц.ЗагрузитьОбъектИзJson(ДанныеJson как ДоступныеФункцииФизическихЛиц.ДанныеJson, Сервисы)
        ;
    когда Тип<СогласиеНаПрисоединениеККэдо.Ссылка>
        выбор ТипДанных
        когда Тип<СогласиеНаПрисоединениеККэдо.ДанныеJson>
            СогласиеНаПрисоединениеККэдо.ЗагрузитьОбъектИзJson(ДанныеJson как СогласиеНаПрисоединениеККэдо.ДанныеJson, Сервисы)
        когда Тип<СогласиеНаПрисоединениеККэдо.ДанныеJson_V1_0>
            СогласиеНаПрисоединениеККэдо.ЗагрузитьОбъектИзJson(ДанныеJson как СогласиеНаПрисоединениеККэдо.ДанныеJson_V1_0, Сервисы)
        ;
    когда Тип<ОграниченияДоступаКРабочимКонтактам.Ссылка>
        выбор ТипДанных
        когда Тип<ОграниченияДоступаКРабочимКонтактам.Ограничения_V1_0> 
            ОграниченияДоступаКРабочимКонтактам.ЗагрузитьОбъектИзJson(ДанныеJson как ОграниченияДоступаКРабочимКонтактам.Ограничения_V1_0, Сервисы)        
        ;
    ;
;

@ВПроекте
@Реализация
метод ПослеЗаписиГруппыОбъектов(ТипОбъекта: Тип, МассивОбъектовОтложенногоОбновления: Массив<ВебApiСервер.ОбъектОтложенногоОбновления>)
    выбор ТипОбъекта
    когда Тип<Сотрудники.Ссылка>
        ОбновитьГруппыДоступаКонтактнойИнформацииСотрудниковПодразделений(МассивОбъектовОтложенногоОбновления)
    ;
;

@ВПроекте
@Реализация
метод ИзменитьОбъектИзJson(ТипОбъекта: Тип, ДанныеJson: Объект, Сервисы: ВебApiСервер.СервисыЗагрузкиJson, ЗаданиеМодификации: ВебApiСервер.ЗаданиеМодификации)
    выбор ТипОбъекта
    ;
;

@ВПроекте
@Реализация
метод ЗавершитьИзменениеОбъектИзJson(ТипОбъекта: Тип, МассивСсылок: ЧитаемыйМассив<ВходящиеДанные.Ссылка>, ЗаданиеМодификации: ВебApiСервер.ЗаданиеМодификации)
    выбор ТипОбъекта
    ;
;

@ВПроекте
@Реализация
метод ГруппаИзмененийВJson(ТипОбъекта: Тип, Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>,
    Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?): Массив<ЧитаемоеСоответствие<Строка, Массив<Объект?>>>
    
    пер ДанныеJson: Массив<ЧитаемоеСоответствие<Строка, Массив<Объект?>>>
    выбор ТипОбъекта
    когда Тип<ЗапросИзмененияЛичныхДанных.Ссылка>
        ДанныеJson.Добавить(ЗапросИзмененияЛичныхДанных.ГруппаИзмененийВJson(Ссылки, Сервисы, ВерсияФорматаОбмена))
    ;
    возврат ДанныеJson
;

//Конец ДанныеApi

// Контракт ФизическиеЛицаПоддержкаApi_V0
@ВПроекте
@Реализация
метод ОбновитьСостояниеЗапросовИзмененияЛичныхДанных(ЗапросHttp: HttpСервисЗапрос)
    ВладельцыКабинетовApi.ОбновитьСостояниеЗапросовИзмененияЛичныхДанных(ЗапросHttp)
;

@ВПроекте
@Реализация
метод ОбновитьДоступныеФункцииФизическихЛиц(ЗапросHttp: HttpСервисЗапрос)
    ВладельцыКабинетовApi.ОбновитьДоступныеФункцииФизическихЛиц(ЗапросHttp)
;

@ВПроекте
@Реализация
метод ПолучитьЗапросИзмененияЛичныхДанных(ЗапросHttp: HttpСервисЗапрос)
    ВладельцыКабинетовApi.ПолучитьЗапросИзмененияЛичныхДанных(ЗапросHttp)
;

@ВПроекте
@Реализация
метод ЗагрузитьОбъектИзJson(ДанныеJson: ФизическиеЛица.ДанныеJson, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    знч ДанныеВладельцаКабинета: ВладельцыКабинетов.ДанныеВладельцаКабинета
    знч ФизлицоJson: ФизическиеЛица.ФизическоеЛицо_V1_0 = ФизлицоJsonПоДанныеJson(ДанныеJson)
    
    исп Транзакции.Начать() 
    ФизическиеЛица.ЗагрузитьОбъектИзJson(ФизлицоJson, Сервисы)
    
    если ДанныеJson.preferredCommunicationType != Неопределено
        знч ПредпочтительныйСпособСвязи: ВладельцыКабинетов.СпособСвязиJson = СпособСвязиПоФизическиеЛицаСпособСвязиJson(ДанныеJson.preferredCommunicationType) 
        ДанныеВладельцаКабинета.Настройки.ПредпочтительныйСпособСвязи = ВладельцыКабинетов.СпособСвязиИзJson(ПредпочтительныйСпособСвязи)
    ;
    если ДанныеJson.workContactsAccess != Неопределено
        если ДанныеJson.workContactsAccess == ФизическиеЛица.ДоступностьКонтактнойИнформацииJson.grantEveryone
            ДанныеВладельцаКабинета.НастройкиДоступа.РабочаяКонтактнаяИнформацияДоступнаВсем = Истина
        иначе если ДанныеJson.workContactsAccess == ФизическиеЛица.ДоступностьКонтактнойИнформацииJson.grantPeers
            ДанныеВладельцаКабинета.НастройкиДоступа.РабочаяКонтактнаяИнформацияДоступнаКоллегам = Истина
        ;
    ;
    знч ФизическоеЛицо = Сервисы.ПрочитатьОбъект(ДанныеJson.ID, &ФизическиеЛица.Объект.новый(Ууид), Тип<ФизическиеЛица.Ссылка>) как ФизическиеЛица.Объект
    пер КонтактыРабочиеОграниченияДоступа = ПодчиненныйОбъект(
        ФизическоеЛицо.Ссылка, 
        ОграниченияДоступаКРабочимКонтактам.ОграничениеДоступаКРабочимКонтактам(ФизическоеЛицо.Ссылка), 
        &ОграниченияДоступаКРабочимКонтактам.Объект.новый(Ууид))
    ОграниченияДоступаКРабочимКонтактам.Заполнить(
            КонтактыРабочиеОграниченияДоступа как ОграниченияДоступаКРабочимКонтактам.Объект, ДанныеВладельцаКабинета)

    пер Настройки = ПодчиненныйОбъект(
        ФизическоеЛицо.Ссылка,
        НастройкиФизическихЛиц.НастройкиФизическогоЛица(ФизическоеЛицо.Ссылка),
        &НастройкиФизическихЛиц.Объект.новый(Ууид))
    НастройкиФизическихЛиц.Заполнить(Настройки как НастройкиФизическихЛиц.Объект, ДанныеВладельцаКабинета)

    (КонтактыРабочиеОграниченияДоступа как ОграниченияДоступаКРабочимКонтактам.Объект).Записать()
    (Настройки как НастройкиФизическихЛиц.Объект).Записать()
;

@ВПроекте
@Реализация
метод ПолучитьДанныеJson(Ссылка: ФизическиеЛица.Ссылка, Сервисы: ВебApiСервер.СервисыУпаковкиJson): ФизическиеЛица.ДанныеJson
    знч ФизическоеЛицо: ВладельцыКабинетов.ДанныеВладельцаКабинета = ДанныеФизическогоЛица(Ссылка)
    знч ФизлицоJson: ФизическиеЛица.ФизическоеЛицо_V1_1 = 
        ФизическиеЛица.ПолучитьДанныеJson(Ссылка, Сервисы, Версия{1.1}) как ФизическиеЛица.ФизическоеЛицо_V1_1
    знч ДанныеJson = ДанныеJsonПоФизлицоJson(ФизлицоJson)

    если ФизическоеЛицо.НастройкиДоступа.РабочаяКонтактнаяИнформацияДоступнаВсем
        ДанныеJson.workContactsAccess = ДоступФизлицаПоДоступностьКонтактнойИнформацииJson(ВладельцыКабинетов.ДоступностьКонтактнойИнформацииJson.grantEveryone)
    иначе если ФизическоеЛицо.НастройкиДоступа.РабочаяКонтактнаяИнформацияДоступнаКоллегам
        ДанныеJson.workContactsAccess = ДоступФизлицаПоДоступностьКонтактнойИнформацииJson(ВладельцыКабинетов.ДоступностьКонтактнойИнформацииJson.grantPeers)
    иначе
        ДанныеJson.workContactsAccess = ДоступФизлицаПоДоступностьКонтактнойИнформацииJson(ВладельцыКабинетов.ДоступностьКонтактнойИнформацииJson.grantDivisionHeads)
    ;

    ДанныеJson.preferredCommunicationType = СпособСвязиПоВладельцыКабинетовСпособСвязиJson(ВладельцыКабинетов.СпособСвязиВJson(ФизическоеЛицо.Настройки.ПредпочтительныйСпособСвязи))
    
    возврат ДанныеJson  
;

// Конец ФизическиеЛицаПоддержкаApi_V0

// Контракт СогласованияПользователь
@ВПроекте
@Реализация
метод СформироватьПредставленияДокумента(Документ: ПодписываемыйДокумент.Ссылка)
    выбор Документ
    когда это ЗапросИзмененияЛичныхДанных.Ссылка
        ПредставленияДокументов.СформироватьПредставленияДокумента(Документ как Справочник.Ссылка, Ложь)
    ;
;

@ВПроекте
@Реализация
метод ДокументСогласованияJson(ДанныеОбъекта: ЧитаемоеСоответствие<Строка, Объект?>,
    Сервисы: ВебApiСервер.СервисыУпаковкиJson): СогласованияДокументов.ДокументСогласованияJson?
    
    знч Документ = ДанныеОбъекта["Документ"] как Справочник.Ссылка
    выбор Документ
    когда это ЗапросИзмененияЛичныхДанных.Ссылка,
        это СогласиеНаПрисоединениеККэдо.Ссылка
        
        возврат новый СогласованияДокументов.ДокументСогласованияJson(
            Документ.Ид.ВСтроку()
        )
    ;
    
    возврат Неопределено
;

@ВПроекте
@Реализация
метод ПослеПодписанияДокумента(Документ: ПодписываемыйДокумент.Ссылка, ДанныеСогласующего: Согласования.ДанныеСогласующего, ОбновитьПредставление: Булево)
    пер ЭтоДокументПодсистемы = Ложь
    выбор Документ
    когда это ЗапросИзмененияЛичныхДанных.Ссылка
        ЭтоДокументПодсистемы = Истина
        ЗапросИзмененияЛичныхДанных.ПослеПодписания(Документ как ЗапросИзмененияЛичныхДанных.Ссылка, ДанныеСогласующего)
    когда это СогласиеНаПрисоединениеККэдо.Ссылка
        ЭтоДокументПодсистемы = Истина
        СогласиеНаПрисоединениеККэдо.ПослеПодписания(Документ как СогласиеНаПрисоединениеККэдо.Ссылка, ДанныеСогласующего)
    ;
    если ЭтоДокументПодсистемы и ОбновитьПредставление
        СформироватьПредставленияДокумента(Документ)
    ;
;

@ВПроекте
@Реализация
метод ОтправлятьСогласование(Документ: ПодписываемыйДокумент.Ссылка): Булево
    выбор Документ
    когда это ЗапросИзмененияЛичныхДанных.Ссылка,
        это СогласиеНаПрисоединениеККэдо.Ссылка
        
        возврат ОбменДанными.ЭтоОтправляемыйДокумент(Документ как ИсходящиеДанные.Ссылка)
    ;
    
    возврат Ложь
;

@ВПроекте
@Реализация
метод ДокументыНаСогласовании(Согласующий: ФизическиеЛица.Ссылка): ЧитаемыйМассив<ПодписываемыйДокумент.Ссылка>
    возврат []
;

@ВПроекте
@Реализация
метод ДокументыСогласованные(Согласующий: ФизическиеЛица.Ссылка): ЧитаемыйМассив<ПодписываемыйДокумент.Ссылка>
    возврат []
;

@ВПроекте
@Реализация
метод ДокументДляОзнакомления(Документ: ПодписываемыйДокумент.Ссылка): Булево
    возврат Ложь
;

@ВПроекте
@Реализация
метод ПравилаСогласованияПоУмолчанию(): ЧитаемыйМассив<Согласования.ПравилоСогласования>
    возврат []
;

@ВПроекте
@Реализация
метод ЗаполнитьПредопределенныеВидыСогласуемыхЗаявлений()
;

@ВПроекте
@Реализация
метод ЗаполнитьПредопределенныеРолиПодписантов()
;

конст ЗАПРОС_ИЗМЕНЕНИЯ_ЛИЧНЫХ_ДАННЫХ = "ЗапросИзмененияЛичныхДанных"
конст СОГЛАСИЕ_НА_ПРИСОЕДИНЕНИЕ_К_КЭДО = "СогласиеНаПрисоединениеККэдо"

@ВПроекте
@Реализация
метод ЗаполнитьПредопределенныеТипыСогласуемыхДокументов()
    Согласования.ДобавитьПредопределенныйТипСогласуемогоДокумента(ЗАПРОС_ИЗМЕНЕНИЯ_ЛИЧНЫХ_ДАННЫХ)
    Согласования.ДобавитьПредопределенныйТипСогласуемогоДокумента(СОГЛАСИЕ_НА_ПРИСОЕДИНЕНИЕ_К_КЭДО)
;

@ВПроекте
@Реализация
метод ТипСогласуемогоДокумента(ОбъектСогласования: ПодписываемыйДокумент.Ссылка|ВидыСогласуемыхЗаявлений.Ссылка): ТипыСогласуемыхДокументов.Ссылка?
    выбор ОбъектСогласования
    когда это ЗапросИзмененияЛичныхДанных.Ссылка
        возврат Согласования.НайтиТипСогласуемогоДокумента(ЗАПРОС_ИЗМЕНЕНИЯ_ЛИЧНЫХ_ДАННЫХ)
    когда это СогласиеНаПрисоединениеККэдо.Ссылка
        возврат Согласования.НайтиТипСогласуемогоДокумента(СОГЛАСИЕ_НА_ПРИСОЕДИНЕНИЕ_К_КЭДО)
    ;
    
    возврат Неопределено
;

@ВПроекте
@Реализация
метод ТипыСогласуемыхДокументовПолучателя(Получатель: ВидПриложения?): Массив<ТипыСогласуемыхДокументов.Ссылка>
    пер Типы: Массив<ТипыСогласуемыхДокументов.Ссылка>
    если Получатель == ВидПриложения.Hrm
        Типы.Добавить(Согласования.НайтиТипСогласуемогоДокумента(ЗАПРОС_ИЗМЕНЕНИЯ_ЛИЧНЫХ_ДАННЫХ))
        Типы.Добавить(Согласования.НайтиТипСогласуемогоДокумента(СОГЛАСИЕ_НА_ПРИСОЕДИНЕНИЕ_К_КЭДО))
    ;
    возврат Типы
;

@ВПроекте
@Реализация
метод РольСогласующегоЗаявления(ВидЗаявления: ВидыСогласуемыхЗаявлений.Ссылка): Роли.Ссылка?
    возврат Неопределено
;

@ВПроекте
@Реализация
метод ВидСогласуемогоЗаявления(Документ: ПодписываемыйДокумент.Ссылка): ВидыСогласуемыхЗаявлений.Ссылка?
    возврат Неопределено
;

@ВПроекте
@Реализация
метод Согласуемый(Документ: ПодписываемыйДокумент.Ссылка): ФизическиеЛица.Ссылка?
    возврат Неопределено
;

@ВПроекте
@Реализация
метод ИдентификаторыЭлектронныхДокументов(Документ: ПодписываемыйДокумент.Ссылка): ЧитаемыйМассив<Строка>
    возврат []
;

// Конец СогласованияПользователь

// Контракт ПодписываемыйДокументПоставщикОграничений

@ВПроекте
@Реализация
метод РазрешенияДоступаПодписываемыхДокументов(Документы: ЧитаемыйМассив<ПодписываемыйДокумент.Ссылка>): ЧитаемоеСоответствие<ПодписываемыйДокумент.Ссылка, ЧитаемыйМассив<РазрешениеДоступа>>
    знч Разрешения: Соответствие<ПодписываемыйДокумент.Ссылка, ЧитаемыйМассив<РазрешениеДоступа>>
    знч ВладельцыСогласуемыхДокументов: Соответствие<ПодписываемыйДокумент.Ссылка, ЧитаемыйМассив<ФизическиеЛица.Ссылка>>
    знч ДокументыЗапросИзмененияЛичныхДанных: Массив<ЗапросИзмененияЛичныхДанных.Ссылка>
    знч ДокументыСогласиеНаПрисоединениеККэдо: Массив<СогласиеНаПрисоединениеККэдо.Ссылка>
    знч ДокументыПодсистемы: Массив<ПодписываемыйДокумент.Ссылка>
    для Документ из Документы
        выбор Документ
        когда это ЗапросИзмененияЛичныхДанных.Ссылка
            ДокументыЗапросИзмененияЛичныхДанных.Добавить(Документ как ЗапросИзмененияЛичныхДанных.Ссылка)
            ДокументыПодсистемы.Добавить(Документ)
        когда это СогласиеНаПрисоединениеККэдо.Ссылка
            ДокументыСогласиеНаПрисоединениеККэдо.Добавить(Документ как СогласиеНаПрисоединениеККэдо.Ссылка)
            ДокументыПодсистемы.Добавить(Документ)
        ;
    ;   
        
    ВладельцыСогласуемыхДокументов.ВставитьВсе(ЗапросИзмененияЛичныхДанных.ФизическиеЛицаДокументов(ДокументыЗапросИзмененияЛичныхДанных))
    ВладельцыСогласуемыхДокументов.ВставитьВсе(СогласиеНаПрисоединениеККэдо.ФизическиеЛицаДокументов(ДокументыСогласиеНаПрисоединениеККэдо))
    
    для Документ из ДокументыПодсистемы
        Разрешения.Вставить(Документ, КонтрольДоступа.ЧтениеДанныхСправочниковПерсонально(ВладельцыСогласуемыхДокументов.ПолучитьИлиУмолчание(Документ)))
    ;
    
    возврат Разрешения
;

// Конец ПодписываемыйДокументПоставщикОграничений

// Контракт ОбменДаннымиОбработчик

@ВПроекте
@Реализация
метод ПослеВыполненияОбмена(ИнформационнаяСистема: ИнформационныеСистемы.Ссылка)
    ОповещаемыеОВозобновленииОбмена.ОтправитьУведомленияОВозобновленииОбмена(ИнформационнаяСистема)
;

@ВПроекте
@Реализация
метод ПослеНастройкиОбмена(ИнформационнаяСистема: ИнформационныеСистемы.Ссылка)
;

@ВПроекте
@Реализация
метод ПослеИзмененияНастроекОбмена(ИнформационнаяСистема: ИнформационныеСистемы.Ссылка)
;

// Конец ОбменДаннымиОбработчик

// Контракт СтатистикаПоставщик

@ВПроекте
@Реализация
метод СтатистикаСправочников(): Массив<СтатистикаДанных.Справочник>
    знч СправочникиСтатистика: Массив<СтатистикаДанных.Справочник>
    возврат СправочникиСтатистика
;

@ВПроекте
@Реализация
метод СтатистикаДокументов(): Массив<СтатистикаДанных.Документ>
    знч ДокументыСтатистика: Массив<СтатистикаДанных.Документ>
    ДокументыСтатистика.ДобавитьВсе(СтатистикаДанных.СтатистикаПоДокументу(ЗапросИзмененияЛичныхДанных))
    возврат ДокументыСтатистика
;

// Конец СтатистикаПоставщик

// Контракт СогласованияСервис

@ВПроекте
@Реализация
метод ФизлицоМожетУчаствоватьВСогласовании(ФизическоеЛицо: ФизическиеЛица.Ссылка): Булево
    исп ПривилегированныйРежим: КонтекстДоступа = КонтекстДоступа.Привилегированный()
    пер СведенияОЛичныхКабинетах = ЛичныеКабинетыПользователей.СведенияОЛичныхКабинетах([ФизическоеЛицо])
    ПривилегированныйРежим.Закрыть()
    если СведенияОЛичныхКабинетах.Пусто()
        возврат Ложь
    ;
    знч ЗапрашиваемыеДанные: ВладельцыКабинетов.ЗапрашиваемыеДанныеВладельцевКабинетов
    ЗапрашиваемыеДанные.Пользователь = Истина
    пер ДанныеФизическогоЛица = ВладельцыКабинетов.ДанныеВладельцаКабинета(ФизическоеЛицо, ЗапрашиваемыеДанные)
    пер БылУспешныйВход = КонтрольДоступа.БылУспешныйВход(ДанныеФизическогоЛица.Пользователь)
    если БылУспешныйВход == Ложь
        возврат Ложь
    ;
    возврат Истина
;

@ВПроекте
@Реализация
метод ПроверитьСостояниеОбмена(ФизическоеЛицо: ФизическиеЛица.Ссылка): ОбменДанными.СостояниеОбмена
    исп ПривилегированныйРежим: КонтекстДоступа = КонтекстДоступа.Привилегированный()
    знч СостояниеОбмена = ВладельцыКабинетов.ПроверитьСостояниеОбмена(ФизическоеЛицо)
    ПривилегированныйРежим.Закрыть()
    возврат СостояниеОбмена
;

@ВПроекте
@Реализация
метод ДолженБытьДействующийСертификат(ФизическоеЛицо: ФизическиеЛица.Ссылка): Булево
    возврат СогласиеНаПрисоединениеККэдоСервер.ЕстьСогласия(ФизическоеЛицо)
;

// Конец СогласованияСервис

// Контракт ВычислительИнформационныхСистем

@ВПроекте
@Реализация
метод ИнформационныеСистемыПоОбъекту(Ссылка: Справочник.Ссылка): Массив<ИнформационныеСистемы.Ссылка>
    пер Инфосистемы: Массив<ИнформационныеСистемы.Ссылка>
    если Ссылка это ФизическиеЛица.Ссылка
        Инфосистемы = ЛичныеКабинетыПользователей.ИнформационныеСистемыФизическогоЛица(Ссылка как ФизическиеЛица.Ссылка)
    ;
    возврат Инфосистемы
;

// Конец ВычислительИнформационныхСистем

метод ЗаполнитьПараметрыСеанса(ПараметрыСеанса: ВладельцыКабинетов.ПараметрыСеанса, МобильныйИнтерфейс: Булево)
    знч ТекущееФизлицо: ФизическиеЛица.Ссылка? = ПользователиСистемы.ТекущееФизическоеЛицо()
    если ТекущееФизлицо == Неопределено
        возврат
    ;

    пер ЗапрашиваемыеДанные: ВладельцыКабинетов.ЗапрашиваемыеДанныеВладельцевКабинетов
    ЗапрашиваемыеДанные.Настройки = Истина
    ЗапрашиваемыеДанные.ЗапрашиваемыеДанныеФизическихЛиц.ЛичныеДанные = Истина
    ЗапрашиваемыеДанные.ЗапрашиваемыеДанныеФизическихЛиц.РабочаяКонтактнаяИнформация = Истина
    ЗапрашиваемыеДанные.Настройки = Истина
    пер ДанныеВладельцаКабинета = ВладельцыКабинетов.ДанныеВладельцаКабинета(ТекущееФизлицо, ЗапрашиваемыеДанные)
    
    ПараметрыСеанса.ПодразделенияРуководителя.ДобавитьВсе(ОрганизационнаяСтруктура.ПодразделенияРуководителя(ТекущееФизлицо))
    
    ПараметрыСеанса.НачалоРабочегоДня = ВладельцыКабинетов.НачалоРабочегоДня()
    ПараметрыСеанса.ОкончаниеРабочегоДня = ВладельцыКабинетов.ОкончаниеРабочегоДня()
    ПараметрыСеанса.КвантВремени = МенеджерДат.КвантВремениПоУмолчанию()
    ПараметрыСеанса.СпособУведомления = ДанныеВладельцаКабинета.Настройки.ПредпочтительныйСпособУведомления

    пер ДоступныеФункцииФизическогоЛица = ДоступныеФункцииФизическихЛиц.ЭлементОпцийФизическогоЛица(ТекущееФизлицо)
    если ДоступныеФункцииФизическогоЛица != Неопределено
        ПараметрыСеанса.ИспользуетКэдо = ДоступныеФункцииФизическогоЛица.ИспользуетКэдо
    ; 
    
    исп ПривилегированныйРежим: КонтекстДоступа = КонтекстДоступа.Привилегированный()
    пер ИнфоСистемы = ЛичныеКабинетыПользователей.ИнформационныеСистемыФизическогоЛица(ТекущееФизлицо)
    ПараметрыСеанса.ИнформационныеСистемы.ВставитьВсе(ИнформационныеСистемы.НастройкиСистем(ИнфоСистемы))
    ПривилегированныйРежим.Закрыть()
    ПараметрыСеанса.ФункциональныеОпции = ИспользуемаяФункциональность.ФункциональныеОпции()

    ПараметрыСеанса.ТекущийПользовательАдминистраторАбонента = МенеджерПравДоступа.ЭтоАдминистратор()
    ПараметрыСеанса.ФизическоеЛицо = ПользователиСистемы.ТекущееФизическоеЛицо()

    ПараметрыСеанса.Пол = ДанныеВладельцаКабинета.ДанныеФизлица.ЛичныеДанные.Пол
    ПараметрыСеанса.ЭлектроннаяПочта = ДанныеВладельцаКабинета.ДанныеФизлица.РабочаяКонтактнаяИнформация.ЭлектроннаяПочта
    ПараметрыСеанса.МобильныйТелефон = ДанныеВладельцаКабинета.ДанныеФизлица.РабочаяКонтактнаяИнформация.МобильныйТелефон
    ПараметрыСеанса.ФИО.Фамилия = ДанныеВладельцаКабинета.ДанныеФизлица.ЛичныеДанные.ФИО.Фамилия
    ПараметрыСеанса.ФИО.Имя = ДанныеВладельцаКабинета.ДанныеФизлица.ЛичныеДанные.ФИО.Имя
    ПараметрыСеанса.ФИО.Отчество = ДанныеВладельцаКабинета.ДанныеФизлица.ЛичныеДанные.ФИО.Отчество
    ПараметрыСеанса.ФИО.ИнициалыИмени = ДанныеВладельцаКабинета.ДанныеФизлица.ЛичныеДанные.ФИО.ИнициалыИмени

    пер ФайлМиниатюры: Файлы.Ссылка? = ДанныеВладельцаКабинета.ДанныеФизлица.ЛичныеДанные.Миниатюра
    если ФайлМиниатюры это Файлы.Ссылка
        попытка
            ПараметрыСеанса.Аватар = Файлы.ДвоичныеДанныеФайла(ФайлМиниатюры!).Ссылка
        поймать Ошибка: Исключение
            знч ПредставлениеФИО: Строка = ПараметрыСеанса.ФИО.ПредставлениеИмени(ФизЛица.ВариантПредставленияИмени.ФамилияИмяОтчество)
            Журналирование.ЗарегистрироватьОшибку("ОшибкаПолученияАватара",
                Описание = "Ошибка получения аватара (%ПредставлениеФИО)",
                Причина = Ошибка)
        ;
    ;
    пер РежимПриватностиПриВходе = 
        МобильныйИнтерфейс ? 
            ДанныеВладельцаКабинета.Настройки.РежимОтображенияДанныхПриВходеНаМобильномУстройстве : 
            ДанныеВладельцаКабинета.Настройки.РежимОтображенияДанныхПриВходеВеб
        
    если РежимПриватностиПриВходе == РежимПриватностиПриложенияПриВходе.ОставлятьРежимПрошлогоСеанса
        ПараметрыСеанса.РежимПриватностиПриложения = ДанныеВладельцаКабинета.Настройки.ТекущийРежимПриватности
    иначе 
        ПараметрыСеанса.РежимПриватностиПриложения = РежимПриватностиПриВходе == РежимПриватностиПриложенияПриВходе.СкрыватьДенежныеСуммы
    ;
    ПараметрыСеанса.ДнейДоОтключенияКабинета = ВладельцыКабинетов.ДнейДоОтключенияКабинета(ТекущееФизлицо)
;

метод ФизлицоJsonПоДанныеJson(ДанныеJson: ФизическиеЛица.ДанныеJson): ФизическиеЛица.ФизическоеЛицо_V1_0
    знч ФизлицоJson = новый ФизическиеЛица.ФизическоеЛицо_V1_0(
            gender = ДанныеJson.gender,
            ID = ДанныеJson.ID,
            lastName = ДанныеJson.lastName)
            
    ФизлицоJson.birthDate = ДанныеJson.birthDate
    ФизлицоJson.birthPlace = ДанныеJson.birthPlace
    ФизлицоJson.eMail = ДанныеJson.eMail
    ФизлицоJson.firstName = ДанныеJson.firstName
    ФизлицоJson.identityDocument = ДанныеJson.identityDocument
    ФизлицоJson.initials = ДанныеJson.initials
    ФизлицоJson.insuranceNumber = ДанныеJson.insuranceNumber
    ФизлицоJson.mobilePhoneNumber = ДанныеJson.mobilePhoneNumber
    ФизлицоJson.patronymic = ДанныеJson.patronymic
    ФизлицоJson.phoneNumber = ДанныеJson.phoneNumber
    ФизлицоJson.picture = ДанныеJson.picture
    ФизлицоJson.presentationForms = ДанныеJson.presentationForms
    ФизлицоJson.registrationAddress = ДанныеJson.registrationAddress
    ФизлицоJson.residentialAddress = ДанныеJson.residentialAddress
    ФизлицоJson.skype = ДанныеJson.skype
    ФизлицоJson.taxID = ДанныеJson.taxID
    
    возврат ФизлицоJson
;

метод ДанныеJsonПоФизлицоJson(ФизлицоJson: ФизическиеЛица.ФизическоеЛицо_V1_1): ФизическиеЛица.ДанныеJson
    знч ДанныеJson = новый ФизическиеЛица.ДанныеJson(
            gender = ФизлицоJson.gender,
            ID = ФизлицоJson.ID,
            lastName = ФизлицоJson.lastName)
            
    ДанныеJson.birthDate = ФизлицоJson.birthDate
    ДанныеJson.birthPlace = ФизлицоJson.birthPlace
    ДанныеJson.eMail = ФизлицоJson.eMail
    ДанныеJson.firstName = ФизлицоJson.firstName
    ДанныеJson.identityDocument = ФизлицоJson.identityDocument
    ДанныеJson.initials = ФизлицоJson.initials
    ДанныеJson.insuranceNumber = ФизлицоJson.insuranceNumber
    ДанныеJson.mobilePhoneNumber = ФизлицоJson.mobilePhoneNumber
    ДанныеJson.patronymic = ФизлицоJson.patronymic
    ДанныеJson.phoneNumber = ФизлицоJson.phoneNumber
    ДанныеJson.picture = ФизлицоJson.picture
    ДанныеJson.presentationForms = ФизлицоJson.presentationForms
    ДанныеJson.registrationAddress = ФизлицоJson.registrationAddress
    ДанныеJson.residentialAddress = ФизлицоJson.residentialAddress
    ДанныеJson.skype = ФизлицоJson.skype
    ДанныеJson.taxID = ФизлицоJson.taxID
    
    возврат ДанныеJson
;

метод СпособСвязиПоФизическиеЛицаСпособСвязиJson(СпособСвязи: ФизическиеЛица.СпособСвязиJson): ВладельцыКабинетов.СпособСвязиJson
    выбор СпособСвязи
    когда phone
        возврат ВладельцыКабинетов.СпособСвязиJson.phone
    когда sms
        возврат ВладельцыКабинетов.СпособСвязиJson.sms
    когда eMail
        возврат ВладельцыКабинетов.СпособСвязиJson.eMail
    когда skype
        возврат ВладельцыКабинетов.СпособСвязиJson.skype
    ;
;

метод СпособСвязиПоВладельцыКабинетовСпособСвязиJson(СпособСвязи: ВладельцыКабинетов.СпособСвязиJson): ФизическиеЛица.СпособСвязиJson
    выбор СпособСвязи
    когда phone
        возврат ФизическиеЛица.СпособСвязиJson.phone
    когда sms
        возврат ФизическиеЛица.СпособСвязиJson.sms
    когда eMail
        возврат ФизическиеЛица.СпособСвязиJson.eMail
    когда skype
        возврат ФизическиеЛица.СпособСвязиJson.skype
    ;
;

метод ДоступФизлицаПоДоступностьКонтактнойИнформацииJson(Доступ: ВладельцыКабинетов.ДоступностьКонтактнойИнформацииJson): ФизическиеЛица.ДоступностьКонтактнойИнформацииJson
    выбор Доступ
    когда grantEveryone
        возврат ФизическиеЛица.ДоступностьКонтактнойИнформацииJson.grantEveryone
    когда grantDivisionHeads
        возврат ФизическиеЛица.ДоступностьКонтактнойИнформацииJson.grantDivisionHeads
    когда grantPeers
        возврат ФизическиеЛица.ДоступностьКонтактнойИнформацииJson.grantPeers
    ;
;

метод ПодчиненныйОбъект(
        ФизическоеЛицоСсылка: ФизическиеЛица.Ссылка,
        ПодчиненныйОбъектСсылка: НастройкиФизическихЛиц.Ссылка|ОграниченияДоступаКРабочимКонтактам.Ссылка?,
        КонструкторОбъекта: (Ууид)->Объект): НастройкиФизическихЛиц.Объект|ОграниченияДоступаКРабочимКонтактам.Объект
    
    пер ПодчиненнаяСсылка: неизвестно = ПодчиненныйОбъектСсылка   
    пер ПодчиненныйОбъект: неизвестно
        
    если ПодчиненнаяСсылка == Неопределено 
        ПодчиненныйОбъект = КонструкторОбъекта(новый Ууид())
        ПодчиненныйОбъект.Владелец = ФизическоеЛицоСсылка
    иначе
        ПодчиненныйОбъект = ПодчиненнаяСсылка.ЗагрузитьОбъект()
        если ПодчиненныйОбъект == Неопределено
            ПодчиненныйОбъект = КонструкторОбъекта(ПодчиненнаяСсылка.Ууид)
            ПодчиненныйОбъект.Владелец = ФизическоеЛицоСсылка
        ;
    ;
    возврат ПодчиненныйОбъект как  НастройкиФизическихЛиц.Объект|ОграниченияДоступаКРабочимКонтактам.Объект
;

метод ДанныеФизическогоЛица(Ссылка: ФизическиеЛица.Ссылка): ВладельцыКабинетов.ДанныеВладельцаКабинета
    знч ЗапрашиваемыеДанные: ВладельцыКабинетов.ЗапрашиваемыеДанныеВладельцевКабинетов
    ЗапрашиваемыеДанные.Настройки = Истина
    ЗапрашиваемыеДанные.НастройкиДоступа = Истина
    знч ДанныеФизлица = ВладельцыКабинетов.ДанныеВладельцаКабинета(Ссылка, ЗапрашиваемыеДанные)
    возврат  ДанныеФизлица
;

метод ОбновитьГруппыДоступаКонтактнойИнформацииСотрудниковПодразделений(МассивОбъектовОтложенногоОбновления: Массив<ВебApiСервер.ОбъектОтложенногоОбновления>)

    пер ОбрабатываемыеПодразделения: Массив<СтруктураПредприятия.Ссылка>
    пер ЗагруженныеСотрудники = новый Массив<Сотрудники.Ссылка>()
    для ОбъектОтложенногоОбновления из МассивОбъектовОтложенногоОбновления
        ЗагруженныеСотрудники.Добавить(ОбъектОтложенногоОбновления.ОбновляемыйОбъект как Сотрудники.Ссылка)
        если ОбъектОтложенногоОбновления.ЗависимыйОбъект это СтруктураПредприятия.Ссылка
            ОбрабатываемыеПодразделения.Добавить(ОбъектОтложенногоОбновления.ЗависимыйОбъект как СтруктураПредприятия.Ссылка)
        ;
    ;
    пер ТекущиеПодразделения = ОрганизационнаяСтруктура.ПодразделенияСотрудников(ЗагруженныеСотрудники).Значения()
    ОбрабатываемыеПодразделения.ДобавитьВсе(ТекущиеПодразделения)
    если ОбрабатываемыеПодразделения.Пусто()
        возврат
    ;
    знч ФизическиеЛицаСотрудников: Множество<ФизическиеЛица.Ссылка> =
        ОрганизационнаяСтруктура.ФизическиеЛицаПодразделений(новый Множество<СтруктураПредприятия.Ссылка>(ОбрабатываемыеПодразделения))
    ОбновитьГруппыДоступаКонтактнойИнформацииФизическихЛиц(ФизическиеЛицаСотрудников)
;

/**
Описание: Обновляет автоматически поддерживаемые группы доступа к контактной информации физических лиц.
Параметры: ВладельцыКонтактнойИнформации - массив, ссылки на физических лиц, контактная информация которых обновляется. 
СмТакже: (*ОбновитьГруппуДоступаКонтактнойИнформации)
*/
метод ОбновитьГруппыДоступаКонтактнойИнформацииФизическихЛиц(ВладельцыКонтактнойИнформации: Множество<ФизическиеЛица.Ссылка>)
    если ВладельцыКонтактнойИнформации.Пусто()
        возврат
    ;
    ОграниченияДоступаКЛичнымКонтактам.ОбновитьГруппыДоступаКонтактнойИнформации(ВладельцыКонтактнойИнформации)
    ОграниченияДоступаКРабочимКонтактам.ОбновитьГруппыДоступаКонтактнойИнформации(ВладельцыКонтактнойИнформации)
;

// Контракт ДанныеПодписанияСервис
@ВПроекте
@Реализация
метод ДанныеОрганизации(ДокументСсылка: ДокументПодписываемыйВСервисеПодписания.Ссылка): Соответствие<Строка, ОрганизацияПодписываемогоДокумента.Ссылка?>?
    если ДокументСсылка это ЗапросИзмененияЛичныхДанных.Ссылка или ДокументСсылка это СогласиеНаПрисоединениеККэдо.Ссылка
        возврат {"" : МенеджерСущности.ЗначениеРеквизитаОбъекта(ДокументСсылка как Справочник.Ссылка, "Организация")}
    ;
    возврат Неопределено
;

@ВПроекте
@Реализация
метод ДанныеДокументов(ДокументСсылка: ДокументПодписываемыйВСервисеПодписания.Ссылка): Массив<ДокументПодписываемыйВСервисеПодписания.Ссылка>?
    возврат Неопределено
;
// Конец ДанныеПодписанияСервис

// Контракт ОбновлениеДанныхСервис

@ВПроекте
@Реализация
метод УстановитьПризнакТребуетсяОбновление(ФизическоеЛицо: ФизическиеЛица.Ссылка)
    ВладельцыКабинетов.УстановитьПризнакТребуетсяОбновление(ФизическоеЛицо, Истина)
;

// Конец ОбновлениеДанныхСервис

// Контракт ИсходящиеДокументыСОписанием

@ВПроекте
@Реализация
метод ДокументСнабжаетсяФайломОписания(СсылкаНаДокумент: Сущность.Ключ): Булево
    если СсылкаНаДокумент это ЗапросИзмененияЛичныхДанных.Ссылка
        возврат Истина
    ;
    возврат Ложь
;

@ВПроекте
@Реализация
метод ДанныеДляПодготовкиОписаний(СсылкаНаДокумент: Сущность.Ключ): Соответствие<Строка, Согласования.ДанныеДляПодготовкиОписания>?
    
    если СсылкаНаДокумент это ЗапросИзмененияЛичныхДанных.Ссылка
        возврат ЗапросИзмененияЛичныхДанных.ДанныеДокументаДляПодготовкиОписаний(СсылкаНаДокумент)
    ;
    возврат Неопределено
;

// Конец ИсходящиеДокументыСОписанием

// Контракт ПоставщикШаблонов

@ВПроекте
@Реализация
метод ДанныеШаблонаДокумента(ДокументСсылка: Справочник.Ссылка, ДополнительныеПараметры: Соответствие<Строка, Объект>? = Неопределено): ШаблоныДокументовМенеджер.ДанныеДляШаблонаПечатнойФормы?
    выбор ДокументСсылка
    когда это ЗапросИзмененияЛичныхДанных.Ссылка
        знч Ид = УниверсальныеМеханизмы.Ид(ВладельцыКабинетов.ПОДСИСТЕМА_ВЛАДЕЛЬЦЫ_КАБИНЕТОВ, ВладельцыКабинетов.ШАБЛОН_ЗАЯВЛЕНИЯ_НА_ИЗМЕНЕНИЕ_ЛИЧНЫХ_ДАННЫХ)
        пер ДанныеДляШаблона = новый ШаблоныДокументовМенеджер.ДанныеДляШаблонаПечатнойФормы(
            УниверсальныеМеханизмы.ДвоичныеДанные(Ид),
            УсловияВыводаОбластейШаблонов.УсловияВыводаОбластей(Ид),
            ЗапросИзмененияЛичныхДанных.ДанныеДокументаДляПечатнойФормы(ДокументСсылка))
        ШаблоныДокументовМенеджер.ДополнитьДанныеДополнительнымиРеквизитами(ДанныеДляШаблона, ДокументСсылка, Ид)
        возврат ДанныеДляШаблона
    ;
    возврат Неопределено
;

@ВПроекте
@Реализация
метод ДополнитьДанныеШаблонаДокумента(ДокументСсылка: Справочник.Ссылка, ДанныеДокумента: Соответствие<Строка, ШаблоныДокументовМенеджер.ДанныеПечатныхФорм>): Булево
    выбор ДокументСсылка
    когда это ЗапросИзмененияЛичныхДанных.Ссылка
        ЗапросИзмененияЛичныхДанных.ДополнитьДанныеДокументаДляПечатнойФормы(ДанныеДокумента)
        возврат Истина
    ;
    возврат Ложь
;

// Конец ПоставщикШаблонов

// Контракт ПоставщикДанныхДляСервисаСтатистики

@ВПроекте
@Реализация
метод СтатистикаРасчетныхЛистов(): Массив<ПоказателиСтатистики.РасчетныеЛистки>
    возврат []
;

@ВПроекте
@Реализация
метод СтатистикаЛичныхКабинетов(): Массив<ПоказателиСтатистики.ЛичныеКабинеты>
    пер ЛичныеКабинетыСтатистика: Массив<ПоказателиСтатистики.ЛичныеКабинеты>
    знч Запрос = Запрос{
        Выбрать 
        Выбор 
        Когда ЛичныеКабинеты.Доступность == ДоступностьЛичногоКабинета.ВременноОтключен
            Тогда СостоянияКабинетов.ВременноОтключен
        Когда ЛичныеКабинеты.Состояние == СостоянияЛичногоКабинета.Активирован 
            Тогда СостоянияКабинетов.Активирован 
        Когда ЛичныеКабинеты.ДатаОтправкиПриглашения != Неопределено
            Тогда СостоянияКабинетов.ОтправленоПриглашение
        Иначе 
            СостоянияКабинетов.Новый 
        Конец Как СостояниеЛичногоКабинета,
        Количество(*) Как Количество
    Из ЛичныеКабинеты Как ЛичныеКабинеты
    Сгруппировать По 
        Выбор 
        Когда ЛичныеКабинеты.Доступность == ДоступностьЛичногоКабинета.ВременноОтключен
            Тогда СостоянияКабинетов.ВременноОтключен
        Когда ЛичныеКабинеты.Состояние == СостоянияЛичногоКабинета.Активирован 
            Тогда СостоянияКабинетов.Активирован 
        Когда ЛичныеКабинеты.ДатаОтправкиПриглашения != Неопределено
            Тогда СостоянияКабинетов.ОтправленоПриглашение
        Иначе 
            СостоянияКабинетов.Новый 
        Конец}
    исп РезультатЗапроса = Запрос.Выполнить()
    для РезультатЗапросаСтрока из РезультатЗапроса
        ЛичныеКабинетыСтатистика.Добавить(
            новый ПоказателиСтатистики.ЛичныеКабинеты(
                РезультатЗапросаСтрока.СостояниеЛичногоКабинета, 
                РезультатЗапросаСтрока.Количество))
    ;
    возврат ЛичныеКабинетыСтатистика
;

// Конец ПоставщикДанныхДляСервисаСтатистики


// Контракт ПоставщикОбщихДанныхДляПечатныхФорм

@ВПроекте
@Реализация
метод ДополнитьДанныеДокументаОбщимиДанными(ДанныеДокумента: ШаблоныДокументовМенеджер.ДанныеДляШаблонаПечатнойФормы)
    
    пер ФизическоеЛицо = ФизЛица.ФизическоеЛицоДанныхДокумента(ДанныеДокумента, ПользователиСистемы.ТекущееФизическоеЛицо())
    если ФизическоеЛицо == Неопределено
        возврат
    ;
    
    пер ДанныеШаблонов = новый Соответствие<Строка, Объект?>()
    
    знч ЗапрашиваемыеДанные: ФизЛица.ЗапрашиваемыеДанныеФизическихЛиц
    ЗапрашиваемыеДанные.ЛичныеДанные = Истина
    ЗапрашиваемыеДанные.ПерсональныеДанные = Истина
    ЗапрашиваемыеДанные.УдостоверениеЛичности = Истина
    знч ДанныеФизическогоЛица = ФизЛица.ДанныеФизическогоЛица(ФизическоеЛицо, ЗапрашиваемыеДанные)
    
    ДанныеШаблонов.Вставить("ДанныеСотрудникаПол", ДанныеФизическогоЛица.ЛичныеДанные.Пол)
    ДанныеШаблонов.Вставить("ДанныеСотрудникаФИОИмя", ДанныеФизическогоЛица.ЛичныеДанные.ФИО.Имя)
    ДанныеШаблонов.Вставить("ДанныеСотрудникаФИОИнициалыИмени", ДанныеФизическогоЛица.ЛичныеДанные.ФИО.ИнициалыИмени)
    ДанныеШаблонов.Вставить("ДанныеСотрудникаФИООтчество", ДанныеФизическогоЛица.ЛичныеДанные.ФИО.Отчество)
    ДанныеШаблонов.Вставить("ДанныеСотрудникаФИОФамилия", ДанныеФизическогоЛица.ЛичныеДанные.ФИО.Фамилия)
    ДанныеШаблонов.Вставить("ДанныеСотрудникаФИОФИОПолные", ДанныеФизическогоЛица.ЛичныеДанные.ФИО.ПредставлениеИмени())
    
    ДанныеШаблонов.Вставить("ДанныеСотрудникаДокумент", ФизЛица.ПредставлениеУдостоверенияЛичности(ДанныеФизическогоЛица.УдостоверениеЛичности))
    ДанныеШаблонов.Вставить("ДанныеСотрудникаДокументСерия", ДанныеФизическогоЛица.УдостоверениеЛичности.Серия)
    ДанныеШаблонов.Вставить("ДанныеСотрудникаДокументНомер", ДанныеФизическогоЛица.УдостоверениеЛичности.Номер)
    ДанныеШаблонов.Вставить("ДанныеСотрудникаДокументДатаВыдачи", ДанныеФизическогоЛица.УдостоверениеЛичности.ДатаВыдачи)
    ДанныеШаблонов.Вставить("ДанныеСотрудникаДокументСтрана", ДанныеФизическогоЛица.УдостоверениеЛичности.Страна)
    ДанныеШаблонов.Вставить("ДанныеСотрудникаДокументВидУдостоверенияЛичности", ДанныеФизическогоЛица.УдостоверениеЛичности.Вид)
    ДанныеШаблонов.Вставить("ДанныеСотрудникаДокументВыдавшийОрган", ДанныеФизическогоЛица.УдостоверениеЛичности.ВыдавшийОрган)
    ДанныеШаблонов.Вставить("ДанныеСотрудникаДокументКодВыдавшегоОргана", ДанныеФизическогоЛица.УдостоверениеЛичности.КодВыдавшегоОргана)

    УниверсальныеМеханизмы.ДобавитьВДанныеДляПечатиПредставленияВПадежах(ДанныеШаблонов,
        "ДанныеСотрудникаФИОФИОПолные", ФизическоеЛицо)

    ДанныеШаблонов.Вставить("ДанныеСотрудникаИНН", ДанныеФизическогоЛица.ПерсональныеДанные.ИНН)
    ДанныеШаблонов.Вставить("ДанныеСотрудникаСНИЛС", ДанныеФизическогоЛица.ПерсональныеДанные.СНИЛС)
    ДанныеШаблонов.Вставить("ДанныеСотрудникаДатаРождения", ДанныеФизическогоЛица.ПерсональныеДанные.ДатаРождения)
    
    если ДанныеФизическогоЛица.ПерсональныеДанные.ДатаРождения != Неопределено
        ДанныеШаблонов.Вставить("ДанныеСотрудникаВозраст", ФизЛица.ПолныхЛет(
            ДанныеФизическогоЛица.ПерсональныеДанные.ДатаРождения,
            МенеджерДат.ТекущаяДатаВремя().ВДатаВремя(МенеджерДат.ЧасовойПоясТекущий()).Дата))
    ;       
        
    для ДанныеИдентификатора из ДанныеДокумента.ДанныеОбъекта
        ДанныеИдентификатора.Значение.Данные.ВставитьВсе(ДанныеШаблонов)
    ;
;

// Конец ПоставщикОбщихДанныхДляПечатныхФорм