импорт ОбщиеСтандартные
импорт КонтрольДоступа
импорт Уведомления
импорт ФизическиеЛица

//Область РазрешенияДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): Массив<РазрешениеДоступа>
    возврат [КонтрольДоступа.ЧтениеИРедактированиеАутентифицированным(этот),
            КонтрольДоступа.ПолныйДоступИнформационнойСистеме(этот)]
;

@Обработчик
метод ВычислитьРазрешенияДоступаДляОбъектов(Элементы: ЧитаемыйМассив<НастройкиФизическихЛиц.ДанныеРасчетаРазрешений>): ЧитаемоеСоответствие<НастройкиФизическихЛиц.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    знч Разрешения: Соответствие<НастройкиФизическихЛиц.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    для Элемент из Элементы
        знч РазрешенияЭлемента: Множество<РазрешениеДоступа>
        РазрешенияЭлемента.Добавить(КонтрольДоступа.ПолныйДоступИнформационнойСистеме(этот))
        РазрешенияЭлемента.ДобавитьВсе(КонтрольДоступа.ЧтениеРедактированиеДанныхСправочниковПерсонально([Элемент.Владелец]))
        Разрешения.Вставить(Элемент, РазрешенияЭлемента)
    ;
    
    возврат Разрешения     
;

//КонецОбласти

//Область СлужебныйПрограммныйИнтерфейс

@ВПодсистеме
метод Заполнить(Настройки: НастройкиФизическихЛиц.Объект, ДанныеФизлица: ВладельцыКабинетов.ДанныеВладельцаКабинета)
    если ДанныеФизлица.Настройки.ПредпочтительныйСпособСвязи != Неопределено
        Настройки.ПредпочтительныйСпособСвязи = ДанныеФизлица.Настройки.ПредпочтительныйСпособСвязи
    ;
;

@ВПодсистеме
метод ЧасовойПоясФизическогоЛица(ФизическоеЛицо: ФизическиеЛица.Ссылка): ЧасовойПояс
    знч ЗапрашиваемыеДанные: ВладельцыКабинетов.ЗапрашиваемыеДанныеВладельцевКабинетов
    ЗапрашиваемыеДанные.ТекущееСмещениеКлиента = Истина
    знч ДанныеФизлица = ВладельцыКабинетов.ДанныеВладельцаКабинета(ФизическоеЛицо, ЗапрашиваемыеДанные)
    возврат МенеджерДат.ЧасовойПоясПоСмещению(ДанныеФизлица.ТекущееСмещениеКлиента)
;

@ВПодсистеме
метод СоздатьНастройкиПоУмолчанию(ФизическоеЛицо: ФизическиеЛица.Ссылка): НастройкиФизическихЛиц.Ссылка
    знч НастройкиФизическогоЛица = НастройкиФизическогоЛица(ФизическоеЛицо)
    если НастройкиФизическогоЛица != Неопределено
        возврат НастройкиФизическогоЛица
    ;
    
    знч НастройкиФизическогоЛицаОбъект = новый НастройкиФизическихЛиц.Объект()
    НастройкиФизическогоЛицаОбъект.Владелец = ФизическоеЛицо
    НастройкиФизическогоЛицаОбъект.ПредпочтительныйСпособСвязи = СпособыСвязи.Звонок
    НастройкиФизическогоЛицаОбъект.Записать()
    
    возврат НастройкиФизическогоЛицаОбъект.Ссылка
;

@ВПодсистеме
метод УстановитьЗначениеРеквизита(НастройкиФизическогоЛица: НастройкиФизическихЛиц.Ссылка, ИмяРеквизита: Строка, ЗначениеРеквизита: неизвестно, Владелец: ФизическиеЛица.Ссылка)
    УстановитьЗначениеРеквизитов(НастройкиФизическогоЛица, {ИмяРеквизита: ЗначениеРеквизита}, Владелец)
;

метод УстановитьЗначениеРеквизитов(НастройкиФизическогоЛица: НастройкиФизическихЛиц.Ссылка, ЗначенияРеквизитов: ЧитаемоеСоответствие<Строка, Объект?>, Владелец: ФизическиеЛица.Ссылка)
    УстановитьЗначениеРеквизитовНастроек(Владелец, ЗначенияРеквизитов)
;

метод УстановитьЗначениеРеквизитовНастроек(ФизическоеЛицо: ФизическиеЛица.Ссылка, ЗначенияРеквизитов: ЧитаемоеСоответствие<Строка, Объект?>, НастройкиФизическогоЛица: НастройкиФизическихЛиц.Ссылка? = Неопределено)
    пер НастройкиФизическогоЛицаОбъект: НастройкиФизическихЛиц.Объект?
    если НастройкиФизическогоЛица == Неопределено
        НастройкиФизическогоЛица = НастройкиФизическогоЛица(ФизическоеЛицо)
    ;

    исп Транзакции.Начать()
    если НастройкиФизическогоЛица != Неопределено
       НастройкиФизическогоЛицаОбъект = НастройкиФизическогоЛица.ЗагрузитьОбъект(Истина)
    ;
    если НастройкиФизическогоЛицаОбъект == Неопределено
        НастройкиФизическогоЛицаОбъект = новый НастройкиФизическихЛиц.Объект()
        НастройкиФизическогоЛицаОбъект.Владелец = ФизическоеЛицо
    ;
    пер НастройкиИзменены: Булево
    для Значение из ЗначенияРеквизитов
        если (НастройкиФизическогоЛицаОбъект как неизвестно)[Значение.Ключ] != Значение.Значение 
            (НастройкиФизическогоЛицаОбъект как неизвестно)[Значение.Ключ] = Значение.Значение
            НастройкиИзменены = Истина
        ;
    ;
    если НастройкиИзменены
        НастройкиФизическогоЛицаОбъект.Записать()
    ;
;

@ВПодсистеме
метод НастройкиФизическогоЛица(ФизическоеЛицо: ФизическиеЛица.Ссылка): НастройкиФизическихЛиц.Ссылка?
    пер СсылкаПоФизлицу: НастройкиФизическихЛиц.Ссылка?
    знч Запрос = Запрос{
        Выбрать Ссылка
        Из НастройкиФизическихЛиц
        Где Владелец == %ФизическоеЛицо}
    исп Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        СсылкаПоФизлицу = СтрокаРезультата.Ссылка
    ;
    
    возврат СсылкаПоФизлицу
;

//КонецОбласти

//Область ОбработчикиОбновления

@ВПодсистеме
метод ЗаполнитьДанныеФизическихЛиц(
        ЗапрашиваемыеДанные: ВладельцыКабинетов.ЗапрашиваемыеДанныеВладельцевКабинетов, 
        ДанныеФизическихЛиц: Соответствие<ФизическиеЛица.Ссылка, ВладельцыКабинетов.ДанныеВладельцаКабинета>)
    
    знч НастройкиУведомленийФизическихЛиц = Уведомления.НастройкиУведомленийФизическихЛиц(ДанныеФизическихЛиц.Ключи())
    если ЗапрашиваемыеДанные.ТекущееСмещениеКлиента и не ЗапрашиваемыеДанные.Настройки
        для ДанныеФизическогоЛица из ДанныеФизическихЛиц
            ДанныеФизическогоЛица.Значение.ТекущееСмещениеКлиента =
                НастройкиУведомленийФизическихЛиц.ПолучитьИлиУмолчание(ДанныеФизическогоЛица.Ключ)?.ТекущееСмещениеКлиента ?? 0
        ;
    иначе если ЗапрашиваемыеДанные.Настройки
        знч Запрос = Запрос{
            Выбрать 
                ПредпочтительныйСпособСвязи,
                РежимОтображенияДанныхПриВходеВеб,
                РежимОтображенияДанныхПриВходеНаМобильномУстройстве,
                ТекущийРежимПриватности,
                Владелец
            Из НастройкиФизическихЛиц Как НастройкиФизическихЛиц
            Где НастройкиФизическихЛиц.Владелец В (%{ДанныеФизическихЛиц.Ключи()})}
        исп Результат = Запрос.Выполнить()
        для РезультатСтрока из Результат
            пер ДанныеФизическогоЛица: ВладельцыКабинетов.ДанныеВладельцаКабинета = ДанныеФизическихЛиц[РезультатСтрока.Владелец]
            ДанныеФизическогоЛица.Настройки.ПредпочтительныйСпособСвязи = РезультатСтрока.ПредпочтительныйСпособСвязи
            ДанныеФизическогоЛица.Настройки.РежимОтображенияДанныхПриВходеВеб = РезультатСтрока.РежимОтображенияДанныхПриВходеВеб
            ДанныеФизическогоЛица.Настройки.РежимОтображенияДанныхПриВходеНаМобильномУстройстве = РезультатСтрока.РежимОтображенияДанныхПриВходеНаМобильномУстройстве
            ДанныеФизическогоЛица.Настройки.ТекущийРежимПриватности = РезультатСтрока.ТекущийРежимПриватности
            знч НастройкиУведомленияФизическогоЛица = НастройкиУведомленийФизическихЛиц.ПолучитьИлиУмолчание(РезультатСтрока.Владелец)
            
            если НастройкиУведомленияФизическогоЛица != Неопределено 
                и НастройкиУведомленияФизическогоЛица.ПредпочтительныйСпособУведомления != СпособыУведомления.НеУведомлять
                
                ДанныеФизическогоЛица.Настройки.ПредпочтительныйСпособУведомления = НастройкиУведомленияФизическогоЛица.ПредпочтительныйСпособУведомления
                знч ВремяПолученияУведомлений = Уведомления.НастройкиУведомлений(НастройкиУведомленияФизическогоЛица.ПредпочтительныйСпособУведомления).ВремяПолученияУведомлений
                ДанныеФизическогоЛица.Настройки.ВремяНачалаПолученияУведомлений =
                    НастройкиУведомленияФизическогоЛица.ВремяНачалаПолученияУведомлений ?? ВремяПолученияУведомлений.От
                    
                ДанныеФизическогоЛица.Настройки.ВремяОкончанияПолученияУведомлений =
                    НастройкиУведомленияФизическогоЛица.ВремяОкончанияПолученияУведомлений ?? ВремяПолученияУведомлений.До
                    
                ДанныеФизическогоЛица.ТекущееСмещениеКлиента = НастройкиУведомленияФизическогоЛица.ТекущееСмещениеКлиента
            ;
        ;
    ;
;

@ВПодсистеме
метод ПеренестиНастройкиУведомлений()
    знч Запрос = Запрос{
        Выбрать
            Владелец,
            ПредпочтительныйСпособУведомленияУстарело,
            ВремяНачалаПолученияУведомленийУстарело,
            ВремяОкончанияПолученияУведомленийУстарело,
            ТекущееСмещениеКлиентаУстарело
        Из
            НастройкиФизическихЛиц    
    }
    
    исп Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        Уведомления.УстановитьНастройкиУведомленийФизическогоЛица(СтрокаРезультата.Владелец,
        новый Уведомления.НастройкиУведомленийФизическихЛиц(
            СтрокаРезультата.ПредпочтительныйСпособУведомленияУстарело,
            СтрокаРезультата.ВремяНачалаПолученияУведомленийУстарело,
            СтрокаРезультата.ВремяОкончанияПолученияУведомленийУстарело,
            СтрокаРезультата.ТекущееСмещениеКлиентаУстарело
        ))
    ;
;

//КонецОбласти
