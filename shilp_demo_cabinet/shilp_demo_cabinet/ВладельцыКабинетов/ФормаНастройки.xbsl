импорт СтандартноеПриложение
импорт ИнтерфейсныеКомпонентыСтандартные
импорт ОбщегоНазначения
импорт ФизическиеЛица
импорт ЛичныеКабинетыПользователей
импорт Компания::Согласования
импорт КонтрольДоступа
импорт Уведомления

@НаСервере @НаКлиенте
структура ДанныеЗаполненияФормы
    обз знч НастройкиФизическогоЛица: НастройкиФизическихЛиц.Ссылка?
    обз знч НастройкиВидимостиЛичныхДанных: НастройкиВидимостиКонтактнойИнформации
    обз знч НастройкиУведомлений: НастройкиУведомлений
;

@НаСервере @НаКлиенте
структура НастройкиУведомлений
    пер ПредпочтительныйСпособУведомления: СпособыУведомления = СпособыУведомления.Push
    пер ВремяНачалаПолученияУведомлений: Время = Уведомления.ВРЕМЯ_НАЧАЛА_УВЕДОМЛЕНИЙ
    пер ВремяОкончанияПолученияУведомлений: Время = Уведомления.ВРЕМЯ_ОКОНЧАНИЯ_УВЕДОМЛЕНИЙ
;

@Обработчик
метод ПослеСоздания()
    пер ВладелецНастроек = ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо
    ФизическоеЛицоОбъект = ОбъектФизическогоЛица(ВладелецНастроек)
    
    ПрочитатьНастройкиВФорму()
    
    пер ТабличныеЧасти = ДанныеТабличныхЧастей(ВладелецНастроек)
    ТаблицаЗаместители = ТабличныеЧасти.ТаблицаЗаместители
    ТаблицаУведомляемые = ТабличныеЧасти.ТаблицаУведомляемые
    
    ВидСогласуемогоЗаявления = ВидыСогласуемыхЗаявлений().Первый()
    
    ИнтерфейсныеКомпоненты.ИнициализироватьПодчиненныеКомпоненты(Компоненты)
    Компоненты.ГруппыРассылок.Инициализировать(ВладелецНастроек)
;   

метод ПрочитатьНастройкиВФорму()
    пер ДанныеДляЗаполненияФорма = ДанныеДляЗаполненияФормы(ФизическоеЛицоОбъект.Ссылка)
    НастройкиФизическогоЛица = ОбъектНастроекФизическогоЛица(ДанныеДляЗаполненияФорма.НастройкиФизическогоЛица)
    
    ПредпочтительныйСпособСвязи = НастройкиФизическогоЛица.ПредпочтительныйСпособСвязи
    ПредпочтительныйСпособУведомления = ДанныеДляЗаполненияФорма.НастройкиУведомлений.ПредпочтительныйСпособУведомления
    РежимОтображенияДанныхПриВходеВеб = НастройкиФизическогоЛица.РежимОтображенияДанныхПриВходеВеб
    РежимОтображенияДанныхПриВходеНаМобильномУстройстве = НастройкиФизическогоЛица.РежимОтображенияДанныхПриВходеНаМобильномУстройстве
    
    пер ВремяНачалаПолученияУведомлений: Время? = ДанныеДляЗаполненияФорма.НастройкиУведомлений.ВремяНачалаПолученияУведомлений
    пер ВремяОкончанияПолученияУведомлений: Время? = ДанныеДляЗаполненияФорма.НастройкиУведомлений.ВремяОкончанияПолученияУведомлений
    если ВремяНачалаПолученияУведомлений == Неопределено 
        ВремяНачалаПолученияУведомлений = Уведомления.ВРЕМЯ_НАЧАЛА_УВЕДОМЛЕНИЙ
    ;
    если ВремяОкончанияПолученияУведомлений == Неопределено 
        ВремяОкончанияПолученияУведомлений = Уведомления.ВРЕМЯ_ОКОНЧАНИЯ_УВЕДОМЛЕНИЙ
    ;

    ВремяПолученияУведомлений = новый ЗакрытыйДиапазон<Время>(
        ВремяНачалаПолученияУведомлений,
        ВремяОкончанияПолученияУведомлений
    )
    
    НастройкаВидимостиЛичнойКонтактнойИнформации = ДанныеДляЗаполненияФорма.НастройкиВидимостиЛичныхДанных
;

метод ПредпочтительныйСпособСвязиПриИзмененииЗначения(Источник: ПолеВвода<СпособыСвязи>, Событие: СобытиеПриИзменении<СпособыСвязи>)
    если ПредпочтительныйСпособСвязи != НастройкиФизическогоЛица.ПредпочтительныйСпособСвязи
        УстановитьПредпочтительныйСпособСвязи(НастройкиФизическогоЛица.Ссылка, ПредпочтительныйСпособСвязи, ФизическоеЛицоОбъект.Ссылка)
        НастройкиФизическогоЛица.ПредпочтительныйСпособСвязи = ПредпочтительныйСпособСвязи 
    ;
;

метод ПредпочтительныйСпособУведомленияПриИзмененииЗначения(Источник: ПолеВвода<СпособыУведомления?>, Событие: СобытиеПриИзменении<СпособыУведомления?>)
    УстановитьПредпочтительныйСпособУведомления(ПредпочтительныйСпособУведомления, ФизическоеЛицоОбъект.Ссылка)
;

метод ДоступныеСпособыУведомления(): Массив<ЭлементСпискаЗначений<СпособыУведомления?>>
    знч ДоступныеСпособыУведомлений = новый Множество<СпособыУведомления>(ДоступныеПользователюСпособыУведомления())
    ДоступныеСпособыУведомлений.Добавить(СпособыУведомления.НеУведомлять)
    знч Результат = новый Массив<ЭлементСпискаЗначений<СпособыУведомления?>>()
    для Способ из ДоступныеСпособыУведомлений
        Результат.Добавить(
            новый ЭлементСпискаЗначений<СпособыУведомления?>(
                Значение = Способ,
                Представление = Способ.Представление()
            )
        )
    ;
    
    возврат Результат
;

метод ВремяПолученияУведомленийПриИзменении(Источник: ПолеВвода<ЗакрытыйДиапазон<Время>?>, Событие: СобытиеПриИзменении<ЗакрытыйДиапазон<Время>?>)
    если ВремяПолученияУведомлений == Неопределено
        возврат
    ;
    пер ВремяНачала: Время = ВремяПолученияУведомлений.От
    пер ВремяОкончания: Время = ВремяПолученияУведомлений.До    
    если ВремяОкончания < ВремяНачала
        ВремяОкончания += 1д        
    ;

    УстановитьВремяПолученияУведомлений(ВремяНачала, ВремяОкончания, ФизическоеЛицоОбъект.Ссылка)
;

метод РежимОтображенияДанныхПриВходеВебПриИзменении(Источник: ПолеВвода<РежимПриватностиПриложенияПриВходе>, Событие: СобытиеПриИзменении<РежимПриватностиПриложенияПриВходе>)
    если РежимОтображенияДанныхПриВходеВеб != НастройкиФизическогоЛица.РежимОтображенияДанныхПриВходеВеб
        УстановитьРежимОтображенияДанныхПриВходеВеб(НастройкиФизическогоЛица.Ссылка, РежимОтображенияДанныхПриВходеВеб, ФизическоеЛицоОбъект.Ссылка)
        НастройкиФизическогоЛица.РежимОтображенияДанныхПриВходеВеб = РежимОтображенияДанныхПриВходеВеб 
    ;
;

метод РежимОтображенияДанныхПриВходеНаМобильномУстройствеПриИзменении(Источник: ПолеВвода<РежимПриватностиПриложенияПриВходе>, Событие: СобытиеПриИзменении<РежимПриватностиПриложенияПриВходе>)
    если РежимОтображенияДанныхПриВходеНаМобильномУстройстве != НастройкиФизическогоЛица.РежимОтображенияДанныхПриВходеНаМобильномУстройстве
        УстановитьРежимОтображенияДанныхПриВходеНаМобильномУстройстве(НастройкиФизическогоЛица.Ссылка, РежимОтображенияДанныхПриВходеНаМобильномУстройстве, ФизическоеЛицоОбъект.Ссылка)
        НастройкиФизическогоЛица.РежимОтображенияДанныхПриВходеНаМобильномУстройстве = РежимОтображенияДанныхПриВходеНаМобильномУстройстве 
    ;
;

метод НастройкиВидимостиЛичнойКонтактнойИнформацииПриИзменении(Источник: ПолеВвода<НастройкиВидимостиКонтактнойИнформации?>, Событие: СобытиеПриИзменении<НастройкиВидимостиКонтактнойИнформации?>)
    УстановитьНастройкуВидимостиЛичныхКонтактов(
        ФизическоеЛицоОбъект.Ссылка,
        НастройкаВидимостиЛичнойКонтактнойИнформации!
    )    
;

метод ФормаРазделаМаксимальнаяШирина(): Число
    возврат Содержимое.МаксимальнаяШирина
;

метод ФормаРазделаМинимальнаяШирина(): Число
    возврат Содержимое.МинимальнаяШирина
;

метод ПанельМинимальнаяШирина(): Число
    возврат ОсновнойИнтерфейс.МинимальнаяШиринаПанелейПодразделов()
;

метод ПанельМаксимальнаяШирина(): Число
    возврат ОсновнойИнтерфейс.МаксимальнаяШиринаПанелейПодразделов()
;

метод ВремяПолученияУведомленийДоступность(): Булево
    возврат ПредпочтительныйСпособУведомления != СпособыУведомления.НеУведомлять
;

метод ЗаписатьЗаместителей()
    ТаблицаЗаместители = ЗаписатьЗаместителей(ТаблицаЗаместители)
;

метод ЗаписатьУведомляемых()
    ЗаписатьУведомляемых(ТаблицаУведомляемые)
;

метод ЗаместителиСогласованийВидимость(): Булево
    возврат Согласования.СотрудникУчаствуетВСогласованиях(КонтрольДоступа.ПараметрыСеанса().ФизлицоТекущегоПользователя)
;

метод ПояснениеЗаголовок(): Строка
    возврат "Вы можете указать сотрудника, который будет вместо вас или одновременно с вами согласовывать заявления, поступающие вам на согласование."
;

@НаСервере @НаКлиенте
структура ТабличныеЧасти
    пер ТаблицаЗаместители: Заместители?
    пер ТаблицаУведомляемые: Уведомляемые?
;

@НаСервере @ДоступноСКлиента
статический метод ОбъектФизическогоЛица(Физлицо: ФизическиеЛица.Ссылка): ФизическиеЛица.Объект?
    возврат Физлицо.ЗагрузитьОбъект()
;

@НаСервере @ДоступноСКлиента
статический метод ОбъектНастроекФизическогоЛица(НастройкиФизлица: НастройкиФизическихЛиц.Ссылка): НастройкиФизическихЛиц.Объект?
    возврат НастройкиФизлица.ЗагрузитьОбъект()
;

@НаСервере @ДоступноСКлиента
статический метод УстановитьПредпочтительныйСпособСвязи(НастройкиФизическогоЛица: НастройкиФизическихЛиц.Ссылка, ВыбранныйСпособСвязи: СпособыСвязи, Владелец: ФизическиеЛица.Ссылка)
    НастройкиФизическихЛиц.УстановитьЗначениеРеквизита(НастройкиФизическогоЛица, "ПредпочтительныйСпособСвязи", ВыбранныйСпособСвязи, Владелец)
;

@НаСервере @ДоступноСКлиента
статический метод УстановитьПредпочтительныйСпособУведомления(ВыбранныйСпособУведомления: СпособыУведомления, Владелец: ФизическиеЛица.Ссылка)
    Уведомления.УстановитьПредпочтительныйСпособУведомления(Владелец, ВыбранныйСпособУведомления)
;

@НаСервере @ДоступноСКлиента
статический метод УстановитьВремяПолученияУведомлений(ВремяНачалаПолученияУведомлений: Время?, ВремяОкончанияПолученияУведомлений: Время?, Владелец: ФизическиеЛица.Ссылка)
    Уведомления.УстановитьВремяПолученияУведомлений(Владелец, ВремяНачалаПолученияУведомлений, ВремяОкончанияПолученияУведомлений)
;

@НаСервере @ДоступноСКлиента
статический метод УстановитьРежимОтображенияДанныхПриВходеВеб(НастройкиФизическогоЛица: НастройкиФизическихЛиц.Ссылка, РежимОтображенияДанныхПриВходеВеб: РежимПриватностиПриложенияПриВходе, Владелец: ФизическиеЛица.Ссылка)
    НастройкиФизическихЛиц.УстановитьЗначениеРеквизита(НастройкиФизическогоЛица, "РежимОтображенияДанныхПриВходеВеб", РежимОтображенияДанныхПриВходеВеб, Владелец)
;

@НаСервере @ДоступноСКлиента
статический метод УстановитьРежимОтображенияДанныхПриВходеНаМобильномУстройстве(НастройкиФизическогоЛица: НастройкиФизическихЛиц.Ссылка, РежимОтображенияДанныхПриВходеНаМобильномУстройстве: РежимПриватностиПриложенияПриВходе, Владелец: ФизическиеЛица.Ссылка)
    НастройкиФизическихЛиц.УстановитьЗначениеРеквизита(НастройкиФизическогоЛица, "РежимОтображенияДанныхПриВходеНаМобильномУстройстве", РежимОтображенияДанныхПриВходеНаМобильномУстройстве, Владелец)
;

@НаСервере @ДоступноСКлиента
статический метод ДанныеДляЗаполненияФормы(ФизическоеЛицо: ФизическиеЛица.Ссылка): ДанныеЗаполненияФормы
    пер НастройкиФизическогоЛица = НастройкиФизическихЛиц.НастройкиФизическогоЛица(ФизическоеЛицо)
    если НастройкиФизическогоЛица == Неопределено
        НастройкиФизическогоЛица = НастройкиФизическихЛиц.СоздатьНастройкиПоУмолчанию(ФизическоеЛицо)
    ;
    возврат новый ДанныеЗаполненияФормы(
        НастройкиФизическогоЛица = НастройкиФизическогоЛица,
        НастройкиВидимостиЛичныхДанных = ОграниченияДоступаКЛичнымКонтактам.ОграниченияФизическогоЛица(ФизическоеЛицо),
        НастройкиУведомлений = НастройкиУведомлений(ФизическоеЛицо)
    )
;

@НаСервере @ДоступноСКлиента
статический метод НастройкиУведомлений(ФизическоеЛицо: ФизическиеЛица.Ссылка): НастройкиУведомлений
    знч НастройкиУведомлений = новый НастройкиУведомлений()
    знч НастройкиУведомленийФизическогоЛица = Уведомления.НастройкиУведомленийФизическогоЛица(ФизическоеЛицо)
    если НастройкиУведомленийФизическогоЛица == Неопределено
        возврат НастройкиУведомлений
    ;
    НастройкиУведомлений.ПредпочтительныйСпособУведомления = НастройкиУведомленийФизическогоЛица.ПредпочтительныйСпособУведомления
    знч НастройкиУведомленийОбщие = Уведомления.НастройкиУведомлений(НастройкиУведомленийФизическогоЛица.ПредпочтительныйСпособУведомления)
    если НастройкиУведомленийОбщие == Неопределено или НастройкиУведомленийФизическогоЛица.ПредпочтительныйСпособУведомления == СпособыУведомления.НеУведомлять
        возврат НастройкиУведомлений
    ;
    знч ВремяПолученияУведомлений = НастройкиУведомленийОбщие.ВремяПолученияУведомлений
    НастройкиУведомлений.ВремяНачалаПолученияУведомлений = ВремяПолученияУведомлений.От
    НастройкиУведомлений.ВремяОкончанияПолученияУведомлений = ВремяПолученияУведомлений.До
    если НастройкиУведомленийФизическогоЛица.ВремяНачалаПолученияУведомлений != Неопределено
        НастройкиУведомлений.ВремяНачалаПолученияУведомлений = НастройкиУведомленийФизическогоЛица.ВремяНачалаПолученияУведомлений
    ;
    если НастройкиУведомленийФизическогоЛица.ВремяОкончанияПолученияУведомлений != Неопределено
        НастройкиУведомлений.ВремяОкончанияПолученияУведомлений = НастройкиУведомленийФизическогоЛица.ВремяОкончанияПолученияУведомлений
    ;
    возврат НастройкиУведомлений
;

@НаСервере @ДоступноСКлиента
статический метод ДанныеТабличныхЧастей(Владелец: ФизическиеЛица.Ссылка): ТабличныеЧасти
    пер ДанныеТабличныхЧастей: ТабличныеЧасти
    ДанныеТабличныхЧастей.ТаблицаЗаместители = ЗаместителиМенеджер.Заместители(Владелец, Тип<ЗаместителиНаВремяОтсутствия.Ссылка>)
    ДанныеТабличныхЧастей.ТаблицаУведомляемые = НастройкиУведомляемыеОбОтсутствии.Прочитать(Владелец)
    возврат ДанныеТабличныхЧастей
;

@НаСервере @ДоступноСКлиента
статический метод ЗаписатьЗаместителей(ТаблицаЗаместители: Заместители): Заместители
    возврат ЗаместителиМенеджер.Записать(ТаблицаЗаместители, () -> новый ЗаместителиНаВремяОтсутствия.Объект())
;

@НаСервере @ДоступноСКлиента
статический метод ЗаписатьУведомляемых(ТаблицаУведомляемые: Уведомляемые)
    НастройкиУведомляемыеОбОтсутствии.Записать(ТаблицаУведомляемые)
;

@НаСервере @ДоступноСКлиента
статический метод УстановитьНастройкуВидимостиЛичныхКонтактов(ФизическоеЛицо: ФизическиеЛица.Ссылка, НастройкаВидимости: НастройкиВидимостиКонтактнойИнформации)
    ОграниченияДоступаКЛичнымКонтактам.УстановитьНастройкуВидимости(ФизическоеЛицо, НастройкаВидимости)
;

@НаСервере @ДоступноСКлиента
статический метод ДоступныеПользователюСпособыУведомления(): ЧитаемоеМножество<СпособыУведомления>
    возврат Уведомления.НастройкиУведомлений().Ключи()
;

метод ПереключательВидовДокументовПриИзменении(Источник: Переключатель<ВидыСогласуемыхЗаявлений.Ссылка?>, Событие: СобытиеПриИзменении<ВидыСогласуемыхЗаявлений.Ссылка?>)
    Компоненты.ЗаместителиСогласований.Инициализировать()
;

статический метод ВидыСогласуемыхЗаявленийЭлементы(): Массив<ЭлементСпискаЗначений<ВидыСогласуемыхЗаявлений.Ссылка?>>
    знч Результат: Массив<ЭлементСпискаЗначений<ВидыСогласуемыхЗаявлений.Ссылка?>>
    для ВидЗаявления из ВидыСогласуемыхЗаявлений()
        Результат.Добавить(новый ЭлементСпискаЗначений<ВидыСогласуемыхЗаявлений.Ссылка?>(
                Представление = ВидЗаявления.Представление(),
                Значение = ВидЗаявления))
    ;
    возврат Результат
;

@НаСервере @ДоступноСКлиента
статический метод ВидыСогласуемыхЗаявлений(): ЧитаемыйМассив<ВидыСогласуемыхЗаявлений.Ссылка>
    знч Результат: Массив<ВидыСогласуемыхЗаявлений.Ссылка>
    знч Запрос = Запрос{
        Выбрать
            Ссылка
        Из
            ВидыСогласуемыхЗаявлений
        Где
            Не Отключен
            И Настраиваемый
    }
    
    исп ЗапросРезультат = Запрос.Выполнить()
    для СтрокаРезультата из ЗапросРезультат
        Результат.Добавить(СтрокаРезультата.Ссылка)
    ;
    
    возврат Результат
;