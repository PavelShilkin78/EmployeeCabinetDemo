импорт ВебApi
импорт Компания
импорт КонтрольДоступа
импорт Уведомления
импорт ОбщиеСтандартные
импорт Компания::Согласования
импорт УниверсальныеМеханизмы
импорт Документы
импорт ФизическиеЛица
импорт ОбменДанными

//Область РазрешенияДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): Массив<РазрешениеДоступа>
    возврат [КонтрольДоступа.ЧтениеИРедактированиеАутентифицированным(этот),
            КонтрольДоступа.ПолныйДоступИнформационнойСистеме(этот)]      
;

@Обработчик
метод ВычислитьРазрешенияДоступаДляОбъектов(Элементы: ЧитаемыйМассив<СогласиеНаПрисоединениеККэдо.ДанныеРасчетаРазрешений>): ЧитаемоеСоответствие<СогласиеНаПрисоединениеККэдо.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    знч Разрешения: Соответствие<СогласиеНаПрисоединениеККэдо.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    для Элемент из Элементы
        знч РазрешенияЭлемента: Множество<РазрешениеДоступа>
        РазрешенияЭлемента.Добавить(КонтрольДоступа.ПолныйДоступИнформационнойСистеме(этот))
        РазрешенияЭлемента.ДобавитьВсе(КонтрольДоступа.ЧтениеРедактированиеДанныхСправочниковПерсонально([Элемент.ФизическоеЛицо]))
        Разрешения.Вставить(Элемент, РазрешенияЭлемента)
    ;
    возврат Разрешения
;

//КонецОбласти

// Контракт СостояниеДокументовПоставщик

@ВПроекте
@Реализация
метод ПослеЗаписиСостоянияДокумента(ТекущееЗначение: СостояниеДокументов.Объект, ПредыдущееЗначение: СостояниеДокументов.Данные, ПараметрыЗаписи: СостояниеДокументов.ПараметрыЗаписи)
    если ТекущееЗначение.Документ это СогласиеНаПрисоединениеККэдо.Ссылка
        МенеджерЗаданий.ПроверитьАвтозапускЗапланированныхЗаданийВключен()
        ЗапланированныеЗадания.Создать(&ПослеИзмененияСостоянияДополнение,
            ТекущееЗначение.Документ как СогласиеНаПрисоединениеККэдо.Ссылка, ТекущееЗначение.Состояние, ПредыдущееЗначение.Состояние)
            .Настроить(Ключ = МенеджерЗаданий.КлючЗаданияПоСсылке(ТекущееЗначение.Ссылка, "ИСД"))
            .ЗапланироватьВТранзакции()    
    ;
;

@ВПроекте
@Реализация
метод ЗаполнитьКартинкиДокументов(ДанныеЗапросов: ЧитаемыйМассив<СостояниеДокументаКомпонентДанных>)
;

// Конец СостояниеДокументовПоставщик

//Область СлужебныйПрограммныйИнтерфейс

@ВПодсистеме
структура ДанныеJson
    обз знч ID: Строка
    пер personID: Строка
    пер dateCreated: ДатаВремя
    пер employerID: Строка
    пер documentToBeSignedID: Строка?
    пер version: Число?
;

@ВПроекте
структура ДанныеJson_V1_0
    обз знч ID: Строка
    пер personID: Строка
    пер dateCreated: ДатаВремя
    пер employerID: Строка
    пер documentToBeSignedID: Строка?
    пер sendNotification: Булево?
    пер version: Число?
;

@ВПроекте
метод ТипДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    если ВерсияФорматаОбмена == Неопределено
        возврат Тип<ДанныеJson>
    иначе если ВерсияФорматаОбмена >= Версия{1.0}
        возврат Тип<ДанныеJson_V1_0>
    ;
;

@ВПроекте
метод ТипКоллекцииДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    если ВерсияФорматаОбмена == Неопределено
        возврат Тип<Массив<ДанныеJson>>
    иначе если ВерсияФорматаОбмена >= Версия{1.0}
        возврат Тип<Массив<ДанныеJson_V1_0>>
    ;
;

@ВПроекте
метод ТипОбъектаJson(): Строка
    возврат "joinToPersonnelEdmСonsent"
;

@ВПроекте
метод ЗагрузитьОбъектИзJson(ДанныеJson: ДанныеJson, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    
    исп Транзакции.Начать()

    знч ЗаявлениеКэдо = Сервисы.ПрочитатьОбъект(ДанныеJson.ID, &СогласиеНаПрисоединениеККэдо.Объект.новый(Ууид), Тип<СогласиеНаПрисоединениеККэдо.Ссылка>) как СогласиеНаПрисоединениеККэдо.Объект
    
    ЗаявлениеКэдо.ПредставлениеДокумента = "Согласие на присоединение к КЭДО"
    ЗаявлениеКэдо.ФизическоеЛицо = Сервисы.ПолучитьСсылку(ФизическиеЛица.ВнешняяСсылка(ДанныеJson.personID)) как ФизическиеЛица.Ссылка
    ЗаявлениеКэдо.Дата = ДанныеJson.dateCreated.Дата
    ЗаявлениеКэдо.Организация = Сервисы.ПолучитьСсылку(Компания::Организации.ВнешняяСсылка(ДанныеJson.employerID)) как Компания::Организации.Ссылка
    ЗаявлениеКэдо.Наименование = "Согласие на присоединение к КЭДО ${ЗаявлениеКэдо.ФизическоеЛицо} от %{ЗаявлениеКэдо.Дата}"

    знч СостояниеДокументаНаПодпись = СостДокументов.СостояниеДокумента(ЗаявлениеКэдо.Ссылка)

    если ДанныеJson.documentToBeSignedID != Неопределено
        знч ДокументНаПодпись = Сервисы.ПрочитатьОбъект(ДанныеJson.documentToBeSignedID, &Документы::ДокументыНаПодпись.Объект.новый(Ууид), Тип<ДокументыНаПодпись.Ссылка>) как ДокументыНаПодпись.Объект         
        ЗаявлениеКэдо.ДокументНаПодпись = ДокументНаПодпись.Ссылка  
        если СостояниеДокументаНаПодпись == СостоянияДокумента.Выполнен
            ДокументНаПодпись.Видимость = ВидимостьДокументаНаПодпись.Всегда    
        иначе
            ДокументНаПодпись.Видимость = ВидимостьДокументаНаПодпись.ПослеПодписания    
        ;
        ДокументНаПодпись.Записать()
        если СостояниеДокументаНаПодпись == СостоянияДокумента.ПолученОтказ
            знч ДанныеСогласующего = новый Согласования.ДанныеСогласующего(ЗаявлениеКэдо.ФизическоеЛицо, Согласования.РольПодписантаСотрудник())
            СогласованияДокументов.ЗарегистрироватьОтказПростойПодписью(
                        ДокументНаПодпись.Ссылка, 
                        ДанныеСогласующего)
        ; 
    ;
    ЗаявлениеКэдо.МоментСоздания = Момент.Сейчас()     

    Сервисы.ЗаписатьОбъект(новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(ЗаявлениеКэдо, ДанныеJson.ID), Сервисы.ИнструментыМенеджераОбъекта)

    если СостояниеДокументаНаПодпись == СостоянияДокумента.Черновик 
        СостДокументов.УстановитьСостояниеДокумента(ЗаявлениеКэдо.Ссылка, СостоянияДокумента.Подготовлен)
    ;
    
    ВладельцыКабинетов.УстановитьПризнакТребуетсяОбновление(ЗаявлениеКэдо.ФизическоеЛицо, Истина)
    
;

@ВПроекте
метод ЗагрузитьОбъектИзJson(ДанныеJson: ДанныеJson_V1_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    
    исп Транзакции.Начать()

    знч ЗаявлениеКэдо = Сервисы.ПрочитатьОбъект(ДанныеJson.ID, &СогласиеНаПрисоединениеККэдо.Объект.новый(Ууид), Тип<СогласиеНаПрисоединениеККэдо.Ссылка>) как СогласиеНаПрисоединениеККэдо.Объект
    
    ЗаявлениеКэдо.ПредставлениеДокумента = "Согласие на присоединение к КЭДО"
    ЗаявлениеКэдо.ФизическоеЛицо = Сервисы.ПолучитьСсылку(ФизическиеЛица.ВнешняяСсылка(ДанныеJson.personID)) как ФизическиеЛица.Ссылка
    ЗаявлениеКэдо.Дата = ДанныеJson.dateCreated.Дата
    ЗаявлениеКэдо.Организация = Сервисы.ПолучитьСсылку(Компания::Организации.ВнешняяСсылка(ДанныеJson.employerID)) как Компания::Организации.Ссылка
    ЗаявлениеКэдо.Наименование = "Согласие на присоединение к КЭДО ${ЗаявлениеКэдо.ФизическоеЛицо} от %{ЗаявлениеКэдо.Дата}"

    знч СостояниеДокументаНаПодпись = СостДокументов.СостояниеДокумента(ЗаявлениеКэдо.Ссылка)

    если ДанныеJson.documentToBeSignedID != Неопределено
        знч ДокументНаПодпись = Сервисы.ПрочитатьОбъект(ДанныеJson.documentToBeSignedID, &Документы::ДокументыНаПодпись.Объект.новый(Ууид), Тип<ДокументыНаПодпись.Ссылка>) как ДокументыНаПодпись.Объект         
        ЗаявлениеКэдо.ДокументНаПодпись = ДокументНаПодпись.Ссылка   
        если СостояниеДокументаНаПодпись == СостоянияДокумента.Выполнен
            ДокументНаПодпись.Видимость = ВидимостьДокументаНаПодпись.Всегда    
        иначе
            ДокументНаПодпись.Видимость = ВидимостьДокументаНаПодпись.ПослеПодписания    
        ;
        ДокументНаПодпись.Записать()
        если СостояниеДокументаНаПодпись == СостоянияДокумента.ПолученОтказ
            знч ДанныеСогласующего = новый Согласования.ДанныеСогласующего(ЗаявлениеКэдо.ФизическоеЛицо, Согласования.РольПодписантаСотрудник())
            СогласованияДокументов.ЗарегистрироватьОтказПростойПодписью(
                        ДокументНаПодпись.Ссылка, 
                        ДанныеСогласующего)
        ; 
    ;
    ЗаявлениеКэдо.МоментСоздания = Момент.Сейчас()     

    Сервисы.ЗаписатьОбъект(новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(ЗаявлениеКэдо, ДанныеJson.ID), Сервисы.ИнструментыМенеджераОбъекта)

    если СостояниеДокументаНаПодпись == СостоянияДокумента.Черновик 
        СостДокументов.УстановитьСостояниеДокумента(ЗаявлениеКэдо.Ссылка, СостоянияДокумента.Подготовлен)
    ;
    
    ВладельцыКабинетов.УстановитьПризнакТребуетсяОбновление(ЗаявлениеКэдо.ФизическоеЛицо, Истина)
    если ДанныеJson.sendNotification != Неопределено и ДанныеJson.sendNotification
        ОтправитьУведомление(ЗаявлениеКэдо)
    ;
    
;

@ВПроекте
метод ПослеЗаписиГруппыОбъектов(ЗагруженныеОбъекты: Массив<ВходящиеДанные.Ссылка>, ЗависимыеОбъекты: Массив<Справочник.Ссылка>)
    
;

@ВПодсистеме
метод ПослеПодписания(Документ: СогласиеНаПрисоединениеККэдо.Ссылка, ДанныеСогласующего: Согласования.ДанныеСогласующего)
    если ДанныеСогласующего.Роль == Согласования.РольПодписантаИсполнитель()
        СостДокументов.УстановитьСостояниеДокумента(Документ, СостоянияДокумента.Выполнен)
    ;

;

@ВПодсистеме
метод ФизическиеЛицаДокументов(Документы: ЧитаемыйМассив<СогласиеНаПрисоединениеККэдо.Ссылка>): ЧитаемоеСоответствие<СогласиеНаПрисоединениеККэдо.Ссылка, ЧитаемыйМассив<ФизическиеЛица.Ссылка>>
    знч ФизическиеЛицаДокументов: Соответствие<СогласиеНаПрисоединениеККэдо.Ссылка, ЧитаемыйМассив<ФизическиеЛица.Ссылка>>
    знч Запрос = Запрос{
        Выбрать
            Ссылка,
            ФизическоеЛицо
        ИЗ
            СогласиеНаПрисоединениеККэдо
        ГДЕ
            Ссылка в (%Документы)   
    }
    
    исп Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        ФизическиеЛицаДокументов.Вставить(СтрокаРезультата.Ссылка, [СтрокаРезультата.ФизическоеЛицо])    
    ;
    возврат ФизическиеЛицаДокументов
;

@ВПодсистеме
метод НеподписанныеЗаявленияСотрудника(ФизическоеЛицо: ФизическиеЛица.Ссылка): Массив<СогласиеНаПрисоединениеККэдоКлиентСервер.ЗаявлениеРеквизиты>
    знч Запрос = Запрос{
        Выбрать
            СогласиеНаПрисоединениеККэдо.Ссылка Как Ссылка,
            СогласиеНаПрисоединениеККэдо.ДокументНаПодпись Как ДокументНаПодпись,
            СогласиеНаПрисоединениеККэдо.Дата как Дата,
            СогласиеНаПрисоединениеККэдо.Организация как Организация
        Из
            СогласиеНаПрисоединениеККэдо Как СогласиеНаПрисоединениеККэдо
            Внутреннее Соединение СостояниеДокументов Как СостояниеДокументов
                По СогласиеНаПрисоединениеККэдо.Ссылка == СостояниеДокументов.Документ 
        Где
            СостояниеДокументов.Состояние == %{СостоянияДокумента.Подготовлен}
            И СогласиеНаПрисоединениеККэдо.ФизическоеЛицо == %ФизическоеЛицо                     
    } 
    пер РезультатЗапроса = Запрос.Выполнить()

    пер НеподписанныеЗаявления: Массив<СогласиеНаПрисоединениеККэдоКлиентСервер.ЗаявлениеРеквизиты>
    для РезультатЗапросаСтрока из РезультатЗапроса
        пер ЗаявлениеРеквизиты = новый СогласиеНаПрисоединениеККэдоКлиентСервер.ЗаявлениеРеквизиты(
                РезультатЗапросаСтрока.Ссылка,
                РезультатЗапросаСтрока.ДокументНаПодпись)
        ЗаявлениеРеквизиты.Дата = РезультатЗапросаСтрока.Дата
        ЗаявлениеРеквизиты.Организация = РезультатЗапросаСтрока.Организация
        НеподписанныеЗаявления.Добавить(ЗаявлениеРеквизиты)
    ;
    возврат НеподписанныеЗаявления
;

//КонецОбласти

//Область СлужебныеПроцедурыИФункции

метод ПослеИзмененияСостоянияДополнение(Документ: СогласиеНаПрисоединениеККэдо.Ссылка, Состояние: СостоянияДокумента, ПрежнееСостояние: СостоянияДокумента?)
    исп Транзакции.Начать()
    пер ДанныеПодписейДокумента = СогласованияДокументов.ДанныеПодписейДокумента(Документ)
    для ДанныеПодписи из ДанныеПодписейДокумента
        пер Ссылка = ДанныеПодписи.Ссылка
        ОбменДанными.ЗарегистрироватьОтправляемыйДокумент(Ссылка, Состояние != СостоянияДокумента.Подготовлен)
    ;
;

метод ДанныеСогласий(СогласияСсылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>): 
        ЧитаемоеСоответствие<СогласиеНаПрисоединениеККэдо.Ссылка, ЧитаемоеСоответствие<Строка, Объект?>>
        
    знч ДанныеЗапросов: Соответствие<СогласиеНаПрисоединениеККэдо.Ссылка, ЧитаемоеСоответствие<Строка, Объект?>>
    знч Согласия: Массив<СогласиеНаПрисоединениеККэдо.Ссылка>
    для Согласие из СогласияСсылки
        Согласия.Добавить(Согласие как СогласиеНаПрисоединениеККэдо.Ссылка)
    ;

    знч Запрос = Запрос{
        Выбрать
            Ссылка,
            Дата,
            ФизическоеЛицо,
            Организация
        Из
            СогласиеНаПрисоединениеККэдо
        Где
            Ссылка В (%Согласия)}
    исп Результат = Запрос.Выполнить() 
    для РезультатСтрока из Результат
        ДанныеЗапросов.Вставить(
            РезультатСтрока.Ссылка,
            МенеджерЗапросов.СтрокаРезультатаЗапросаВСоответствие(РезультатСтрока, Результат))
    ;
    
    возврат ДанныеЗапросов        
;

метод ОтправитьУведомление(Согласие: СогласиеНаПрисоединениеККэдо.Объект)
    пер СообщениеТема = "Подпишите согласие на присоединение к КЭДО"
    пер СообщениеSMS = "Вам необходимо подписать согласие на присоединение к кадровому электронному документообороту."
    пер СообщениеPUSH = "Вам необходимо подписать согласие на присоединение к кадровому электронному документообороту."
    пер СообщениеEMAIL = "Вам необходимо подписать согласие на присоединение к кадровому электронному документообороту."       
    пер ТекстыУведомлений = новый УведомленияСервер.ТекстыСообщений(СообщениеТема, СообщениеSMS, СообщениеPUSH, СообщениеEMAIL)
      
    пер ДанныеУведомления = новый УведомленияСервер.ДанныеУведомления(Уведомления.ВидыУведомлений.ОзнакомлениеПодПодпись)
    ДанныеУведомления.КомандаНавигации = СогласиеНаПрисоединениеККэдоКлиентСервер.ОТКРЫТЬ_ФОРМУ_ПОДПИСАНИЯ_КЭДО 
    УведомленияСервер.ОтправитьУведомление(Согласие.ФизическоеЛицо, ТекстыУведомлений, ДанныеУведомления)    
;

//КонецОбласти

@ВПодсистеме
метод ПодписываемыйФайлаДокумента(Документ: СогласиеНаПрисоединениеККэдо.Ссылка): Файлы.Ссылка?
    возврат Файлы.ЭлектронныйДокументОбъекта(Документ)    
;

@ВПодсистеме
метод ОрганизацияДокумента(Документ: СогласиеНаПрисоединениеККэдо.Ссылка): Организации.Ссылка?
    знч Запрос = Запрос{
        Выбрать Первые 1
            Организация
        Из
            СогласиеНаПрисоединениеККэдо
        Где
            Ссылка == %Документ
    }
    исп Результат = Запрос.Выполнить()
    возврат Результат.ЕдинственныйИлиУмолчание().Организация
;

@ВПроекте
метод ПредставленияИдентификаторовЭлектронныхДокументов(ДокументСсылка: СогласиеНаПрисоединениеККэдо.Ссылка): Соответствие<Строка, Строка>
    пер ПредставленияДокументов = новый Соответствие<Строка, Строка>()
    ПредставленияДокументов.Вставить("", "")
    возврат ПредставленияДокументов
;

метод ДанныеСогласия(ЗапросСправки: СогласиеНаПрисоединениеККэдо.Ссылка): ЧитаемоеСоответствие<Строка, Объект?>
    возврат ДанныеСогласий([ЗапросСправки])[ЗапросСправки]
;
