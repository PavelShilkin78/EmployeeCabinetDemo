импорт Компания::Согласования
импорт ОбщиеСтандартные
импорт УниверсальныеМеханизмы
импорт ОбщегоНазначения
импорт ИнтерфейсныеКомпонентыСтандартные
импорт Документы
импорт УниверсальныеМеханизмы::ШаблоныДокументов

// Контракт ДокументСотрудникаКомпонент

@ВПроекте
@Реализация
метод УстановитьТекущееЗаявление(Заявление: Объект)
    если Заявление это ЗапросИзмененияЛичныхДанных.Объект
        Объект = Заявление как ЗапросИзмененияЛичныхДанных.Объект
        ПрочитатьОбъект()
    ;
;

// Конец ДокументСотрудникаКомпонент

// Контракт ВладелецПрисоединенныеФайлыКомпонент

@Реализация
@ВПроекте
метод ПрисоединенныеФайлыНачатаЗагрузкаФайлов(Источник: ПрисоединенныеФайлыКомпонент, Событие: неизвестно, ИдКомпонента: Строка = "")
    ИзменениеСостоянияЗагрузкиФайлов(новый СобытиеСДанными(Истина))
;

@Реализация
@ВПроекте
метод ПрисоединенныеФайлыЗавершенаЗагрузкаФайлов(Источник: ПрисоединенныеФайлыКомпонент, Событие: неизвестно, ИдКомпонента: Строка = "")
    ИзменениеСостоянияЗагрузкиФайлов(новый СобытиеСДанными(Ложь))
;

// Конец ВладелецПрисоединенныеФайлыКомпонент

метод ЗапросИзмененияЛичныхДанныхКомпонентЗаголовок(): Строка
    пер ЗаголовокКнопки: Строка = ВладельцыКабинетов.ДАННЫЕ_ВЛАДЕЛЬЦА_КАБИНЕТОВ_ЗАГОЛОВОК
    ЗаголовокКнопки = "Изменить " + ЗаголовокКнопки.ВНижнийРегистр()
    возврат ЗаголовокКнопки
;

метод ЗапросИзмененияЛичныхДанныхКомпонентОтступПоВертикали(): РазмерОтступа | Авто
    возврат РежимПросмотра ? РазмерОтступа.Двойной : РазмерОтступа.Отсутствует
;

метод РежимПросмотра(): Булево
    возврат РежимПросмотра или не ВозможноРедактирование()
;

метод ОсновноеСодержаниеФормыТолькоЧтение(): Булево
    возврат РежимПросмотра()
;

метод ДокументСерияМаксимальнаяШиринаПоля(): Число
    пер СерияШирина = 8 * Метрики.РАЗМЕР_ПОЛУИНТЕРВАЛА
    возврат СерияШирина 
;

метод ДокументНомерМаксимальнаяШиринаПоля(): Число
    пер НомерШирина = 15 * Метрики.РАЗМЕР_ПОЛУИНТЕРВАЛА
    возврат НомерШирина 
;

метод ДокументДатаВыдачиШиринаПоля(): Число
    возврат 18 * Метрики.РАЗМЕР_ПОЛУИНТЕРВАЛА
;

метод ДокументКодВыдавшегоОрганаМаксимальнаяШиринаПоля(): Число
    возврат 15 * Метрики.РАЗМЕР_ПОЛУИНТЕРВАЛА
;

метод АдресМестаПроживанияДоступность(): Булево
    возврат Объект.ИзменениеАдреса и не АдресМестаПроживанияСовпадаетСАдресомРегистрации
;

метод ФотоГруппаВидимость(): Булево
    возврат ВладельцыКабинетовФункциональныеОпции().ВозможностьИзменятьФото
;

метод ВключеноИзменениеРасширенногоНабораДанных(): Булево
    возврат ВладельцыКабинетовФункциональныеОпции().РасширенныйЗапросНаИзменениеЛичныхДанных
;

@ВПодсистеме
метод ВозможноРедактирование(): Булево
    возврат СостояниеЗапроса == СостоянияДокумента.Черновик
;

@НаСервере @ДоступноСКлиента
статический метод ВладельцыКабинетовФункциональныеОпции(): ВладельцыКабинетов.ФункциональныеОпции 
    возврат ВладельцыКабинетов.ПолучитьФункциональныеОпции()
;

// Конец

метод ПрисоединенныеФотоЗавершенаЗагрузкаФайлов(Источник: ПрисоединенныеФайлыКомпонент, Событие: неизвестно)
    ПрисоединенноеФото = Источник.ТаблицаФайлы.НеудаленныеФайлы().ПервыйИлиУмолчание()
;

метод ПрисоединенныеФотоФайлПомеченНаУдаление(Источник: ПрисоединенныеФайлыКомпонент, Событие: СобытиеСДанными<ПрисоединенныйФайл>)
    ПрисоединенноеФото = Источник.ТаблицаФайлы.НеудаленныеФайлы().ПервыйИлиУмолчание()
    ТаблицаФайлы.Файлы.ДобавитьВсе(ПрисоединенныеФото.Файлы)
    ПрисоединенныеФото.Файлы.Очистить()
    Компоненты.ПрисоединенныеФайлы.СобственнаяМодифицированность = Истина
;

метод АдресМестаПроживанияСовпадаетСАдресомРегистрацииПриИзмененииЗначения(Источник: ФлажокРасширенный, Событие: СобытиеПриИзменении<Булево?>)
    если АдресМестаПроживанияСовпадаетСАдресомРегистрации
        Объект.АдресМестаПроживания = Объект.АдресРегистрации 
    ;
;

метод АдресРегистрацииПриИзменении(Источник: ПолеВвода<Строка>, Событие: СобытиеПриИзменении<Строка>)
    если АдресМестаПроживанияСовпадаетСАдресомРегистрации
        Объект.АдресМестаПроживания = Объект.АдресРегистрации 
    ;
;

// Заполнение из родительской формы

метод ПрочитатьОбъект()
    СостояниеЗапроса = ОбщегоНазначения.СостояниеДокумента(Объект)
    АдресМестаПроживанияСовпадаетСАдресомРегистрации = (Объект.АдресМестаПроживания == Объект.АдресРегистрации)
    пер Ссылка: ЗапросИзмененияЛичныхДанных.Ссылка = Объект.Ссылка
    пер ТабличныеЧасти = ДанныеТабличныхЧастей(Объект.ЭтоНовый(), Ссылка)
    если Объект.ЭтоНовый()
        ТаблицаФайлы.Владелец = Ссылка
    иначе
        если Объект.Фото != Неопределено
            знч Фото = ФайлВПрисоединенныеФото(Объект.Фото!)
            ПрисоединенныеФото.Файлы.Добавить(Фото)
            ПрисоединенноеФото = Фото
            ТабличныеЧасти.ТаблицаФайлы.Файлы.Удалить(Фото)
        ;
        ТаблицаФайлы = ТабличныеЧасти.ТаблицаФайлы
        ТаблицаСогласующие = ТабличныеЧасти.ТаблицаСогласующие
    ;
    ДополнительныеРеквизиты = ТабличныеЧасти.ДополнительныеРеквизиты
    СброситьМодифицированностьТабличныхЧастей()
    если не Объект.ЭтоНовый()
        ОтслеживатьИзменениеДанных(Компоненты.ПрисоединенныеФайлы, Истина)
        ОтслеживатьИзменениеДанных(Компоненты.ДополнительныеРеквизиты, Истина)
    ;

    ЗавершеноЧтениеДанных(новый СобытиеКомпонента())
    ИнтерфейсныеКомпоненты.ИнициализироватьПодчиненныеКомпоненты(Компоненты)
    СобственнаяМодифицированность = Ложь
;

@НаСервере @ДоступноСКлиента
статический метод ФайлВПрисоединенныеФото(Файл: Файлы.Ссылка): ПрисоединенныйФайл
    возврат ПрисоединенныеФайлыМенеджер.ПрисоединенныйФайл(Файл)
;

@ВПодсистеме
@НаСервере @НаКлиенте
структура ТабличныеЧасти
    пер ТаблицаФайлы: ПрисоединенныеФайлы?
    пер ТаблицаСогласующие: Согласующие?
    пер ДополнительныеРеквизиты: РеквизитыШаблона?
;

@ВПодсистеме
метод МодифицированныеТабличныеЧасти(): ТабличныеЧасти
    пер ТабличныеЧасти: ТабличныеЧасти
    если Компоненты.ПрисоединенныеФайлы.СобственнаяМодифицированность
        ОбщегоНазначения.ОчиститьКлиентскиеДанные(ТаблицаФайлы)    
        ТабличныеЧасти.ТаблицаФайлы = ТаблицаФайлы
    ;
    если Компоненты.ДополнительныеРеквизиты.СобственнаяМодифицированность
        ТабличныеЧасти.ДополнительныеРеквизиты = ДополнительныеРеквизиты
    ;
    возврат ТабличныеЧасти
;

@ВПодсистеме 
метод СброситьМодифицированностьТабличныхЧастей()
    Компоненты.ПрисоединенныеФайлы.СобственнаяМодифицированность = Ложь
    Компоненты.ДополнительныеРеквизиты.СобственнаяМодифицированность = Ложь
;

@НаСервере @ДоступноСКлиента
статический метод ЗапросИзмененияЛичныхДанных(Заявление: ЗапросИзмененияЛичныхДанных.Ссылка): ЗапросИзмененияЛичныхДанных.Объект?
    возврат Заявление.ЗагрузитьОбъект()    
;

@НаСервере @ДоступноСКлиента
статический метод ДанныеТабличныхЧастей(ЭтоНовый: Булево, Владелец: ЗапросИзмененияЛичныхДанных.Ссылка): ТабличныеЧасти
    
    пер ДанныеТабличныхЧастей: ТабличныеЧасти
    если ЭтоНовый
        ДанныеТабличныхЧастей.ДополнительныеРеквизиты = ШаблоныДокументовМенеджер.РеквизитыШаблона(
            Неопределено, УниверсальныеМеханизмы.Ид(ВладельцыКабинетов.ИД_ПОДСИСТЕМЫ, ВладельцыКабинетов.ШАБЛОН_ЗАЯВЛЕНИЯ_НА_ИЗМЕНЕНИЕ_ЛИЧНЫХ_ДАННЫХ))
        ДанныеТабличныхЧастей.ДополнительныеРеквизиты.Владелец = Владелец
    иначе
        ДанныеТабличныхЧастей.ТаблицаФайлы = ПрисоединенныеФайлыМенеджер.ПрисоединенныеФайлы(Владелец)
        ДанныеТабличныхЧастей.ТаблицаСогласующие = Согласования.Согласующие(Владелец)
        ДанныеТабличныхЧастей.ДополнительныеРеквизиты = ШаблоныДокументовМенеджер.РеквизитыШаблона(
            Владелец, УниверсальныеМеханизмы.Ид(ВладельцыКабинетов.ИД_ПОДСИСТЕМЫ, ВладельцыКабинетов.ШАБЛОН_ЗАЯВЛЕНИЯ_НА_ИЗМЕНЕНИЕ_ЛИЧНЫХ_ДАННЫХ))
    ;
    возврат ДанныеТабличныхЧастей

;

// Конец

// Проверка заполнения


@ВПодсистеме
метод ПроверитьЗаполнение(): Булево
    
    знч Проверки = [
        &ПроверитьДокументВыдавшийОрган(),
        &ПроверитьДокументКодВыдавшегоОргана(),
        &ПроверитьДокументСерия(),
        &ПроверитьДокументНомер(),
        &ПроверитьДокументДатаВыдачи(),
        &ПроверитьВидУдостоверенияЛичности()
    ]
            
    пер РезультатПроверки = Истина
    для Проверка из Проверки
        РезультатПроверки = Проверка() и РезультатПроверки
    ;
                    
    возврат РезультатПроверки
;

метод ПроверитьДокументВыдавшийОрган(): Булево
    пер РезультатПроверки = Истина
    ДокументВыдавшийОрганСообщениеОбОшибкеВвода = ""
    если Объект.ДокументВыдавшийОрган.Длина() > 200
        РезультатПроверки = Ложь
        ДокументВыдавшийОрганСообщениеОбОшибкеВвода = "Длина поля не может превышать 200 символов."
    ;
    возврат РезультатПроверки
;

метод ПроверитьДокументКодВыдавшегоОргана(): Булево
    пер РезультатПроверки = Истина
    ДокументКодВыдавшегоОрганаСообщениеОбОшибкеВвода = ""
    если Объект.ДокументКодВыдавшегоОргана.Длина() > 15
        РезультатПроверки = Ложь
        ДокументКодВыдавшегоОрганаСообщениеОбОшибкеВвода = "Длина поля не может превышать 15 символов."
    ;
    возврат РезультатПроверки
;

метод ПроверитьДокументСерия(): Булево
    пер РезультатПроверки = Истина
    ДокументСерияСообщениеОбОшибкеВвода = ""
    если Объект.ДокументСерия.Длина() > 14
        РезультатПроверки = Ложь
        ДокументСерияСообщениеОбОшибкеВвода = "Длина серии не может превышать 14 символов."
    ;
    возврат РезультатПроверки
;

метод ПроверитьДокументНомер(): Булево
    пер РезультатПроверки = Истина
    ДокументНомерСообщениеОбОшибкеВвода = ""
    если Объект.ДокументНомер.Длина() > 20
        РезультатПроверки = Ложь
        ДокументНомерСообщениеОбОшибкеВвода = "Длина номера не может превышать 20 символов."
    ;
    возврат РезультатПроверки
;

метод ПроверитьДокументДатаВыдачи(): Булево

    ДокументДатаВыдачиСообщениеОбОшибкеВвода = ""
    
    попытка
        возврат МенеджерДат.ДатаМожетБытьПереданаВV8(Объект.ДокументДатаВыдачи)
    поймать Ошибка: ИсключениеВалидации
        ДокументДатаВыдачиСообщениеОбОшибкеВвода = Ошибка.Описание            
        возврат Ложь
    ;

;


метод ПроверитьВидУдостоверенияЛичности(): Булево
    пер Результат = Истина
    если Объект.ВидУдостоверенияЛичности == Неопределено
        ВидУдостоверенияЛичностиСообщениеОшибка = "Не указан вид документа, удостоверяющего личность"
        Результат = Ложь
    иначе
        ВидУдостоверенияЛичностиСообщениеОшибка = "" 
    ;
    возврат Результат
;

метод ВидУдостоверенияЛичностиРезультатПроверкиДанных(): РезультатПроверкиДанных
    возврат ВидУдостоверенияЛичностиСообщениеОшибка.Пусто() ? РезультатПроверкиДанных.Отсутствует : РезультатПроверкиДанных.Ошибка    
;

// Конец

// Прочее

@ВПодсистеме
метод ПрисоединенныеФайлы(): ПрисоединенныеФайлыКомпонент
    возврат Компоненты.ПрисоединенныеФайлы    
;

@ВПодсистеме
метод ЗаголовокФормы(): Строка
    возврат Объект.ПредставлениеДокумента 
;

// Конец