импорт Компания
импорт КонтрольДоступа
импорт ОбщиеСтандартные
импорт ФизическиеЛица


//Область РазрешенияДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): Массив<РазрешениеДоступа>
    возврат [КонтрольДоступа.ПолныйДоступАутентифицированным(этот)]
;

@Обработчик
метод ВычислитьРазрешенияДоступаДляОбъектов(Элементы: ЧитаемыйМассив<ОграниченияДоступаКЛичнымКонтактам.ДанныеРасчетаРазрешений>): ЧитаемоеСоответствие<ОграниченияДоступаКЛичнымКонтактам.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    знч Разрешения: Соответствие<ОграниченияДоступаКЛичнымКонтактам.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    для Элемент из Элементы
        знч РазрешенияЭлемента: Множество<РазрешениеДоступа>
        РазрешенияЭлемента.ДобавитьВсе(КонтрольДоступа.ЧтениеРедактированиеДанныхРегистровПерсонально([Элемент.Владелец]))
        Разрешения.Вставить(Элемент, РазрешенияЭлемента)
    ;
    возврат Разрешения
;

//КонецОбласти

@ВПодсистеме
метод ОграниченияФизическогоЛица(ФизическоеЛицо: ФизическиеЛица.Ссылка): НастройкиВидимостиКонтактнойИнформации
    знч Запрос = Запрос{
        Выбрать
            НастройкаВидимости
        Из
            ОграниченияДоступаКЛичнымКонтактам
        Где
            Владелец == %ФизическоеЛицо
    }
    исп РезультатЗапроса = Запрос.Выполнить()
    для СтрокаРезультата из РезультатЗапроса
        возврат СтрокаРезультата.НастройкаВидимости   
    ;    
    возврат НастройкиВидимостиКонтактнойИнформации.ДоступнаРуководителямПодразделения
;

@ВПодсистеме
метод УстановитьНастройкуВидимости(ФизическоеЛицо: ФизическиеЛица.Ссылка, НастройкаВидимости: НастройкиВидимостиКонтактнойИнформации)
    пер НаборЗаписей: ОграниченияДоступаКЛичнымКонтактам.НаборЗаписей
    НаборЗаписей.Фильтр.Установить(Владелец = ФизическоеЛицо)
    НаборЗаписей.ДобавитьЗапись(
        Владелец = ФизическоеЛицо,
        НастройкаВидимости = НастройкаВидимости
    )
    НаборЗаписей.Записать(Истина)        
;

@ВПодсистеме
метод ЗаполнитьДанныеФизическихЛиц(
        ЗапрашиваемыеДанные: ВладельцыКабинетов.ЗапрашиваемыеДанныеВладельцевКабинетов, 
        ДанныеФизическихЛиц: Соответствие<ФизическиеЛица.Ссылка, ВладельцыКабинетов.ДанныеВладельцаКабинета>)
        
    пер ЗапрашиваемыеПоляТаблицы: Строка = ЗапрашиваемыеПоляТаблицы(ЗапрашиваемыеДанные)
    если не ЗапрашиваемыеПоляТаблицы.Пусто()
        пер Запрос = новый ПроизвольныйЗапрос() // текст запроса динамический
        ЗапрашиваемыеПоляТаблицы += ",Владелец"
        Запрос.Текст = 
            "Выбрать %ЗапрашиваемыеПоляТаблицы
            Из ОграниченияДоступаКЛичнымКонтактам
            Где Владелец В (&ФизическиеЛица)"
        Запрос.УстановитьПараметр("ФизическиеЛица", ДанныеФизическихЛиц.Ключи())
        исп Результат = Запрос.Выполнить()
        для РезультатСтрока из Результат
            ЗаполнитьПоРезультатуЗапроса(ЗапрашиваемыеДанные, ДанныеФизическихЛиц, РезультатСтрока)
        ;
    ;
;

метод ЗапрашиваемыеПоляТаблицы(ЗапрашиваемыеДанные: ВладельцыКабинетов.ЗапрашиваемыеДанныеВладельцевКабинетов): Строка
    пер ЗапрашиваемыеПоляТаблицы: Строка
    если ЗапрашиваемыеДанные.НастройкиДоступа
        ЗапрашиваемыеПоляТаблицы = "НастройкаВидимости"
    ;
    возврат ЗапрашиваемыеПоляТаблицы
;

метод ЗаполнитьПоРезультатуЗапроса(
        ЗапрашиваемыеДанные: ВладельцыКабинетов.ЗапрашиваемыеДанныеВладельцевКабинетов, 
        ДанныеФизическихЛиц: Соответствие<ФизическиеЛица.Ссылка, ВладельцыКабинетов.ДанныеВладельцаКабинета>, 
        СтрокаРезультата: СтрокаРезультатаПроизвольногоЗапроса)
    
    пер ДанныеФизическогоЛица: ВладельцыКабинетов.ДанныеВладельцаКабинета = ДанныеФизическихЛиц[СтрокаРезультата.Владелец]
    если ЗапрашиваемыеДанные.НастройкиДоступа
        ДанныеФизическогоЛица.НастройкиДоступа.ЛичнаяКонтактнаяИнформацияДоступнаВсем = 
            (СтрокаРезультата.НастройкаВидимости == НастройкиВидимостиКонтактнойИнформации.ДоступнаВсем)
        ДанныеФизическогоЛица.НастройкиДоступа.ЛичнаяКонтактнаяИнформацияДоступнаКоллегам = 
            (СтрокаРезультата.НастройкаВидимости == НастройкиВидимостиКонтактнойИнформации.ДоступнаКоллегам)
    ;
;

@ВПроекте
метод ОбновитьГруппыДоступаКонтактнойИнформации(ФизическиеЛица: ЧитаемоеМножество<ФизическиеЛица.Ссылка>)
    знч Запрос = Запрос{
        Выбрать
            Владелец
        Из
            ОграниченияДоступаКЛичнымКонтактам
        Где
            НастройкаВидимости == НастройкиВидимостиКонтактнойИнформации.ДоступнаКоллегам
            И Владелец в (%ФизическиеЛица)
    }
    исп Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        ОбновитьГруппуДоступаКонтактнойИнформации(СтрокаРезультата.Владелец)
    ;
;

@ВПодсистеме
метод ОбновитьГруппуДоступаКонтактнойИнформации(ВладелецГруппыДоступа: ФизическиеЛица.Ссылка): ГруппыДоступа.Ссылка?
    
    знч ПодразделенияФизическогоЛица: Множество<СтруктураПредприятия.Ссылка> = ОрганизационнаяСтруктура.ПодразделенияФизическогоЛица(ВладелецГруппыДоступа)
    знч ФизическиеЛицаСотрудников = новый Множество<ФизическиеЛица.Ссылка>(ОрганизационнаяСтруктура.ФизическиеЛицаПодразделений(ПодразделенияФизическогоЛица))
    МенеджерКоллекций.УдалитьВхожденияВсех(ФизическиеЛицаСотрудников, <ФизическиеЛица.Ссылка>[ВладелецГруппыДоступа])
    пер ПользователиДоступа = новый Массив<Пользователи.Ссылка>(КонтрольДоступа.ПользователиВладельцевКабинетов(ФизическиеЛицаСотрудников).Значения())
    
    знч ЗначенияОграничений: Массив<ЗначенияОграниченийГруппДоступа>
    ЗначенияОграничений.Добавить(новый ЗначенияОграниченийГруппДоступа(
        КонтрольДоступа.ТипАтрибутаДоступаФизическиеЛица(),
        ВладелецГруппыДоступа,
        Ложь
    ))
    
    возврат КонтрольДоступа.ОбновитьГруппуДоступа(
        КлючГруппыДоступа(ВладелецГруппыДоступа),
        МенеджерСущности.ПредставлениеСсылки(ВладелецГруппыДоступа),
        ВладельцыКабинетов.РольЧтениеЛичныхКонтактов(),
        ЗначенияОграничений,
        ПользователиДоступа,
        ВидыГруппыДоступа.Служебная
    )
;

@ВПодсистеме
метод КлючГруппыДоступа(ФизическоеЛицо: ФизическиеЛица.Ссылка): Строка
    возврат "ДоступКЛичнымКонтактам%{ФизическоеЛицо.Ид.ВСтроку()}"
;

@ВПодсистеме
метод ЗаполнитьГруппыДоступаИОбновитьРазрешенияКонтактнойИнформации()
    знч Запрос = Запрос{
        Выбрать
            Владелец,
            НастройкаВидимости
        Из
            ОграниченияДоступаКЛичнымКонтактам
    }

    исп Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        если СтрокаРезультата.НастройкаВидимости == НастройкиВидимостиКонтактнойИнформации.ДоступнаКоллегам
            УстановитьНастройкуВидимости(СтрокаРезультата.Владелец, СтрокаРезультата.НастройкаВидимости)
        ;
    ;
    
    ЛичныеКонтакты.ПересчитатьРазрешенияДоступаДляОбъектов()
;