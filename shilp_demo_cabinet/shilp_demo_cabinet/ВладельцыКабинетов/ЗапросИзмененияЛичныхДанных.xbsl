импорт ВебApi
импорт Компания
импорт КонтрольДоступа
импорт ОбменДанными
импорт ОбщегоНазначения
импорт Уведомления
импорт ОбщиеСтандартные
импорт УниверсальныеМеханизмы
импорт Компания::Согласования
импорт ФизическиеЛица
импорт УниверсальныеМеханизмы::ШаблоныДокументов

//Область РазрешенияДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): Массив<РазрешениеДоступа>
    возврат [КонтрольДоступа.ЧтениеИРедактированиеАутентифицированным(этот)]
;

@Обработчик
метод ВычислитьРазрешенияДоступаДляОбъектов(Элементы: ЧитаемыйМассив<ЗапросИзмененияЛичныхДанных.ДанныеРасчетаРазрешений>): ЧитаемоеСоответствие<ЗапросИзмененияЛичныхДанных.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    знч Разрешения: Соответствие<ЗапросИзмененияЛичныхДанных.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    для Элемент из Элементы
        знч РазрешенияЭлемента: Множество<РазрешениеДоступа>
        РазрешенияЭлемента.Добавить(КонтрольДоступа.ЧтениеИнформационнойСистеме(этот))
        РазрешенияЭлемента.ДобавитьВсе(КонтрольДоступа.ЧтениеРедактированиеДанныхСправочниковПерсонально([Элемент.ФизическоеЛицо]))
        Разрешения.Вставить(Элемент, РазрешенияЭлемента)
    ;
    возврат Разрешения    
;

//КонецОбласти

// Контракт СостояниеДокументовПоставщик

@ВПроекте
@Реализация
метод ПослеЗаписиСостоянияДокумента(ТекущееЗначение: СостояниеДокументов.Объект, ПредыдущееЗначение: СостояниеДокументов.Данные, ПараметрыЗаписи: СостояниеДокументов.ПараметрыЗаписи)
    если ТекущееЗначение.Документ это ЗапросИзмененияЛичныхДанных.Ссылка
        МенеджерЗаданий.ПроверитьАвтозапускЗапланированныхЗаданийВключен()
        ЗапланированныеЗадания.Создать(&ПослеИзмененияСостоянияДополнение,
            ТекущееЗначение.Документ как ЗапросИзмененияЛичныхДанных.Ссылка, ТекущееЗначение.Состояние, ПредыдущееЗначение.Состояние)
            .Настроить(Ключ = МенеджерЗаданий.КлючЗаданияПоСсылке(ТекущееЗначение.Ссылка, "ИСД"))
            .ЗапланироватьВТранзакции()
    ;
;

@ВПроекте
@Реализация
метод ЗаполнитьКартинкиДокументов(ДанныеЗапросов: ЧитаемыйМассив<СостояниеДокументаКомпонентДанных>)
;

// Конец СостояниеДокументовПоставщик

// Контракт ФайлыОбработчикСобытий

@ВПроекте
@Реализация
метод ПослеЗаписиФайла(Владелец: ВладелецФайлы.Ссылка, Файл: Файлы.Ссылка)
    если Владелец это ЗапросИзмененияЛичныхДанных.Ссылка
        знч Документ = Владелец как ЗапросИзмененияЛичныхДанных.Ссылка
        МенеджерЗаданий.ПроверитьАвтозапускЗапланированныхЗаданийВключен()
        ЗапланированныеЗадания.Создать(&ПослеЗаписиФайлаДополнение, Документ)
            .Настроить(Ключ = МенеджерЗаданий.КлючЗаданияПоСсылке(Документ, "ПЗФ"))
            .ЗапланироватьВТранзакции()
    ;
;

// Конец ФайлыОбработчикСобытий

//Область СлужебныйПрограммныйИнтерфейс

@ВПодсистеме
метод ФизическиеЛицаДокументов(Документы: ЧитаемыйМассив<ЗапросИзмененияЛичныхДанных.Ссылка>): ЧитаемоеСоответствие<ЗапросИзмененияЛичныхДанных.Ссылка, ЧитаемыйМассив<ФизическиеЛица.Ссылка>>
    знч ФизическиеЛицаДокументов: Соответствие<ЗапросИзмененияЛичныхДанных.Ссылка, ЧитаемыйМассив<ФизическиеЛица.Ссылка>>
    знч Запрос = Запрос{
        Выбрать
            Ссылка,
            ФизическоеЛицо
        ИЗ
            ЗапросИзмененияЛичныхДанных
        ГДЕ
            Ссылка в (%Документы)   
    }
    
    исп Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        ФизическиеЛицаДокументов.Вставить(СтрокаРезультата.Ссылка, [СтрокаРезультата.ФизическоеЛицо])    
    ;
    возврат ФизическиеЛицаДокументов
;

@ВПодсистеме
метод ГруппаИзмененийВJson(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?): ЧитаемоеСоответствие<Строка, Массив<Объект?>>
    возврат {"personalInformationChangeRequests": ДанныеЗапросовВJson(Ссылки, Сервисы, ВерсияФорматаОбмена)}
;

метод ДанныеЗапросовВJson(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?, ДляПредставления: Булево = Ложь): Массив<Объект?>
    знч Данные: Массив<Объект?>
    для КлючИЗначение из ДанныеЗапросовИзмененияЛичныхДанных(Ссылки)
        если ВерсияФорматаОбмена != Неопределено и ВерсияФорматаОбмена >= Версия{3.0}
            Данные.Добавить(ДанныеЗапросаИзмененияЛичныхДанныхВJson_V3_0(КлючИЗначение.Значение, Сервисы, ДляПредставления))
        иначе если ВерсияФорматаОбмена != Неопределено и ВерсияФорматаОбмена >= Версия{2.1}
            Данные.Добавить(ДанныеЗапросаИзмененияЛичныхДанныхВJson_V2_1(КлючИЗначение.Значение, Сервисы, ДляПредставления))
        иначе если ВерсияФорматаОбмена != Неопределено и ВерсияФорматаОбмена >= Версия{2.0}
            Данные.Добавить(ДанныеЗапросаИзмененияЛичныхДанныхВJson_V2_0(КлючИЗначение.Значение, Сервисы, ДляПредставления))
        иначе если ВерсияФорматаОбмена != Неопределено и ВерсияФорматаОбмена >= Версия{1.0}
            Данные.Добавить(ДанныеЗапросаИзмененияЛичныхДанныхВJson_V1_0(КлючИЗначение.Значение, Сервисы, ДляПредставления))
        иначе
            Данные.Добавить(ДанныеЗапросаИзмененияЛичныхДанныхВJson(КлючИЗначение.Значение, Сервисы, ДляПредставления))
        ;
    ;
    возврат Данные
;

@ВПроекте
метод ПолучитьДанныеJson(Ссылка: ЗапросИзмененияЛичныхДанных.Ссылка?, Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?): Объект?
    возврат ДанныеЗапросовВJson([Ссылка], Сервисы, ВерсияФорматаОбмена)
;

структура ДанныеJson
    обз знч ID: Строка
    обз пер personID: Строка
    пер employerID: Строка?
    пер dateCreated: Дата?
    пер note: Строка?
    пер changeName: Булево?
    пер lastName: Строка?
    пер firstName: Строка?
    пер patronymic: Строка?
    пер changeIdentityDocument: Булево?
    пер identityDocument: ФизЛица.УдостоверениеЛичностиJson?
    пер changePersonalPhone: Булево?
    пер personalPhone: Строка?
    пер changeEmail: Булево?
    пер email: Строка?    
    пер changeSNILS: Булево?
    пер SNILS: Строка?
    пер changeINN: Булево?
    пер INN: Строка?
    пер changeAddress: Булево?
    пер registrationAddress: Строка?
    пер residentialAddress: Строка?
    пер attachments: Массив<МенеджерФайлов.ДанныеФайлаJson>
    пер document: Файлы.ЭлектронныйДокументJson?
    пер version: Число?
;

структура ДанныеJson_V1_0
    обз знч ID: Строка
    обз пер personID: Строка
    пер employerID: Строка?
    пер dateCreated: Дата?
    пер note: Строка?
    пер changeName: Булево?
    пер lastName: Строка?
    пер firstName: Строка?
    пер patronymic: Строка?
    пер changeIdentityDocument: Булево?
    пер identityDocument: ФизЛица.УдостоверениеЛичностиJson?
    пер changePersonalPhone: Булево?
    пер personalPhone: Строка?
    пер changeEmail: Булево?
    пер email: Строка?   
    пер changeInsuranceNumber: Булево?
    пер insuranceNumber: Строка?
    пер changeTaxID: Булево?
    пер taxID: Строка?
    пер changeAddress: Булево?
    пер registrationAddress: Строка?
    пер residentialAddress: Строка?
    пер attachments: Массив<МенеджерФайлов.ДанныеФайлаJson>
    пер document: Файлы.ЭлектронныйДокументJson?
    пер version: Число?
;

структура ДанныеJson_V2_0
    обз знч ID: Строка
    обз пер personID: Строка
    пер employerID: Строка?
    пер dateCreated: Дата?
    пер note: Строка?
    пер changeName: Булево?
    пер lastName: Строка?
    пер firstName: Строка?
    пер patronymic: Строка?
    пер changeIdentityDocument: Булево?
    пер identityDocument: ФизЛица.УдостоверениеЛичностиJson?
    пер changePersonalPhone: Булево?
    пер personalPhone: Строка?
    пер changeEmail: Булево?
    пер email: Строка?    
    пер changeInsuranceNumber: Булево?
    пер insuranceNumber: Строка?
    пер changeTaxID: Булево?
    пер taxID: Строка?
    пер changeAddress: Булево?
    пер registrationAddress: Строка?
    пер residentialAddress: Строка?
    пер attachments: Массив<МенеджерФайлов.ДанныеФайлаJson>
    пер document: Файлы.ЭлектронныйДокументJson_V2_0?
    пер version: Число?
;

структура ДанныеJson_V2_1
    обз знч ID: Строка
    обз пер personID: Строка
    пер employerID: Строка?
    пер dateCreated: Дата?
    пер note: Строка?
    пер changeName: Булево?
    пер lastName: Строка?
    пер firstName: Строка?
    пер patronymic: Строка?
    пер changeIdentityDocument: Булево?
    пер identityDocument: ФизЛица.УдостоверениеЛичностиJson?
    пер changePersonalPhone: Булево?
    пер personalPhone: Строка?
    пер changeEmail: Булево?
    пер email: Строка?    
    пер changeInsuranceNumber: Булево?
    пер insuranceNumber: Строка?
    пер changeTaxID: Булево?
    пер taxID: Строка?
    пер changeAddress: Булево?
    пер registrationAddress: Строка?
    пер residentialAddress: Строка?
    пер attachments: Массив<МенеджерФайлов.ДанныеФайлаJson>
    пер document: Файлы.ЭлектронныйДокументJson_V2_1?
    пер version: Число?
;

структура ДанныеJson_V3_0
    обз знч ID: Строка
    обз пер personID: Строка
    пер employerID: Строка?
    пер dateCreated: Дата?
    пер note: Строка?
    пер changeName: Булево?
    пер lastName: Строка?
    пер firstName: Строка?
    пер patronymic: Строка?
    пер changeIdentityDocument: Булево?
    пер identityDocument: ФизЛица.УдостоверениеЛичностиJson?
    пер changePersonalPhone: Булево?
    пер personalPhone: Строка?
    пер changeEmail: Булево?
    пер email: Строка?    
    пер changeInsuranceNumber: Булево?
    пер insuranceNumber: Строка?
    пер changeTaxID: Булево?
    пер taxID: Строка?
    пер changeAddress: Булево?
    пер registrationAddress: Строка?
    пер residentialAddress: Строка?
    пер attachments: Массив<МенеджерФайлов.ДанныеФайлаJson>
    пер document: Файлы.ЭлектронныйДокументJson_V2_1?
    пер version: Число?
    пер changePhoto: Булево?
    пер photo: МенеджерФайлов.ДанныеФайлаJson?
;

структура ДанныеJsonAllAttributes
    обз знч ID: Строка
    обз пер personID: Строка
    пер employerID: Строка?
    пер dateCreated: Дата?
    пер note: Строка?
    пер changeName: Булево?
    пер lastName: Строка?
    пер firstName: Строка?
    пер patronymic: Строка?
    пер changeIdentityDocument: Булево?
    пер identityDocument: ФизЛица.УдостоверениеЛичностиJson?
    пер changePersonalPhone: Булево?
    пер personalPhone: Строка?
    пер email: Строка? 
    пер changeEmail: Булево?
    пер insuranceNumber: Строка?
    пер changeInsuranceNumber: Булево?
    пер taxID: Строка?
    пер changeTaxID: Булево?
    пер changeAddress: Булево?
    пер registrationAddress: Строка?
    пер residentialAddress: Строка?
    пер attachments: Массив<МенеджерФайлов.ДанныеФайлаJson>
    пер document: Файлы.ЭлектронныйДокументJson?
    пер document_V2_0: Файлы.ЭлектронныйДокументJson_V2_0?
    пер document_V2_1: Файлы.ЭлектронныйДокументJson_V2_1?
    пер version: Число?
    пер changePhoto: Булево?
    пер photo: МенеджерФайлов.ДанныеФайлаJson?
;

метод ДанныеЗапросовИзмененияЛичныхДанных(ЗапросыСсылка: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>): ЧитаемоеСоответствие<ЗапросИзмененияЛичныхДанных.Ссылка, ЧитаемоеСоответствие<Строка, Объект?>>
    
    знч Запросы: Массив<ЗапросИзмененияЛичныхДанных.Ссылка>
    для Запрос из ЗапросыСсылка
        Запросы.Добавить(Запрос как ЗапросИзмененияЛичныхДанных.Ссылка)
    ;
    знч ДанныеЗапросов: Соответствие<ЗапросИзмененияЛичныхДанных.Ссылка, ЧитаемоеСоответствие<Строка, Объект?>>
    знч Запрос = Запрос{
        Выбрать
            Ссылка,
            Дата,
            ФизическоеЛицо,
            ИзменениеФИО,
            Фамилия,
            Имя,
            Отчество,
            ИзменениеДокумента,
            ВидУдостоверенияЛичности,
            ДокументСерия,
            ДокументНомер,
            ДокументДатаВыдачи,
            ДокументВыдавшийОрган,
            ДокументКодВыдавшегоОргана,
            ИзменениеМобильногоТелефона,
            МобильныйТелефон,
            ИзменениеАдресаЭлектроннойПочты,
            ЭлектроннаяПочта,
            ИзменениеСНИЛС,
            СНИЛС,
            ИзменениеИНН,
            ИНН,
            ИзменениеАдреса,
            АдресРегистрации,
            АдресМестаПроживания,
            Комментарий,
            Организация,
            ИзменениеФото,
            Фото
        Из
            ЗапросИзмененияЛичныхДанных
        Где
            Ссылка В (%Запросы) 
            И ФизическоеЛицо != Неопределено
            И Организация != Неопределено}
    исп Результат = Запрос.Выполнить() 
    для РезультатСтрока из Результат
        ДанныеЗапросов.Вставить(
            РезультатСтрока.Ссылка,
            МенеджерЗапросов.СтрокаРезультатаЗапросаВСоответствие(РезультатСтрока, Результат))
    ;
    возврат ДанныеЗапросов
;

метод ДанныеЗапросаИзмененияЛичныхДанныхВJson(ДанныеОбъекта: ЧитаемоеСоответствие<Строка, Объект?>, Сервисы: ВебApiСервер.СервисыУпаковкиJson, ДляПредставления: Булево): ДанныеJson
    знч ОбщийJSON = ДанныеЗапросаИзмененияЛичныхДанныхВсеАтрибуты(ДанныеОбъекта, Сервисы, ДляПредставления)
    знч ДанныеJson = новый ДанныеJson(ОбщийJSON.ID, ОбщийJSON.personID)
    
    ДанныеJson.employerID = ОбщийJSON.employerID
    ДанныеJson.dateCreated = ОбщийJSON.dateCreated
    ДанныеJson.note = ОбщийJSON.note
    ДанныеJson.changeName = ОбщийJSON.changeName
    ДанныеJson.lastName = ОбщийJSON.lastName
    ДанныеJson.firstName = ОбщийJSON.firstName
    ДанныеJson.patronymic = ОбщийJSON.patronymic
    ДанныеJson.changeIdentityDocument = ОбщийJSON.changeIdentityDocument
    ДанныеJson.identityDocument = ОбщийJSON.identityDocument
    ДанныеJson.changePersonalPhone = ОбщийJSON.changePersonalPhone
    ДанныеJson.personalPhone = ОбщийJSON.personalPhone
    ДанныеJson.changeEmail = ОбщийJSON.changeEmail
    ДанныеJson.email = ОбщийJSON.email
    ДанныеJson.SNILS = ОбщийJSON.insuranceNumber
    ДанныеJson.changeSNILS = ОбщийJSON.changeInsuranceNumber
    ДанныеJson.INN = ОбщийJSON.taxID
    ДанныеJson.changeINN = ОбщийJSON.changeTaxID
    ДанныеJson.changeAddress = ОбщийJSON.changeAddress
    ДанныеJson.registrationAddress = ОбщийJSON.registrationAddress
    ДанныеJson.residentialAddress = ОбщийJSON.residentialAddress
    ДанныеJson.attachments = ОбщийJSON.attachments
    ДанныеJson.version = ОбщийJSON.version
    
    возврат ДанныеJson
;

метод ДанныеЗапросаИзмененияЛичныхДанныхВJson_V1_0(ДанныеОбъекта: ЧитаемоеСоответствие<Строка, Объект?>, Сервисы: ВебApiСервер.СервисыУпаковкиJson, ДляПредставления: Булево): ДанныеJson_V1_0
    знч ОбщийJSON = ДанныеЗапросаИзмененияЛичныхДанныхВсеАтрибуты(ДанныеОбъекта, Сервисы, ДляПредставления)
    знч ДанныеJson_V1_0 = новый ДанныеJson_V1_0(ОбщийJSON.ID, ОбщийJSON.personID)

    ДанныеJson_V1_0.changeInsuranceNumber = ОбщийJSON.changeInsuranceNumber
    ДанныеJson_V1_0.insuranceNumber = ОбщийJSON.insuranceNumber
    ДанныеJson_V1_0.changeTaxID = ОбщийJSON.changeTaxID
    ДанныеJson_V1_0.taxID = ОбщийJSON.taxID
    ДанныеJson_V1_0.employerID = ОбщийJSON.employerID
    ДанныеJson_V1_0.dateCreated = ОбщийJSON.dateCreated
    ДанныеJson_V1_0.note = ОбщийJSON.note
    ДанныеJson_V1_0.changeName = ОбщийJSON.changeName
    ДанныеJson_V1_0.lastName = ОбщийJSON.lastName
    ДанныеJson_V1_0.firstName = ОбщийJSON.firstName
    ДанныеJson_V1_0.patronymic = ОбщийJSON.patronymic
    ДанныеJson_V1_0.changeIdentityDocument = ОбщийJSON.changeIdentityDocument
    ДанныеJson_V1_0.identityDocument = ОбщийJSON.identityDocument
    ДанныеJson_V1_0.changePersonalPhone = ОбщийJSON.changePersonalPhone
    ДанныеJson_V1_0.personalPhone = ОбщийJSON.personalPhone
    ДанныеJson_V1_0.changeEmail = ОбщийJSON.changeEmail
    ДанныеJson_V1_0.email = ОбщийJSON.email
    ДанныеJson_V1_0.changeAddress = ОбщийJSON.changeAddress
    ДанныеJson_V1_0.registrationAddress = ОбщийJSON.registrationAddress
    ДанныеJson_V1_0.residentialAddress = ОбщийJSON.residentialAddress
    ДанныеJson_V1_0.attachments = ОбщийJSON.attachments
    ДанныеJson_V1_0.document = ОбщийJSON.document
    ДанныеJson_V1_0.version = ОбщийJSON.version

    возврат ДанныеJson_V1_0
;

метод ДанныеЗапросаИзмененияЛичныхДанныхВJson_V2_0(ДанныеОбъекта: ЧитаемоеСоответствие<Строка, Объект?>, Сервисы: ВебApiСервер.СервисыУпаковкиJson, ДляПредставления: Булево): ДанныеJson_V2_0
    знч ОбщийJSON = ДанныеЗапросаИзмененияЛичныхДанныхВсеАтрибуты(ДанныеОбъекта, Сервисы, ДляПредставления)
    знч ДанныеJson_V2_0 = новый ДанныеJson_V2_0(ОбщийJSON.ID, ОбщийJSON.personID)

    ДанныеJson_V2_0.changeInsuranceNumber = ОбщийJSON.changeInsuranceNumber
    ДанныеJson_V2_0.insuranceNumber = ОбщийJSON.insuranceNumber
    ДанныеJson_V2_0.changeTaxID = ОбщийJSON.changeTaxID
    ДанныеJson_V2_0.taxID = ОбщийJSON.taxID
    ДанныеJson_V2_0.employerID = ОбщийJSON.employerID
    ДанныеJson_V2_0.dateCreated = ОбщийJSON.dateCreated
    ДанныеJson_V2_0.note = ОбщийJSON.note
    ДанныеJson_V2_0.changeName = ОбщийJSON.changeName
    ДанныеJson_V2_0.lastName = ОбщийJSON.lastName
    ДанныеJson_V2_0.firstName = ОбщийJSON.firstName
    ДанныеJson_V2_0.patronymic = ОбщийJSON.patronymic
    ДанныеJson_V2_0.changeIdentityDocument = ОбщийJSON.changeIdentityDocument
    ДанныеJson_V2_0.identityDocument = ОбщийJSON.identityDocument
    ДанныеJson_V2_0.changePersonalPhone = ОбщийJSON.changePersonalPhone
    ДанныеJson_V2_0.personalPhone = ОбщийJSON.personalPhone
    ДанныеJson_V2_0.changeEmail = ОбщийJSON.changeEmail
    ДанныеJson_V2_0.email = ОбщийJSON.email
    ДанныеJson_V2_0.changeAddress = ОбщийJSON.changeAddress
    ДанныеJson_V2_0.registrationAddress = ОбщийJSON.registrationAddress
    ДанныеJson_V2_0.residentialAddress = ОбщийJSON.residentialAddress
    ДанныеJson_V2_0.attachments = ОбщийJSON.attachments
    ДанныеJson_V2_0.document = ОбщийJSON.document_V2_0
    ДанныеJson_V2_0.version = ОбщийJSON.version

    возврат ДанныеJson_V2_0
;

метод ДанныеЗапросаИзмененияЛичныхДанныхВJson_V2_1(ДанныеОбъекта: ЧитаемоеСоответствие<Строка, Объект?>, Сервисы: ВебApiСервер.СервисыУпаковкиJson, ДляПредставления: Булево): ДанныеJson_V2_1
    знч ОбщийJSON = ДанныеЗапросаИзмененияЛичныхДанныхВсеАтрибуты(ДанныеОбъекта, Сервисы, ДляПредставления)
    знч ДанныеJson_V2_1 = новый ДанныеJson_V2_1(ОбщийJSON.ID, ОбщийJSON.personID)

    ДанныеJson_V2_1.changeInsuranceNumber = ОбщийJSON.changeInsuranceNumber
    ДанныеJson_V2_1.insuranceNumber = ОбщийJSON.insuranceNumber
    ДанныеJson_V2_1.changeTaxID = ОбщийJSON.changeTaxID
    ДанныеJson_V2_1.taxID = ОбщийJSON.taxID
    ДанныеJson_V2_1.employerID = ОбщийJSON.employerID
    ДанныеJson_V2_1.dateCreated = ОбщийJSON.dateCreated
    ДанныеJson_V2_1.note = ОбщийJSON.note
    ДанныеJson_V2_1.changeName = ОбщийJSON.changeName
    ДанныеJson_V2_1.lastName = ОбщийJSON.lastName
    ДанныеJson_V2_1.firstName = ОбщийJSON.firstName
    ДанныеJson_V2_1.patronymic = ОбщийJSON.patronymic
    ДанныеJson_V2_1.changeIdentityDocument = ОбщийJSON.changeIdentityDocument
    ДанныеJson_V2_1.identityDocument = ОбщийJSON.identityDocument
    ДанныеJson_V2_1.changePersonalPhone = ОбщийJSON.changePersonalPhone
    ДанныеJson_V2_1.personalPhone = ОбщийJSON.personalPhone
    ДанныеJson_V2_1.changeEmail = ОбщийJSON.changeEmail
    ДанныеJson_V2_1.email = ОбщийJSON.email
    ДанныеJson_V2_1.changeAddress = ОбщийJSON.changeAddress
    ДанныеJson_V2_1.registrationAddress = ОбщийJSON.registrationAddress
    ДанныеJson_V2_1.residentialAddress = ОбщийJSON.residentialAddress
    ДанныеJson_V2_1.attachments = ОбщийJSON.attachments
    ДанныеJson_V2_1.document = ОбщийJSON.document_V2_1
    ДанныеJson_V2_1.version = ОбщийJSON.version

    возврат ДанныеJson_V2_1
;

метод ДанныеЗапросаИзмененияЛичныхДанныхВJson_V3_0(ДанныеОбъекта: ЧитаемоеСоответствие<Строка, Объект?>, Сервисы: ВебApiСервер.СервисыУпаковкиJson, ДляПредставления: Булево): ДанныеJson_V3_0
    
    знч ОбщийJSON = ДанныеЗапросаИзмененияЛичныхДанныхВсеАтрибуты(ДанныеОбъекта, Сервисы, ДляПредставления)
    
    знч ДанныеJson_V3_0 = новый ДанныеJson_V3_0(ОбщийJSON.ID, ОбщийJSON.personID)

    ДанныеJson_V3_0.changeInsuranceNumber = ОбщийJSON.changeInsuranceNumber
    ДанныеJson_V3_0.insuranceNumber = ОбщийJSON.insuranceNumber
    ДанныеJson_V3_0.changeTaxID = ОбщийJSON.changeTaxID
    ДанныеJson_V3_0.taxID = ОбщийJSON.taxID
    ДанныеJson_V3_0.employerID = ОбщийJSON.employerID
    ДанныеJson_V3_0.dateCreated = ОбщийJSON.dateCreated
    ДанныеJson_V3_0.note = ОбщийJSON.note
    ДанныеJson_V3_0.changeName = ОбщийJSON.changeName
    ДанныеJson_V3_0.lastName = ОбщийJSON.lastName
    ДанныеJson_V3_0.firstName = ОбщийJSON.firstName
    ДанныеJson_V3_0.patronymic = ОбщийJSON.patronymic
    ДанныеJson_V3_0.changeIdentityDocument = ОбщийJSON.changeIdentityDocument
    ДанныеJson_V3_0.identityDocument = ОбщийJSON.identityDocument
    ДанныеJson_V3_0.changePersonalPhone = ОбщийJSON.changePersonalPhone
    ДанныеJson_V3_0.personalPhone = ОбщийJSON.personalPhone
    ДанныеJson_V3_0.changeEmail = ОбщийJSON.changeEmail
    ДанныеJson_V3_0.email = ОбщийJSON.email
    ДанныеJson_V3_0.changeAddress = ОбщийJSON.changeAddress
    ДанныеJson_V3_0.registrationAddress = ОбщийJSON.registrationAddress
    ДанныеJson_V3_0.residentialAddress = ОбщийJSON.residentialAddress
    ДанныеJson_V3_0.attachments = ОбщийJSON.attachments
    ДанныеJson_V3_0.document = ОбщийJSON.document_V2_1
    ДанныеJson_V3_0.version = ОбщийJSON.version
    ДанныеJson_V3_0.changePhoto = ОбщийJSON.changePhoto
    ДанныеJson_V3_0.photo = ОбщийJSON.photo
    
    возврат ДанныеJson_V3_0 
;

метод ДанныеЗапросаИзмененияЛичныхДанныхВсеАтрибуты(ДанныеОбъекта: ЧитаемоеСоответствие<Строка, Объект?>, Сервисы: ВебApiСервер.СервисыУпаковкиJson, ДляПредставления: Булево): ДанныеJsonAllAttributes
    знч Ссылки: Массив<ВходящиеДанные.Ссылка>
    Ссылки.Добавить(ДанныеОбъекта["ФизическоеЛицо"] как ФизическиеЛица.Ссылка)
    если ДанныеОбъекта["Организация"] != Неопределено
        Ссылки.Добавить(ДанныеОбъекта["Организация"] как Организации.Ссылка)
    ;

    Сервисы.ПолучитьИдентификаторы(Ссылки)

    знч ДанныеВJson = новый ДанныеJsonAllAttributes(
        (ДанныеОбъекта["Ссылка"] как ЗапросИзмененияЛичныхДанных.Ссылка).Ид.ВСтроку(),
        Сервисы.ПолучитьИдентификатор(ДанныеОбъекта["ФизическоеЛицо"] как ФизическиеЛица.Ссылка))

    ДанныеВJson.dateCreated = ДанныеОбъекта["Дата"] как Дата?
    
    если ДанныеОбъекта["Организация"] != Неопределено
        ДанныеВJson.employerID = Сервисы.ПолучитьИдентификатор(ДанныеОбъекта["Организация"] как Организации.Ссылка)
    ;
    ДанныеВJson.note = ДанныеОбъекта["Комментарий"] как Строка
    
    если ДанныеОбъекта["ИзменениеФИО"] как Булево 
        ДанныеВJson.changeName = Истина
        ДанныеВJson.lastName = ДанныеОбъекта["Фамилия"] как Строка
        если не (ДанныеОбъекта["Имя"] как Строка).Пусто()
            ДанныеВJson.firstName = ДанныеОбъекта["Имя"] как Строка
        ;
        если не (ДанныеОбъекта["Отчество"] как Строка).Пусто()
            ДанныеВJson.patronymic = ДанныеОбъекта["Отчество"] как Строка
        ;
    ;
    если ДанныеОбъекта["ИзменениеДокумента"] как Булево
        ДанныеВJson.changeIdentityDocument = Истина
        знч УдостоверениеЛичности: ФизЛица.УдостоверениеЛичности
        УдостоверениеЛичности.Вид = ДанныеОбъекта["ВидУдостоверенияЛичности"] как ДокументыУдостоверяющиеЛичность
        УдостоверениеЛичности.Серия = ДанныеОбъекта["ДокументСерия"] как Строка
        УдостоверениеЛичности.Номер = ДанныеОбъекта["ДокументНомер"] как Строка
        УдостоверениеЛичности.ВыдавшийОрган = ДанныеОбъекта["ДокументВыдавшийОрган"] как Строка
        УдостоверениеЛичности.КодВыдавшегоОргана = ДанныеОбъекта["ДокументКодВыдавшегоОргана"] как Строка
        УдостоверениеЛичности.ДатаВыдачи = ДанныеОбъекта["ДокументДатаВыдачи"] как Дата?
        
        ДанныеВJson.identityDocument = ФизическиеЛица.ДокументУдостоверяющийЛичностьВJson(УдостоверениеЛичности)
    ;
    если ДанныеОбъекта["ИзменениеМобильногоТелефона"] как Булево
        ДанныеВJson.changePersonalPhone = Истина
        ДанныеВJson.personalPhone = ДанныеОбъекта["МобильныйТелефон"] как Строка
    ;
    если ДанныеОбъекта["ИзменениеАдресаЭлектроннойПочты"] как Булево
        ДанныеВJson.changeEmail = Истина
        ДанныеВJson.email = ДанныеОбъекта["ЭлектроннаяПочта"] как Строка
    ;

    если ДанныеОбъекта["ИзменениеСНИЛС"] как Булево
        ДанныеВJson.changeInsuranceNumber = Истина
        ДанныеВJson.insuranceNumber = ДанныеОбъекта["СНИЛС"] как Строка
    ;
    если ДанныеОбъекта["ИзменениеИНН"] как Булево
        ДанныеВJson.changeTaxID = Истина
        ДанныеВJson.taxID = ДанныеОбъекта["ИНН"] как Строка
    ;    
    если ДанныеОбъекта["ИзменениеАдреса"] как Булево
        ДанныеВJson.changeAddress = Истина
        ДанныеВJson.registrationAddress = ДанныеОбъекта["АдресРегистрации"] как Строка
        если не (ДанныеОбъекта["АдресМестаПроживания"] как Строка).Пусто()
            ДанныеВJson.residentialAddress = ДанныеОбъекта["АдресМестаПроживания"] как Строка
            ;
    ;
 
    знч ДанныеФайлов = Файлы.ПолучитьДанныеФайловJson(
        ДанныеОбъекта["Ссылка"] как ЗапросИзмененияЛичныхДанных.Ссылка, ДляПредставления, Сервисы)
    если ДанныеФайлов.ЭлектронныйДокумент != Неопределено
        ДанныеВJson.document = ДанныеФайлов.ЭлектронныйДокумент
    ;
    
    знч ДанныеФайлов_V2_0 = Файлы.ПолучитьДанныеФайловJson_V2_0(
        ДанныеОбъекта["Ссылка"] как ЗапросИзмененияЛичныхДанных.Ссылка, ДляПредставления, Сервисы)
    если ДанныеФайлов_V2_0.ЭлектронныйДокумент != Неопределено
        ДанныеВJson.document_V2_0 = ДанныеФайлов_V2_0.ЭлектронныйДокумент
    ;
    
    знч ДанныеФайлов_V2_1 = Файлы.ПолучитьДанныеФайловJson_V2_1(
        ДанныеОбъекта["Ссылка"] как ЗапросИзмененияЛичныхДанных.Ссылка, ДляПредставления, Сервисы)
    если ДанныеФайлов_V2_1.ЭлектронныйДокумент != Неопределено
        ДанныеВJson.document_V2_1 = ДанныеФайлов_V2_1.ЭлектронныйДокумент
    ;

    если ДанныеОбъекта["ИзменениеФото"] как Булево
        ДанныеВJson.changePhoto = Истина
        если ДанныеОбъекта["Фото"] != Неопределено
            ДанныеВJson.photo = Файлы.ДанныеФайлаJson(ДанныеОбъекта["Фото"] как Файлы.Ссылка, Сервисы)
            ДанныеФайлов.Вложения.Удалить(ДанныеВJson.photo )
        ;
    ;
   
    если ДанныеФайлов.Вложения != Неопределено
        ДанныеВJson.attachments = ДанныеФайлов.Вложения
    ;
    
    если Сервисы.ПолучитьВерсию != Неопределено
        ДанныеВJson.version = Сервисы.ПолучитьВерсию((ДанныеОбъекта["Ссылка"] как ЗапросИзмененияЛичныхДанных.Ссылка))
    ;
    возврат ДанныеВJson
;

@ВПодсистеме
метод ПослеПодписания(Документ: ЗапросИзмененияЛичныхДанных.Ссылка, ДанныеСогласующего: Согласования.ДанныеСогласующего)
    если ДанныеСогласующего.Роль == Согласования.РольПодписантаИсполнитель()
        СостДокументов.УстановитьСостояниеДокумента(Документ, СостоянияДокумента.Выполнен)
        возврат
    ;
    
    знч ФизическоеЛицо = МенеджерСущности.ЗначениеРеквизитаОбъекта(Документ, "ФизическоеЛицо")
    
    исп Транзакции.Начать()
    ОбменДанными.ЗарегистрироватьОтправляемыйДокумент(Документ, Истина)
    РегистрацияИзменений.ЗарегистрироватьИзменение(Документ, ФизическоеЛицо)
    СогласованияДокументов.ЗарегистрироватьПодписиОтправляемогоДокумента(Документ, Истина)
;

//КонецОбласти

//Область СлужебныеПроцедурыИФункции

метод ПослеИзмененияСостоянияДополнение(Документ: ЗапросИзмененияЛичныхДанных.Ссылка, Состояние: СостоянияДокумента, ПрежнееСостояние: СостоянияДокумента?)
    знч РеквизитыДокумента = МенеджерСущности.ЗначенияРеквизитовОбъекта(Документ, ["Ссылка", "ФизическоеЛицо"])
    знч ФизическоеЛицо: ФизическиеЛица.Ссылка = РеквизитыДокумента["ФизическоеЛицо"] как ФизическиеЛица.Ссылка
    ОбщегоНазначения.ПослеИзмененияСотоянияЗаявки(Документ, Состояние, ФизическоеЛицо)

    ОтправитьУведомлениеПриИзмененииСостояния(РеквизитыДокумента, Состояние)
;

метод ОтправитьУведомлениеПриИзмененииСостояния(РеквизитыДокумента: ЧитаемоеСоответствие<Строка, Объект?>, Состояние: СостоянияДокумента)
    пер Получатель: ФизическиеЛица.Ссылка? = РеквизитыДокумента["ФизическоеЛицо"] как ФизическиеЛица.Ссылка?
    пер Тема = "Изменение личных данных"
    пер ТекстСообщения: Строка
    если Состояние == СостоянияДокумента.Выполнен
        ТекстСообщения = "Изменены личные данные"
    иначе если Состояние == СостоянияДокумента.ПолученОтказ
        ТекстСообщения = "Отказано в изменении личных данных"
    ;
    если не ТекстСообщения.Пусто()
        пер ДанныеУведомления = новый УведомленияСервер.ДанныеУведомления(Уведомления.ВидыУведомлений.ПерсональнаяИнформация, РеквизитыДокумента["Ссылка"] как ЗапросИзмененияЛичныхДанных.Ссылка) 
        пер ТекстыУведомлений = новый УведомленияСервер.ТекстыСообщений(Тема, ТекстСообщения, ТекстСообщения, ТекстСообщения)
        УведомленияСервер.ОтправитьУведомление(Получатель, ТекстыУведомлений, ДанныеУведомления)
    ;
;

метод ПослеЗаписиФайлаДополнение(Документ: ЗапросИзмененияЛичныхДанных.Ссылка)
    знч ФизическоеЛицо = МенеджерСущности.ЗначениеРеквизитаОбъекта(Документ, "ФизическоеЛицо")
    РегистрацияИзменений.ЗарегистрироватьИзменение(Документ, ФизическоеЛицо)
;

@ВПодсистеме
метод ПослеЗаписиДополнение(Ссылка: ЗапросИзмененияЛичныхДанных.Ссылка, ФизическоеЛицо: ФизическиеЛица.Ссылка?, ТребуетсяРегистрацияИзменений: Булево)
    если ТребуетсяРегистрацияИзменений
        РегистрацияИзменений.ЗарегистрироватьИзменение(Ссылка, ФизическоеЛицо)
    ;
    ОбщегоНазначения.ПослеЗаписиОбъектаСЭлектоннымиДокументамиПредставлений(Ссылка, ТребуетсяРегистрацияИзменений)
;

//КонецОбласти

@ВПодсистеме
метод ПодписываемыйФайлаДокумента(Документ: ЗапросИзмененияЛичныхДанных.Ссылка): Файлы.Ссылка?
    возврат Файлы.ЭлектронныйДокументОбъекта(Документ)    
;

@ВПодсистеме
метод ОрганизацияДокумента(Документ: ЗапросИзмененияЛичныхДанных.Ссылка): Организации.Ссылка?
    знч Запрос = Запрос{
        Выбрать Первые 1
            Организация
        Из
            ЗапросИзмененияЛичныхДанных
        Где
            Ссылка == %Документ
    }
    исп Результат = Запрос.Выполнить()
    возврат Результат.ЕдинственныйИлиУмолчание().Организация
;

@ВПроекте
метод ПредставленияИдентификаторовЭлектронныхДокументов(ДокументСсылка: ЗапросИзмененияЛичныхДанных.Ссылка): Соответствие<Строка, Строка>
    пер ПредставленияДокументов = новый Соответствие<Строка, Строка>()
    ПредставленияДокументов.Вставить("", "")
    возврат ПредставленияДокументов
;

метод ДанныеЗапросаИзмененияЛичныхДанных(ЗапросСправки: ЗапросИзмененияЛичныхДанных.Ссылка): ЧитаемоеСоответствие<Строка, Объект?>
    возврат ДанныеЗапросовИзмененияЛичныхДанных([ЗапросСправки])[ЗапросСправки]
;

@ВПодсистеме
метод ДанныеДокументаДляПечатнойФормы(ДокументСсылка: Объект): Соответствие<Строка, ШаблоныДокументовМенеджер.ДанныеПечатныхФорм>
    
    знч ДанныеДокумента = новый Соответствие<Строка, ШаблоныДокументовМенеджер.ДанныеПечатныхФорм>()
    знч ДанныеЗаявления = ДанныеЗапросаИзмененияЛичныхДанных(ДокументСсылка как ЗапросИзмененияЛичныхДанных.Ссылка)
    знч ПоставляемыеДанные = ПредставленияДокументов.ДанныеПредставленияДокумента(ДанныеЗаявления)
    ДанныеДокумента.Вставить("", новый ШаблоныДокументовМенеджер.ДанныеПечатныхФорм(Данные = ПоставляемыеДанные))
    ДополнитьДанныеДокументаДляПечатнойФормы(ДанныеДокумента)
    возврат ДанныеДокумента 
;

@ВПодсистеме
метод ДополнитьДанныеДокументаДляПечатнойФормы(ДанныеДокумента: Соответствие<Строка, ШаблоныДокументовМенеджер.ДанныеПечатныхФорм>)
    для ДанныеИдентификатора из ДанныеДокумента
        пер ПоставляемыеДанные = ДанныеИдентификатора.Значение.Данные
        
        ПоставляемыеДанные.Вставить("ДанныеДокументаНаименование", "Заявление")
        пер Текст: Строка
        
        пер ТекстыИзменений = новый Массив<Строка>()
        если ПоставляемыеДанные["ДанныеДокументаИзменениеФИО"] как Булево
            знч ФИО = новый ФизЛица.ФИО(
                ПоставляемыеДанные["ДанныеДокументаФамилия"] как Строка,
                ПоставляемыеДанные["ДанныеДокументаИмя"] как Строка,
                ПоставляемыеДанные["ДанныеДокументаОтчество"] как Строка,
                "")
            ТекстыИзменений.Добавить(
                "Изменены Фамилия Имя Отчество, новые %{ФИО.ПредставлениеИмени()}")
            ПоставляемыеДанные.Вставить("ДанныеДокументаФИОПолные", ФИО.ПредставлениеИмени())
        ;
        если ПоставляемыеДанные["ДанныеДокументаИзменениеДокумента"] как Булево
            пер РеквизитыНового = новый Массив<Строка>()
            если не (ПоставляемыеДанные["ДанныеДокументаВидУдостоверенияЛичности"] как ДокументыУдостоверяющиеЛичность).ВСтроку().Пусто()
                знч Вид = (ПоставляемыеДанные["ДанныеДокументаВидУдостоверенияЛичности"] как ДокументыУдостоверяющиеЛичность).ВСтроку()
                РеквизитыНового.Добавить("Вид: %Вид")
            ;
            если не (ПоставляемыеДанные["ДанныеДокументаДокументСерия"] как Строка).Пусто()
                знч Серия = ПоставляемыеДанные["ДанныеДокументаДокументСерия"] как Строка
                если не (ПоставляемыеДанные["ДанныеДокументаДокументНомер"] как Строка).Пусто()
                    знч Номер = ПоставляемыеДанные["ДанныеДокументаДокументНомер"] как Строка
                    РеквизитыНового.Добавить("Серия и номер: %Серия %Номер")
                иначе
                    РеквизитыНового.Добавить("Серия: %Серия")
                ;
            иначе если не (ПоставляемыеДанные["ДанныеДокументаДокументНомер"] как Строка).Пусто()
                знч Номер = ПоставляемыеДанные["ДанныеДокументаДокументНомер"] как Строка
                РеквизитыНового.Добавить("Номер: %Номер")
            ;
            если ПоставляемыеДанные["ДанныеДокументаДокументДатаВыдачи"] != Неопределено
                знч ДатаВыдачи = МенеджерДат.ФорматДаты(ПоставляемыеДанные["ДанныеДокументаДокументДатаВыдачи"] как Дата)
                РеквизитыНового.Добавить("Выдан: %ДатаВыдачи")
            ;
            если не (ПоставляемыеДанные["ДанныеДокументаДокументВыдавшийОрган"] как Строка).Пусто()
                знч Выдал = ПоставляемыеДанные["ДанныеДокументаДокументВыдавшийОрган"] как Строка
                если не (ПоставляемыеДанные["ДанныеДокументаДокументКодВыдавшегоОргана"] как Строка).Пусто()
                    знч КодОргана = ПоставляемыеДанные["ДанныеДокументаДокументКодВыдавшегоОргана"] как Строка
                    РеквизитыНового.Добавить("Выдал: %Выдал (Код: %КодОргана)")
                иначе
                    РеквизитыНового.Добавить("Выдал: %Выдал")
                ;
            ;
            знч Изменения = Строки.Соединить(РеквизитыНового, "\н")
            ТекстыИзменений.Добавить(
                "Изменен документ удостоверяющий личность, данные нового:
                    %Изменения")
            ПоставляемыеДанные.Вставить("ДанныеДокументаДокументПредставление", Изменения)
        ;
        если ПоставляемыеДанные["ДанныеДокументаИзменениеСНИЛС"] как Булево
            знч Снилс = ПоставляемыеДанные["ДанныеДокументаСНИЛС"] как Строка
            ТекстыИзменений.Добавить("Изменен СНИЛС, номер нового: %Снилс")
        ;
        если ПоставляемыеДанные["ДанныеДокументаИзменениеИНН"] как Булево
            знч Инн = ПоставляемыеДанные["ДанныеДокументаИНН"] как Строка
            ТекстыИзменений.Добавить("Изменен ИНН, номер нового: %Инн")
        ;
        если ПоставляемыеДанные["ДанныеДокументаИзменениеМобильногоТелефона"] как Булево
            знч Номер = ПоставляемыеДанные["ДанныеДокументаМобильныйТелефон"] как Строка
            ТекстыИзменений.Добавить("Изменен номер мобильного телефона, новый номер: %Номер")
        ;
        если ПоставляемыеДанные["ДанныеДокументаИзменениеАдресаЭлектроннойПочты"] как Булево
            знч Адрес = ПоставляемыеДанные["ДанныеДокументаЭлектроннаяПочта"] как Строка
            ТекстыИзменений.Добавить("Изменен адрес электронной почты, новый адрес: %Адрес")
        ;
        если ПоставляемыеДанные["ДанныеДокументаИзменениеАдреса"] как Булево
            пер Адрес = ПоставляемыеДанные["ДанныеДокументаАдресРегистрации"] как Строка
            если не Адрес.Пусто()
                ТекстыИзменений.Добавить("Изменен адрес места регистрации, новый адрес: %Адрес")
            ;
            Адрес = ПоставляемыеДанные["ДанныеДокументаАдресМестаПроживания"] как Строка
            если не Адрес.Пусто()
                ТекстыИзменений.Добавить("Изменен адрес места проживания, новый адрес: %Адрес")
            ;
        ;
        если ТекстыИзменений.Размер() > 1
            знч ТекстИзменений = Строки.Соединить(ТекстыИзменений, ";\н\т- ")
            Текст =
                "Настоящим уведомляю об изменении:
                    - %ТекстИзменений"
        иначе если ТекстыИзменений.Размер() > 0
            Текст = "Настоящим уведомляю об изменении %{ТекстыИзменений[0]}"
        ;
                
        Текст = ПредставленияДокументов.ТекстДокументаДополненныйКомментарием(Текст, ПоставляемыеДанные["ДанныеДокументаКомментарий"] как Строка)
        
        знч ОписаниеВложений = ПрисоединенныеФайлыМенеджер.ТекстОписанияПриложенныхФайлов(ПоставляемыеДанные["ДанныеДокументаСсылка"] как ЗапросИзмененияЛичныхДанных.Ссылка)
        ПоставляемыеДанные.Вставить("ДанныеДокументаВложения", ОписаниеВложений)
        Текст = ПрисоединенныеФайлыМенеджер.ТекстCОписаниемПриложенныхФайлов(Текст, ОписаниеВложений)
        
        ПоставляемыеДанные.Вставить("ДанныеДокументаТекст", Текст)
            
    ;
;

@ВПодсистеме
метод ДанныеДокументаДляПодготовкиОписаний(СсылкаНаДокумент: Сущность.Ключ): Соответствие<Строка, Согласования.ДанныеДляПодготовкиОписания>
    
    пер ДанныеДокумента = новый Соответствие<Строка, Согласования.ДанныеДляПодготовкиОписания>()
    знч ДанныеЗаявления = ДанныеЗапросаИзмененияЛичныхДанных(СсылкаНаДокумент как ЗапросИзмененияЛичныхДанных.Ссылка)
    ДанныеДокумента.Вставить("",
        новый Согласования.ДанныеДляПодготовкиОписания(
            ДанныеЗаявления["Организация"] как Организации.Ссылка,
            ДанныеЗаявления["Дата"] как Дата,
            "Заявление об изменении личных данных"
        )
    )
    возврат ДанныеДокумента
;
