импорт ОбщиеСтандартные
импорт УниверсальныеМеханизмы
импорт Компания::Согласования
импорт ФизическиеЛица
импорт Криптография
импорт КриптографияСтандартные
импорт КонтрольДоступа
импорт Документы

@ВПроекте
@НаСервере
метод ПамяткаКэдоВидимость(): Булево
    
    знч ФизическоеЛицо = ПользователиСистемы.ТекущееФизическоеЛицо()
    знч ИспользованиеКэдо = Криптография.НастройкиЭлектронныхПодписей().ИспользованиеКЭДО
    знч ЕстьСогласия = СогласиеНаПрисоединениеККэдоСервер.ЕстьСогласия(ФизическоеЛицо)
    знч СформированаЭП = (ИнформацияОСертификате(ФизическоеЛицо) != Неопределено) 
    
    возврат ИспользованиеКэдо и ЕстьСогласия и не СформированаЭП           
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ЕстьСогласия(ФизическоеЛицо: ФизическиеЛица.Ссылка): Булево
    знч Запрос = Запрос{
        Выбрать Первые 1
            СогласияКэдо.Ссылка
        Из 
            СогласиеНаПрисоединениеККэдо Как СогласияКэдо
            Внутреннее Соединение СостояниеДокументов Как Состояния 
                По СогласияКэдо.Ссылка == Состояния.Документ
        Где 
            СогласияКэдо.ФизическоеЛицо == %ФизическоеЛицо
            И Состояния.Состояние == %{СостоянияДокумента.Выполнен}}
    исп Результат = Запрос.Выполнить()
    знч РезультатСтроки = новый ЧитаемыйМассив(Результат)
    возврат (не РезультатСтроки.Пусто()) 
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ЕстьНеподписанныеСогласия(ФизическоеЛицо: ФизическиеЛица.Ссылка): Булево
    знч Запрос = Запрос{
        Выбрать Первые 1
            СогласияКэдо.Ссылка
        Из 
            СогласиеНаПрисоединениеККэдо Как СогласияКэдо
            Левое Соединение СостояниеДокументов Как Состояния 
                    По СогласияКэдо.Ссылка == Состояния.Документ
        Где 
            СогласияКэдо.ФизическоеЛицо == %ФизическоеЛицо
            И Состояния.Состояние == %{СостоянияДокумента.Подготовлен}}
    исп Результат = Запрос.Выполнить()
    знч РезультатСтроки = новый ЧитаемыйМассив(Результат)
    возврат (не РезультатСтроки.Пусто()) 
;

@ВПодсистеме
@НаСервере @ДоступноСКлиента
метод ЗаписатьСогласия(ПараметрыЗаписи: СогласиеНаПрисоединениеККэдоКлиентСервер.ПараметрыЗаписи)
    исп Транзакции.Начать()
    исп ПривилегированныйРежим: КонтекстДоступа = КонтекстДоступа.Привилегированный()
    
    если ПараметрыЗаписи.ТаблицаФайлы != Неопределено
        ПрисоединенныеФайлыМенеджер.Записать(ПараметрыЗаписи.ТаблицаФайлы)
    ;

    знч ДанныеСогласующего = новый Согласования.ДанныеСогласующего(ПараметрыЗаписи.ФизическоеЛицо, Согласования.РольПодписантаСотрудник())
    
    для Заявление из ПараметрыЗаписи.Заявления 
        если ПараметрыЗаписи.ИспользуетсяУнэп
            если ПараметрыЗаписи.Согласие
                Согласования.ПроверитьНастройкиИПодписатьФайлДокумента(
                    Заявление.ДокументНаПодпись,
                    МенеджерСущности.ЗначениеРеквизитаОбъекта(Заявление.ДокументНаПодпись, "Файл"),
                    ДанныеСогласующего,
                    ПараметрыЗаписи.ПарольЗакрытогоКлюча)
            иначе
                СогласованияДокументов.ЗарегистрироватьОтказПростойПодписью(
                        Заявление.ДокументНаПодпись, 
                        ДанныеСогласующего)
            ;
        иначе
            если ПараметрыЗаписи.ТаблицаФайлы == Неопределено
                 или ПараметрыЗаписи.ТаблицаФайлы.Файлы.Размер() == 0
                если ПараметрыЗаписи.Согласие  
                    СогласованияДокументов.ЗарегистрироватьСогласованиеПростойПодписью(
                        Заявление.ДокументНаПодпись,
                        ДанныеСогласующего)
                иначе
                    СогласованияДокументов.ЗарегистрироватьОтказПростойПодписью(
                        Заявление.ДокументНаПодпись, 
                        ДанныеСогласующего)
                ;
            иначе 
                знч Подпись = ПараметрыЗаписи.ТаблицаФайлы.Файлы[0].Хранилище                   
                СогласованияДокументов.ЗарегистрироватьСогласованиеДокумента(
                    Документ = Заявление.ДокументНаПодпись,
                    ДанныеСогласующего = ДанныеСогласующего,
                    Подпись = Подпись)
            ;    
        ;
        ПолученныеДокументы.ЗарегистрироватьОзнакомлениесОбъектом(
            Заявление.ДокументНаПодпись,
            ПараметрыЗаписи.ФизическоеЛицо)
        
        если ПараметрыЗаписи.Согласие
            СогласованияДокументов.ЗарегистрироватьСогласованиеПростойПодписью(
                Заявление.Ссылка,
                ДанныеСогласующего)    
        иначе
            СогласованияДокументов.ЗарегистрироватьОтказПростойПодписью(
                Заявление.Ссылка, 
                ДанныеСогласующего)              
        ;
        
        пер СостояниеДокумента = ПараметрыЗаписи.Согласие ? СостоянияДокумента.Выполнен : СостоянияДокумента.ПолученОтказ 
        СостДокументов.УстановитьСостояниеДокумента(Заявление.Ссылка, СостояниеДокумента)            
    ;

    ПривилегированныйРежим.Закрыть()
;

@ВПодсистеме
@НаСервере @ДоступноСКлиента
метод ФайлСогласия(Ссылка: СогласиеНаПрисоединениеККэдо.Ссылка): ПрисоединенныйФайл?
    знч ДокументНаПодпись = Ссылка.ЗагрузитьОбъект().ДокументНаПодпись.ЗагрузитьОбъект()
    если ДокументНаПодпись == Неопределено 
        возврат Неопределено
    ;
    знч ФайлСогласия = ДокументНаПодпись.Файл
    возврат ПрисоединенныеФайлыМенеджер.ПрисоединенныйФайл(ФайлСогласия)
;

@НаСервере
метод ИнформацияОСертификате(ФизическоеЛицо: ФизическиеЛица.Ссылка): ОбъектыКриптографии.ИнформацияОСертификате?
    
    исп ПривилегированныйРежим: КонтекстДоступа = КонтекстДоступа.Привилегированный()
    пер Информация = ИнформацияОСертификатах.ИнформацияОСертификатеФизическогоЛица(ФизическоеЛицо)
    ПривилегированныйРежим.Закрыть()
    
    возврат Информация
    
;
