импорт ОбщиеСтандартные
импорт Компания
импорт КонтрольДоступа
импорт Криптография
импорт ОбменДанными
импорт ФизическиеЛица
импорт Компания::Согласования

//Область ОбработчикиСобытий

@Обработчик
@ВыполнятьПриЗагрузкеДанных
метод ПриЗаполнении()
    ФизическоеЛицо = ПользователиСистемы.ТекущееФизическоеЛицо()
    если ФизическоеЛицо == Неопределено
        возврат
    ;
    пер ЧасовойПояс: ЧасовойПояс = ВладельцыКабинетов.ЧасовойПоясФизическогоЛица(ФизическоеЛицо)    
    МоментСоздания = Момент.Сейчас()
    Дата = Дата.Сейчас(ЧасовойПояс)
    Организация = Сотрудники.ОрганизацияФизическогоЛицаПоОсновномуМестуРаботы(ФизическоеЛицо)
    ЗаполнитьДанныеФизическогоЛица()
;

@Обработчик
@ВыполнятьПриЗагрузкеДанных
метод ПередЗаписью(ПредыдущееЗначение: ЗапросИзмененияЛичныхДанных.Данные, ПараметрыЗаписи: ЗапросИзмененияЛичныхДанных.ПараметрыЗаписи)
    Организация = Сотрудники.ОрганизацияФизическогоЛицаПоОсновномуМестуРаботы(ФизическоеЛицо)
    ЗаполнитьПредставление()
    ЗаполнитьМесяцСоздания()
;

@Обработчик
@ВыполнятьПриЗагрузкеДанных
метод ПослеЗаписи(ПредыдущееЗначение: ЗапросИзмененияЛичныхДанных.Данные, ПараметрыЗаписи: ЗапросИзмененияЛичныхДанных.ПараметрыЗаписи)
    исп КонтекстДоступа.Привилегированный()
    пер ТребуетсяРегистрацияИзменений = РегистрацияИзменений.ТребуетсяРегистрацияИзмененийОбъекта(этот, ПредыдущееЗначение)
    ЗапросИзмененияЛичныхДанных.ПослеЗаписиДополнение(Ссылка, ФизическоеЛицо, ТребуетсяРегистрацияИзменений)
;

@Обработчик
@ВыполнятьПриЗагрузкеДанных
метод ПередУдалением(ПараметрыУдаления: ЗапросИзмененияЛичныхДанных.ПараметрыУдаления)
    МенеджерСущности.УдалитьПодчиненныеОбъекты(Ссылка, Тип<СогласованияДокументов>, "Документ")
    МенеджерСущности.УдалитьПодчиненныеОбъекты(Ссылка, Тип<ПодписиДокументов>, "Документ")
;

//КонецОбласти

//Область СлужебныеПроцедурыИФункции

метод ЗаполнитьДанныеФизическогоЛица()
    если ФизическоеЛицо == Неопределено
        возврат
    ;
    знч ЗапрашиваемыеДанные: ВладельцыКабинетов.ЗапрашиваемыеДанныеВладельцевКабинетов
    ЗапрашиваемыеДанные.ЗапрашиваемыеДанныеФизическихЛиц.ЛичныеДанные = Истина
    ЗапрашиваемыеДанные.ЗапрашиваемыеДанныеФизическихЛиц.УдостоверениеЛичности = Истина
    ЗапрашиваемыеДанные.ЗапрашиваемыеДанныеФизическихЛиц.РабочаяКонтактнаяИнформация = Истина
    ЗапрашиваемыеДанные.ЗапрашиваемыеДанныеФизическихЛиц.ПерсональныеДанные = Истина
    пер ДанныеФизическогоЛица = ВладельцыКабинетов.ДанныеВладельцаКабинета(ФизическоеЛицо, ЗапрашиваемыеДанные)
    этот.Фамилия = ДанныеФизическогоЛица.ДанныеФизлица.ЛичныеДанные.ФИО.Фамилия
    этот.Имя = ДанныеФизическогоЛица.ДанныеФизлица.ЛичныеДанные.ФИО.Имя
    этот.Отчество = ДанныеФизическогоЛица.ДанныеФизлица.ЛичныеДанные.ФИО.Отчество
    этот.ВидУдостоверенияЛичности = ДанныеФизическогоЛица.ДанныеФизлица.УдостоверениеЛичности.Вид
    этот.ДокументСерия = ДанныеФизическогоЛица.ДанныеФизлица.УдостоверениеЛичности.Серия
    этот.ДокументНомер = ДанныеФизическогоЛица.ДанныеФизлица.УдостоверениеЛичности.Номер
    этот.ДокументДатаВыдачи = ДанныеФизическогоЛица.ДанныеФизлица.УдостоверениеЛичности.ДатаВыдачи
    этот.ДокументВыдавшийОрган = ДанныеФизическогоЛица.ДанныеФизлица.УдостоверениеЛичности.ВыдавшийОрган
    этот.ДокументКодВыдавшегоОргана = ДанныеФизическогоЛица.ДанныеФизлица.УдостоверениеЛичности.КодВыдавшегоОргана
    этот.МобильныйТелефон = ДанныеФизическогоЛица.ДанныеФизлица.РабочаяКонтактнаяИнформация.МобильныйТелефон
    этот.ЭлектроннаяПочта = ДанныеФизическогоЛица.ДанныеФизлица.РабочаяКонтактнаяИнформация.ЭлектроннаяПочта
    этот.СНИЛС = ДанныеФизическогоЛица.ДанныеФизлица.ПерсональныеДанные.СНИЛС
    этот.ИНН = ДанныеФизическогоЛица.ДанныеФизлица.ПерсональныеДанные.ИНН
    этот.АдресРегистрации = ДанныеФизическогоЛица.ДанныеФизлица.ПерсональныеДанные.АдресРегистрации
    этот.АдресМестаПроживания = ДанныеФизическогоЛица.ДанныеФизлица.ПерсональныеДанные.АдресМестаПроживания
;

метод ЗаполнитьПредставление()
    пер Изменения = новый Массив<Строка>()
    если ИзменениеФИО
        Изменения.Добавить("ФИО")
    ;
    если ИзменениеДокумента
        Изменения.Добавить("документа")
    ;
    если ИзменениеМобильногоТелефона
        Изменения.Добавить("телефона")
    ;
    если ИзменениеАдреса
        Изменения.Добавить("адреса")
    ;
    если Изменения.Пусто()
        ПредставлениеДокумента = "Изменение личных данных"
    иначе
        ПредставлениеДокумента = "Изменение " + Строки.Соединить(Изменения, ", ")
    ;
;

метод ЗаполнитьМесяцСоздания()
    МесяцСоздания = Дата.НачалоМесяца()
;

//КонецОбласти
