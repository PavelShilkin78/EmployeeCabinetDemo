импорт ОбщиеСтандартные
импорт КонтрольДоступа
импорт  ФизическиеЛица

//Область РазрешенияДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): Массив<РазрешениеДоступа>
    возврат КонтрольДоступа.РазрешенияДоступаТаблицыКонтентДанныхАбонентаЧтениеВсем()
;

//КонецОбласти

//Область СлужебныйПрограммныйИнтерфейс

@ВПодсистеме
метод УстановитьПризнакТребуетсяОбновление(ФизическоеЛицо: ФизическиеЛица.Ссылка?, ТребуетсяОбновление: Булево? = Неопределено, ТребуетсяОбновлениеФО: Булево? = Неопределено)
    если ФизическоеЛицо == Неопределено
        или не МенеджерСущности.СсылкаСуществует(ФизическоеЛицо)
        возврат
    ;
    ЗапланироватьЗаданияДляИзмененияПризнаковОбновленияДанныхФизическихЛиц(
        ФизическоеЛицо, 
        ТребуетсяОбновление, 
        ТребуетсяОбновлениеФО)
;

@ВПодсистеме
метод УстановитьПризнакТребуетсяОбновление(СсылкиФизическихЛиц: Массив<ФизическиеЛица.Ссылка>, ТребуетсяОбновление: Булево? = Неопределено, ТребуетсяОбновлениеФО: Булево? = Неопределено)
    для ФизическоеЛицо из СсылкиФизическихЛиц
        УстановитьПризнакТребуетсяОбновление(ФизическоеЛицо, ТребуетсяОбновление, ТребуетсяОбновлениеФО)
    ;
;

метод ЗапланироватьЗаданияДляИзмененияПризнаковОбновленияДанныхФизическихЛиц(ФизическоеЛицо: ФизическиеЛица.Ссылка?, ТребуетсяОбновление: Булево?, ТребуетсяОбновлениеФО: Булево?)
    пер ИмяЗадания: Строка
    если ТребуетсяОбновление != Неопределено 
        ИмяЗадания = ТребуетсяОбновление ? "УТОФЛ" : "СТОФЛ"
        ЗапланироватьЗаданиеДляИзмененияПризнакаОбновленияДанныхФизическихЛиц(
            МенеджерЗаданий.КлючЗаданияПоСсылке(ФизическоеЛицо, ИмяЗадания),
            ФизическоеЛицо, 
            ТребуетсяОбновление, 
            Неопределено                
        )
    ;
    если ТребуетсяОбновлениеФО != Неопределено 
        ИмяЗадания = ТребуетсяОбновлениеФО ? "УТОФОФЛ" : "СТОФОФЛ"
        ЗапланироватьЗаданиеДляИзмененияПризнакаОбновленияДанныхФизическихЛиц(
            МенеджерЗаданий.КлючЗаданияПоСсылке(ФизическоеЛицо, ИмяЗадания),
            ФизическоеЛицо, 
            Неопределено, 
            ТребуетсяОбновлениеФО                
        )
    ;   
;

метод ЗапланироватьЗаданиеДляИзмененияПризнакаОбновленияДанныхФизическихЛиц(КлючЗадания: Строка, ФизическоеЛицо: ФизическиеЛица.Ссылка?, ТребуетсяОбновление: Булево?, ТребуетсяОбновлениеФО: Булево?)
    МенеджерЗаданий.ПроверитьАвтозапускЗапланированныхЗаданийВключен()
    ЗапланированныеЗадания.Создать(
        &ОбновлениеДанныхФизическихЛиц.УстановитьПризнакТребуетсяОбновлениеВПривилегированномРежиме,
        ФизическоеЛицо, ТребуетсяОбновление, ТребуетсяОбновлениеФО)
        .Настроить(Ключ = КлючЗадания, СтратегияПубликации = СтратегияПубликацииЗадания.Отбросить)
        .Запланировать()
;

@ВПодсистеме
метод ТребуетсяОбновлениеДанных(ФизическоеЛицо: ФизическиеЛица.Ссылка?): Булево

    знч Запрос = Запрос{
        Выбрать
            Ссылка,
            ТребуетсяОбновление
         Из
            ОбновлениеДанныхФизическихЛиц
         Где
            ФизическоеЛицо == %ФизическоеЛицо}
    исп Результат = Запрос.Выполнить() 
    знч РезультатСтроки = новый ЧитаемыйМассив(Результат)
    если (не РезультатСтроки.Пусто())
        возврат РезультатСтроки[0].ТребуетсяОбновление
    ;
    
    возврат Ложь

;

@ВПодсистеме
метод ТребуетсяОбновлениеФО(ФизическоеЛицо: ФизическиеЛица.Ссылка?): Булево
    
    знч Запрос = Запрос{
        Выбрать
            Ссылка,
            ТребуетсяОбновлениеФО
         Из
            ОбновлениеДанныхФизическихЛиц
         Где
            ФизическоеЛицо == %ФизическоеЛицо}
    исп Результат = Запрос.Выполнить() 
    знч РезультатСтроки = новый ЧитаемыйМассив(Результат)
    если (не РезультатСтроки.Пусто())
        возврат РезультатСтроки[0].ТребуетсяОбновлениеФО
    ;
    
    возврат Ложь
        
;

//КонецОбласти

//Область СлужебныеПроцедурыИФункции

метод УстановитьПризнакТребуетсяОбновлениеВПривилегированномРежиме(ФизическоеЛицо: ФизическиеЛица.Ссылка?, ТребуетсяОбновление: Булево?, ТребуетсяОбновлениеФО: Булево?)
    если ФизическоеЛицо == Неопределено
        или (ТребуетсяОбновление == Неопределено и ТребуетсяОбновлениеФО == Неопределено)
        возврат
    ;
    исп Транзакции.Начать()
    знч Запрос = Запрос{
        Выбрать
            Ссылка,
            ТребуетсяОбновление,
            ТребуетсяОбновлениеФО
         Из
            ОбновлениеДанныхФизическихЛиц
         Где
            ФизическоеЛицо == %ФизическоеЛицо}
    пер ОбновлениеДанных: ОбновлениеДанныхФизическихЛиц.Объект
    исп Результат = Запрос.Выполнить() 
    знч РезультатСтроки = новый ЧитаемыйМассив(Результат)
    если (не РезультатСтроки.Пусто())
        если (ТребуетсяОбновление == Неопределено или РезультатСтроки[0].ТребуетсяОбновление == ТребуетсяОбновление)
             и (ТребуетсяОбновлениеФО == Неопределено или РезультатСтроки[0].ТребуетсяОбновлениеФО == ТребуетсяОбновлениеФО)
            возврат
        ;
        ОбновлениеДанных = РезультатСтроки[0].Ссылка.ЗагрузитьОбъект(Истина)
    иначе
        ОбновлениеДанных = новый ОбновлениеДанныхФизическихЛиц.Объект()
        ОбновлениеДанных.ФизическоеЛицо = ФизическоеЛицо
    ;
    ОбновлениеДанных.ТребуетсяОбновление = ТребуетсяОбновление != Неопределено ? ТребуетсяОбновление : ОбновлениеДанных.ТребуетсяОбновление
    ОбновлениеДанных.ТребуетсяОбновлениеФО = ТребуетсяОбновлениеФО != Неопределено ? ТребуетсяОбновлениеФО : ОбновлениеДанных.ТребуетсяОбновлениеФО
    ОбновлениеДанных.Записать()
;

//КонецОбласти