импорт ФизическиеЛица
импорт Компания
импорт УниверсальныеМеханизмы

//Область ПрограммныйИнтерфейс
@ВПроекте
метод ЗаписатьЗапланированныеОтсутствия(Отсутствие: ОснованиеОтсутствия.Ссылка, НачалоПериода: ДатаВремя, ОкончаниеПериода: ДатаВремя, 
    ФизическоеЛицо: ФизическиеЛица.Ссылка, ВидОтсутствия: ВидыОтсутствий, Внутрисменное:Булево, Организации: Массив<Организации.Ссылка>?)
    
    пер ОрганизацииОтсутствия: Массив<Организации.Ссылка?>
    если Организации == Неопределено или Организации!.Размер() == 0
        ОрганизацииОтсутствия.Добавить(Неопределено)
    иначе
        ОрганизацииОтсутствия.ДобавитьВсе(Организации)
    ;
    
    для Организация из ОрганизацииОтсутствия
        знч Набор = новый ЗапланированныеОтсутствия.НаборЗаписей()
        Набор.Фильтр.Установить(
            НачалоПериода = НачалоПериода,
            ОкончаниеПериода = ОкончаниеПериода,
            ФизическоеЛицо = ФизическоеЛицо,
            ВидОтсутствия = ВидОтсутствия,
            Организация = Организация    
        )
        Набор.ДобавитьЗапись(
            Отсутствие = Отсутствие,
            Внутрисменное = Внутрисменное
        )
        Набор.Записать()          
    ;  
;

@ВПроекте
метод УдалитьЗапланированныеОтсутствия(Отсутствие: ОснованиеОтсутствия.Ссылка, НачалоПериода: ДатаВремя, ОкончаниеПериода: ДатаВремя, 
    ФизическоеЛицо: ФизическиеЛица.Ссылка, ВидОтсутствия: ВидыОтсутствий, Организации: Массив<Организации.Ссылка>?)
    
    пер ОрганизацииОтсутствия: Массив<Организации.Ссылка?>
    если Организации == Неопределено или Организации!.Размер() == 0
        ОрганизацииОтсутствия.Добавить(Неопределено)
    иначе
        ОрганизацииОтсутствия.ДобавитьВсе(Организации)
    ;
    
    для Организация из ОрганизацииОтсутствия
        знч Набор = новый ЗапланированныеОтсутствия.НаборЗаписей()
        Набор.Фильтр.Установить(
            НачалоПериода = НачалоПериода,
            ОкончаниеПериода = ОкончаниеПериода,
            ФизическоеЛицо = ФизическоеЛицо,
            ВидОтсутствия = ВидОтсутствия,
            Организация = Организация    
        ) 
        Набор.Записать()               
    ; 
;

@ВПроекте
метод УдалитьЗапланированноеОтсутствие(Отсутствие: ОснованиеОтсутствия.Ссылка)
     знч Запрос = Запрос{
        ВЫБРАТЬ 
            ЗапланированныеОтсутствия.НачалоПериода КАК НачалоПериода ,
            ЗапланированныеОтсутствия.ОкончаниеПериода КАК ОкончаниеПериода,
            ЗапланированныеОтсутствия.ФизическоеЛицо КАК ФизическоеЛицо,
            ЗапланированныеОтсутствия.ВидОтсутствия КАК ВидОтсутствия,
            ЗапланированныеОтсутствия.Организация КАК Организация
        ИЗ 
            ЗапланированныеОтсутствия КАК ЗапланированныеОтсутствия
        ГДЕ 
            ЗапланированныеОтсутствия.Отсутствие == %Отсутствие
     }
     
     исп Результат = Запрос.Выполнить()
     для Элемент из Результат
        знч Набор = новый ЗапланированныеОтсутствия.НаборЗаписей()
        Набор.Фильтр.Установить(
            НачалоПериода = Элемент.НачалоПериода,
            ОкончаниеПериода = Элемент.ОкончаниеПериода,
            ФизическоеЛицо = Элемент.ФизическоеЛицо,
            ВидОтсутствия = Элемент.ВидОтсутствия,
            Организация = Элемент.Организация    
        ) 
        Набор.Записать()    
     ;
;

// КонецОбласти

// Область Обновление
@ВПодсистеме
метод ЗапланированныеОтсутствияНачальноеЗаполнение()
  
   знч Запрос = Запрос{
       ВЫБРАТЬ
            Отсутствие.Ссылка КАК Ссылка,
            СостояниеДокументов.Состояние Как Состояние,
            Отсутствие.ФизическоеЛицо КАК ФизическоеЛицо,
            Отсутствие.Причина КАК Причина,
            Отсутствие.ДатаНачала КАК ДатаНачала,
            Отсутствие.ВремяНачала КАК ВремяНачала,
            Отсутствие.ДатаОкончания КАК ДатаОкончания,
            Отсутствие.ВремяОкончания КАК ВремяОкончания,
            Отсутствие.ДатаОтсутствия КАК ДатаОтсутствия,
            Отсутствие.ПолныйДень КАК ПолныйДень,
            Организации.Элемент.ЗаменитьNull(Неопределено) КАК Организация
        ИЗ Отсутствие КАК Отсутствие
        ЛЕВОЕ СОЕДИНЕНИЕ Отсутствие.ИдентификаторыЭлектронныхДокументов КАК Организации  
        ПО 
            Отсутствие.Ссылка == Организации.Владелец
        Внутреннее Соединение СостояниеДокументов КАК СостояниеДокументов 
            ПО Отсутствие.Ссылка == СостояниеДокументов.Документ
            И СостояниеДокументов.Состояние В(%{[СостоянияДокумента.Подготовлен, СостоянияДокумента.Выполнен]})
    } 

    исп Результат = Запрос.Выполнить()
    для Элемент из Результат
        если Элемент.ПолныйДень
            знч Запись =
                новый ЗапланированныеОтсутствия.Запись(
                    НачалоПериода = Элемент.ДатаНачала.НачалоДня(),
                    ОкончаниеПериода = Элемент.ДатаОкончания.КонецДня(), 
                    ФизическоеЛицо = Элемент.ФизическоеЛицо,
                    ВидОтсутствия = Элемент.Причина, 
                    Организация = Элемент.Организация,
                    Отсутствие = Элемент.Ссылка, 
                    Внутрисменное = Ложь)
            ЗапланированныеОтсутствия.Записать(Запись)
        иначе
            знч Запись =
                новый ЗапланированныеОтсутствия.Запись(
                    НачалоПериода = новый ДатаВремя(Элемент.ДатаОтсутствия, Элемент.ВремяНачала ?? Время{00:00}),
                    ОкончаниеПериода = новый ДатаВремя(Элемент.ДатаОтсутствия, Элемент.ВремяОкончания), 
                    ФизическоеЛицо = Элемент.ФизическоеЛицо,
                    ВидОтсутствия = Элемент.Причина, 
                    Организация = Элемент.Организация,
                    Отсутствие = Элемент.Ссылка, 
                    Внутрисменное = Истина)
            ЗапланированныеОтсутствия.Записать(Запись)
        ;    
    ;
;

@ВПроекте
метод ПриИзмененииСогласования(Отсутствие: ОснованиеОтсутствия.Ссылка, ТекущееСостояние: СостоянияДокумента)
    если ТекущееСостояние == СостоянияДокумента.ПолученОтказ
        или ТекущееСостояние == СостоянияДокумента.Черновик
        или ТекущееСостояние == СостоянияДокумента.Аннулирован
        УдалитьЗапланированноеОтсутствие(Отсутствие)
    ;
;

// КонецОбласти
