импорт ВладельцыКабинетов
импорт ОбщиеСтандартные
импорт Компания::Согласования
импорт УниверсальныеМеханизмы
импорт УниверсальныеМеханизмы::ШаблоныДокументов
импорт ФизическиеЛица
импорт ОбщегоНазначения
импорт ИнтерфейсныеКомпонентыСтандартные
импорт СтандартноеПриложение
импорт Компания
импорт КонтрольДоступа
импорт Уведомления
импорт Отпуск

@ВПроекте @НаКлиенте конст ИД_РАЗДЕЛА_ОТСУТСТВИЯ = "Отсутствия"

@ВПроекте @НаКлиенте конст ИМЯ_РАЗДЕЛА_ОТСУТСТВИЯ = "Отсутствия"

@ВПроекте
@НаКлиенте @НаСервере
конст ИД_ПОДСИСТЕМЫ = "Отсутствия"

@ВПодсистеме конст ГРУППА_РЕСУРСОВ_ОТСУТСТВИЯ = "Отсутствия"

@ВПодсистеме конст КЛЮЧ_ПАРАМЕТРОВ_СЕАНСА: Строка = "ОтсутствияПараметрыСеанса"
@ВПодсистеме конст ВИД_СОГЛАСОВАНИЯ_ОТСУТСТВИЙ = "Отсутствия"
@ВПодсистеме конст ПОДСИСТЕМА_ОТСУТСТВИЯ = "Отсутствия"

@ВПодсистеме 
@НаКлиенте @НаСервере
конст ШАБЛОН_ЗАЯВЛЕНИЯ_НА_ОТСУТСТВИЕ = "ШаблонЗавяленияНаОтсутствие"

@ВПроекте
структура ФункциональныеОпции
  
    пер ИнформацияОбОтсутствиях: Булево = Истина
    пер Опоздание: Булево = Истина
    пер Болезнь: Булево = Истина
    пер УчебныйОтпуск: Булево = Истина
    пер ОтпускПоБеременностиИРодам: Булево = Истина
    пер ОтпускПоУходуЗаРебенком: Булево = Истина
    пер Отгул: Булево = Истина
    пер Командировка: Булево = Истина
    пер ЛичныеОбстоятельства: Булево = Истина
    пер УходЗаРебенкомИнвалидом: Булево = Истина
    пер ЗапросМестаРаботыВЗаявлениях: Булево
;

@НаСервере 
структура ДанныеЗаявления
    обз пер ДатаДокумента: Дата?
    обз пер Представление: Строка
    пер ДатаНачала: Дата?
    пер ДатаОкончания: Дата?
    пер ДатаОтсутствия: Дата?
    пер ВремяНачала: Время?
    пер ВремяОкончания: Время?
;

@ВПроекте
структура ПараметрыСеанса
    пер ФункциональныеОпции: ФункциональныеОпции
;

@ВПроекте
@НаКлиенте
метод ПараметрыСеанса(): ПараметрыСеанса
    возврат ПараметрыСеансаСервис.ПолучитьСервис().ПараметрПоКлючу(КЛЮЧ_ПАРАМЕТРОВ_СЕАНСА) как ПараметрыСеанса
;

@ВПодсистеме
конст ЗАГОЛОВОК_КОМАНДЫ_ВВЕСТИ_ОТСУТСТВИЕ: Строка = "Ввести отсутствие"

конст ПОЛНОМОЧИЕ_РЕДАКТИРОВАНИЕ_ОТСУТСТВИЙ = "ПолномочиеРедактированиеОтсутствий"
конст ПОЛНОМОЧИЕ_ПРОСМОТР_ОТСУТСТВИЙ = "ПолномочиеПросмотрОтсутствий"
конст РОЛЬ_СОГЛАСОВАНИЕ_ОТСУТСТВИЙ = "СогласованиеОтсутствий"

@ВПроекте
@НаСервере
метод ДобавитьРоли()
    ДобавитьРольСогласованиеОтсутствий()
;

@НаСервере
метод ДобавитьРольСогласованиеОтсутствий()
    КонтрольДоступа.ДобавитьРоль(
        "Согласование отсутствий",
        РОЛЬ_СОГЛАСОВАНИЕ_ОТСУТСТВИЙ,
        [
            ПолномочиеПросмотрОтсутствий(),
            КонтрольДоступа.ПолномочиеПросмотрЛичныхДанных()
        ]
    )
;

@ВПодсистеме
@НаСервере
метод РольСогласованиеОтсутствий(): Роли.Ссылка
    возврат КонтрольДоступа.Роль(РОЛЬ_СОГЛАСОВАНИЕ_ОТСУТСТВИЙ)
;

@ВПроекте
@НаСервере
метод ДобавитьПолномочия()
    ДобавитьПолномочиеРедактированиеОтсутствий()
    ДобавитьПолномочиеПросмотрОтсутствий()
;

@НаСервере
метод ДобавитьПолномочиеРедактированиеОтсутствий()
    КонтрольДоступа.ДобавитьПолномочие(
        "Редактирование Отсутствий",
        ПОЛНОМОЧИЕ_РЕДАКТИРОВАНИЕ_ОТСУТСТВИЙ,
        "",
        КонтрольДоступа.ТипАтрибутаДоступаФизическиеЛица())
;

@НаСервере
метод ДобавитьПолномочиеПросмотрОтсутствий()
    КонтрольДоступа.ДобавитьПолномочие(
        "Просмотр Отсутствий",
        ПОЛНОМОЧИЕ_ПРОСМОТР_ОТСУТСТВИЙ,
        "",
        КонтрольДоступа.ТипАтрибутаДоступаФизическиеЛица())
;

@ВПроекте
@НаСервере
метод ПолномочиеРедактированиеОтсутствий(): Полномочия.Ссылка
    возврат КонтрольДоступа.Полномочие(ПОЛНОМОЧИЕ_РЕДАКТИРОВАНИЕ_ОТСУТСТВИЙ)
;

@ВПроекте
@НаСервере
метод ПолномочиеПросмотрОтсутствий(): Полномочия.Ссылка
    возврат КонтрольДоступа.Полномочие(ПОЛНОМОЧИЕ_ПРОСМОТР_ОТСУТСТВИЙ)
;

@ВПодсистеме
@НаКлиенте
метод ВремяОтсутствияПоУмолчанию(ТекущаяДата: Дата? = Неопределено): ЗакрытыйДиапазон<Время>
    пер Начало: Время?
    пер Окончание: Время?
    пер ТекущееВремя: Время = Время.Сейчас()
    
    пер ПараметрыСеанса: ВладельцыКабинетов.ПараметрыСеанса = ВладельцыКабинетов.ПараметрыСеанса()

    если ТекущаяДата == Неопределено
        если ТекущееВремя > Время{0:0:0} + ПараметрыСеанса.ОкончаниеРабочегоДня - ПараметрыСеанса.КвантВремени
            Начало = Время{0:0:0} + ПараметрыСеанса.НачалоРабочегоДня
            Окончание = Время{0:0:0} + ПараметрыСеанса.ОкончаниеРабочегоДня
        иначе
            пер БлижайшееВремя: Время = МенеджерДат.БлижайшееВремя(ТекущееВремя, ПараметрыСеанса.КвантВремени)
            пер НачалоРабочегоДня: Время = Время{0:0:0} + ПараметрыСеанса.НачалоРабочегоДня
            Начало = БлижайшееВремя < НачалоРабочегоДня ? НачалоРабочегоДня : БлижайшееВремя
            Окончание = Время{0:0:0} + ПараметрыСеанса.ОкончаниеРабочегоДня
        ;
    иначе 
        Начало = Время{0:0:0} + ПараметрыСеанса.НачалоРабочегоДня
        Окончание = Время{0:0:0} + ПараметрыСеанса.ОкончаниеРабочегоДня
    ;
    возврат новый ЗакрытыйДиапазон<Время>(Начало, Окончание)  
;

@ВПодсистеме
@НаКлиенте
метод ОткрытьФормуВидаОтсутствия(ВидОтсутствия: ВидыОтсутствий)
    СтатистикаИспользованияПриложения.ЗарегистрироватьЦель("Отсутствие%{ВидОтсутствия.ВСтроку()}")
    знч Сервисы = ДокументОтсутствия.ПолучитьСервисы()
    для Сервис из Сервисы
        если Сервис.Создать(ВидОтсутствия)
            прервать
        ;
    ;
;

@ВПодсистеме
@НаКлиенте
метод СформироватьКомандыСоздания(): Команда|ГруппаКомандногоИнтерфейса<Команда>|?
    если не Компания.ПараметрыСеанса().ТекущийПользовательСотрудник
        возврат Неопределено
    ;
    знч ВидыОтсутствий: ЧитаемыйМассив<ВидыОтсутствий> = Отсутствия.СписокВидовОтсутствий()
    знч Обработчик: (ВидыОтсутствий) -> ничто = &ФормаРазделаПриНажатииКомандыСоздания
    если ВидыОтсутствий.Пусто()
        возврат Неопределено
    ;
    если ВидыОтсутствий.Размер() == 1
        пер ВидОтсутствия = ВидыОтсутствий[0]
        пер Команда = новый ОбычнаяКоманда(метод (Команда: ОбычнаяКоманда) -> Обработчик(ВидОтсутствия);, ВидОтсутствия.Представление())
        возврат Команда
    иначе
        пер ДействияКомандыСоздания = <Команда>[]
        для ВидОтсутствия из ВидыОтсутствий
            пер Команда = новый ОбычнаяКоманда(метод (Команда: ОбычнаяКоманда) -> Обработчик(ВидОтсутствия);, ВидОтсутствия.Представление())
            ДействияКомандыСоздания.Добавить(Команда)
        ;
        возврат новый ГруппаКомандногоИнтерфейса<Команда>(Отсутствия.ЗАГОЛОВОК_КОМАНДЫ_ВВЕСТИ_ОТСУТСТВИЕ, Неопределено, ДействияКомандыСоздания)
    ;
;

@НаКлиенте
метод ФормаРазделаПриНажатииКомандыСоздания(ВидОтсутствия: ВидыОтсутствий)
    СтатистикаИспользованияПриложения.ЗарегистрироватьЦель("ОтсутствиеФормаВызовИзРаздела")
    ОткрытьФормуВидаОтсутствия(ВидОтсутствия)
;

@ВПодсистеме
@НаКлиенте
метод ОткрытьФормуДокумента(Документ: ОснованиеОтсутствия.Ссылка)
    знч Сервисы = ДокументОтсутствия.ПолучитьСервисы()
    для Сервис из Сервисы
        знч Форма = Сервис.Форма(Документ)
        если Форма != Неопределено
            Форма.ОткрытьВМодальномОкне()
            прервать
        ;
    ;
;

@ВПроекте
@НаСервере
метод ПолучитьФункциональныеОпции(): ФункциональныеОпции?
    возврат ИспользуемаяФункциональность.ФункциональныеОпции()
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ЗаписатьФункциональныеОпции(ФункциональныеОпции: ФункциональныеОпции)
    ИспользуемаяФункциональность.ЗаписатьФункциональныеОпции(ФункциональныеОпции)
;

@НаКлиенте
метод СоздатьЗаявлениеОбОтсутствии(Параметр: ВидыОтсутствий)
    СтатистикаИспользованияПриложения.ЗарегистрироватьЦель("ОтсутствиеФормаВызовИзГлавной")
    ОткрытьФормуВидаОтсутствия(Параметр)
;

@ВПодсистеме
@НаСервере @ДоступноСКлиента
метод ПредставленияЗаявленийФизлица(ФизическоеЛицо: ФизическиеЛица.Ссылка?, Состояния: Массив<СостоянияДокумента>, БратьОтпуска: Булево = Истина): ЧитаемаяКоллекция<СостояниеДокументаКомпонентДанных>
    пер ПредставленияЗаявленийФизлица: Массив<СостояниеДокументаКомпонентДанных>
    если ФизическоеЛицо == Неопределено
        возврат ПредставленияЗаявленийФизлица
    ;
    пер ФильтрСостояний: Булево = не Состояния.Пусто()
    знч Запрос = Запрос{
        Выбрать
            Заявления.Документ Как Документ,
            Заявления.ДатаДокумента Как ДатаДокумента,
            Заявления.ДатаНачала Как ДатаНачала,
            Заявления.ДатаОкончания Как ДатаОкончания,
            Заявления.ДатаОтсутствия Как ДатаОтсутствия,
            Заявления.ВремяНачала Как ВремяНачала,
            Заявления.ВремяОкончания Как ВремяОкончания,
            Заявления.Представление Как Представление
        Из (Выбрать
                Ссылка Как Документ,
                Дата Как ДатаДокумента,
                ДатаНачала Как ДатаНачала,
                ДатаОкончания Как ДатаОкончания,
                Неопределено Как ДатаОтсутствия, 
                Неопределено Как ВремяНачала, 
                Неопределено Как ВремяОкончания,
                ПредставлениеВидаОтсутствия Как Представление,
                МоментСоздания Как МоментСоздания
            Из ЗаявлениеНаОтпуск
            Где ФизическоеЛицо == %ФизическоеЛицо
            И не %ФильтрСостояний
            И %БратьОтпуска
            Объединить Все
            Выбрать
                ЗаявлениеНаОтпуск.Ссылка,
                ЗаявлениеНаОтпуск.Дата,
                ЗаявлениеНаОтпуск.ДатаНачала,
                ЗаявлениеНаОтпуск.ДатаОкончания,
                Неопределено,
                Неопределено,
                Неопределено,
                ЗаявлениеНаОтпуск.ПредставлениеВидаОтсутствия,
                ЗаявлениеНаОтпуск.МоментСоздания
            Из ЗаявлениеНаОтпуск Как ЗаявлениеНаОтпуск
            Левое Соединение СостояниеДокументов Как Состояния 
                    По ЗаявлениеНаОтпуск.Ссылка == Состояния.Документ
            Где ФизическоеЛицо == %ФизическоеЛицо
            И %ФильтрСостояний
            И %БратьОтпуска
            И Состояния.Состояние В (%Состояния)
            Объединить Все
            Выбрать
                Ссылка Как Документ,
                Дата Как ДатаДокумента,
                ДатаНачала Как ДатаНачала,
                ДатаОкончания Как ДатаОкончания,
                Неопределено Как ДатаОтсутствия, 
                Неопределено Как ВремяНачала, 
                Неопределено Как ВремяОкончания,
                ПредставлениеВидаОтсутствия Как Представление,
                МоментСоздания Как МоментСоздания
            Из ЗаявлениеНаПереносОтпуска
            Где ФизическоеЛицо == %ФизическоеЛицо
            И не %ФильтрСостояний
            И %БратьОтпуска
            Объединить Все
            Выбрать
                ЗаявлениеНаПереносОтпуска.Ссылка,
                ЗаявлениеНаПереносОтпуска.Дата,
                ЗаявлениеНаПереносОтпуска.ДатаНачала,
                ЗаявлениеНаПереносОтпуска.ДатаОкончания,
                Неопределено,
                Неопределено,
                Неопределено,
                ЗаявлениеНаПереносОтпуска.ПредставлениеВидаОтсутствия,
                ЗаявлениеНаПереносОтпуска.МоментСоздания
            Из ЗаявлениеНаПереносОтпуска Как ЗаявлениеНаПереносОтпуска
            Левое Соединение СостояниеДокументов Как Состояния 
                    По ЗаявлениеНаПереносОтпуска.Ссылка == Состояния.Документ
            Где ФизическоеЛицо == %ФизическоеЛицо
            И %ФильтрСостояний
            И %БратьОтпуска
            И Состояния.Состояние В (%Состояния)
            Объединить Все
            Выбрать
                Ссылка,
                Дата,
                ДатаНачала,
                ДатаОкончания,
                ДатаОтсутствия,
                ВремяНачала,
                ВремяОкончания,
                Причина,
                МоментСоздания
            Из Отсутствие
            Где ФизическоеЛицо == %ФизическоеЛицо
            И не %ФильтрСостояний
            Объединить Все
            Выбрать
                Отсутствие.Ссылка,
                Отсутствие.Дата,
                Отсутствие.ДатаНачала,
                Отсутствие.ДатаОкончания,
                Отсутствие.ДатаОтсутствия,
                Отсутствие.ВремяНачала,
                Отсутствие.ВремяОкончания,
                Отсутствие.Причина,
                Отсутствие.МоментСоздания
            Из Отсутствие Как Отсутствие
            Левое Соединение СостояниеДокументов Как Состояния 
                    По Отсутствие.Ссылка == Состояния.Документ
            Где ФизическоеЛицо == %ФизическоеЛицо
            И %ФильтрСостояний
            И Состояния.Состояние В (%Состояния)) Как Заявления
        Упорядочить по Заявления.МоментСоздания Убыв}
    ПредставленияЗаявленийФизлица = ДанныеПредставлений(Запрос)
    возврат ПредставленияЗаявленийФизлица
;

@ВПодсистеме
@НаСервере @ДоступноСКлиента
метод ПредставленияЗаявленийФизлица(ФизическоеЛицо: ФизическиеЛица.Ссылка?, Состояния: Массив<СостоянияДокумента>, КоличествоЭлементов: Число, БратьОтпуска = Истина): ЧитаемаяКоллекция<СостояниеДокументаКомпонентДанных>
    пер ПредставленияЗаявленийФизлица: Массив<СостояниеДокументаКомпонентДанных>
    если ФизическоеЛицо == Неопределено
        возврат ПредставленияЗаявленийФизлица
    ;
    пер ФильтрСостояний: Булево = не Состояния.Пусто()
    знч Запрос = Запрос{
        Выбрать Первые %КоличествоЭлементов
            Заявления.Документ Как Документ,
            Заявления.ДатаДокумента Как ДатаДокумента,
            Заявления.ДатаНачала Как ДатаНачала,
            Заявления.ДатаОкончания Как ДатаОкончания,
            Заявления.ДатаОтсутствия Как ДатаОтсутствия,
            Заявления.ВремяНачала Как ВремяНачала,
            Заявления.ВремяОкончания Как ВремяОкончания,
            Заявления.Представление Как Представление
        Из (Выбрать Первые %КоличествоЭлементов
                Ссылка Как Документ,
                Дата Как ДатаДокумента,
                ДатаНачала Как ДатаНачала,
                ДатаОкончания Как ДатаОкончания,
                Неопределено Как ДатаОтсутствия, 
                Неопределено Как ВремяНачала, 
                Неопределено Как ВремяОкончания,
                ПредставлениеВидаОтсутствия Как Представление,
                МоментСоздания Как МоментСоздания
            Из ЗаявлениеНаОтпуск
            Где ФизическоеЛицо == %ФизическоеЛицо
            И не %ФильтрСостояний
            Объединить Все
            Выбрать Первые %КоличествоЭлементов
                ЗаявлениеНаОтпуск.Ссылка,
                ЗаявлениеНаОтпуск.Дата,
                ЗаявлениеНаОтпуск.ДатаНачала,
                ЗаявлениеНаОтпуск.ДатаОкончания,
                Неопределено,
                Неопределено,
                Неопределено,
                ЗаявлениеНаОтпуск.ПредставлениеВидаОтсутствия,
                ЗаявлениеНаОтпуск.МоментСоздания
            Из ЗаявлениеНаОтпуск Как ЗаявлениеНаОтпуск
            Левое Соединение СостояниеДокументов Как Состояния 
                    По ЗаявлениеНаОтпуск.Ссылка == Состояния.Документ
            Где ФизическоеЛицо == %ФизическоеЛицо
            И %ФильтрСостояний
            И Состояния.Состояние В (%Состояния)
            И %БратьОтпуска
            Объединить Все
            Выбрать Первые %КоличествоЭлементов
                Ссылка Как Документ,
                Дата Как ДатаДокумента,
                ДатаНачала Как ДатаНачала,
                ДатаОкончания Как ДатаОкончания,
                Неопределено Как ДатаОтсутствия, 
                Неопределено Как ВремяНачала, 
                Неопределено Как ВремяОкончания,
                ПредставлениеВидаОтсутствия Как Представление,
                МоментСоздания Как МоментСоздания
            Из ЗаявлениеНаПереносОтпуска
            Где ФизическоеЛицо == %ФизическоеЛицо
            И не %ФильтрСостояний
            И %БратьОтпуска
            Объединить Все
            Выбрать Первые %КоличествоЭлементов
                ЗаявлениеНаПереносОтпуска.Ссылка,
                ЗаявлениеНаПереносОтпуска.Дата,
                ЗаявлениеНаПереносОтпуска.ДатаНачала,
                ЗаявлениеНаПереносОтпуска.ДатаОкончания,
                Неопределено,
                Неопределено,
                Неопределено,
                ЗаявлениеНаПереносОтпуска.ПредставлениеВидаОтсутствия,
                ЗаявлениеНаПереносОтпуска.МоментСоздания
            Из ЗаявлениеНаПереносОтпуска Как ЗаявлениеНаПереносОтпуска
            Левое Соединение СостояниеДокументов Как Состояния 
                    По ЗаявлениеНаПереносОтпуска.Ссылка == Состояния.Документ
            Где ФизическоеЛицо == %ФизическоеЛицо
            И %ФильтрСостояний
            И Состояния.Состояние В (%Состояния)
            И %БратьОтпуска
            Объединить Все
            Выбрать Первые %КоличествоЭлементов
                Ссылка,
                Дата,
                ДатаНачала,
                ДатаОкончания,
                ДатаОтсутствия,
                ВремяНачала,
                ВремяОкончания,
                Причина,
                МоментСоздания
            Из Отсутствие
            Где ФизическоеЛицо == %ФизическоеЛицо
            И не %ФильтрСостояний
            Объединить Все
            Выбрать Первые %КоличествоЭлементов
                Отсутствие.Ссылка,
                Отсутствие.Дата,
                Отсутствие.ДатаНачала,
                Отсутствие.ДатаОкончания,
                Отсутствие.ДатаОтсутствия,
                Отсутствие.ВремяНачала,
                Отсутствие.ВремяОкончания,
                Отсутствие.Причина,
                Отсутствие.МоментСоздания
            Из Отсутствие Как Отсутствие
            Левое Соединение СостояниеДокументов Как Состояния 
                    По Отсутствие.Ссылка == Состояния.Документ
            Где ФизическоеЛицо == %ФизическоеЛицо
            И %ФильтрСостояний
            И Состояния.Состояние В (%Состояния)) Как Заявления
        Упорядочить по Заявления.МоментСоздания Убыв}
    ПредставленияЗаявленийФизлица = ДанныеПредставлений(Запрос)
    возврат ПредставленияЗаявленийФизлица
;

@НаСервере
метод ДанныеПредставлений(Запрос: ТипизированныйЗапрос<неизвестно>): Массив<СостояниеДокументаКомпонентДанных>
    пер ПредставленияЗаявленийФизлица: Массив<СостояниеДокументаКомпонентДанных>
    знч ЗаявленияФизлица: Массив<ДокументИмеющийСостояние.Ссылка>
    знч ДанныеЗаявлений: Соответствие<ДокументИмеющийСостояние.Ссылка, ДанныеЗаявления>
    исп РезультатЗапроса = Запрос.Выполнить()
    для СтрокаРезультата из РезультатЗапроса
        ЗаявленияФизлица.Добавить(СтрокаРезультата.Документ)
        ДанныеЗаявлений.Вставить(СтрокаРезультата.Документ, новый ДанныеЗаявления(СтрокаРезультата.ДатаДокумента, СтрокаРезультата.Представление.Представление(), СтрокаРезультата.ДатаНачала, СтрокаРезультата.ДатаОкончания, СтрокаРезультата.ДатаОтсутствия, СтрокаРезультата.ВремяНачала, СтрокаРезультата.ВремяОкончания))
    ;
    ПредставленияЗаявленийФизлица = СостДокументов.СостоянияДокументов(ЗаявленияФизлица)
    для Компонент из ПредставленияЗаявленийФизлица
        Компонент.ДатаДокумента = ДанныеЗаявлений[Компонент.Документ].ДатаДокумента
        Компонент.Представление = ДанныеЗаявлений[Компонент.Документ].Представление
        Компонент.ДополнительноеПредставление = СостДокументов.ПредставлениеПериодаДокумента(ДанныеЗаявлений[Компонент.Документ].ДатаДокумента, ДанныеЗаявлений[Компонент.Документ].ДатаОтсутствия, ДанныеЗаявлений[Компонент.Документ].ВремяНачала, ДанныеЗаявлений[Компонент.Документ].ВремяОкончания, ДанныеЗаявлений[Компонент.Документ].ДатаНачала, ДанныеЗаявлений[Компонент.Документ].ДатаОкончания)
    ;
    знч Сервисы = СостояниеДокументовПоставщик.ПолучитьСервисы()
    для Сервис из Сервисы
        Сервис.ЗаполнитьКартинкиДокументов(ПредставленияЗаявленийФизлица)
    ;
    возврат ПредставленияЗаявленийФизлица
;

@ВПроекте
@НаКлиенте 
метод СписокВидовОтсутствий(): ЧитаемыйМассив<ВидыОтсутствий>
    пер СписокВидовОтсутствий: Массив<ВидыОтсутствий>
    знч Сервисы = ДокументОтсутствия.ПолучитьСервисы()
    для Сервис из Сервисы
        СписокВидовОтсутствий.ДобавитьВсе(Сервис.ДоступныеВидыОтсутствия())
    ;
    возврат новый ЧитаемыйМассив<ВидыОтсутствий>(СписокВидовОтсутствий)
;

@ВПроекте
структура ТабличныеЧасти
    пер ТаблицаФайлы: ПрисоединенныеФайлы?
    пер ТаблицаЗаместители: Заместители?
    пер ТаблицаУведомляемые: Уведомляемые?
    пер ТаблицаСогласующие: Согласующие?
    пер ДополнительныеРеквизиты: РеквизитыШаблона?
;

@ВПроекте
структура ПересечениеПериодов
    пер Ошибки: Строка
    пер Предупреждения: Строка 
;

@ВПроекте
метод ПредставлениеВнутрисменногоОтсутствия(Начало: Момент?, Окончание: Момент?, Причина: ВидыОтсутствий?, ЧасовойПоясПредставления: ЧасовойПояс? = Неопределено): Строка
    
    если ЧасовойПоясПредставления == Неопределено
        ЧасовойПоясПредставления = ЧасовойПояс.Текущий()
    ;
    
    пер ДатаОтсутствия: Дата?
    если Начало != Неопределено
        ДатаОтсутствия = Начало.ВДатаВремя(ЧасовойПоясПредставления).Дата
    иначе если Окончание != Неопределено
        ДатаОтсутствия = Окончание.ВДатаВремя(ЧасовойПоясПредставления).Дата
    иначе
        возврат "не задан"
    ;
    
    пер ВремяНачала: Время? = Начало?.ВДатаВремя(ЧасовойПоясПредставления).Время 
    пер ВремяОкончания: Время? = Окончание?.ВДатаВремя(ЧасовойПоясПредставления).Время
    
    если Причина == ВидыОтсутствий.Опоздание
        ВремяНачала = Неопределено
    ;

    пер ПредставлениеПериода = МенеджерДат.ПредставлениеПериода(ДатаОтсутствия, ВремяНачала, ВремяОкончания)
    возврат ПредставлениеОтсутствия(ПредставлениеПериода, Причина)
;

@ВПроекте
метод ПредставлениеВнутрисменногоОтсутствия(ДатаОтсутствия: Дата, ВремяНачала: Время?, ВремяОкончания: Время?,
    Причина: ВидыОтсутствий?, ФизическоеЛицо: ФизическиеЛица.Ссылка? = Неопределено): Строка
    
    если Причина == ВидыОтсутствий.Опоздание
        ВремяНачала = Неопределено
    ;

    пер ПредставлениеПериода = МенеджерДат.ПредставлениеПериода(ДатаОтсутствия, ВремяНачала, ВремяОкончания)
    
    возврат ПредставлениеОтсутствия(ПредставлениеПериода, Причина, ФизическоеЛицо)
;

@ВПроекте
метод ПредставлениеОтсутствия(Начало: Дата?, Окончание: Дата?, Причина: ВидыОтсутствий?, ФизическоеЛицо: ФизическиеЛица.Ссылка? = Неопределено, ПредставлениеПричины: Строка = ""): Строка
    
    пер ПредставлениеПериода = МенеджерДат.ПредставлениеПериода(Начало, Окончание)
    возврат ПредставлениеОтсутствия(ПредставлениеПериода, Причина, ФизическоеЛицо, ПредставлениеПричины)
;

метод ПредставлениеОтсутствия(ПредставлениеПериода: Строка, Причина: ВидыОтсутствий?, ФизическоеЛицо: ФизическиеЛица.Ссылка? = Неопределено, ПредставлениеПричины: Строка = ""): Строка
    пер Представление: Массив<Строка>
    если ФизическоеЛицо != Неопределено
        Представление.Добавить(ФизическоеЛицо.Представление())
    ;

    Представление.Добавить(ПредставлениеПериода)
    
    если Причина != Неопределено
        если ПредставлениеПричины.Пусто()
            Представление.Добавить(Причина.Представление())
        иначе
            Представление.Добавить(ПредставлениеПричины)
        ;
    ;
    возврат Строки.Соединить(Представление, ", ")
;

@ВПроекте
метод ПредставлениеВидаОтсутствияДляКоллег(Причина: ВидыОтсутствий?): Строка
    пер ПредставлениеВидовОтсутствий = {
        ВидыОтсутствий.ОтпускПоБеременностиИРодам: "Отпуск",
        ВидыОтсутствий.УходЗаРебенкомИнвалидом: "Отпуск"
    }
    возврат ПредставлениеВидовОтсутствий.ПолучитьИлиУмолчание(Причина, "")
;

@ВПроекте
@НаСервере
@ДоступноСКлиента
метод ПересекающиесяПериоды(Организации: Массив<Организации.Ссылка>, ДатаНачала: ДатаВремя?, ДатаОкончания: ДатаВремя?,
    Причина: ВидыОтсутствий, ФизическоеЛицо: ФизическиеЛица.Ссылка, ИсключаемыеСсылки: ОснованиеОтсутствия.Ссылка|Массив<ОснованиеОтсутствия.Ссылка>?): ПересечениеПериодов 
    
    знч ПересеченияПериодов = новый ПересечениеПериодов()
    
    если ДатаНачала == Неопределено или ДатаОкончания == Неопределено
        возврат ПересеченияПериодов
    ;
    
    пер ИсключаемыеОтсутствия: Массив<ОснованиеОтсутствия.Ссылка>
    если ИсключаемыеСсылки это ОснованиеОтсутствия.Ссылка
        ИсключаемыеОтсутствия.Добавить(ИсключаемыеСсылки как ОснованиеОтсутствия.Ссылка)
    иначе если ИсключаемыеСсылки это Массив<ОснованиеОтсутствия.Ссылка>
        ИсключаемыеОтсутствия = ИсключаемыеСсылки как Массив<ОснованиеОтсутствия.Ссылка>
    ;
     
    пер ПричиныОтсутствий = КонфликтующиеПричиныОтсутствий()
    пер КонфликтующиеПричиныОрганизаций = [ВидыОтсутствий.УчебныйОтпуск, ВидыОтсутствий.Командировка, ВидыОтсутствий.Отгул]
    
    пер Запрос = новый ПроизвольныйЗапрос()
    пер КонтрольВРамкахВидаИОрганизации : Булево = КонфликтующиеПричиныОрганизаций.Содержит(Причина)
    если КонтрольВРамкахВидаИОрганизации
        Запрос.УстановитьПараметр("КонтрольВРамкахВидаИОрганизации", Истина) 
    иначе 
        если не ПричиныОтсутствий.СодержитКлюч(Причина)
            возврат ПересеченияПериодов
        ;
        Запрос.УстановитьПараметр("КонтрольВРамкахВидаИОрганизации", Ложь)                   
    ;
    Запрос.Текст = 
    "
    ВЫБРАТЬ 
        ЗапланированныеОтсутствия.НачалоПериода КАК НачалоПериода,
        ЗапланированныеОтсутствия.ОкончаниеПериода КАК ОкончаниеПериода,
        ЗапланированныеОтсутствия.ВидОтсутствия КАК ВидОтсутствия,
        ЗапланированныеОтсутствия.Отсутствие КАК Отсутствие,
        ЗапланированныеОтсутствия.Внутрисменное КАК Внутрисменное,
        ВЫБОР 
            КОГДА &КонтрольВРамкахВидаИОрганизации == Истина ТОГДА
                ЗапланированныеОтсутствия.Организация
            ИНАЧЕ
            Неопределено
        КОНЕЦ КАК Организация,
        ВЫБОР
            КОГДА &КонтрольВРамкахВидаИОрганизации == Истина 
            И ЗапланированныеОтсутствия.ВидОтсутствия В(&ПричиныОтсутствий) 
            И ЗапланированныеОтсутствия.Организация В(&Организации) ТОГДА
                Истина
            КОГДА &КонтрольВРамкахВидаИОрганизации == ЛОЖЬ
            И ЗапланированныеОтсутствия.ВидОтсутствия В(&ПричиныОтсутствий) ТОГДА
                Истина
            Иначе
                Ложь
        КОНЕЦ КАК ЭтоОшибка
    ИЗ 
        ЗапланированныеОтсутствия КАК ЗапланированныеОтсутствия
        Внутреннее Соединение СостояниеДокументов как СостояниеДокументов
            ПО СостояниеДокументов.Документ == ЗапланированныеОтсутствия.Отсутствие
            И СостояниеДокументов.Состояние != СостоянияДокумента.ПолученОтказ
    ГДЕ 
        (ЗапланированныеОтсутствия.НачалоПериода <=| &ДатаНачала И ЗапланированныеОтсутствия.ОкончаниеПериода >=| &ДатаНачала
        ИЛИ ЗапланированныеОтсутствия.НачалоПериода <=| &ДатаОкончания И ЗапланированныеОтсутствия.ОкончаниеПериода >=| &ДатаОкончания
        ИЛИ ЗапланированныеОтсутствия.НачалоПериода >=| &ДатаНачала И ЗапланированныеОтсутствия.ОкончаниеПериода <=| &ДатаОкончания)
        И НЕ ЗапланированныеОтсутствия.Отсутствие В (&Отсутствия)
        И ЗапланированныеОтсутствия.ФизическоеЛицо == &ФизическоеЛицо
    СГРУППИРОВАТЬ ПО
        ЗапланированныеОтсутствия.НачалоПериода,
        ЗапланированныеОтсутствия.ОкончаниеПериода,
        ЗапланированныеОтсутствия.ВидОтсутствия,
        ЗапланированныеОтсутствия.Отсутствие,
        ЗапланированныеОтсутствия.Внутрисменное,
        ВЫБОР 
            КОГДА &КонтрольВРамкахВидаИОрганизации == Истина ТОГДА
                ЗапланированныеОтсутствия.Организация
            ИНАЧЕ
                Неопределено
            КОНЕЦ,
        ВЫБОР
            КОГДА &КонтрольВРамкахВидаИОрганизации == Истина 
            И ЗапланированныеОтсутствия.ВидОтсутствия В(&ПричиныОтсутствий) 
            И ЗапланированныеОтсутствия.Организация В(&Организации) ТОГДА
                Истина
            КОГДА &КонтрольВРамкахВидаИОрганизации == ЛОЖЬ
            И ЗапланированныеОтсутствия.ВидОтсутствия В(&ПричиныОтсутствий) ТОГДА
                Истина
            Иначе
                Ложь
        КОНЕЦ
    "
    Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала)
    Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания)
    Запрос.УстановитьПараметр("ПричиныОтсутствий", ПричиныОтсутствий[Причина]) 
    Запрос.УстановитьПараметр("Отсутствия", ИсключаемыеОтсутствия)
    Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо)
    Запрос.УстановитьПараметр("Организации", Организации) 
    
    знч Ошибки : Массив<Строка>
    знч Предупреждения : Массив<Строка>
    
    исп Результат = Запрос.Выполнить()
    для Элемент из Результат
        знч ПредставлениеОрганизации = КонтрольВРамкахВидаИОрганизации ? " (по организации )%{Элемент.Организация.Представление()})" : ""
        пер ПредставлениеОтсутствия: Строка
        если Элемент.Внутрисменное
            знч ДатаОтсутствия = (Элемент.НачалоПериода как ДатаВремя).Дата
            знч ВремяНачала = (Элемент.НачалоПериода как ДатаВремя).Время
            знч ВремяОкончания = (Элемент.ОкончаниеПериода как ДатаВремя).Время
            ПредставлениеОтсутствия = Отсутствия.ПредставлениеВнутрисменногоОтсутствия(ДатаОтсутствия, ВремяНачала, ВремяОкончания, Элемент.ВидОтсутствия) 
        иначе
            ПредставлениеОтсутствия = Отсутствия.ПредставлениеОтсутствия(
                (Элемент.НачалоПериода как ДатаВремя).Дата, 
                (Элемент.ОкончаниеПериода как ДатаВремя).Дата, Элемент.ВидОтсутствия)
        ;
        если Элемент.ЭтоОшибка
            Ошибки.Добавить(ПредставлениеОтсутствия + ПредставлениеОрганизации)  
        иначе
            Предупреждения.Добавить(ПредставлениеОтсутствия + ПредставлениеОрганизации)        
        ;  
    ; 
    
    если Ошибки.Размер() > 0
        ПересеченияПериодов.Ошибки = Ошибки.Размер() > 1 ? "Уже оформлены отсутствия: " : "Уже оформлено отсутствие: "
        для Элемент из Ошибки
            ПересеченияПериодов.Ошибки += Элемент + ", "      
        ;
        ПересеченияПериодов.Ошибки = ПересеченияПериодов.Ошибки.ПодстрокаСНачала(ПересеченияПериодов.Ошибки.Длина()-2)    
    ;
    если Предупреждения.Размер() > 0
        ПересеченияПериодов.Предупреждения = Предупреждения.Размер() > 1 ? "Уже оформлены отсутствия: " : "Уже оформлено отсутствие: "
        для Элемент из Предупреждения
                ПересеченияПериодов.Предупреждения += Элемент + ", "      
        ;
        
        знч Подсказка: Строка = Ошибки.Размер() == 0  ? Символы.НОВАЯ_СТРОКА + "Вы можете отправить это заявление установив флажок \"Все равно отправить заявление\"": "" 
        ПересеченияПериодов.Предупреждения = ПересеченияПериодов.Предупреждения.ПодстрокаСНачала(ПересеченияПериодов.Предупреждения.Длина()-2) + Подсказка
    ;  
        
    возврат ПересеченияПериодов
;

@ВПроекте
@НаСервере
метод КартинкиВидовОтсутствий(): ЧитаемоеСоответствие<ВидыОтсутствий, ДвоичныйОбъект.Ссылка>
    возврат {   
        ВидыОтсутствий.Болезнь:                 Ресурс{ПиктограммыВидовОтсутствий/Болезнь.svg}.Ссылка,
        ВидыОтсутствий.Командировка:            Ресурс{ПиктограммыВидовОтсутствий/Командировка.svg}.Ссылка,
        ВидыОтсутствий.ЛичныеОбстоятельства:    Ресурс{ПиктограммыВидовОтсутствий/ЛичныеОбстоятельства.svg}.Ссылка,
        ВидыОтсутствий.Опоздание:               Ресурс{ПиктограммыВидовОтсутствий/Опоздание.svg}.Ссылка,
        ВидыОтсутствий.Отгул:                   Ресурс{ПиктограммыВидовОтсутствий/Отгул.svg}.Ссылка,
        ВидыОтсутствий.Отпуск:                  Ресурс{ПиктограммыВидовОтсутствий/Отпуск.svg}.Ссылка,
        ВидыОтсутствий.ОтпускЗаСвойСчет:        Ресурс{ПиктограммыВидовОтсутствий/ОтпускЗаСвойСчет.svg}.Ссылка,
        ВидыОтсутствий.ОтпускПоБеременностиИРодам: Ресурс{ПиктограммыВидовОтсутствий/ОтпускПоБеременностиИРодам.svg}.Ссылка,
        ВидыОтсутствий.ОтпускПоУходуЗаРебенком: Ресурс{ПиктограммыВидовОтсутствий/ОтпускПоУходуЗаРебенком.svg}.Ссылка,
        ВидыОтсутствий.УходЗаРебенкомИнвалидом: Ресурс{ПиктограммыВидовОтсутствий/УходЗаРебенкомИнвалидом.svg}.Ссылка,
        ВидыОтсутствий.УчебныйОтпуск:           Ресурс{ПиктограммыВидовОтсутствий/УчебныйОтпуск.svg}.Ссылка    }
;

@ВПроекте
@НаСервере
метод ЦветаВидовОтсутствий(): ЧитаемоеСоответствие<ВидыОтсутствий, Цвет>
    возврат {   
        ВидыОтсутствий.Болезнь:                 БиблиотекаЦветов.Цвет(БиблиотекаЦветов.ВидыЦвета.Синий),
        ВидыОтсутствий.Командировка:            БиблиотекаЦветов.Цвет(БиблиотекаЦветов.ВидыЦвета.Болотный),
        ВидыОтсутствий.ЛичныеОбстоятельства:    БиблиотекаЦветов.Цвет(БиблиотекаЦветов.ВидыЦвета.Оранжевый),
        ВидыОтсутствий.Опоздание:               БиблиотекаЦветов.Цвет(БиблиотекаЦветов.ВидыЦвета.Красный),
        ВидыОтсутствий.Отгул:                   БиблиотекаЦветов.Цвет(БиблиотекаЦветов.ВидыЦвета.Оранжевый),
        ВидыОтсутствий.Отпуск:                  БиблиотекаЦветов.Цвет(БиблиотекаЦветов.ВидыЦвета.Оранжевый),
        ВидыОтсутствий.ОтпускЗаСвойСчет:        БиблиотекаЦветов.Цвет(БиблиотекаЦветов.ВидыЦвета.Оранжевый),
        ВидыОтсутствий.ОтпускПоБеременностиИРодам: БиблиотекаЦветов.Цвет(БиблиотекаЦветов.ВидыЦвета.Синий),
        ВидыОтсутствий.ОтпускПоУходуЗаРебенком: БиблиотекаЦветов.Цвет(БиблиотекаЦветов.ВидыЦвета.Синий),
        ВидыОтсутствий.УходЗаРебенкомИнвалидом: БиблиотекаЦветов.Цвет(БиблиотекаЦветов.ВидыЦвета.Синий),
        ВидыОтсутствий.УчебныйОтпуск:           БиблиотекаЦветов.Цвет(БиблиотекаЦветов.ВидыЦвета.Болотный) }
;

@НаСервере
метод КонфликтующиеПричиныОтсутствий(): ЧитаемоеСоответствие<ВидыОтсутствий, ЧитаемыйМассив<ВидыОтсутствий>>
    пер ПричиныОтсутствий: Соответствие<ВидыОтсутствий, ЧитаемыйМассив<ВидыОтсутствий>>
    ПричиныОтсутствий.Вставить(ВидыОтсутствий.Болезнь, [ВидыОтсутствий.Болезнь])
    ПричиныОтсутствий.Вставить(ВидыОтсутствий.Командировка, [ВидыОтсутствий.Командировка])
    ПричиныОтсутствий.Вставить(ВидыОтсутствий.ЛичныеОбстоятельства, [ВидыОтсутствий.ЛичныеОбстоятельства])
    ПричиныОтсутствий.Вставить(ВидыОтсутствий.Отгул, [ВидыОтсутствий.Отгул])
    ПричиныОтсутствий.Вставить(ВидыОтсутствий.Отпуск, [ВидыОтсутствий.Отпуск])
    ПричиныОтсутствий.Вставить(ВидыОтсутствий.ОтпускЗаСвойСчет, [ВидыОтсутствий.ОтпускЗаСвойСчет])
    ПричиныОтсутствий.Вставить(ВидыОтсутствий.ОтпускПоБеременностиИРодам, [ВидыОтсутствий.ОтпускПоБеременностиИРодам])
    ПричиныОтсутствий.Вставить(ВидыОтсутствий.ОтпускПоУходуЗаРебенком, [ВидыОтсутствий.ОтпускПоУходуЗаРебенком])
    ПричиныОтсутствий.Вставить(ВидыОтсутствий.УходЗаРебенкомИнвалидом, [ВидыОтсутствий.УходЗаРебенкомИнвалидом])
    ПричиныОтсутствий.Вставить(ВидыОтсутствий.УчебныйОтпуск, [ВидыОтсутствий.УчебныйОтпуск])
    возврат ПричиныОтсутствий
;

@ВПодсистеме
метод НазваниеПредставления(ВидОтсутствия: ВидыОтсутствий?): Строка
    если ВидОтсутствия == ВидыОтсутствий.Опоздание
        возврат "Объяснительная записка"
    иначе если ВидОтсутствия == ВидыОтсутствий.Болезнь
        возврат "Уведомление"
    ;
    возврат "Заявление"
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ВидСогласуемогоЗаявленияОтсутствие(): ВидыСогласуемыхЗаявлений.Ссылка
    возврат ВидыСогласуемыхЗаявлений.НайтиПредопределенное(ВИД_СОГЛАСОВАНИЯ_ОТСУТСТВИЙ)
;

@ВПодсистеме
@НаСервере
метод ВидОтсутствияТребуетСогласования(ВидОтсутствия: ВидыОтсутствий): Булево
    пер ВидыОтсутствийТребующихСогласования: Массив<ВидыОтсутствий>
    ВидыОтсутствийТребующихСогласования.Добавить(ВидыОтсутствий.ЛичныеОбстоятельства)
    ВидыОтсутствийТребующихСогласования.Добавить(ВидыОтсутствий.Командировка)
    ВидыОтсутствийТребующихСогласования.Добавить(ВидыОтсутствий.Отгул)
    ВидыОтсутствийТребующихСогласования.Добавить(ВидыОтсутствий.Отпуск)
    ВидыОтсутствийТребующихСогласования.Добавить(ВидыОтсутствий.ОтпускЗаСвойСчет)
    ВидыОтсутствийТребующихСогласования.Добавить(ВидыОтсутствий.УчебныйОтпуск)
    ВидыОтсутствийТребующихСогласования.Добавить(ВидыОтсутствий.УходЗаРебенкомИнвалидом)
    
    возврат ВидыОтсутствийТребующихСогласования.Найти(ВидОтсутствия) != Неопределено
      
;

// Область СтроковыеРесурсы
@ВПроекте 
@НаСервере
перечисление ШаблонСообщения
    УведомлениеОбОтсутствии,
    СогласованиеОтсутствия,
    УведомлениеРуководителюОбОтсутствии,
    ОтсутствиеСогласовано,
    ОтсутствиеНеСогласовано,
    УведомлениеОПодписании
;

@НаСервере
метод СоздатьСтроковыеРесурсы(ТекстПисьма: Строка, ТемаПисьма: Строка, ТекстSms: Строка, ТекстPush: Строка): Массив<УниверсальныеМеханизмы.СтроковыйРесурс>
    пер СтроковыеРесурсы = новый Массив<УниверсальныеМеханизмы.СтроковыйРесурс>()
    СтроковыеРесурсы.Добавить(новый УниверсальныеМеханизмы.СтроковыйРесурс(Уведомления.ВидыТекстов.ТекстПисьма.ВСтроку(), ТекстПисьма, "Текст письма"))
    СтроковыеРесурсы.Добавить(новый УниверсальныеМеханизмы.СтроковыйРесурс(Уведомления.ВидыТекстов.ТемаПисьма.ВСтроку(), ТемаПисьма, "Тема письма"))
    СтроковыеРесурсы.Добавить(новый УниверсальныеМеханизмы.СтроковыйРесурс(Уведомления.ВидыТекстов.ТекстSms.ВСтроку(), ТекстSms, "Sms"))
    СтроковыеРесурсы.Добавить(новый УниверсальныеМеханизмы.СтроковыйРесурс(Уведомления.ВидыТекстов.ТекстPush.ВСтроку(), ТекстPush, "Push"))
    возврат СтроковыеРесурсы
;

@ВПроекте
@НаСервере
метод ОбновитьСтроковыеРесурсы()
    УниверсальныеМеханизмы.ЗаписатьЗначенияРесурсов(
        ГРУППА_РЕСУРСОВ_ОТСУТСТВИЯ, ШаблонСообщения.УведомлениеОбОтсутствии.ВСтроку(), "Уведомление об отсутствии",
        СоздатьСтроковыеРесурсы(
            СодержимоеПисьмаУведомлениеОбОтсутствии(),
            "Уведомление об отсутствии - \%СотрудникФио\%",
            "Буду отсутствовать \%ПредставлениеПериода\%",
            "Буду отсутствовать \%ПредставлениеПериода\%"
        )
    )
    УниверсальныеМеханизмы.ЗаписатьЗначенияРесурсов(
        ГРУППА_РЕСУРСОВ_ОТСУТСТВИЯ, ШаблонСообщения.СогласованиеОтсутствия.ВСтроку(), "Согласование отсутствия",
        СоздатьСтроковыеРесурсы(
            СодержимоеПисьмаСогласованиеОтсутствия(),
            "Согласование отсутствия для \%СотрудникФио\%",
            "Прошу согласовать отсутствие \%ПредставлениеПериода\%",
            "Прошу согласовать отсутствие \%ПредставлениеПериода\%"
        )
    )
    УниверсальныеМеханизмы.ЗаписатьЗначенияРесурсов(
        ГРУППА_РЕСУРСОВ_ОТСУТСТВИЯ, ШаблонСообщения.УведомлениеРуководителюОбОтсутствии.ВСтроку(), "Согласовано отсутствие",
        СоздатьСтроковыеРесурсы(
            СодержимоеПисьмаУведомлениеРуководителюОбОтсутствии(),
            "\%ВидОтсутствия\% \%Согласовано\% для \%СотрудникФио\%",
            "Согласовано отсутствие \%ПредставлениеПериода\%",
            "Согласовано отсутствие \%ПредставлениеПериода\%"
        )
    )
    УниверсальныеМеханизмы.ЗаписатьЗначенияРесурсов(
        ГРУППА_РЕСУРСОВ_ОТСУТСТВИЯ, ШаблонСообщения.ОтсутствиеСогласовано.ВСтроку(), "Вам согласовано отсутствие",
        СоздатьСтроковыеРесурсы(
            СодержимоеПисьмаСогласованоОтсутствие(),
            "\%ВидОтсутствия\% \%Согласовано\%",
            "Вам согласовано отсутствие \%ПредставлениеПериода\%",
            "Вам согласовано отсутствие \%ПредставлениеПериода\%"
        )
    )
    УниверсальныеМеханизмы.ЗаписатьЗначенияРесурсов(
        ГРУППА_РЕСУРСОВ_ОТСУТСТВИЯ, ШаблонСообщения.ОтсутствиеНеСогласовано.ВСтроку(), "Вам не согласовано отсутствие",
        СоздатьСтроковыеРесурсы(
            СодержимоеПисьмаНеСогласованоОтсутствие(),
            "\%ВидОтсутствия\% не \%Согласовано\%",
            "Вам не согласовано отсутствие \%ПредставлениеПериода\%",
            "Вам не согласовано отсутствие \%ПредставлениеПериода\%. \%КомментарийПриОтказе\%"
        )
    )
    УниверсальныеМеханизмы.ЗаписатьЗначенияРесурсов(
        ГРУППА_РЕСУРСОВ_ОТСУТСТВИЯ, ШаблонСообщения.УведомлениеОПодписании.ВСтроку(), "Заявление на отсутствие подписано",
        СоздатьСтроковыеРесурсы(
            СодержимоеПисьмаЗаявлениеНаОтсутствие(),
            "Ваше заявление на отсутствие подписано",
            "Отсутствие \%ПредставлениеПериода\% подписано и направлено для согласования в кадровую службу.",
            "Отсутствие \%ПредставлениеПериода\% подписано и направлено для согласования в кадровую службу."
        )
    )
;

@НаСервере
метод СодержимоеПисьмаУведомлениеОбОтсутствии(): Строка
    знч ПисьмоПриглашение =
    "<html lang='ru-RU'>
        <head><meta charset='utf-8'></head>
        <body style='font-family:Arial;background:lightgrey: text-align: center'>
            <div style='min-width: 280px;max-width: 680px; margin: 0 auto'>
            <div style='height: 48px; background: whitesmoke;'>
                <p style='text-align: center;color:darkgray; padding: 16px;'><b>Отсутствие сотрудника - \%СотрудникФио\%</b></p>
            </div>
            <div style='background:white; padding: 8px 24px;'>
                <p>Уведомляю об отсутствии - <b>\%ПредставлениеПериода\%</b>
                <p style='font-size: small; color: Gray'>\%ИмяОтчество\%, Вы получили это письмо, потому что Вы включены в список уведомления об отсутствии сотрудника.</p>
            </div>
        </body>
    </html>"
    возврат ПисьмоПриглашение
;

@НаСервере
метод СодержимоеПисьмаСогласованиеОтсутствия(): Строка
    знч ПисьмоПриглашение =
    "<html lang='ru-RU'>
        <head><meta charset='utf-8'></head>
        <body style='font-family:Arial;background:lightgrey: text-align: center'>
            <div style='min-width: 280px;max-width: 680px; margin: 0 auto'>
            <div style='height: 48px; background: whitesmoke;'>
                <p style='text-align: center;color:darkgray; padding: 16px;'><b>Запрос на согласование в 1С:Кабинет сотрудника</b></p>
            </div>
            <div style='background:white; padding: 8px 24px;'>
                <h2>\%ИмяОтчество\%!</h2> 
                <p>Вам поступил запрос на согласование отсутствия: <b>\%ПредставлениеПериода\%</b></p>
                <p style='font-size: small; color: Gray'>Вы назначены для согласования отсутствия сотрудника. Перейдите на страницу приложения Кабинет сотрудника для согласования или используйте мобильное приложение.</p>
                <p style='text-align: center'><a style='text-decoration: none' href='\%СсылкаСЛогином\%'><img style='width: 80px' src='\%ЛоготипПриложения\%'></a></p>
                <p style='text-align: center;'><a style='text-decoration: none' href='\%СсылкаСЛогином\%'><b>ПЕРЕЙТИ В КАБИНЕТ СОТРУДНИКА</b></a></p></br>
            </div>
        </body>
    </html>"
    возврат ПисьмоПриглашение
;

@НаСервере
метод СодержимоеПисьмаУведомлениеРуководителюОбОтсутствии(): Строка
    знч ПисьмоПриглашение =
    "<html lang='ru-RU'>
        <head><meta charset='utf-8'></head>
        <body style='font-family:Arial;background:lightgrey: text-align: center'>
            <div style='min-width: 280px;max-width: 680px; margin: 0 auto'>
            <div style='height: 48px; background: whitesmoke;'>
                <p style='text-align: center;color:darkgray; padding: 16px;'><b>Согласовано отсутствие для \%СотрудникФио\%</b></p>
            </div>
            <div style='background:white; padding: 8px 24px;'>
                Согласовано отсутствие: <b>\%ПредставлениеПериода\%</b>
                <p style='font-size: small; color: Gray'>\%ИмяОтчество\%, Вы получили это письмо, потому что Вы являетесь руководителем сотрудника.</p>
            </div>
        </body>
    </html>"
    возврат ПисьмоПриглашение
;

@НаСервере
метод СодержимоеПисьмаСогласованоОтсутствие(): Строка
    знч ПисьмоПриглашение =
    "<html lang='ru-RU'>
        <head><meta charset='utf-8'></head>
        <body style='font-family:Arial;background:lightgrey: text-align: center'>
            <div style='min-width: 280px;max-width: 680px; margin: 0 auto'>
            <div style='height: 48px; background: whitesmoke;'>
                <p style='text-align: center;color:darkgray; padding: 16px;'><b>Отсутствие согласовано</b></p>
            </div>
            <div style='background:white; padding: 8px 24px;'>
                <p>Вам согласовано отсутствие: <b>\%ПредставлениеПериода\%</b>
            </div>
        </body>
    </html>"
    возврат ПисьмоПриглашение
;

@НаСервере
метод СодержимоеПисьмаНеСогласованоОтсутствие(): Строка
    знч ПисьмоПриглашение =
    "<html lang='ru-RU'>
        <head><meta charset='utf-8'></head>
        <body style='font-family:Arial;background:lightgrey: text-align: center'>
            <div style='min-width: 280px;max-width: 680px; margin: 0 auto'>
            <div style='height: 48px; background: whitesmoke;'>
                <p style='text-align: center;color:darkgray; padding: 16px;'><b>Отсутствие не согласовано</b></p>
            </div>
            <div style='background:white; padding: 8px 24px;'>
                <p>Вам не согласовано отсутствие: <b>\%ПредставлениеПериода\%. \%КомментарийПриОтказе\%</b>
            </div>
        </body>
    </html>"
    возврат ПисьмоПриглашение
;

@НаСервере
метод СодержимоеПисьмаЗаявлениеНаОтсутствие(): Строка
    знч ПисьмоПриглашение =
    "<html lang='ru-RU'>
        <head><meta charset='utf-8'></head>
        <body style='font-family:Arial;background:lightgrey: text-align: center'>
            <div style='min-width: 280px;max-width: 680px; margin: 0 auto'>
            <div style='height: 48px; background: whitesmoke;'>
                <p style='text-align: center;color:darkgray; padding: 16px;'><b>Заявление об отсутствии подписано</b></p>
            </div>
            <div style='background:white; padding: 8px 24px;'>
                <h2>\%ИмяОтчество\%!</h2> 
                <p>Отсутствие <b>\%ПредставлениеПериода\%</b> подписано и направлено для согласования в кадровую службу.</p>
            </div>
        </body>
    </html>"
    возврат ПисьмоПриглашение
;