импорт СтандартноеПриложение
импорт УниверсальныеМеханизмы
импорт Компания::Согласования
импорт ИнтерфейсныеКомпонентыСтандартные
импорт Компания
импорт Криптография
импорт ОбщегоНазначения
импорт ОбщиеСтандартные
импорт ФизическиеЛица
импорт ЛичныеКабинетыПользователей
импорт УниверсальныеМеханизмы::ШаблоныДокументов
импорт ВладельцыКабинетов

@Обработчик
метод ПослеЧтения()
    если ЭтоНовый()
        Объект.Причина = Причина
        если Причина != ВидыОтсутствий.Опоздание и Причина != ВидыОтсутствий.ЛичныеОбстоятельства
            Объект.ПолныйДень = Истина
        ;
        если Объект.Причина == ВидыОтсутствий.Командировка
            или Объект.Причина == ВидыОтсутствий.УчебныйОтпуск
            или Объект.Причина == ВидыОтсутствий.Отгул
            
            пер ИдентификаторыЭлектронныхДокументов = Объект.ИдентификаторыЭлектронныхДокументов
            если ИдентификаторыЭлектронныхДокументов.Пусто()
                ИдентификаторыЭлектронныхДокументов.Добавить(
                    ОсновнаяОрганизация(Объект.ФизическоеЛицо))
            ; 
        ;
    ;
    Компоненты.ЗаявлениеОбОтсутствии.УстановитьТекущееЗаявление(Объект)
    если не ЭтоНовый()
        ТребуетсяПодпись = ТребуетсяПодпись(
            Объект.Ссылка,
            Объект.ФизическоеЛицо,
            ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо,
            Компоненты.ЗаявлениеОбОтсутствии.ДанныеДокумента.Состояние
        )
    ;
    УстановитьРежимПросмотра()
    ИнтерфейсныеКомпоненты.ИнициализироватьПодчиненныеКомпоненты(Компоненты)
;

метод ЗаявлениеОбОтсутствииЗавершеноЧтениеДанных(Источник: ЗаявлениеОбОтсутствииКомпонент, Событие: СобытиеКомпонента)
    Компоненты.ГлавнаяГруппа.ЧтениеДанныхЗавершено = Истина
;

метод ЗаголовокКнопкиЗаписатьИЗакрыть(): Строка
    возврат ОбщегоНазначения.ЗаголовокКнопкиЗаписатьИЗакрыть(
                ОбщегоНазначения.ЭтоЧерновик(Компоненты.ЗаявлениеОбОтсутствии.ДанныеДокумента?.Состояние), 
                Компоненты.ЗаявлениеОбОтсутствии.РедактированиеЗапрещено или Компоненты.ЗаявлениеОбОтсутствии.РежимПросмотра, 
                Объект.ТребуетСогласования)
;

метод ИспользованиеКнопкиСохранитьЧерновик(): Булево
    возврат ОбщегоНазначения.ИспользованиеКнопкиСохранитьЧерновик(
        Объект.ФизическоеЛицо,
        Компоненты.ЗаявлениеОбОтсутствии.ПодписанПослеАвтора,
        Компоненты.ЗаявлениеОбОтсутствии.РежимПросмотра или (Компоненты.ЗаявлениеОбОтсутствии.ДанныеДокумента?.Отправлен ?? Ложь))
;

метод ЗаголовокКнопкиСохранитьЧерновик(): Строка
    возврат ОбщегоНазначения.ЗаголовокКнопкиСохранитьЧерновик(ОбщегоНазначения.ЭтоЧерновик(Компоненты.ЗаявлениеОбОтсутствии.ДанныеДокумента?.Состояние))
;

метод ИспользованиеКнопкиУдалить(): Булево
    возврат ОбщегоНазначения.ИспользованиеКнопкиУдалить(
        Компоненты.ЗаявлениеОбОтсутствии.ДанныеДокумента?.Состояние,
        Объект.ФизическоеЛицо, 
        ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо, 
        ЭтоНовый(), 
        Компоненты.ЗаявлениеОбОтсутствии.ДанныеДокумента?.Отправлен ?? Ложь, 
        Компоненты.ЗаявлениеОбОтсутствии.ПодписанТекущимФизическимЛицом)
;

метод ЗаголовокКнопкиУдалить(): Строка
    возврат ОбщегоНазначения.ЗаголовокКнопкиУдалить(Компоненты.ЗаявлениеОбОтсутствии.ПодписанТекущимФизическимЛицом)
;

метод ПанельОсновнаяЗаписатьИЗакрыть(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    ЗаписатьДокумент(Истина)
;

метод ПанельОсновнаяСохранитьЧерновик(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    ЗаписатьДокумент(Ложь)
;

метод ЗаписатьДокумент(ОтправитьНаСогласование: Булево)
    если (Объект.ФизическоеЛицо) != ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо
        или Компоненты.ЗаявлениеОбОтсутствии.РежимПросмотра
        
        Закрыть(СтандартныеФормы.ДействиеВФорме.НеИзменен)
        возврат
    ;
    если Компоненты.ЗаявлениеОбОтсутствии.ОшибкаЗагрузки
        ОбщегоНазначения.УведомлениеОшибкиЗагрузкиФайлов()
        возврат
    ;
        
    если ОтправитьНаСогласование 
        если Компоненты.ЗаявлениеОбОтсутствии.РедактированиеЗапрещено
            Закрыть(СтандартныеФормы.ДействиеВФорме.НеИзменен)
            возврат
        ;
        знч РезультатПроверки = Компоненты.ЗаявлениеОбОтсутствии.ПроверитьЗаполнение()
        если Компоненты.ЗаявлениеОбОтсутствии.РезультатПредупрежденияЗаполненияПериода.Пусто() == Ложь
            и Компоненты.ЗаявлениеОбОтсутствии.ОзнакомленСПредупреждениями == Ложь
            возврат
        ;
        если не РезультатПроверки
            возврат
        ;
        если ТребуетсяПодпись и не Криптография.ВвестиПарольЗакрытогоКлюча(
            Объект.ФизическоеЛицо,
            Объект.Ссылка)
            
            возврат
        ;
    ;
    // Признак ЭтоНовый получаем до записи 
    пер ЭтоНовый: Булево = ЭтоНовый()
    пер Состояние: СостоянияДокумента 
    если ОтправитьНаСогласование
        Состояние = СостоянияДокумента.Подготовлен
    ;
    пер ОтменитьОтправку: Булево
    если не ОтправитьНаСогласование и не (Компоненты.ЗаявлениеОбОтсутствии.ДанныеДокумента.Состояние == Неопределено или Компоненты.ЗаявлениеОбОтсутствии.ДанныеДокумента.Состояние == СостоянияДокумента.Черновик)
        ОтменитьОтправку = Истина
    ;

    пер ДанныеДокумента = новый ДанныеДокумента()
    ДанныеДокумента.Ссылка = Объект.Ссылка
    ДанныеДокумента.ФизическоеЛицо = (Объект.ФизическоеЛицо)
    ДанныеДокумента.Дата = Объект.Дата
    ДанныеДокумента.ЧастотаПовторения = Объект.ЧастотаПовторения
    ДанныеДокумента.Повторяется = Объект.Повторяется
    ДанныеДокумента.ПолныйДень = Объект.ПолныйДень
    ДанныеДокумента.ТребуетСогласования = Объект.ТребуетСогласования
    ДанныеДокумента.Причина = Объект.Причина
    ДанныеДокумента.СпособСвязи = Объект.СпособСвязи
    ДанныеДокумента.Комментарий = Объект.Комментарий
    ДанныеДокумента.ИдентификаторыЭлектронныхДокументов = Объект.ИдентификаторыЭлектронныхДокументов
    ДанныеДокумента.ИнтервалПовторения = Объект.ИнтервалПовторения
    ДанныеДокумента.СправкаВторогоРодителяПриложена = Объект.СправкаВторогоРодителяПриложена
    если ДанныеДокумента.СправкаВторогоРодителяПриложена
        ДанныеДокумента.СведенияОбОтсутствииСправкиВторогоРодителя = ""
    иначе
        ДанныеДокумента.СведенияОбОтсутствииСправкиВторогоРодителя = Объект.СведенияОбОтсутствииСправкиВторогоРодителя
    ;
    ДанныеДокумента.КоличествоЛистовПриложений = Объект.КоличествоЛистовПриложений
    
    пер ТабличныеЧасти: Отсутствия.ТабличныеЧасти = Компоненты.ЗаявлениеОбОтсутствии.МодифицированныеТабличныеЧасти()
    
    если Объект.ПолныйДень
        ДанныеДокумента.ДатаНачала = Компоненты.ЗаявлениеОбОтсутствии.ПериодОтсутствия.От
        ДанныеДокумента.ДатаОкончания = Компоненты.ЗаявлениеОбОтсутствии.ПериодОтсутствия.До
        если ДанныеДокумента.ДатаНачала == ДанныеДокумента.ДатаОкончания
            и Объект.Причина == ВидыОтсутствий.ЛичныеОбстоятельства
            
            ДанныеДокумента.ДатаОтсутствия = ДанныеДокумента.ДатаНачала
        ;
    иначе если Объект.Причина == ВидыОтсутствий.Опоздание
        ДанныеДокумента.ДатаОтсутствия = Объект.ДатаОтсутствия
        ДанныеДокумента.ВремяОкончания = Компоненты.ЗаявлениеОбОтсутствии.ВремяОпоздания
    иначе    
        ДанныеДокумента.ВремяНачала = Компоненты.ЗаявлениеОбОтсутствии.ВремяОтсутствия.От
        ДанныеДокумента.ВремяОкончания = Компоненты.ЗаявлениеОбОтсутствии.ВремяОтсутствия.До
        ДанныеДокумента.ДатаОтсутствия = Объект.ДатаОтсутствия
    ;
    
    знч РезультатПодписания = Записать(ЭтоНовый(), 
            ДанныеДокумента, 
            ТабличныеЧасти, 
            ОтправитьНаСогласование, 
            Криптография.ПараметрыСеанса().ПарольЗакрытогоКлючаПользователя, 
            ОтменитьОтправку)
    
    если РезультатПодписания.ЕстьОшибки
        СтандартныеФормы.ПоказатьУведомление(
            "Ошибка подписания документа",
            РезультатПодписания.ТекстОшибки,
            ОценкаИнформации.Отрицательная
        )
        возврат
    ;
    
    если ОтправитьНаСогласование
        если Криптография.УстановитьПодписьВСервисеПодписания(
            Объект.Ссылка, ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо,
            Согласования.РольПодписантаСотрудник()) == Ложь
            
            СостДокументов.УстановитьСостояниеДокумента(Объект.Ссылка, СостоянияДокумента.Черновик)
            Прочитать(Объект.Ссылка)
            возврат
        ;
    ;
    Компоненты.ЗаявлениеОбОтсутствии.СброситьМодифицированностьТабличныхЧастей()
    Компоненты.ЗаявлениеОбОтсутствии.РедактированиеЗапрещено = Истина
    если РассчитаннаяМодифицированность
        СобственнаяМодифицированность = Ложь
    ;
    знч ДанныеСостояния = СостояниеДокументаКомпонентДанных.Создать()
    ДанныеСостояния.Документ = ДанныеДокумента.Ссылка
    ДанныеСостояния.ДатаДокумента = ДанныеДокумента.Дата
    ДанныеСостояния.Состояние = Состояние
    ДанныеСостояния.ДополнительноеПредставление = СостДокументов.ПредставлениеПериодаДокумента(
        ДатаДокумента = ДанныеДокумента.Дата,
        ДатаНачала = ДанныеДокумента.ДатаНачала,
        ДатаОкончания = ДанныеДокумента.ДатаОкончания,
        ДатаСобытия = ДанныеДокумента.ДатаОтсутствия,
        ВремяНачала = ДанныеДокумента.ВремяНачала,
        ВремяОкончания = ДанныеДокумента.ВремяОкончания)
    ИзмененоСостояниеДокумента.Оповестить(ДанныеСостояния, ЭтоНовый)
    если ОтправитьНаСогласование
        пер ТребуетСогласования: Булево = Объект.ТребуетСогласования
        пер ЗаголовокУведомления = ТребуетСогласования ? "Отправлено" : "Зарегистрировано"
        пер ТекстУведомления = ТребуетСогласования ? 
            "Ваш запрос отправлен на согласование. После согласования или отказа вы получите уведомление." :
            "Ваше отсутствие зарегистрировано"
        СтандартныеФормы.ПоказатьУведомление(ЗаголовокУведомления, ТекстУведомления)
    ;
    Закрыть(СтандартныеФормы.ДействиеВФорме.Изменен)
;

метод ПанельОсновнаяУдалить(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    СобственнаяМодифицированность = Ложь
    СобственнаяМодифицированность = Ложь
    если (Объект.ФизическоеЛицо) != ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо
        ОтменитьСогласование(Объект.Ссылка, ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо)
        МенеджерГлобальныхКлиентскихСобытий.Оповестить(Согласования.СОГЛАСОВАНИЕ_ОТМЕНЕНО, Объект.Ссылка)
    иначе
        знч Ссылка = Объект.Ссылка
        знч ФизЛицо = Объект.ФизическоеЛицо
        знч Дата = Объект.Дата
        УдалитьДокумент(Ссылка, ФизЛицо)
        УдаленДокумент.Оповестить(Ссылка, Дата)
    ;
    Закрыть(СтандартныеФормы.ДействиеВФорме.Удален)
;

метод ПанельСогласованияВыполненоСогласование(Источник: КоманднаяПанельСогласования, Событие: СобытиеКомпонента)
    Закрыть(СтандартныеФормы.ДействиеВФорме.Изменен)
;

метод ОтправитьНаСогласование()
    Компоненты.ЗаявлениеОбОтсутствии.ДанныеДокумента.Состояние = СостоянияДокумента.Подготовлен
    знч РезультатПодписания = ОтправитьНаСогласование(
        Объект.Ссылка, 
        Объект.ТребуетСогласования,
        (Объект.ФизическоеЛицо), 
        Криптография.ПараметрыСеанса().ПарольЗакрытогоКлючаПользователя)
    если РезультатПодписания.ЕстьОшибки
        СтандартныеФормы.ПоказатьУведомление(
            "Ошибка подписания документа",
            РезультатПодписания.ТекстОшибки,
            ОценкаИнформации.Отрицательная
        )
    ;
;

метод ЗаголовокФормы(): Строка
    возврат Компоненты.ЗаявлениеОбОтсутствии.ЗаголовокФормы()
;

метод ОтсутствиеФормаДокументаВысота(): Число
    возврат ОсновнойИнтерфейс.ВысотаФормыДокумента(100)
;

метод УстановитьДоступностьКоманд(Доступность: Булево)
    пер ГлавнаяГруппа: КорневойКомпонентМодальнойФормы = Компоненты.ГлавнаяГруппа
    для КоманднаяПанель из ГлавнаяГруппа.КомандныеПанели
         КоманднаяПанель.Доступность = Доступность
    ;
;

метод ПанельСогласованияВидимость(): Булево
    возврат Компоненты.ЗаявлениеОбОтсутствии.РежимСогласования
;

метод ДанныеСогласующего(): Согласования.ДанныеСогласующего?
    возврат Компоненты.ЗаявлениеОбОтсутствии.ДанныеСогласующего
;

метод ПанельОсновнаяВидимость(): Булево
    возврат не ПанельСогласованияВидимость()
;
//
метод ЗаявлениеОбОтсутствииИзменениеСостоянияЗагрузкиФайлов(Источник: ЗаявлениеОбОтсутствииКомпонент, Событие: СобытиеСДанными<Булево>)
    УстановитьДоступностьКоманд(не Событие.Данные)
;

метод ПанельОсновнаяОшибкаПриВыполненииКоманды(Источник: КоманднаяПанельФорм, Событие: СобытиеСДанными<Исключение>)
    ПоказатьОшибку(Событие.Данные)
;
метод ПанельСогласованияОшибкаПриВыполненииКоманды(Источник: КоманднаяПанельСогласования, Событие: СобытиеСДанными<Исключение>)
    ПоказатьОшибку(Событие.Данные)
;

метод ПоказатьОшибку(Ошибка: Исключение)
    Криптография.СброситьПарольЗакрытогоКлючаПриОшибкеВводаПароля(Ошибка)
    Компоненты.ГлавнаяГруппа.ПоказатьОшибку(
        ОбщегоНазначения.ОписаниеОшибкиПриДействииСДокументом(
            Ошибка, 
            Объект.ФизическоеЛицо, 
            Компоненты.ЗаявлениеОбОтсутствии.ПодписанТекущимФизическимЛицом))
;

@НаСервере @НаКлиенте
структура ДанныеДокумента
    пер Ссылка: Отсутствие.Ссылка?
    пер Дата: Дата?
    пер ФизическоеЛицо: ФизическиеЛица.Ссылка?
    пер Причина: ВидыОтсутствий
    пер ДатаНачала: Дата?
    пер ДатаОкончания: Дата?
    пер ДатаОтсутствия: Дата?
    пер ВремяНачала: Время?
    пер ВремяОкончания: Время?
    пер ПолныйДень: Булево
    пер Повторяется: Булево
    пер ЧастотаПовторения: ЧастотаПовторения?
    пер ИнтервалПовторения: Число
    пер СпособСвязи: СпособыСвязи
    пер ТребуетСогласования: Булево
    пер Комментарий: Строка
    пер ИдентификаторыЭлектронныхДокументов: Массив<Организации.Ссылка>
    пер СправкаВторогоРодителяПриложена: Булево
    пер СведенияОбОтсутствииСправкиВторогоРодителя: Строка
    пер КоличествоЛистовПриложений: Число
;

@НаСервере @ДоступноСКлиента
статический метод ТребуетсяПодпись(Ссылка: Отсутствие.Ссылка,
                       ФизическоеЛицо: ФизическиеЛица.Ссылка,
                       Согласующий: ФизическиеЛица.Ссылка,
                       Состояние: СостоянияДокумента): Булево
    
    пер ТекущиеСогласующие = Согласования.ТекущиеСогласующие(
        Ссылка,
        Отсутствия.ВидСогласуемогоЗаявленияОтсутствие(),
        ФизическоеЛицо
    )

    пер ТребуетсяПодпись = ОбщегоНазначения.ЭтоЧерновик(Состояние)
    для ТекущийСогласующий из ТекущиеСогласующие 
        если ТекущийСогласующий.Согласующий == Согласующий 
            ТребуетсяПодпись = (ТекущийСогласующий.ТребуемаяПодпись == ВидыТребуемойПодписи.УНЭП)
            прервать
        ;
    ;

    возврат ТребуетсяПодпись
;

@НаСервере @ДоступноСКлиента
статический метод ОтправитьНаСогласование(Ссылка: Отсутствие.Ссылка, ТребуетСогласования: Булево, ФизическоеЛицо: ФизическиеЛица.Ссылка, ПарольЗакрытогоКлюча: Строка): Криптография.РезультатПодписания
    знч ДанныеСогласующего = новый Согласования.ДанныеСогласующего(ФизическоеЛицо, Согласования.РольПодписантаСотрудник())
    возврат Согласования.ПодписатьИУстановитьСостояниеДокумента(Ссылка, ДанныеСогласующего, ПарольЗакрытогоКлюча, 
            ТребуетСогласования ? СостоянияДокумента.Подготовлен : СостоянияДокумента.Выполнен, ФизическоеЛицо)
;

@НаСервере @ДоступноСКлиента
статический метод ОтменитьСогласование(Ссылка: Отсутствие.Ссылка, ФизическоеЛицо: ФизическиеЛица.Ссылка?)
    СогласованияДокументов.ОтозватьПодпись(Ссылка, ФизическоеЛицо)
    СостДокументов.УстановитьСостояниеДокумента(Ссылка, СостоянияДокумента.Подготовлен)
;

@НаСервере @ДоступноСКлиента
статический метод УдалитьДокумент(Ссылка: Отсутствие.Ссылка, ФизическоеЛицо: ФизическиеЛица.Ссылка?)
    СогласованияДокументов.ОтозватьПодпись(Ссылка, ФизическоеЛицо)
    Отсутствие.УдалитьДокумент(Ссылка, ФизическоеЛицо)
;

@НаСервере @ДоступноСКлиента
статический метод Записать( ЭтоНовый: Булево, 
                ДанныеДокумента: ДанныеДокумента, 
                ТабличныеЧасти: Отсутствия.ТабличныеЧасти, 
                ОтправитьНаСогласование: Булево,
                ПарольЗакрытогоКлюча: Строка?,
                ОтменитьОтправку: Булево): Криптография.РезультатПодписания
    пер Заявление: Отсутствие.Объект?
    пер ЗаявлениеСсылка: Отсутствие.Ссылка? = ДанныеДокумента.Ссылка
    если ЭтоНовый
        Заявление = новый Отсутствие.Объект(ЗаявлениеСсылка.Ид).Заполнить()
    иначе
        Заявление = ЗаявлениеСсылка.ЗагрузитьОбъект()
    ;
    
    Заявление!.ФизическоеЛицо = ДанныеДокумента.ФизическоеЛицо
    Заявление!.Дата = ДанныеДокумента.Дата
    Заявление!.ДатаОтсутствия = ДанныеДокумента.ДатаОтсутствия
    Заявление!.ДатаНачала = ДанныеДокумента.ДатаНачала
    Заявление!.ВремяОкончания = ДанныеДокумента.ВремяОкончания
    Заявление!.ВремяНачала = ДанныеДокумента.ВремяНачала
    Заявление!.ДатаОкончания = ДанныеДокумента.ДатаОкончания
    Заявление!.ИнтервалПовторения = ДанныеДокумента.ИнтервалПовторения
    Заявление!.ЧастотаПовторения = ДанныеДокумента.ЧастотаПовторения
    Заявление!.Повторяется = ДанныеДокумента.Повторяется
    Заявление!.ПолныйДень = ДанныеДокумента.ПолныйДень
    Заявление!.ТребуетСогласования = ДанныеДокумента.ТребуетСогласования
    Заявление!.Причина = ДанныеДокумента.Причина
    Заявление!.СпособСвязи = ДанныеДокумента.СпособСвязи
    Заявление!.Комментарий = ДанныеДокумента.Комментарий
    Заявление!.ИдентификаторыЭлектронныхДокументов.Очистить()
    Заявление!.ИдентификаторыЭлектронныхДокументов.ДобавитьВсе(ДанныеДокумента.ИдентификаторыЭлектронныхДокументов)
    Заявление!.СправкаВторогоРодителяПриложена = ДанныеДокумента.СправкаВторогоРодителяПриложена
    Заявление!.СведенияОбОтсутствииСправкиВторогоРодителя = ДанныеДокумента.СведенияОбОтсутствииСправкиВторогоРодителя
    Заявление!.КоличествоЛистовПриложений = ДанныеДокумента.КоличествоЛистовПриложений
    
    исп Транзакции.Начать()
    Заявление.Записать()
    ПрисоединенныеФайлыМенеджер.Записать(ТабличныеЧасти.ТаблицаФайлы)
    если не ТабличныеЧасти.ТаблицаЗаместители == Неопределено
        ЗаместителиМенеджер.Записать(ТабличныеЧасти.ТаблицаЗаместители!, () -> новый ОтсутствиеЗаместители.Объект())
    ;
    если не ТабличныеЧасти.ТаблицаУведомляемые == Неопределено
        УведомляемыеМенеджер.Записать(ТабличныеЧасти.ТаблицаУведомляемые!)
    ;
    ШаблоныДокументовМенеджер.СохранитьРеквизиты(ТабличныеЧасти.ДополнительныеРеквизиты)
    ПредставленияДокументов.СформироватьПредставленияДокумента(ЗаявлениеСсылка, Истина)
    пер РезультатПодписания: Криптография.РезультатПодписания
    если ОтправитьНаСогласование
        знч ДанныеСогласующего = новый Согласования.ДанныеСогласующего(ДанныеДокумента.ФизическоеЛицо, Согласования.РольПодписантаСотрудник())
        РезультатПодписания = Согласования.ПодписатьИУстановитьСостояниеДокумента(ЗаявлениеСсылка, ДанныеСогласующего, ПарольЗакрытогоКлюча,
            ДанныеДокумента.Причина == ВидыОтсутствий.Опоздание ? СостоянияДокумента.Выполнен : СостоянияДокумента.Подготовлен, ДанныеДокумента.ФизическоеЛицо)
        если РезультатПодписания.ЕстьОшибки
            возврат РезультатПодписания
        ;
    ;
    если ОтменитьОтправку
        СогласованияДокументов.ОтозватьПодпись(ЗаявлениеСсылка, ДанныеДокумента.ФизическоеЛицо)
        СостДокументов.УстановитьСостояниеДокумента(ЗаявлениеСсылка, СостоянияДокумента.Черновик)
    иначе
        Заявление!.ЗапланироватьОтсутствия()
    ;
    
    возврат РезультатПодписания
;

@НаСервере @ДоступноСКлиента
статический метод ОсновнаяОрганизация(ФизическоеЛицо: ФизическиеЛица.Ссылка): Организации.Ссылка
    возврат Сотрудники.ОрганизацияФизическогоЛицаПоОсновномуМестуРаботы(ФизическоеЛицо)
;

метод НазваниеПредставления(): Строка
    возврат Отсутствия.НазваниеПредставления(Объект.Причина)
;

метод ОсновнойКомпонентПанели(): Компонент
    возврат Компоненты.ЗаявлениеОбОтсутствии
;

метод ВидимостьОзнакомленСПредупреждениями(): Булево
    возврат не Компоненты.ЗаявлениеОбОтсутствии.РезультатПредупрежденияЗаполненияПериода.Пусто()
        и Компоненты.ЗаявлениеОбОтсутствии.РезультатПроверкиЗаполненияПериода.Пусто()
        и Компоненты.ЗаявлениеОбОтсутствии.РезультатПроверкиЗаполненияДатыОтсутствия.Пусто()
        и Компоненты.ЗаявлениеОбОтсутствии.РезультатПроверкиЗаполненияВремениОтсутствия.Пусто()
        и Компоненты.ЗаявлениеОбОтсутствии.РезультатПроверкиЗаполненияВремениОпоздания.Пусто()
;

метод ОзнакомленСПредупреждениямиПриИзменении(Источник: Флажок, Событие: СобытиеПриИзменении<Булево?>)
    Компоненты.ЗаявлениеОбОтсутствии.ОзнакомленСПредупреждениями = Источник.Значение ?? Ложь   
;

метод УстановитьРежимПросмотра()
    если не Компания.ПараметрыСеанса().ТекущийПользовательСотрудник
        Компоненты.ЗаявлениеОбОтсутствии.РежимПросмотра = Истина
    ;
;
