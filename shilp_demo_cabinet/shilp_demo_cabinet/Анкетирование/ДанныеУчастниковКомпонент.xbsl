импорт УниверсальныеМеханизмы
импорт ИнтерфейсныеКомпонентыСтандартные
импорт ФизическиеЛица

@Обработчик
метод ПослеСоздания()
    ИдКомпонента = новый Ууид()
    ВыбраныУчастникиОпроса.ПодключитьОбработчик((метод (ВыбранныеУчастники, ИдОповещаемогоКомпонента) ->
        если ИдКомпонента == ИдОповещаемогоКомпонента
            ОбработатьВыборУчастников(ВыбранныеУчастники)
        ;
    ;))
    ИнтерфейсныеКомпоненты.ИнициализироватьТаблицу(Таблица = Компоненты.СписокУчастников, ИспользованиеПоиска = Истина)
;

метод ОбработатьВыборУчастников(ВыбранныеУчастники: Массив<ФизическиеЛица.Ссылка>)
    ИдКомпонента = новый Ууид()
    
    для Участник из ВыбранныеУчастники
        если ЭтоНовыйУчастник(Участник)
        Участники.Добавить(новый ДанныеУчастниковОпроса(Участник = Участник, СтатусАнкетыСтрокой = "не создана"))
        ; 
    ;
    
    ИзменилсяСоставУчастников(новый СобытиеКомпонента())
    Компоненты.СписокУчастников.Обновить()
;

метод ДобавитьПриНажатии(Источник: ОбычнаяКоманда)
    
    пер ВыбранныеРеспонденты: Массив<ФизическиеЛица.Ссылка>
    
    для Участник из Участники
        ВыбранныеРеспонденты.Добавить(Участник.Участник как ФизическиеЛица.Ссылка)
    ;

    пер Сервис = АнкетированиеКомпонентыИнтерфейса.ПолучитьСервис()
    
    если Сервис != Неопределено
        Сервис.ОткрытьФормуПодбораРеспондентов(ВыбранныеРеспонденты, ИдКомпонента)
    иначе
        ОткрытьФормуПоУмолчанию(ВыбранныеРеспонденты)
    ;
    
;

метод ОткрытьФормуПоУмолчанию(ВыбранныеРеспонденты: Массив<ФизическиеЛица.Ссылка>)
    пер ПараметрЗакрытия = ФормаПодбораРеспондентов.ОткрытьВМодальномОкне(ВыбранныеРеспонденты = ВыбранныеРеспонденты, ОжидатьЗакрытия = Истина)
    если ПараметрЗакрытия == Неопределено
        возврат
    ;
    
    ВыбраныУчастникиОпроса.Оповестить(ПараметрЗакрытия, ИдКомпонента)
;

метод СписокУчастниковПриНажатииСтроки(Источник: Список<ДинамическийСписок>, Событие: СобытиеСДанными<СтрокаСписка<СтрокаДинамическогоСписка>>)
    знч Анкета = Событие.Данные.ДанныеСтроки.Данные["Анкета"] как Анкеты.Ссылка?
    если Анкета == Неопределено
        возврат
    ;
    АнкетаФорма.ОткрытьВМодальномОкне(КлючОбъекта = Анкета)
;

метод УдалениеРеспондентаПриНажатии(Источник: Картинка, Событие: СобытиеПриНажатии, ДанныеСтроки: Объект?)
    УдалениеУчастника(новый СобытиеСДанными<ФизическиеЛица.Ссылка>((ДанныеСтроки как СтрокаДинамическогоСписка).Данные["Участник"] как ФизическиеЛица.Ссылка))
;

метод ЭтоНовыйУчастник(Респондент: РеспондентАнкетирования.Ссылка): Булево
    для Участник из Участники
        если Участник.Участник == Респондент
            возврат Ложь
        ;
    ;
    
    возврат Истина
;

метод СтатусАнкеты(ДанныеСтроки : СтрокаДинамическогоСписка): Строка
    
    возврат ДанныеСтроки.Данные["Анкета"] == Неопределено ? "Не отправлена" : ДанныеСтроки.Данные["Статус"].Представление() 
;

метод СостояниеЦветФона(ДанныеСтроки : СтрокаДинамическогоСписка): Цвет | Авто
    знч Статус = ДанныеСтроки.Данные["Статус"] как СтатусыАнкет?
    возврат Статус == Неопределено ? Авто : БиблиотекаЦветов.Цвет(Анкетирование.ВидЦветаПоСостояниюАнкеты(Статус))
;