импорт УниверсальныеМеханизмы

конст ФИЛЬТР_ГРАФИЧЕСКИХ_ИЗОБРАЖЕНИЙ = "image/*"
конст ФИЛЬТР_ДОКУМЕНТОВ = [".doc", ".docx", ".pdf"]

@Обработчик
метод ПослеСоздания()
    ОшибкаЗаполненияВопроса.ПодключитьОбработчик((метод (ИдВопроса: Ууид) ->
        если ИдВопроса == Данные.ИдЭлемента
            СообщениеОбОшибке = "ответ не указан"
        ;    
    ;))
;

@ВПроекте
@Реализация
метод Инициализировать()
    ИдКомпонента = новый Ууид()
    Данные.ЗаголовокЭлемента = "Файл"
    Данные.ИконкаЭлемента = Ресурс{ЗагрузкаФайлов.svg}.Ссылка
    Настройки = Компоненты.Настройки
    если Данные.ДанныеОтвета.ЗначениеПрисоединенныйФайл != Неопределено
        ПрисоединенныеФайлы.Файлы.Добавить(Данные.ДанныеОтвета.ЗначениеПрисоединенныйФайл)
    ;
;

метод ПрисоединенныеФайлыДоступныеРасширения(): Строка
    пер Фильтры = новый Массив<Строка>()
    
    если Данные.ДанныеВопроса.НастройкиВопроса.ЗагружатьДокументы
        Фильтры.ДобавитьВсе(ФИЛЬТР_ДОКУМЕНТОВ)
    ;

    если Данные.ДанныеВопроса.НастройкиВопроса.ЗагружатьКартинки
        Фильтры.Добавить(ФИЛЬТР_ГРАФИЧЕСКИХ_ИЗОБРАЖЕНИЙ)
    ;
    
    возврат Строки.Соединить(Фильтры, ",")
;

метод ПрисоединенныеФайлыЗавершенаЗагрузкаФайлов(Источник: ПрисоединенныеФайлыКомпонент, Событие: СобытиеКомпонента)
    СообщениеОбОшибке = ""
    Данные.ДанныеОтвета.ЗначениеПрисоединенныйФайл = Источник.ТаблицаФайлы.Файлы.ПервыйИлиУмолчание()
;

метод УдалитьКартинкуПриНажатии(Источник: Картинка, Событие: СобытиеПриНажатии)
    Данные.ДанныеОтвета.ЗначениеПрисоединенныйФайл = Неопределено
;

// Контракт КомпонентКонструктора

@ВПроекте
@Реализация
метод ОткрытьНастройки(): Компонент
    возврат Компоненты.Настройки
;

// Конец КомпонентКонструктора