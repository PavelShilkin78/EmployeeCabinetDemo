импорт ОбменДанными

//КонтрольДоступа
@ВПроекте
метод ЗаписатьПредопределенныеНаборыВариантов()
    
    пер Описания: Массив<Анкетирование.ОписаниеНабораВариантов>
    
    знч Сервисы = ПоставщикНаборовВариантовОтвета.ПолучитьСервисы()
    для Сервис из Сервисы
        Описания.ДобавитьВсе(Сервис.ОписанияНаборов())
    ;
    знч Запрос = Запрос{
        Выбрать
            ИдПредопределенногоНабора,
            Ссылка как Набор
        Из
            НаборыВариантовОтвета
        Где
            Предопределенный
    }
    
    знч Результат: Соответствие<Ууид, НаборыВариантовОтвета.Ссылка>
    знч РезультатЗапроса = Запрос.Выполнить()
    
    для СтрокаРезультата из РезультатЗапроса 
        если СтрокаРезультата.ИдПредопределенногоНабора != Неопределено
            Результат.Вставить(СтрокаРезультата.ИдПредопределенногоНабора, СтрокаРезультата.Набор)
        ;
    ;

    для Описание из Описания
        пер Набор: НаборыВариантовОтвета.Ссылка?
        если Результат.СодержитКлюч(Описание.Ид)
            Набор = Результат.Получить(Описание.Ид)
        иначе
            пер НаборВариантов = новый НаборыВариантовОтвета.Объект()
            НаборВариантов.ИдПредопределенногоНабора = Описание.Ид
            НаборВариантов.Наименование = Описание.Наименование
            НаборВариантов.Предопределенный = Истина
            НаборВариантов.Статический = Описание.Статический
            НаборВариантов.Записать()
            Набор = НаборВариантов.Ссылка    
        ;
        
        если Описание.Статический
            ОбновитьВариантыНабора(Описание.Ид, Набор)
        ;          
    ;
;

метод ОбновитьВариантыНабора(ИдНабора: Ууид, СтатическийНабор: НаборыВариантовОтвета.Ссылка)
    
    знч Сервисы = ПоставщикЗначенийВариантовОтвета.ПолучитьСервисы()
    для Сервис из Сервисы
        пер ЗначенияПоставляемогоНабора = Сервис.ЗначенияНабораВариантов(ИдНабора)
        пер ЗначенияВБазе = ЗначенияВБазе(СтатическийНабор)

        для ЗначениеНабора из ЗначенияПоставляемогоНабора
            если ЗначенияВБазе.Найти(ЗначениеНабора.ПредставлениеВарианта) == Неопределено
                СохранитьВариантОтветаСтатическогоНабора(СтатическийНабор, ЗначениеНабора)
            ;
        ;
    ;
;

метод СохранитьВариантОтветаСтатическогоНабора(СтатическийНабор: НаборыВариантовОтвета.Ссылка, ВариантОтвета: ДанныеВариантаОтвета)
    пер ВариантОтветаОбъект = ВариантыОтветов.ПолучитьСсылку(ВариантОтвета.ИдВарианта).ЗагрузитьОбъект()
    если ВариантОтветаОбъект == Неопределено
        ВариантОтветаОбъект = новый ВариантыОтветов.Объект(Ид=ВариантОтвета.ИдВарианта)
    ;
    ВариантОтветаОбъект.НаборВариантовОтвета = СтатическийНабор
    ВариантОтветаОбъект.Наименование = ВариантОтвета.ПредставлениеВарианта
    ВариантОтветаОбъект.Записать()
    ОбменДанными.ЗаписатьСоответствиеИдентификаторов(ВариантОтветаОбъект.Ссылка, ВариантОтвета.ИдВарианта.ВСтроку(), Истина)
        
;

метод ЗначенияВБазе(Набор: НаборыВариантовОтвета.Ссылка) : Массив<Строка>
    пер ЗначенияВБазе: Массив<Строка>
    пер ВариантыПоНабору = Анкетирование.ВариантыОтветаПоНабору(Набор)
    для Вариант из ВариантыПоНабору
        ЗначенияВБазе.Добавить(Вариант.ПредставлениеВарианта)
    ;
    возврат ЗначенияВБазе
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ПредопределенныйНабор(ИдНабора: Ууид): НаборыВариантовОтвета.Ссылка?
    знч Запрос = Запрос{
        Выбрать
            Ссылка Как Набор
        Из
            НаборыВариантовОтвета
        Где
            Ссылка.ИдПредопределенногоНабора == %ИдНабора
    }
    возврат Запрос.Выполнить().ПервыйИлиУмолчание()?.Набор ?? Неопределено
;