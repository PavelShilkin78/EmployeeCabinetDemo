импорт ВебApi
импорт ОбщиеСтандартные

@ВПроекте
метод ТипОбъектаJson(): Строка
    возврат "surveys"
;

конст СООТВЕТСТВИЕ_СТАТУСЫ_ОПРОСОВ_JSON = {
    СтатусыОпросовJson.draft: СтатусыОпросов.НеЗапущен,
    СтатусыОпросовJson.planned: СтатусыОпросов.Запланирован,
    СтатусыОпросовJson.started: СтатусыОпросов.Запущен,
    СтатусыОпросовJson.completed: СтатусыОпросов.Завершен
}

@ВПроекте
структура Опрос_2_0
    @JsonСвойство("ID")
    обз знч Ид: Строка
    @JsonСвойство("name")
    обз пер Наименование: Строка?
    @JsonСвойство("questionnaireTemplate")
    обз знч ШаблонАнкеты: Строка
    @JsonСвойство("description")
    пер Описание: Строка?
    @JsonСвойство("startDate")
    пер ДатаНачала: Дата
    @JsonСвойство("endDate")
    пер ДатаОкончания: Дата
    @JsonСвойство("status")
    пер Статус: СтатусыОпросовJson?
;

перечисление СтатусыОпросовJson
    draft,
    planned,
    started,
    completed    
;

@ВПодсистеме
метод ГруппаИзмененийВJson(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): ЧитаемоеСоответствие<Строка, Массив<Объект?>>
    возврат {"surveys": ДанныеОпросовВJson(Ссылки, Сервисы)}
;

метод ДанныеОпросовВJson(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): Массив<Объект?>
    знч Данные: Массив<Объект?>
    для КлючИЗначение из ДанныеОпросов(Ссылки)
        Данные.Добавить(ДанныеОпросаВJson_V2_0(КлючИЗначение.Значение, Сервисы))
    ;
    возврат Данные
;

метод ДанныеОпросов(ОпросыСсылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>): ЧитаемоеСоответствие<Опросы.Ссылка, ЧитаемоеСоответствие<Строка, Объект?>>
    
    знч ДанныеОпросов: Соответствие<Опросы.Ссылка, ЧитаемоеСоответствие<Строка, Объект?>> 
    
    знч Запрос = Запрос{
        Выбрать
            Ссылка,
            Наименование,
            ДатаНачала,
            ДатаОкончания,
            ШаблонАнкеты,
            Описание,
            Статус
        Из
            Опросы
        Где
            Ссылка В (%ОпросыСсылки)
    }
    исп Результат = Запрос.Выполнить()
    
    для СтрокаРезультата из Результат
        ДанныеОпросов.Вставить(
            СтрокаРезультата.Ссылка,
            МенеджерЗапросов.СтрокаРезультатаЗапросаВСоответствие(СтрокаРезультата, Результат)
        )        
    ;
    
    возврат ДанныеОпросов   
;

метод ДанныеОпросаВJson_V2_0(ДанныеОбъекта: ЧитаемоеСоответствие<Строка, Объект?>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): Опрос_2_0
    
    знч СериализованныйОпрос = новый Опрос_2_0(
        Сервисы.ПолучитьИдентификатор(ДанныеОбъекта["Ссылка"] как Опросы.Ссылка),
        ДанныеОбъекта["Наименование"] как Строка,
        Сервисы.ПолучитьИдентификатор(ДанныеОбъекта["Шаблон"] как ШаблоныАнкет.Ссылка)    
    )
    
    СериализованныйОпрос.Описание =  ДанныеОбъекта["Описание"] как Строка
    СериализованныйОпрос.ДатаНачала = ДанныеОбъекта["ДатаНачала"] как Дата
    СериализованныйОпрос.ДатаОкончания  = ДанныеОбъекта["ДатаОкончания"] как Дата
    СериализованныйОпрос.Статус = СтатусыОпросовВJson(ДанныеОбъекта["Статус"] как СтатусыОпросов)
    
    возврат СериализованныйОпрос
;

метод СтатусыОпросовВJson(СтатусОпроса: СтатусыОпросов): СтатусыОпросовJson
    для КлючИЗначение из СООТВЕТСТВИЕ_СТАТУСЫ_ОПРОСОВ_JSON
        если КлючИЗначение.Значение == СтатусОпроса
            возврат КлючИЗначение.Ключ
        ;     
    ;     
;

@ВПодсистеме
метод ТипДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    
    если ВерсияФорматаОбмена == Неопределено или ВерсияФорматаОбмена < Версия{2.0}
        выбросить новый ИсключениеВыполнения("Неверный формат")
    ;
    
    если ВерсияФорматаОбмена >= Версия{2.0}
        возврат Тип<Опрос_2_0>
    ;
;

@ВПодсистеме
метод ЗагрузитьОбъектИзJson(СериализованныйОпрос: Опрос_2_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    
    знч Опрос = Сервисы.ПрочитатьОбъект(СериализованныйОпрос.Ид, &Опросы.Объект.новый(Ууид), Тип<Опросы.Ссылка>) как Опросы.Объект
    Опрос.Наименование = СериализованныйОпрос.Наименование ?? ""
    Опрос.Описание = СериализованныйОпрос.Описание ?? ""
    Опрос.ДатаНачала = СериализованныйОпрос.ДатаНачала
    Опрос.ДатаОкончания = СериализованныйОпрос.ДатаОкончания
    Опрос.ШаблонАнкеты = Сервисы.ПолучитьСсылку(ШаблоныАнкетDto.ВнешняяСсылка(СериализованныйОпрос.ШаблонАнкеты)) как ШаблоныАнкет.Ссылка
    
    если СериализованныйОпрос.Статус != Неопределено
        Опрос.Статус = СтатусыОпросовИзJson(СериализованныйОпрос.Статус)
    ; 

    Сервисы.ЗаписатьОбъект(новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(Опрос , СериализованныйОпрос.Ид), Сервисы.ИнструментыМенеджераОбъекта)    
;

метод СтатусыОпросовИзJson(СтатусОпросаJson: СтатусыОпросовJson): СтатусыОпросов
    возврат СООТВЕТСТВИЕ_СТАТУСЫ_ОПРОСОВ_JSON[СтатусОпросаJson]    
;    
    
@ВПроекте
метод ВнешняяСсылка(Идентификатор: Строка): ВебApiСервер.ВнешняяСсылка
    возврат новый ВебApiСервер.ВнешняяСсылка(Идентификатор, (Ууид) -> Опросы.ПолучитьСсылку(Ууид))
;