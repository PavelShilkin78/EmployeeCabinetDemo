импорт ВебApi

@ВПроекте
метод ТипОбъектаJson(): Строка
    возврат "questions"
;

@ВПроекте
структура Вопрос_2_0
    @JsonСвойство("ID")
    обз знч Ид: Строка
    @JsonСвойство("questionText")
    обз знч Формулировка: Строка
    @JsonСвойство("answerType")
    обз знч ТипОтвета: ТипыОтветовJson
    @JsonСвойство("compositeQuestion")
    пер СоставнойВопрос: Строка?
    @JsonСвойство("helpText")
    пер Пояснение: Строка?
    @JsonСвойство("placeholder")
    пер ПодсказкаВвода: Строка
    @JsonСвойство("answerVariantSet")
    пер НаборВариантов: Строка?
    @JsonСвойство("showAllVariants")
    пер ВыводитьВсеВарианты: Булево?
    @JsonСвойство("multipleAnswer")
    пер МножественныйОтвет: Булево?
    @JsonСвойство("public")
    пер Общедоступный: Булево?
    @JsonСвойство("questionSettings")
    пер НастройкиВопроса: НастройкиВопросаDto.Настройка_2_0?
    @JsonСвойство("predefined")
    пер ИспользоватьПредопределенныйНабор: Булево?
    @JsonСвойство("predefinedID")
    пер ИдПредопределенногоВопроса: Строка?
;

перечисление ТипыОтветовJson
    string,
    int,
    date,
    predefinedSingle,
    predefinedMultiple,
    struct,
    file    
;

конст СООТВЕТСТВИЕ_ТИПЫ_ОТВЕТОВ_JSON = {
    ТипыОтветовJson.string: ТипыОтветов.Строка,
    ТипыОтветовJson.int: ТипыОтветов.Число,
    ТипыОтветовJson.date: ТипыОтветов.Дата,
    ТипыОтветовJson.predefinedSingle: ТипыОтветов.ПредопределенныйВариантЕдиничный,
    ТипыОтветовJson.predefinedMultiple: ТипыОтветов.ПредопределенныйВариантМножественный,
    ТипыОтветовJson.struct: ТипыОтветов.Составной,
    ТипыОтветовJson.file: ТипыОтветов.Файл     
}

@ВПодсистеме
метод ГруппаИзмененийВJson(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): ЧитаемоеСоответствие<Строка, Массив<Объект?>>
    возврат {"questions": ДанныеВопросовВJson(Ссылки, Сервисы)}
;

метод ДанныеВопросовВJson(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): Массив<Объект?>
    знч Данные: Массив<Объект?>
    для КлючИЗначение из ДанныеВопросов(Ссылки)
        Данные.Добавить(ДанныеВопросовВJson_V2_0(КлючИЗначение.Значение, Сервисы))
    ;
    возврат Данные
;

метод ДанныеВопросов(ВопросыСсылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>): ЧитаемоеСоответствие<Вопросы.Ссылка, ДанныеВопроса>
    
    знч ДанныеВопросов: Соответствие<Вопросы.Ссылка, ДанныеВопроса> 
    
    если ВопросыСсылки.Пусто()
        возврат ДанныеВопросов
    ;
    знч Запрос = Запрос{
        Выбрать
            Ссылка,
            СоставнойВопрос,
            Формулировка,
            Пояснение,
            ПодсказкаВвода,
            ТипОтвета,
            НаборВариантов,
            ВыводитьВсеВарианты,
            МножественныйОтвет,
            Общедоступный,
            НастройкиВопроса,
            ИспользоватьПредопределенныйНабор,
            ИдПредопределенногоВопроса
        Породить ДанныеВопроса
        Из
            Вопросы
        Где
            Ссылка В (%ВопросыСсылки)
    }
    исп Результат = Запрос.Выполнить()
    
    для СтрокаРезультата из Результат
        ДанныеВопросов.Вставить(
            СтрокаРезультата.Ссылка,
            СтрокаРезультата
        )        
    ;
    
    возврат ДанныеВопросов   
;

метод ДанныеВопросовВJson_V2_0(ДанныеВопроса: ДанныеВопроса, Сервисы: ВебApiСервер.СервисыУпаковкиJson): Вопрос_2_0
    
    знч СериализованныйВопрос = новый Вопрос_2_0(
        Сервисы.ПолучитьИдентификатор(ДанныеВопроса.Ссылка),
        ДанныеВопроса.Формулировка,
        ТипыОтветовВJson(ДанныеВопроса.ТипОтвета)
    )
    
    если ДанныеВопроса.СоставнойВопрос != Неопределено
        СериализованныйВопрос.СоставнойВопрос = (ДанныеВопроса.СоставнойВопрос).Ид.ВСтроку()
    ;
    СериализованныйВопрос.Пояснение = ДанныеВопроса.Пояснение
    если ДанныеВопроса.НаборВариантов != Неопределено
        СериализованныйВопрос.НаборВариантов = (ДанныеВопроса.НаборВариантов).Ид.ВСтроку()
    ;
    СериализованныйВопрос.ВыводитьВсеВарианты = ДанныеВопроса.ВыводитьВсеВарианты
    СериализованныйВопрос.МножественныйОтвет = ДанныеВопроса.МножественныйОтвет
    СериализованныйВопрос.НастройкиВопроса = НастройкиВопросаDto.СериализованнаяНастройка_2_0(ДанныеВопроса.НастройкиВопроса)
    СериализованныйВопрос.Общедоступный = ДанныеВопроса.Общедоступный
    СериализованныйВопрос.ИспользоватьПредопределенныйНабор = ДанныеВопроса.ИспользоватьПредопределенныйНабор
    СериализованныйВопрос.ПодсказкаВвода = ДанныеВопроса.ПодсказкаВвода
    
    если ДанныеВопроса.ИдПредопределенногоВопроса != Неопределено
        СериализованныйВопрос.ИдПредопределенногоВопроса = ДанныеВопроса.ИдПредопределенногоВопроса.ВСтроку()
    ;
    
    возврат СериализованныйВопрос
;
    
метод ТипыОтветовВJson(ТипОтвета: ТипыОтветов): ТипыОтветовJson
    для КлючИЗначение из СООТВЕТСТВИЕ_ТИПЫ_ОТВЕТОВ_JSON 
        если КлючИЗначение.Значение == ТипОтвета
            возврат КлючИЗначение.Ключ
        ;     
    ;     
;

метод ТипыОтветовИзJson(ТипОтветаJson: ТипыОтветовJson): ТипыОтветов
    возврат СООТВЕТСТВИЕ_ТИПЫ_ОТВЕТОВ_JSON[ТипОтветаJson]
;

@ВПодсистеме
метод ТипДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    
    если ВерсияФорматаОбмена == Неопределено или ВерсияФорматаОбмена < Версия{2.0}
        выбросить новый ИсключениеВыполнения("Неверный формат")
    ;
    
    если ВерсияФорматаОбмена >= Версия{2.0}
        возврат Тип<Вопрос_2_0>
    ;
;

@ВПодсистеме
метод ЗагрузитьОбъектИзJson(СериализованныйВопрос: Вопрос_2_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    
    исп Транзакции.Начать()
    
    знч Вопрос = Сервисы.ПрочитатьОбъект(СериализованныйВопрос.Ид, &Вопросы.Объект.новый(Ууид), Тип<Вопросы.Ссылка>) как Вопросы.Объект
    Вопрос.Формулировка = СериализованныйВопрос.Формулировка
    Вопрос.ТипОтвета = ТипыОтветовИзJson(СериализованныйВопрос.ТипОтвета)
    если СериализованныйВопрос.СоставнойВопрос != Неопределено
        Вопрос.СоставнойВопрос = Сервисы.ПолучитьСсылку(ВопросыDto.ВнешняяСсылка(СериализованныйВопрос.СоставнойВопрос)) как Вопросы.Ссылка
    ;  
    Вопрос.Пояснение = СериализованныйВопрос.Пояснение ?? ""
    если СериализованныйВопрос.НаборВариантов != Неопределено
        Вопрос.НаборВариантов = Сервисы.ПолучитьСсылку(НаборыВариантовОтветаDto.ВнешняяСсылка(СериализованныйВопрос.НаборВариантов)) как НаборыВариантовОтвета.Ссылка
    ;
    Вопрос.ВыводитьВсеВарианты = СериализованныйВопрос.ВыводитьВсеВарианты ?? Ложь
    Вопрос.МножественныйОтвет = СериализованныйВопрос.МножественныйОтвет ?? Ложь
    Вопрос.Общедоступный = СериализованныйВопрос.Общедоступный ?? Ложь
    
    пер НастройкиВопроса: НастройкиВопроса
    если СериализованныйВопрос.НастройкиВопроса != Неопределено
        НастройкиВопроса = НастройкиВопросаDto.Десериализовать(СериализованныйВопрос.НастройкиВопроса)
    ;
    Вопрос.НастройкиВопроса = НастройкиВопроса
    Вопрос.ПодсказкаВвода = СериализованныйВопрос.ПодсказкаВвода
    
    Вопрос.ИспользоватьПредопределенныйНабор = СериализованныйВопрос.ИспользоватьПредопределенныйНабор ?? Ложь
    если СериализованныйВопрос.ИдПредопределенногоВопроса != Неопределено
        Вопрос.ИдПредопределенногоВопроса = новый Ууид(СериализованныйВопрос.ИдПредопределенногоВопроса)
    иначе
        Вопрос.ИдПредопределенногоВопроса = Неопределено
    ;
    
    Сервисы.ЗаписатьОбъект(новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(Вопрос, СериализованныйВопрос.Ид), Сервисы.ИнструментыМенеджераОбъекта) 
;

@ВПодсистеме
метод ВнешняяСсылка(Идентификатор: Строка): ВебApiСервер.ВнешняяСсылка
    возврат новый ВебApiСервер.ВнешняяСсылка(Идентификатор, (Ууид) -> Вопросы.ПолучитьСсылку(Ууид))
;