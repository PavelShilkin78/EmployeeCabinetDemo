импорт ВебApi
импорт УниверсальныеМеханизмы
импорт ОбщиеСтандартные
импорт ОбменДанными

@ВПроекте
метод ВнешняяСсылка(Идентификатор: Строка): ВебApiСервер.ВнешняяСсылка
    возврат новый ВебApiСервер.ВнешняяСсылка(Идентификатор, (Ууид) -> Ответы.ПолучитьСсылку(Ууид))
;

@ВПодсистеме
метод ТипОбъектаJson(): Строка
    возврат "answers"
;

@ВПодсистеме
метод ТипДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    
    если ВерсияФорматаОбмена == Неопределено или ВерсияФорматаОбмена < Версия{2.0}
        выбросить новый ИсключениеВыполнения("Неверный формат")
    ;
    
    если ВерсияФорматаОбмена >= Версия{2.0}
        возврат Тип<Ответ_2_0>
    ;
;

@ВПодсистеме
метод ЗагрузитьОбъектИзJson(СериализованныйОтвет: Ответ_2_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    
    исп Транзакции.Начать()
    
    знч Ответ = Сервисы.ПрочитатьОбъект(СериализованныйОтвет.Ид, &Ответы.Объект.новый(Ууид), Тип<Ответы.Ссылка>) как Ответы.Объект
    Ответ.Анкета = Сервисы.ПолучитьСсылку(АнкетыDto.ВнешняяСсылка(СериализованныйОтвет.Анкета)) как Анкеты.Ссылка    
    Ответ.Вопрос = Сервисы.ПолучитьСсылку(ВопросыDto.ВнешняяСсылка(СериализованныйОтвет.Вопрос)) как Вопросы.Ссылка
    Ответ.ЗначениеСтрока = СериализованныйОтвет.ЗначениеСтрока ?? ""
    Ответ.ЗначениеДата = СериализованныйОтвет.ЗначениеДата 
    Ответ.ЗначениеЧисло = СериализованныйОтвет.ЗначениеЧисло
    Ответ.ЗначениеКомментария = СериализованныйОтвет.ЗначениеКомментария
    
    если СериализованныйОтвет.ЗначениеФайл != Неопределено
        знч ЗначениеФайл = Файлы.ВложенияИзJson([СериализованныйОтвет.ЗначениеФайл], Сервисы, Ответ.Анкета)[0]
        Ответ.ЗначениеФайл= ЗначениеФайл.Ссылка
        Файлы.ЗаписатьФайлыПоВладельцу([ЗначениеФайл], Ответ.Анкета)
    ;
    
    если СериализованныйОтвет.ЗначенияПредопределенные != Неопределено
        знч СервисыКонтрактов = ПредопределенныеЗначенияОтветовApi.ПолучитьСервисы()
        для valuePredefined из СериализованныйОтвет.ЗначенияПредопределенные
            для СервисКонтракта из СервисыКонтрактов
                пер ВариантСсылка = СервисКонтракта.ВнешняяСсылка(valuePredefined)
                если ВариантСсылка != Неопределено
                    Ответ.ЗначенияПредопределенные.Добавить(Сервисы.ПолучитьСсылку(ВариантСсылка) как ПредопределенныеЗначенияОтветов.Ссылка)
                ;
            ;
        ;
    ;

    если СериализованныйОтвет.ИдСоставногоОтвета != Неопределено
        Ответ.СоставнойОтвет = Сервисы.ПолучитьСсылку(ВнешняяСсылка(СериализованныйОтвет.ИдСоставногоОтвета)) как Ответы.Ссылка
    ;
    Ответ.ЯвляетсяСоставным = СериализованныйОтвет.ЯвляетсяСоставным
    Ответ.ПредставлениеПредопределенныхОтветов = СериализованныйОтвет.ПредставлениеПредопределенныхОтветов
        
    Сервисы.ЗаписатьОбъект(новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(Ответ, СериализованныйОтвет.Ид), Сервисы.ИнструментыМенеджераОбъекта)
        
;

@ВПроекте
структура Ответ_2_0
    @JsonСвойство("ID")
    обз знч Ид: Строка
    @JsonСвойство("questionnaire")
    обз знч Анкета: Строка
    @JsonСвойство("question")
    обз знч Вопрос: Строка
    @JsonСвойство("valueString")
    пер ЗначениеСтрока: Строка?
    @JsonСвойство("valueDate")
    пер ЗначениеДата: Дата?
    @JsonСвойство("valueInt")
    пер ЗначениеЧисло: Число?
    @JsonСвойство("valueFile")
    пер ЗначениеФайл: МенеджерФайлов.ДанныеФайлаJson?
    @JsonСвойство("valuesPredefined")
    пер ЗначенияПредопределенные: Массив<ОбменДанными.ЭлементКонтрактаСущностиJson>?
    @JsonСвойство("presentationPredefined")
    пер ПредставлениеПредопределенныхОтветов: Строка
    @JsonСвойство("complexAnswerID")
    пер ИдСоставногоОтвета: Строка?
    @JsonСвойство("comment")
    пер ЗначениеКомментария: Строка
    @JsonСвойство("isComplex")
    пер ЯвляетсяСоставным: Булево
;

@ВПодсистеме
метод ГруппаИзмененийВJson(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): ЧитаемоеСоответствие<Строка, Массив<Объект?>>
    возврат {"answers": ДанныеОтветовВJson(Ссылки, Сервисы)}
;

метод ДанныеОтветовВJson(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): Массив<Объект?>
    знч Данные: Массив<Объект?>
    для КлючИЗначение из ДанныеОтветов(Ссылки)
        Данные.Добавить(ДанныеОтветаВJson_V2_0(КлючИЗначение.Значение, Сервисы))
    ;
    возврат Данные
;

метод ДанныеОтветов(ОтветыСсылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>): ЧитаемоеСоответствие<Ответы.Ссылка, ЧитаемоеСоответствие<Строка, Объект?>>
    
    знч ДанныеОтветов: Соответствие<Ответы.Ссылка, ЧитаемоеСоответствие<Строка, Объект?>>
    если ОтветыСсылки.Размер() == 0
        возврат ДанныеОтветов
    ;
    
    знч ДанныеЗначенияПредопределенные = МенеджерСущности.ЗначениеМножественногоРеквизитаОбъектов(ОтветыСсылки, "ЗначенияПредопределенные")
 
    знч Запрос = Запрос{
        Выбрать
            Ссылка,
            Анкета,
            Вопрос,
            ЗначениеСтрока,
            ЗначениеДата,
            ЗначениеЧисло,
            ЗначениеФайл,
            ЗначениеКомментария,
            ПредставлениеПредопределенныхОтветов,
            СоставнойОтвет,
            ЯвляетсяСоставным
        Из
            Ответы
        Где
            Ссылка В (%ОтветыСсылки)    
    }
    исп Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат 
        знч ПоляОтвета: Соответствие<Строка, Объект?>
        ПоляОтвета.ВставитьВсе(МенеджерЗапросов.СтрокаРезультатаЗапросаВСоответствие(СтрокаРезультата, Результат)) 
        ПоляОтвета.Вставить("ЗначенияПредопределенные", ДанныеЗначенияПредопределенные.ПолучитьИлиУмолчание(СтрокаРезультата.Ссылка) ?? [])
        
        ДанныеОтветов.Вставить(СтрокаРезультата.Ссылка, ПоляОтвета)   
    ;
 
    возврат ДанныеОтветов    
; 

метод ДанныеОтветаВJson_V2_0(ДанныеОбъекта: ЧитаемоеСоответствие<Строка, Объект?>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): Ответ_2_0
    
    знч СериализованныйОтвет = новый Ответ_2_0(
        Сервисы.ПолучитьИдентификатор(ДанныеОбъекта["Ссылка"] как Ответы.Ссылка),
        Сервисы.ПолучитьИдентификатор(ДанныеОбъекта["Анкета"] как Анкеты.Ссылка),
        Сервисы.ПолучитьИдентификатор(ДанныеОбъекта["Вопрос"] как Вопросы.Ссылка)    
    )
    СериализованныйОтвет.ЗначениеСтрока = ДанныеОбъекта["ЗначениеСтрока"] как Строка
    СериализованныйОтвет.ЗначениеДата = ДанныеОбъекта["ЗначениеДата"] как Дата?
    СериализованныйОтвет.ЗначениеЧисло = ДанныеОбъекта["ЗначениеЧисло"] как Число?
    если ДанныеОбъекта["ЗначениеФайл"] != Неопределено
        СериализованныйОтвет.ЗначениеФайл = Файлы.ДанныеФайлаJson(ДанныеОбъекта["ЗначениеФайл"] как Файлы.Ссылка, Сервисы)
    ;
    
    СериализованныйОтвет.ЗначениеКомментария = ДанныеОбъекта["ЗначениеКомментария"] как Строка
    
    знч СервисыКонтрактов = ПредопределенныеЗначенияОтветовApi.ПолучитьСервисы()
    пер ПредопределенныеОтветыJson: Массив<ОбменДанными.ЭлементКонтрактаСущностиJson>
    для ПредопределенныйОтвет из ДанныеОбъекта["ЗначенияПредопределенные"] как Обходимое<Объект?>
        для СервисКонтракта из СервисыКонтрактов
            пер ПредопределенныйОтветJson = СервисКонтракта.ОписаниеЭлемента(ПредопределенныйОтвет как ПредопределенныеЗначенияОтветов.Ссылка, Сервисы)
            если ПредопределенныйОтветJson != Неопределено
                ПредопределенныеОтветыJson.Добавить(ПредопределенныйОтветJson)
                прервать
            ;    
        ;    
    ;
    СериализованныйОтвет.ЗначенияПредопределенные = ПредопределенныеОтветыJson
    СериализованныйОтвет.ПредставлениеПредопределенныхОтветов = ДанныеОбъекта["ПредставлениеПредопределенныхОтветов"] как Строка
    если ДанныеОбъекта["СоставнойОтвет"] != Неопределено
        СериализованныйОтвет.ИдСоставногоОтвета = Сервисы.ПолучитьИдентификатор(ДанныеОбъекта["СоставнойОтвет"] как Ответы.Ссылка)
    ;
    СериализованныйОтвет.ЯвляетсяСоставным = ДанныеОбъекта["ЯвляетсяСоставным"] как Булево
    
    возврат СериализованныйОтвет    
;