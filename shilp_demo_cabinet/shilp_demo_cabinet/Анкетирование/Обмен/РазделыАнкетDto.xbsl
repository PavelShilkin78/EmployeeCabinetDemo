импорт ВебApi

@ВПроекте
структура РазделАнкеты_2_0
    @JsonСвойство("ID")
    обз знч Ид: Строка
    @JsonСвойство("questionnaireTemplate")
    обз знч Шаблон: Строка
    @JsonСвойство("name")
    пер Наименование: Строка?
    @JsonСвойство("helpText")
    пер Подсказка: Строка?
    @JsonСвойство("priority")
    пер Приоритет: Число?
;

@ВПроекте
метод ТипОбъектаJson(): Строка
    возврат "questionnaireSections"
;

@ВПодсистеме
метод ГруппаИзмененийВJson(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): ЧитаемоеСоответствие<Строка, Массив<Объект?>>
    возврат {"questionnaireSections": ДанныеРазделовВJson(Ссылки, Сервисы)}
;

метод ДанныеРазделовВJson(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): Массив<Объект?>
    знч Данные: Массив<Объект?>
    для КлючИЗначение из ДанныеРазделов(Ссылки)
        Данные.Добавить(ДанныеРазделовВJson_V2_0(КлючИЗначение.Значение, Сервисы))
    ;
    возврат Данные
;

метод ДанныеРазделов(РазделыСсылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>): ЧитаемоеСоответствие<РазделыАнкет.Ссылка, ДанныеРаздела>
    
    знч ДанныеРазделов: Соответствие<РазделыАнкет.Ссылка, ДанныеРаздела>
    
    если РазделыСсылки.Пусто()
        возврат ДанныеРазделов
    ;
    
    знч Запрос = Запрос{
        Выбрать
            Ссылка,
            Наименование,
            Подсказка,
            Приоритет,
            Шаблон
        Породить ДанныеРаздела
        Из
            РазделыАнкет
        Где
            Ссылка В (%РазделыСсылки)
    }
    исп Результат = Запрос.Выполнить()
    
    для СтрокаРезультата из Результат
        ДанныеРазделов.Вставить(
            СтрокаРезультата.Ссылка,
            СтрокаРезультата
        )
    ;
    
    возврат ДанныеРазделов
;

метод ДанныеРазделовВJson_V2_0(ДанныеРаздела: ДанныеРаздела, Сервисы: ВебApiСервер.СервисыУпаковкиJson): РазделАнкеты_2_0
    
    знч СериализованныйРаздел = новый РазделАнкеты_2_0(
        Сервисы.ПолучитьИдентификатор(ДанныеРаздела.Ссылка),
        Сервисы.ПолучитьИдентификатор(ДанныеРаздела.Шаблон)
    )
   
    СериализованныйРаздел.Наименование = ДанныеРаздела.Наименование
    СериализованныйРаздел.Подсказка = ДанныеРаздела.Подсказка
    СериализованныйРаздел.Приоритет = ДанныеРаздела.Приоритет
    
    возврат СериализованныйРаздел
;

@ВПодсистеме
метод ТипДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    
    если ВерсияФорматаОбмена == Неопределено или ВерсияФорматаОбмена < Версия{2.0}
        выбросить новый ИсключениеВыполнения("Неверный формат")
    ;
    
    если ВерсияФорматаОбмена >= Версия{2.0}
        возврат Тип<РазделАнкеты_2_0>
    ;
;

@ВПодсистеме
метод ЗагрузитьОбъектИзJson(СериализованныйРаздел: РазделАнкеты_2_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    
    исп Транзакции.Начать()
    
    знч РазделАнкеты = Сервисы.ПрочитатьОбъект(СериализованныйРаздел.Ид, &РазделыАнкет.Объект.новый(Ууид), Тип<РазделыАнкет.Ссылка>) как РазделыАнкет.Объект
    РазделАнкеты.Шаблон = Сервисы.ПолучитьСсылку(ШаблоныАнкетDto.ВнешняяСсылка(СериализованныйРаздел.Шаблон)) как ШаблоныАнкет.Ссылка
    РазделАнкеты.Наименование = СериализованныйРаздел.Наименование ?? ""
    РазделАнкеты.Подсказка = СериализованныйРаздел.Подсказка ?? ""
    РазделАнкеты.Приоритет = СериализованныйРаздел.Приоритет ?? 0

    Сервисы.ЗаписатьОбъект(новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(РазделАнкеты , СериализованныйРаздел.Ид), Сервисы.ИнструментыМенеджераОбъекта)    
;


@ВПроекте
метод ВнешняяСсылка(Идентификатор: Строка): ВебApiСервер.ВнешняяСсылка
    возврат новый ВебApiСервер.ВнешняяСсылка(Идентификатор, (Ууид) -> РазделыАнкет.ПолучитьСсылку(Ууид))
;