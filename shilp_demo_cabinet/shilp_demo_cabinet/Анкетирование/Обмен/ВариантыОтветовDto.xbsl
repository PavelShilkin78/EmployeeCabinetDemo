импорт ВебApi

@ВПроекте
структура ВариантОтвета_2_0
    @JsonСвойство("ID")
    обз знч Ид: Строка
    @JsonСвойство("name")
    обз знч Наименование: Строка
    @JsonСвойство("answersVariantSet")
    пер НаборВариантовОтвета: Строка?
;

@ВПодсистеме
метод ТипДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    
    если ВерсияФорматаОбмена == Неопределено или ВерсияФорматаОбмена < Версия{2.0}
        выбросить новый ИсключениеВыполнения("Неверный формат")
    ;
    
    если ВерсияФорматаОбмена >= Версия{2.0}
        возврат Тип<ВариантОтвета_2_0>
    ;
;

@ВПодсистеме
метод ЗагрузитьОбъектИзJson(СериализованныйВариантОтвета: ВариантОтвета_2_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    
    исп Транзакции.Начать()
    
    знч ВариантОтвета = Сервисы.ПрочитатьОбъект(СериализованныйВариантОтвета.Ид, &ВариантыОтветов.Объект.новый(Ууид), Тип<ВариантыОтветов.Ссылка>) как ВариантыОтветов.Объект
    ВариантОтвета.Наименование = СериализованныйВариантОтвета.Наименование
    ВариантОтвета.НаборВариантовОтвета = Сервисы.ПолучитьСсылку(НаборыВариантовОтветаDto.ВнешняяСсылка(СериализованныйВариантОтвета.НаборВариантовОтвета)) как НаборыВариантовОтвета.Ссылка
    
    Сервисы.ЗаписатьОбъект(новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(ВариантОтвета, СериализованныйВариантОтвета.Ид), Сервисы.ИнструментыМенеджераОбъекта)    
;

@ВПодсистеме
метод ГруппаИзмененийВJson(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): ЧитаемоеСоответствие<Строка, Массив<Объект?>>
    возврат {"answerVariants": ДанныеВариантовОтветовВJson(Ссылки, Сервисы)}
;

метод ДанныеВариантовОтветовВJson(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): Массив<Объект?>
    знч Данные: Массив<Объект?>
    для КлючИЗначение из ДанныеВариантовОтветов(Ссылки)
        Данные.Добавить(ДанныеВариантовОтветовВJson_V2_0(КлючИЗначение.Значение, Сервисы))
    ;
    возврат Данные
;

метод ДанныеВариантовОтветов(ВариантыОтветовСсылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>): ЧитаемоеСоответствие<ВариантыОтветов.Ссылка, ДанныеВарианта>
    
    знч ДанныеВариантовОтветов: Соответствие<ВариантыОтветов.Ссылка, ДанныеВарианта>
    
    если ВариантыОтветовСсылки.Пусто()
        возврат ДанныеВариантовОтветов
    ;
    
    знч Запрос = Запрос{
        Выбрать
            Ссылка,
            НаборВариантовОтвета,
            Наименование
        Породить ДанныеВарианта
        Из
            ВариантыОтветов
        Где
            Ссылка В (%ВариантыОтветовСсылки)
    }
    исп Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        ДанныеВариантовОтветов.Вставить(
            СтрокаРезультата.Ссылка,
            СтрокаРезультата
        )        
    ;
    
    возврат ДанныеВариантовОтветов   
;

метод ДанныеВариантовОтветовВJson_V2_0(ДанныеВарианта: ДанныеВарианта, Сервисы: ВебApiСервер.СервисыУпаковкиJson): ВариантОтвета_2_0
    
    знч НаборВариантовОтветов = ДанныеВарианта.НаборВариантовОтвета
    
    знч СериализованныйВариантОтвета = новый ВариантОтвета_2_0(
        Сервисы.ПолучитьИдентификатор(ДанныеВарианта.Ссылка),
        ДанныеВарианта.Наименование
    )
    если НаборВариантовОтветов != Неопределено     
        СериализованныйВариантОтвета.НаборВариантовОтвета = Сервисы.ПолучитьИдентификатор(НаборВариантовОтветов)
    ;
    
    возврат СериализованныйВариантОтвета
;

@ВПроекте
метод ВнешняяСсылка(Идентификатор: Строка): ВебApiСервер.ВнешняяСсылка
    возврат новый ВебApiСервер.ВнешняяСсылка(Идентификатор, (Ууид) -> ВариантыОтветов.ПолучитьСсылку(Ууид))
;

@ВПодсистеме
метод ТипОбъектаJson(): Строка
    возврат "answerVariant"
;