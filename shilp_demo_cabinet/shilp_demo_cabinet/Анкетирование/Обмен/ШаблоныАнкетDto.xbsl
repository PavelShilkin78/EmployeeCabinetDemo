импорт ВебApi
импорт ФизическиеЛица

@ВПроекте
метод ТипОбъектаJson(): Строка
    возврат "questionnaireTemplates"
;

@ВПроекте
структура ШаблонАнкеты_2_0
    @JsonСвойство("ID")
    обз знч Ид: Строка
    @JsonСвойство("name")
    обз знч Наименование: Строка
    @JsonСвойство("description")
    пер Описание: Строка?
    @JsonСвойство("author")
    пер Автор: Строка?
    @JsonСвойство("dateCreate")
    пер МоментСоздания: Момент?
    @JsonСвойство("dateUpdate")
    пер МоментРедактирования: Момент?
    @JsonСвойство("predefined")
    пер Предопределенный: Булево?
    @JsonСвойство("startPage")
    пер Приветствие: Булево?
    @JsonСвойство("startPageHeader")
    пер ЗаголовокПриветствия: Строка?
    @JsonСвойство("startPageText")
    пер ТекстПриветствия: Строка?
    @JsonСвойство("startPageImage")
    пер КартинкаПриветствия: Строка?
    @JsonСвойство("sectionsCount")
    пер КоличествоРазделов: Число?
    @JsonСвойство("endPage")
    пер Завершение: Булево?
    @JsonСвойство("endPageText")
    пер ТекстЗавершения: Строка?
    @JsonСвойство("endPageHeader")
    пер ЗаголовокЗавершения: Строка?
    @JsonСвойство("endPageImage")
    пер КартинкаЗавершения: Строка?
    @JsonСвойство("fillTimeInMinutes")
    пер ВремяЗаполненияВМинутах: Число?
    @JsonСвойство("questionsCount")
    пер КоличествоВопросов: Число?
    @JsonСвойство("saveQuestionsInSubsystem")
    пер СохранятьВопросыВПодсистему: Булево?
    @JsonСвойство("questionnaireReflectWay")
    пер СпособОтображенияАнкеты: СпособыОтображенияАнкетыJson?
    @JsonСвойство("dataAreaID")
    пер ИдОбластиДанных: Строка?
;

@ВПроекте
структура ШаблонАнкеты_3_0
    @JsonСвойство("ID")
    обз знч Ид: Строка
    @JsonСвойство("name")
    обз знч Наименование: Строка
    @JsonСвойство("description")
    пер Описание: Строка?
    @JsonСвойство("author")
    пер Автор: Строка?
    @JsonСвойство("dateCreate")
    пер МоментСоздания: Момент?
    @JsonСвойство("dateUpdate")
    пер МоментРедактирования: Момент?
    @JsonСвойство("predefined")
    пер Предопределенный: Булево?
    @JsonСвойство("startPage")
    пер Приветствие: Булево?
    @JsonСвойство("startPageHeader")
    пер ЗаголовокПриветствия: Строка?
    @JsonСвойство("startPageText")
    пер ТекстПриветствия: Строка?
    @JsonСвойство("startPageImage")
    пер КартинкаПриветствия: Строка?
    @JsonСвойство("sectionsCount")
    пер КоличествоРазделов: Число?
    @JsonСвойство("endPage")
    пер Завершение: Булево?
    @JsonСвойство("endPageText")
    пер ТекстЗавершения: Строка?
    @JsonСвойство("endPageHeader")
    пер ЗаголовокЗавершения: Строка?
    @JsonСвойство("endPageImage")
    пер КартинкаЗавершения: Строка?
    @JsonСвойство("fillTimeInMinutes")
    пер ВремяЗаполненияВМинутах: Число?
    @JsonСвойство("questionsCount")
    пер КоличествоВопросов: Число?
    @JsonСвойство("saveQuestionsInSubsystem")
    пер СохранятьВопросыВПодсистему: Булево?
    @JsonСвойство("questionnaireReflectWay")
    пер СпособОтображенияАнкеты: СпособыОтображенияАнкетыJson?
    @JsonСвойство("dataAreaID")
    пер ИдОбластиДанных: Строка?
    @JsonСвойство("repeatedResponsesProhibited")
    пер ЗапретПовторныхОтветов: Булево?
;

@ВПодсистеме
метод ГруппаИзмененийВJson(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?): ЧитаемоеСоответствие<Строка, Массив<Объект?>>
    возврат {"questionnaireTemplates": ДанныеШаблоновВJson(Ссылки, Сервисы, ВерсияФорматаОбмена)}
;

метод ДанныеШаблоновВJson(Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?): Массив<Объект?>
    
    если ВерсияФорматаОбмена == Неопределено или ВерсияФорматаОбмена < Версия{2.0}
        выбросить новый ИсключениеВыполнения("Неверный формат")
    ;
    
    знч Данные: Массив<Объект?>
    для КлючИЗначение из ДанныеШаблонов(Ссылки)
        если ВерсияФорматаОбмена >= Версия{3.0}
            Данные.Добавить(ДанныеШаблонаВВерсиюФормата_3_0(КлючИЗначение.Значение, Сервисы))
        иначе
            Данные.Добавить(ДанныеШаблонаВВерсиюФормата_2_0(КлючИЗначение.Значение, Сервисы))
        ;
    ;
    возврат Данные
;

метод ДанныеШаблонов(ШаблоныСсылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>): ЧитаемоеСоответствие<ШаблоныАнкет.Ссылка, ДанныеШаблона>
    
    знч ДанныеШаблонов: Соответствие<ШаблоныАнкет.Ссылка, ДанныеШаблона> 
    
    если ШаблоныСсылки.Пусто()
        возврат ДанныеШаблонов
    ;
    
    знч Запрос = Запрос{
        Выбрать
            Ссылка,
            Наименование,
            Описание,
            Автор,
            МоментСоздания,
            МоментРедактирования,
            Предопределенный,
            Приветствие,
            ЗаголовокПриветствия,
            ТекстПриветствия,
            КартинкаПриветствия,
            КоличествоРазделов,
            Завершение,
            ТекстЗавершения,
            ЗаголовокЗавершения,
            КартинкаЗавершения,
            ВремяЗаполненияВМинутах,
            КоличествоВопросов,
            СохранятьВопросыВПодсистему,
            СпособОтображенияАнкеты,
            ИдОбластиДанных,
            ЗапретПовторныхОтветов
        Породить ДанныеШаблона
        Из
            ШаблоныАнкет
        Где
            Ссылка В (%ШаблоныСсылки)
    }
    исп Результат = Запрос.Выполнить()
    
    для СтрокаРезультата из Результат
        ДанныеШаблонов.Вставить(
            СтрокаРезультата.Ссылка,
            СтрокаРезультата
        )        
    ;
    
    возврат ДанныеШаблонов   
;

метод ДанныеШаблонаВВерсиюФормата_3_0(ДанныеШаблона: ДанныеШаблона, Сервисы: ВебApiСервер.СервисыУпаковкиJson): ШаблонАнкеты_3_0
    
    знч СериализованныйШаблон = новый ШаблонАнкеты_3_0(
        ДанныеШаблона.Ссылка.Ид.ВСтроку(),
        ДанныеШаблона.Наименование
    )
    
    СериализованныйШаблон.Описание = ДанныеШаблона.Описание
    если ДанныеШаблона.Автор != Неопределено
        СериализованныйШаблон.Автор =  Сервисы.ПолучитьИдентификатор(ДанныеШаблона.Автор)
    ;
    СериализованныйШаблон.МоментСоздания = ДанныеШаблона.МоментСоздания
    СериализованныйШаблон.МоментРедактирования = ДанныеШаблона.МоментРедактирования
    СериализованныйШаблон.Предопределенный = ДанныеШаблона.Предопределенный
    СериализованныйШаблон.Приветствие = ДанныеШаблона.Приветствие
    СериализованныйШаблон.ЗаголовокПриветствия = ДанныеШаблона.ЗаголовокПриветствия
    СериализованныйШаблон.ТекстПриветствия = ДанныеШаблона.ТекстПриветствия
    если ДанныеШаблона.КартинкаПриветствия != Неопределено
        пер Файл: ДвоичныйОбъект = (ДанныеШаблона.КартинкаПриветствия).Загрузить()
        СериализованныйШаблон.КартинкаПриветствия = Кодировки.Base64.КодироватьВСтроку(Файл.ПолучитьБайты(), ВидBase64.Base64)
    ;
    
    СериализованныйШаблон.КоличествоРазделов =  ДанныеШаблона.КоличествоРазделов
    СериализованныйШаблон.Завершение =  ДанныеШаблона.Завершение
    СериализованныйШаблон.ТекстЗавершения =  ДанныеШаблона.ТекстЗавершения
    СериализованныйШаблон.ЗаголовокЗавершения = ДанныеШаблона.ЗаголовокЗавершения
    если ДанныеШаблона.КартинкаЗавершения != Неопределено
        пер Файл: ДвоичныйОбъект = (ДанныеШаблона.КартинкаЗавершения).Загрузить()
        СериализованныйШаблон.КартинкаЗавершения = Кодировки.Base64.КодироватьВСтроку(Файл.ПолучитьБайты(), ВидBase64.Base64)
    ;
    СериализованныйШаблон.ВремяЗаполненияВМинутах = ДанныеШаблона.ВремяЗаполненияВМинутах
    СериализованныйШаблон.КоличествоВопросов = ДанныеШаблона.КоличествоВопросов
    СериализованныйШаблон.СохранятьВопросыВПодсистему = ДанныеШаблона.СохранятьВопросыВПодсистему
    СериализованныйШаблон.СпособОтображенияАнкеты =  СпособыОтображенияАнкетыВJson(ДанныеШаблона.СпособОтображенияАнкеты)
    если ДанныеШаблона.ИдОбластиДанных != Неопределено
        СериализованныйШаблон.ИдОбластиДанных = ДанныеШаблона.ИдОбластиДанных.ВСтроку()
    ;
    СериализованныйШаблон.ЗапретПовторныхОтветов = ДанныеШаблона.ЗапретПовторныхОтветов

    возврат СериализованныйШаблон
;

метод ДанныеШаблонаВВерсиюФормата_2_0(ДанныеШаблона: ДанныеШаблона, Сервисы: ВебApiСервер.СервисыУпаковкиJson): ШаблонАнкеты_2_0
    знч ДанныеШаблонаВерсииФормата_3_0 = ДанныеШаблонаВВерсиюФормата_3_0(ДанныеШаблона, Сервисы)
    знч СериализованныйШаблон = новый ШаблонАнкеты_2_0(
        ДанныеШаблонаВерсииФормата_3_0.Ид,
        ДанныеШаблонаВерсииФормата_3_0.Наименование
    )
    
    СериализованныйШаблон.Описание = ДанныеШаблонаВерсииФормата_3_0.Описание
    СериализованныйШаблон.Автор =  ДанныеШаблонаВерсииФормата_3_0.Автор
    СериализованныйШаблон.МоментСоздания = ДанныеШаблонаВерсииФормата_3_0.МоментСоздания
    СериализованныйШаблон.МоментРедактирования = ДанныеШаблонаВерсииФормата_3_0.МоментРедактирования
    СериализованныйШаблон.Предопределенный = ДанныеШаблонаВерсииФормата_3_0.Предопределенный
    СериализованныйШаблон.Приветствие = ДанныеШаблонаВерсииФормата_3_0.Приветствие
    СериализованныйШаблон.ЗаголовокПриветствия = ДанныеШаблонаВерсииФормата_3_0.ЗаголовокПриветствия
    СериализованныйШаблон.ТекстПриветствия = ДанныеШаблонаВерсииФормата_3_0.ТекстПриветствия
    СериализованныйШаблон.КартинкаПриветствия = ДанныеШаблонаВерсииФормата_3_0.КартинкаПриветствия
    СериализованныйШаблон.КоличествоРазделов =  ДанныеШаблонаВерсииФормата_3_0.КоличествоРазделов
    СериализованныйШаблон.Завершение =  ДанныеШаблонаВерсииФормата_3_0.Завершение
    СериализованныйШаблон.ТекстЗавершения =  ДанныеШаблонаВерсииФормата_3_0.ТекстЗавершения
    СериализованныйШаблон.ЗаголовокЗавершения = ДанныеШаблонаВерсииФормата_3_0.ЗаголовокЗавершения
    СериализованныйШаблон.КартинкаЗавершения = ДанныеШаблонаВерсииФормата_3_0.КартинкаЗавершения
    СериализованныйШаблон.ВремяЗаполненияВМинутах = ДанныеШаблонаВерсииФормата_3_0.ВремяЗаполненияВМинутах
    СериализованныйШаблон.КоличествоВопросов = ДанныеШаблонаВерсииФормата_3_0.КоличествоВопросов
    СериализованныйШаблон.СохранятьВопросыВПодсистему = ДанныеШаблонаВерсииФормата_3_0.СохранятьВопросыВПодсистему
    СериализованныйШаблон.СпособОтображенияАнкеты =  ДанныеШаблонаВерсииФормата_3_0.СпособОтображенияАнкеты
    СериализованныйШаблон.ИдОбластиДанных = ДанныеШаблонаВерсииФормата_3_0.ИдОбластиДанных

    возврат СериализованныйШаблон
;

перечисление СпособыОтображенияАнкетыJson
    questionsInSections,
    allQuestionsInOnePage,
    oneQuestionOnePage        
;

конст СООТВЕТСТВИЕ_СПОСОБЫ_ОТОБРАЖЕНИЯ_АНКЕТЫ_JSON = {
    СпособыОтображенияАнкетыJson.questionsInSections: СпособыОтображенияАнкеты.ВопросыПоРазделам,
    СпособыОтображенияАнкетыJson.allQuestionsInOnePage: СпособыОтображенияАнкеты.ВопросыНаОднойСтранице,
    СпособыОтображенияАнкетыJson.oneQuestionOnePage: СпособыОтображенияАнкеты.ОдинВопросНаСтраницу     
}

метод СпособыОтображенияАнкетыВJson(СпособОтображенияАнкеты: СпособыОтображенияАнкеты): СпособыОтображенияАнкетыJson
    для КлючИЗначение из СООТВЕТСТВИЕ_СПОСОБЫ_ОТОБРАЖЕНИЯ_АНКЕТЫ_JSON
        если КлючИЗначение.Значение == СпособОтображенияАнкеты
            возврат КлючИЗначение.Ключ
        ;     
    ;     
;

метод СпособыОтображенияАнкетыИзJson(СпособОтображенияАнкетыJson: СпособыОтображенияАнкетыJson): СпособыОтображенияАнкеты
    возврат СООТВЕТСТВИЕ_СПОСОБЫ_ОТОБРАЖЕНИЯ_АНКЕТЫ_JSON[СпособОтображенияАнкетыJson]    
;

@ВПодсистеме
метод ТипДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    
    если ВерсияФорматаОбмена == Неопределено или ВерсияФорматаОбмена < Версия{2.0}
        выбросить новый ИсключениеВыполнения("Неверный формат")
    ;
    
    если ВерсияФорматаОбмена >= Версия{3.0}
        возврат Тип<ШаблонАнкеты_3_0>
    иначе если ВерсияФорматаОбмена >= Версия{2.0}
        возврат Тип<ШаблонАнкеты_2_0>
    ;
;

@ВПодсистеме
метод ЗагрузитьОбъектИзJson(СериализованныйШаблон: ШаблонАнкеты_2_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)

    исп Транзакции.Начать()
    
    знч ШаблонАнкеты = Сервисы.ПрочитатьОбъект(СериализованныйШаблон.Ид, &ШаблоныАнкет.Объект.новый(Ууид), Тип<ШаблоныАнкет.Ссылка>) как ШаблоныАнкет.Объект 
    ШаблонАнкеты.Наименование = СериализованныйШаблон.Наименование
    ШаблонАнкеты.Описание = СериализованныйШаблон.Описание ?? ""
    если СериализованныйШаблон.Автор != Неопределено
        ШаблонАнкеты.Автор = Сервисы.ПолучитьСсылку(ФизическиеЛица.ВнешняяСсылка(СериализованныйШаблон.Автор)) как ФизическиеЛица.Ссылка
    ;
    ШаблонАнкеты.МоментСоздания = СериализованныйШаблон.МоментСоздания
    ШаблонАнкеты.МоментРедактирования = СериализованныйШаблон.МоментРедактирования
    ШаблонАнкеты.Предопределенный = СериализованныйШаблон.Предопределенный ?? Ложь
    ШаблонАнкеты.Приветствие = СериализованныйШаблон.Приветствие ?? Ложь
    ШаблонАнкеты.ЗаголовокПриветствия = СериализованныйШаблон.ЗаголовокПриветствия ?? ""
    ШаблонАнкеты.ТекстПриветствия = СериализованныйШаблон.ТекстПриветствия ?? ""
    если СериализованныйШаблон.КартинкаПриветствия != Неопределено
        ШаблонАнкеты.КартинкаПриветствия = ОбъектноеХранилище.ЗагрузитьИзБайт(Кодировки.Base64.Декодировать(СериализованныйШаблон.КартинкаПриветствия)).Ссылка
    ;
    ШаблонАнкеты.КоличествоРазделов = СериализованныйШаблон.КоличествоРазделов ?? 0
    ШаблонАнкеты.Завершение = СериализованныйШаблон.Завершение ?? Ложь
    ШаблонАнкеты.ТекстЗавершения = СериализованныйШаблон.ТекстЗавершения ?? ""
    ШаблонАнкеты.ЗаголовокЗавершения = СериализованныйШаблон.ЗаголовокЗавершения ?? ""
    если СериализованныйШаблон.КартинкаЗавершения != Неопределено
        ШаблонАнкеты.КартинкаЗавершения = ОбъектноеХранилище.ЗагрузитьИзБайт(Кодировки.Base64.Декодировать(СериализованныйШаблон.КартинкаЗавершения)).Ссылка
    ; 
    ШаблонАнкеты.ВремяЗаполненияВМинутах = СериализованныйШаблон.ВремяЗаполненияВМинутах ?? 0
    ШаблонАнкеты.КоличествоВопросов = СериализованныйШаблон.КоличествоВопросов ?? 0
    ШаблонАнкеты.СохранятьВопросыВПодсистему = СериализованныйШаблон.СохранятьВопросыВПодсистему ?? Ложь
    если СериализованныйШаблон.СпособОтображенияАнкеты != Неопределено
        ШаблонАнкеты.СпособОтображенияАнкеты = СпособыОтображенияАнкетыИзJson(СериализованныйШаблон.СпособОтображенияАнкеты)
    иначе
        ШаблонАнкеты.СпособОтображенияАнкеты = СпособыОтображенияАнкеты.ВопросыПоРазделам
    ;
    если СериализованныйШаблон.ИдОбластиДанных == Неопределено
        ШаблонАнкеты.ИдОбластиДанных = новый Ууид()
    иначе   
        ШаблонАнкеты.ИдОбластиДанных = новый Ууид(СериализованныйШаблон.ИдОбластиДанных)
    ;
    
    Сервисы.ЗаписатьОбъект(новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(ШаблонАнкеты, СериализованныйШаблон.Ид), Сервисы.ИнструментыМенеджераОбъекта)
;

@ВПодсистеме
метод ЗагрузитьОбъектИзJson(СериализованныйШаблон: ШаблонАнкеты_3_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)

    исп Транзакции.Начать()
    
    знч ШаблонАнкеты = Сервисы.ПрочитатьОбъект(СериализованныйШаблон.Ид, &ШаблоныАнкет.Объект.новый(Ууид), Тип<ШаблоныАнкет.Ссылка>) как ШаблоныАнкет.Объект 
    ШаблонАнкеты.Наименование = СериализованныйШаблон.Наименование
    ШаблонАнкеты.Описание = СериализованныйШаблон.Описание ?? ""
    если СериализованныйШаблон.Автор != Неопределено
        ШаблонАнкеты.Автор = Сервисы.ПолучитьСсылку(ФизическиеЛица.ВнешняяСсылка(СериализованныйШаблон.Автор)) как ФизическиеЛица.Ссылка
    ;
    ШаблонАнкеты.МоментСоздания = СериализованныйШаблон.МоментСоздания
    ШаблонАнкеты.МоментРедактирования = СериализованныйШаблон.МоментРедактирования
    ШаблонАнкеты.Предопределенный = СериализованныйШаблон.Предопределенный ?? Ложь
    ШаблонАнкеты.Приветствие = СериализованныйШаблон.Приветствие ?? Ложь
    ШаблонАнкеты.ЗаголовокПриветствия = СериализованныйШаблон.ЗаголовокПриветствия ?? ""
    ШаблонАнкеты.ТекстПриветствия = СериализованныйШаблон.ТекстПриветствия ?? ""
    если СериализованныйШаблон.КартинкаПриветствия != Неопределено
        ШаблонАнкеты.КартинкаПриветствия = ОбъектноеХранилище.ЗагрузитьИзБайт(Кодировки.Base64.Декодировать(СериализованныйШаблон.КартинкаПриветствия)).Ссылка
    ;
    ШаблонАнкеты.КоличествоРазделов = СериализованныйШаблон.КоличествоРазделов ?? 0
    ШаблонАнкеты.Завершение = СериализованныйШаблон.Завершение ?? Ложь
    ШаблонАнкеты.ТекстЗавершения = СериализованныйШаблон.ТекстЗавершения ?? ""
    ШаблонАнкеты.ЗаголовокЗавершения = СериализованныйШаблон.ЗаголовокЗавершения ?? ""
    если СериализованныйШаблон.КартинкаЗавершения != Неопределено
        ШаблонАнкеты.КартинкаЗавершения = ОбъектноеХранилище.ЗагрузитьИзБайт(Кодировки.Base64.Декодировать(СериализованныйШаблон.КартинкаЗавершения)).Ссылка
    ; 
    ШаблонАнкеты.ВремяЗаполненияВМинутах = СериализованныйШаблон.ВремяЗаполненияВМинутах ?? 0
    ШаблонАнкеты.КоличествоВопросов = СериализованныйШаблон.КоличествоВопросов ?? 0
    ШаблонАнкеты.СохранятьВопросыВПодсистему = СериализованныйШаблон.СохранятьВопросыВПодсистему ?? Ложь
    если СериализованныйШаблон.СпособОтображенияАнкеты != Неопределено
        ШаблонАнкеты.СпособОтображенияАнкеты = СпособыОтображенияАнкетыИзJson(СериализованныйШаблон.СпособОтображенияАнкеты)
    иначе
        ШаблонАнкеты.СпособОтображенияАнкеты = СпособыОтображенияАнкеты.ВопросыПоРазделам
    ;
    если СериализованныйШаблон.ИдОбластиДанных == Неопределено
        ШаблонАнкеты.ИдОбластиДанных = новый Ууид()
    иначе   
        ШаблонАнкеты.ИдОбластиДанных = новый Ууид(СериализованныйШаблон.ИдОбластиДанных)
    ;
    
    ШаблонАнкеты.ЗапретПовторныхОтветов = СериализованныйШаблон.ЗапретПовторныхОтветов ?? Ложь

    Сервисы.ЗаписатьОбъект(новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(ШаблонАнкеты, СериализованныйШаблон.Ид), Сервисы.ИнструментыМенеджераОбъекта)
;

@ВПроекте
метод ВнешняяСсылка(Идентификатор: Строка): ВебApiСервер.ВнешняяСсылка
    возврат новый ВебApiСервер.ВнешняяСсылка(Идентификатор, (Ууид) -> ШаблоныАнкет.ПолучитьСсылку(Ууид))
;