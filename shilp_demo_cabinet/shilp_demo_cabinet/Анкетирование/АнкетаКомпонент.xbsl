импорт ИнтерфейсныеКомпонентыСтандартные

@ВПроекте
@Реализация
метод Инициализировать()
    
    если Инициализирован
        возврат
    ;
    
    ТекущийРаздел= ДанныеШаблона.ТекущийРаздел
    если ДанныеАнкеты.Размер() > 0
        ТекущийВопрос = ДанныеАнкеты[0]
    ;
    ОтображатьПриветствие = ДанныеШаблона.ОтображатьПриветствие и ТекущийРаздел.Приоритет == 1 и не ОтображатьЗавершение
    СкомпоноватьВопросыПоСпособуОтображения()
    Инициализирован = Истина
;

@ВПроекте
метод ПодчиненныеКомпоненты(): АнкетаКомпонент.Компоненты
    возврат Компоненты
;

метод СкомпоноватьВопросыПоСпособуОтображения()
    
    Компоненты.ВопросыАнкеты.Содержимое.Очистить()
    
    выбор ДанныеШаблона.СпособОтображенияАнкеты
    когда ВопросыПоРазделам
        НаполнитьСодержимоеРаздела(ТекущийРаздел, Истина)
    когда ВопросыНаОднойСтранице
        для Раздел из ДанныеШаблона.Разделы
            НаполнитьСодержимоеРаздела(Раздел, Ложь)    
        ;
    когда ОдинВопросНаСтраницу
        НаполнитьСодержимоеРаздела(ТекущийВопрос)
    ;
;

метод НаполнитьСодержимоеРаздела(Раздел: ДанныеРаздела, ПрогрессЗаполнения: Булево)
    ВопросыТекущегоРаздела.Очистить()
    для ЭлементКонструктора из ДанныеАнкеты
        если ЭлементКонструктора.ИдРаздела == Раздел.ИдРаздела
            ВопросыТекущегоРаздела.Добавить(ЭлементКонструктора)
        ;
    ;
    пер ОтображатьРаздел = Ложь
    если ДанныеШаблона.Разделы != Неопределено
        ОтображатьРаздел = ДанныеШаблона.Разделы.Размер() > 1
    ;
    ВопросыТекущегоРаздела = ВопросыТекущегоРаздела.СортироватьПо(ВопросТекущегоРаздела -> ВопросТекущегоРаздела.НомерВопроса)
    пер СодержимоеРаздела = новый СодержимоеРазделов(ОтображатьРаздел = ОтображатьРаздел, 
                                                    ТекущийРаздел = Раздел, 
                                                    ДанныеШаблона = ДанныеШаблона, 
                                                    ВопросыТекущегоРаздела = ВопросыТекущегоРаздела,
                                                    ОтображатьПрогресс = ПрогрессЗаполнения и ДанныеШаблона.Разделы.Размер() > 1)
    Компоненты.ВопросыАнкеты.Содержимое.Добавить(СодержимоеРаздела)
    СодержимоеРаздела.Инициализировать()
;

метод НаполнитьСодержимоеРаздела(ТекущийВопрос: ДанныеЭлементаКонструктора)
    ВопросыТекущегоРаздела.Очистить()
    ВопросыТекущегоРаздела.Добавить(ТекущийВопрос)
    пер СодержимоеРаздела = новый СодержимоеРазделов(ТекущийРаздел = ТекущийРаздел,
        ДанныеШаблона = ДанныеШаблона, 
        ВопросыТекущегоРаздела = ВопросыТекущегоРаздела, 
        ОтображатьПрогресс = Истина,
        НомерВопроса = ТекущийВопрос.НомерВопроса,
        КоличествоВопросов = ДанныеАнкеты.Размер())
    Компоненты.ВопросыАнкеты.Содержимое.Добавить(СодержимоеРаздела)
    СодержимоеРаздела.Инициализировать()
;

метод КоманднаяПанельКнопкаЗаполнюПозжеВидимость(): Булево
    если не СохранениеЧерновика
        возврат Ложь
    ;
    
    если ОтображатьПриветствие или ОтображатьЗавершение
        возврат Ложь
    ;
    
    если не ПроверятьЗаполнение
        возврат Ложь    
    ;
    
    возврат Истина
;

метод КоманднаяПанельКнопкаНазадВидимость(): Булево
    
    если ДанныеШаблона.ЗапретПовторныхОтветов
        возврат Ложь
    ;

    если ОтображатьЗавершение
        возврат Ложь
    ;
    
    возврат ТекущийРаздел.Приоритет > 1 или ДанныеШаблона.ОтображатьПриветствие != ОтображатьПриветствие   
;

метод КоманднаяПанельКнопкаВпередВидимость(): Булево
    если не СкрыватьКнопкуЗакрытия
        возврат Истина
    ;
    
    если ОтображатьЗавершение
        или (ДанныеШаблона.СпособОтображенияАнкеты == СпособыОтображенияАнкеты.ВопросыПоРазделам  и ТекущийРаздел == ДанныеШаблона.Разделы[ДанныеШаблона.Разделы.Размер()-1])
        или ДанныеШаблона.СпособОтображенияАнкеты == СпособыОтображенияАнкеты.ВопросыНаОднойСтранице
        или ТекущийВопрос == ДанныеАнкеты.Последний()
        
        возврат Ложь
    ;
;


метод КоманднаяПанельКнопкаВпередЗаголовок(): Строка
    
    если не Инициализирован
        возврат ""
    ;
    
    если ОтображатьПриветствие
        возврат ПроверятьЗаполнение ? "Начать" : "Далее"
    ;
    
    если ОтображатьЗавершение
        возврат "Закрыть"
    ;
    
    если (ДанныеШаблона.СпособОтображенияАнкеты == СпособыОтображенияАнкеты.ВопросыПоРазделам  и ТекущийРаздел == ДанныеШаблона.Разделы[ДанныеШаблона.Разделы.Размер()-1]) или 
        ДанныеШаблона.СпособОтображенияАнкеты == СпособыОтображенияАнкеты.ВопросыНаОднойСтранице или 
        ТекущийВопрос == ДанныеАнкеты.Последний() и не ДанныеШаблона.ОтображатьЗавершение
        возврат ЗаголовокКнопкиСохранения
    ;
    
    возврат "Далее"
    
;

метод КоманднаяПанельНажатиеНазад(Источник: КоманднаяПанельАнкеты, Событие: СобытиеКомпонента)
    
    если ДанныеШаблона.СпособОтображенияАнкеты == СпособыОтображенияАнкеты.ВопросыПоРазделам
        если ТекущийРаздел.Приоритет > 1
            ТекущийРаздел = ДанныеШаблона.Разделы[ТекущийРаздел.Приоритет-2]
            СкомпоноватьВопросыПоСпособуОтображения()
        иначе если ТекущийРаздел.Приоритет == 1 и ОтображатьПриветствие != ДанныеШаблона.ОтображатьПриветствие
            ОтобразитьПриветствие()
        ;    
    иначе если ДанныеШаблона.СпособОтображенияАнкеты == СпособыОтображенияАнкеты.ВопросыНаОднойСтранице
        если ОтображатьПриветствие != ДанныеШаблона.ОтображатьПриветствие
            ОтобразитьПриветствие() 
        ;       
    иначе если ДанныеШаблона.СпособОтображенияАнкеты == СпособыОтображенияАнкеты.ОдинВопросНаСтраницу
        если ТекущийВопрос == ДанныеАнкеты.Первый() и ОтображатьПриветствие != ДанныеШаблона.ОтображатьПриветствие
            ОтобразитьПриветствие()
        иначе
            ТекущийВопрос = ДанныеАнкеты[ТекущийВопрос.НомерВопроса-2]
            ТекущийРаздел = Анкетирование.НайтиРаздел(ТекущийВопрос.ИдРаздела, ДанныеШаблона.Разделы)
            СкомпоноватьВопросыПоСпособуОтображения()            
        ;
    ;
    
;

метод ОтобразитьПриветствие()
    ОтображатьПриветствие = ДанныеШаблона.ОтображатьПриветствие
    ОтображатьЗавершение = Ложь
;

метод КоманднаяПанельНажатиеВперед(Источник: КоманднаяПанельАнкеты, Событие: СобытиеКомпонента)
    
    если ОтображатьПриветствие
        ОтображатьПриветствие = Ложь
        возврат
    ;
        
    если ОтображатьЗавершение
        ЗакрытиеАнкеты(новый СобытиеКомпонента())
        возврат
    ;

    если ДанныеШаблона.СпособОтображенияАнкеты == СпособыОтображенияАнкеты.ВопросыНаОднойСтранице или
        (ДанныеШаблона.СпособОтображенияАнкеты == СпособыОтображенияАнкеты.ВопросыПоРазделам и ТекущийРаздел == ДанныеШаблона.Разделы[ДанныеШаблона.Разделы.Размер()-1]) или
        (ДанныеШаблона.СпособОтображенияАнкеты == СпособыОтображенияАнкеты.ОдинВопросНаСтраницу и ТекущийВопрос == ДанныеАнкеты.Последний())
        
        если ПроверятьЗаполнение
            если не ПроверкаЗаполнения()
                возврат
            ;
            СохранитьАнкету(СтатусыАнкет.Заполнена)
        ;
        
        если ДанныеШаблона.ОтображатьЗавершение
            ОтображатьЗавершение = Истина
        иначе
            ЗакрытиеАнкеты(новый СобытиеКомпонента())
        ;
    ;
    
    ПереключитьСтраницу() 
         
;

метод КоманднаяПанельНажатиеЗаполнюПозже(Источник: КоманднаяПанельАнкеты, Событие: СобытиеКомпонента)
    СохранитьАнкету(СтатусыАнкет.Заполняется)
    СтандартныеФормы.ПоказатьУведомление("Сохранено", "Данные анкеты сохранены", ОценкаИнформации.Положительная)  
    ЗакрытиеАнкеты(новый СобытиеКомпонента())    
;

метод ПереключитьСтраницу()
    если не ПроверкаЗаполнения()
        возврат
    ;
    
    если ДанныеШаблона.СпособОтображенияАнкеты == СпособыОтображенияАнкеты.ОдинВопросНаСтраницу
        если не ТекущийВопрос == ДанныеАнкеты.Последний()
            ТекущийВопрос = ДанныеАнкеты[ТекущийВопрос.НомерВопроса]
            ТекущийРаздел = Анкетирование.НайтиРаздел(ТекущийВопрос.ИдРаздела, ДанныеШаблона.Разделы)
            СкомпоноватьВопросыПоСпособуОтображения()
        ;
    иначе
        если ТекущийРаздел.Приоритет < ДанныеШаблона.Разделы.Размер()
            ТекущийРаздел = ДанныеШаблона.Разделы[ТекущийРаздел.Приоритет]
            СкомпоноватьВопросыПоСпособуОтображения()
        ;  
    ;
       
;

метод ПроверкаЗаполнения(): Булево
    
    пер Результат = Истина
    
    если не ПроверятьЗаполнение
        возврат Результат
    ;
    
    пер ПроверяемыеВопросы = ДанныеШаблона.СпособОтображенияАнкеты == СпособыОтображенияАнкеты.ВопросыНаОднойСтранице ? ДанныеАнкеты : ВопросыТекущегоРаздела
    
    для Вопрос из ПроверяемыеВопросы
        
        если ВсеОтветыОбязательны или Вопрос.ДанныеВопроса.ОтветОбязателен
            если не Анкетирование.ЗаполненОтвет(Вопрос)
                ОшибкаЗаполненияВопроса.Оповестить(Вопрос.ИдЭлемента)
                Результат = Ложь
            ;
        ;  
    ;
    возврат Результат
;

метод ЗаполненВариант(ДанныеВопроса: ДанныеВопроса): Булево
    пер ЗаполненВариант = Ложь
    для Вариант из ДанныеВопроса.ВариантыОтвета
        если Вариант.ЗначениеВарианта == Истина
            ЗаполненВариант = Истина
            прервать
        ;
    ;
    
    возврат ЗаполненВариант
;

метод СохранитьАнкету(Статус : СтатусыАнкет)
    СохранениеАнкеты(новый СобытиеСДанными<СтатусыАнкет>(Статус))
;