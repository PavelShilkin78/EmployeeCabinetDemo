@ВПодсистеме
метод Инициализировать()
    пер КоллекцияДанных = КоллекцияИсточникаСодержимоеАнкеты()
    КоллекцияДанных.Очистить()
    КоллекцияДанных.ДобавитьВсе(ВопросыТекущегоРаздела)   
;

метод ПрогрессЗаполненияЗначение(): Строка
    
    если ДанныеШаблона.СпособОтображенияАнкеты == СпособыОтображенияАнкеты.ОдинВопросНаСтраницу
        возврат "Вопрос " + НомерВопроса + " из " + КоличествоВопросов
    иначе если ДанныеШаблона.СпособОтображенияАнкеты == СпособыОтображенияАнкеты.ВопросыПоРазделам
        возврат "Страница " + ТекущийРаздел.Приоритет + " из " + ДанныеШаблона.Разделы.Размер()
    иначе
        возврат ""
    ;
;

метод ПрогрессЗаполненияВидимость(): Булево
    
    если ДанныеШаблона.СпособОтображенияАнкеты == СпособыОтображенияАнкеты.ВопросыНаОднойСтранице
        возврат Ложь
    ;
    
    возврат ДанныеШаблона.Разделы.Размер() > 1
;

метод СодержимоеАнкетыПослеСозданияСтроки(Источник: Список<ИсточникДанныхМассив<ДанныеЭлементаКонструктора>>, Событие: СобытиеСДанными<СтрокаСписка<ДанныеЭлементаКонструктора>>)
    пер Данные = Событие.Данные как ВопросАнкетыСтрока
    Данные.ИдТекущегоРаздела = ТекущийРаздел.ИдРаздела    
;

метод КоллекцияИсточникаСодержимоеАнкеты(): Массив<ДанныеЭлементаКонструктора>
    возврат Компоненты.ВопросыРаздела.Источник.Данные
;