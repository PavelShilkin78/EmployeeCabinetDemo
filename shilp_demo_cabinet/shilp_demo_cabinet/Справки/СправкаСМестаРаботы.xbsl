импорт ОбщиеСтандартные
импорт ФизическиеЛица
импорт Компания
импорт ВебApi
импорт КонтрольДоступа
импорт ОбменДанными
импорт УниверсальныеМеханизмы

//Область РазрешенияДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): Массив<РазрешениеДоступа>
    возврат [КонтрольДоступа.ЧтениеАутентифицированным(этот),
            КонтрольДоступа.ПолныйДоступИнформационнойСистеме(этот)]
;

@Обработчик
метод ВычислитьРазрешенияДоступаДляОбъектов(Элементы: ЧитаемыйМассив<СправкаСМестаРаботы.ДанныеРасчетаРазрешений>): ЧитаемоеСоответствие<СправкаСМестаРаботы.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    знч Разрешения: Соответствие<СправкаСМестаРаботы.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    для Элемент из Элементы
        знч РазрешенияЭлемента: Множество<РазрешениеДоступа>
        РазрешенияЭлемента.Добавить(КонтрольДоступа.ПолныйДоступИнформационнойСистеме(этот))
        РазрешенияЭлемента.ДобавитьВсе(КонтрольДоступа.ЧтениеРедактированиеДанныхСправочниковПерсонально([Элемент.ФизическоеЛицо]))
        Разрешения.Вставить(Элемент, РазрешенияЭлемента)
    ;
    возврат Разрешения
;

//КонецОбласти

//Область СлужебныйПрограммныйИнтерфейс

@ВПроекте
структура ДанныеJson
    обз знч ID:             Строка
    обз знч requestID:      Строка
    обз знч employerID:     Строка
    обз знч personID:       Строка
    обз знч note:           Строка?
    обз знч attachment:     МенеджерФайлов.ДанныеФайлаJson?
    обз знч document:       Файлы.ЭлектронныйДокументJson?
;

@ВПодсистеме
структура ДанныеJson_V2_0
    обз знч ID:             Строка
    обз знч requestID:      Строка
    обз знч employerID:     Строка
    обз знч personID:       Строка
    обз знч note:           Строка?
    обз знч attachment:     МенеджерФайлов.ДанныеФайлаJson?
    обз знч document:       Файлы.ЭлектронныйДокументJson_V2_0?
;

@ВПодсистеме
структура ДанныеJson_V2_1
    обз знч ID:             Строка
    обз знч requestID:      Строка
    обз знч employerID:     Строка
    обз знч personID:       Строка
    обз знч note:           Строка?
    обз знч attachment:     МенеджерФайлов.ДанныеФайлаJson?
    обз знч document:       Файлы.ЭлектронныйДокументJson_V2_1?
;

@ВПроекте
метод ТипДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    если ВерсияФорматаОбмена == Неопределено
        возврат Тип<ДанныеJson>
    иначе если ВерсияФорматаОбмена >= Версия{2.1}
        возврат Тип<ДанныеJson_V2_1>
    иначе если ВерсияФорматаОбмена >= Версия{2.0}
        возврат Тип<ДанныеJson_V2_0>
    иначе если ВерсияФорматаОбмена >= Версия{1.0}
        возврат Тип<ДанныеJson>
    ;
;

@ВПроекте
метод ТипКоллекцииДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    если ВерсияФорматаОбмена == Неопределено
        возврат Тип<Массив<ДанныеJson>>
    иначе если ВерсияФорматаОбмена >= Версия{2.1}
        возврат Тип<Массив<ДанныеJson_V2_1>>
    иначе если ВерсияФорматаОбмена >= Версия{2.0}
        возврат Тип<Массив<ДанныеJson_V2_0>>
    иначе если ВерсияФорматаОбмена >= Версия{1.0}
        возврат Тип<Массив<ДанныеJson>>
    ;
;

@ВПроекте
метод ТипОбъектаJson(): Строка
    возврат "certificatesFromEmployer"
;

@ВПроекте
метод ЗагрузитьОбъектИзJson(ДанныеJson: ДанныеJson, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)

    исп Транзакции.Начать()

    знч ВнешниеСсылки: Множество<ВебApiСервер.ВнешняяСсылка>
    ВнешниеСсылки.Добавить(Организации.ВнешняяСсылка(ДанныеJson.employerID))
    ВнешниеСсылки.Добавить(ФизическиеЛица.ВнешняяСсылка(ДанныеJson.personID))
    Сервисы.ПолучитьСсылки(ВнешниеСсылки)

    знч СправкаСМестаРаботы = Сервисы.ПрочитатьОбъект(ДанныеJson.ID,
        &СправкаСМестаРаботы.Объект.новый(Ууид), Тип<СправкаСМестаРаботы.Ссылка>) как СправкаСМестаРаботы.Объект
    СправкаСМестаРаботы.ЗапросСправки   = ОбменДанными.ИдентификаторыЛокальныхОбъектов([ДанныеJson.requestID], Тип<ЗапросСправкиСМестаРаботы.Ссылка>)
                        .ПолучитьИлиУмолчание(ДанныеJson.requestID) как ЗапросСправкиСМестаРаботы.Ссылка?
    СправкаСМестаРаботы.Владелец        = СправкаСМестаРаботы.ЗапросСправки
    СправкаСМестаРаботы.МестоРаботы     = Сервисы.ПолучитьСсылку(Организации.ВнешняяСсылка(ДанныеJson.employerID)) как Организации.Ссылка
    СправкаСМестаРаботы.ФизическоеЛицо  = Сервисы.ПолучитьСсылку(ФизическиеЛица.ВнешняяСсылка(ДанныеJson.personID)) как ФизическиеЛица.Ссылка
    если ДанныеJson.note != Неопределено
        СправкаСМестаРаботы.Комментарий = ДанныеJson.note
    ;
    пер ФайлыДокумента: Массив<Файлы.Объект>
    если ДанныеJson.document != Неопределено
        ФайлыДокумента = Файлы.ВложенияИзJson(ДанныеJson.document, Сервисы, СправкаСМестаРаботы.Ссылка)
        для ФайлДокумента из ФайлыДокумента
            если ФайлДокумента.ВидФайла == ВидыФайла.ЭлектронныйДокумент
                СправкаСМестаРаботы.Файл = ФайлДокумента.Ссылка
                прервать
            ;
        ;
    иначе если ДанныеJson.attachment != Неопределено
        знч ДанныеЗагруженногоФайла = ОбменДанными.ЗагруженныйФайл(ДанныеJson.attachment)
        знч ФайлОбъект = Файлы.НовыйФайл(ДанныеЗагруженногоФайла.Загрузить(), ДанныеJson.attachment.size)
        ФайлОбъект.ЗаполнитьПоЗагруженномуФайлу(ДанныеJson.attachment)        
        СправкаСМестаРаботы.Файл = ФайлОбъект.Ссылка 
        ФайлыДокумента.Добавить(ФайлОбъект)
    ;
    Сервисы.ЗаписатьОбъект(новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(СправкаСМестаРаботы, ДанныеJson.ID), Сервисы.ИнструментыМенеджераОбъекта)
    Файлы.ЗаписатьФайлыПоВладельцу(ФайлыДокумента, СправкаСМестаРаботы.Ссылка) 
    
;

@ВПроекте
метод ЗагрузитьОбъектИзJson(ДанныеJson: ДанныеJson_V2_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)

    исп Транзакции.Начать()

    знч ВнешниеСсылки: Множество<ВебApiСервер.ВнешняяСсылка>
    ВнешниеСсылки.Добавить(Организации.ВнешняяСсылка(ДанныеJson.employerID))
    ВнешниеСсылки.Добавить(ФизическиеЛица.ВнешняяСсылка(ДанныеJson.personID))
    Сервисы.ПолучитьСсылки(ВнешниеСсылки)

    знч СправкаСМестаРаботы = Сервисы.ПрочитатьОбъект(ДанныеJson.ID,
        &СправкаСМестаРаботы.Объект.новый(Ууид), Тип<СправкаСМестаРаботы.Ссылка>) как СправкаСМестаРаботы.Объект
    СправкаСМестаРаботы.ЗапросСправки   = ОбменДанными.ИдентификаторыЛокальныхОбъектов([ДанныеJson.requestID], Тип<ЗапросСправкиСМестаРаботы.Ссылка>)
                        .ПолучитьИлиУмолчание(ДанныеJson.requestID) как ЗапросСправкиСМестаРаботы.Ссылка?
    СправкаСМестаРаботы.Владелец        = СправкаСМестаРаботы.ЗапросСправки
    СправкаСМестаРаботы.МестоРаботы     = Сервисы.ПолучитьСсылку(Организации.ВнешняяСсылка(ДанныеJson.employerID)) как Организации.Ссылка
    СправкаСМестаРаботы.ФизическоеЛицо  = Сервисы.ПолучитьСсылку(ФизическиеЛица.ВнешняяСсылка(ДанныеJson.personID)) как ФизическиеЛица.Ссылка
    если ДанныеJson.note != Неопределено
        СправкаСМестаРаботы.Комментарий = ДанныеJson.note
    ;
    пер ФайлыДокумента: Массив<Файлы.Объект>
    если ДанныеJson.document != Неопределено
        ФайлыДокумента = Файлы.ВложенияИзJson_V2_0(ДанныеJson.document, Сервисы, СправкаСМестаРаботы.Ссылка)
        для ФайлДокумента из ФайлыДокумента
            если ФайлДокумента.ВидФайла == ВидыФайла.ЭлектронныйДокумент
                СправкаСМестаРаботы.Файл = ФайлДокумента.Ссылка
                прервать
            ;
        ;
    иначе если ДанныеJson.attachment != Неопределено
        знч ДанныеЗагруженногоФайла = ОбменДанными.ЗагруженныйФайл(ДанныеJson.attachment)
        знч ФайлОбъект = Файлы.НовыйФайл(ДанныеЗагруженногоФайла.Загрузить(), ДанныеJson.attachment.size)
        ФайлОбъект.ЗаполнитьПоЗагруженномуФайлу(ДанныеJson.attachment)        
        СправкаСМестаРаботы.Файл = ФайлОбъект.Ссылка 
        ФайлыДокумента.Добавить(ФайлОбъект)
    ;
    Сервисы.ЗаписатьОбъект(новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(СправкаСМестаРаботы, ДанныеJson.ID), Сервисы.ИнструментыМенеджераОбъекта)
    Файлы.ЗаписатьФайлыПоВладельцу(ФайлыДокумента, СправкаСМестаРаботы.Ссылка) 
    
;

@ВПроекте
метод ЗагрузитьОбъектИзJson(ДанныеJson: ДанныеJson_V2_1, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)

    исп Транзакции.Начать()

    знч ВнешниеСсылки: Множество<ВебApiСервер.ВнешняяСсылка>
    ВнешниеСсылки.Добавить(Организации.ВнешняяСсылка(ДанныеJson.employerID))
    ВнешниеСсылки.Добавить(ФизическиеЛица.ВнешняяСсылка(ДанныеJson.personID))
    Сервисы.ПолучитьСсылки(ВнешниеСсылки)

    знч СправкаСМестаРаботы = Сервисы.ПрочитатьОбъект(ДанныеJson.ID,
        &СправкаСМестаРаботы.Объект.новый(Ууид), Тип<СправкаСМестаРаботы.Ссылка>) как СправкаСМестаРаботы.Объект
    СправкаСМестаРаботы.ЗапросСправки   = ОбменДанными.ИдентификаторыЛокальныхОбъектов([ДанныеJson.requestID], Тип<ЗапросСправкиСМестаРаботы.Ссылка>)
                        .ПолучитьИлиУмолчание(ДанныеJson.requestID) как ЗапросСправкиСМестаРаботы.Ссылка?
    СправкаСМестаРаботы.Владелец        = СправкаСМестаРаботы.ЗапросСправки
    СправкаСМестаРаботы.МестоРаботы     = Сервисы.ПолучитьСсылку(Организации.ВнешняяСсылка(ДанныеJson.employerID)) как Организации.Ссылка
    СправкаСМестаРаботы.ФизическоеЛицо  = Сервисы.ПолучитьСсылку(ФизическиеЛица.ВнешняяСсылка(ДанныеJson.personID)) как ФизическиеЛица.Ссылка
    если ДанныеJson.note != Неопределено
        СправкаСМестаРаботы.Комментарий = ДанныеJson.note
    ;
    пер ФайлыДокумента: Массив<Файлы.Объект>
    если ДанныеJson.document != Неопределено
        ФайлыДокумента = Файлы.ВложенияИзJson_V2_1(ДанныеJson.document, Сервисы, СправкаСМестаРаботы.Ссылка)
        для ФайлДокумента из ФайлыДокумента
            если ФайлДокумента.ВидФайла == ВидыФайла.ЭлектронныйДокумент
                СправкаСМестаРаботы.Файл = ФайлДокумента.Ссылка
                СправкаСМестаРаботы.ВариантПодписания = Файлы.ВариантПодписанияДокументаИзJson(ДанныеJson.document)
                прервать
            ;
        ;
    иначе если ДанныеJson.attachment != Неопределено
        знч ДанныеЗагруженногоФайла = ОбменДанными.ЗагруженныйФайл(ДанныеJson.attachment)
        знч ФайлОбъект = Файлы.НовыйФайл(ДанныеЗагруженногоФайла.Загрузить(), ДанныеJson.attachment.size)
        ФайлОбъект.ЗаполнитьПоЗагруженномуФайлу(ДанныеJson.attachment)        
        СправкаСМестаРаботы.Файл = ФайлОбъект.Ссылка 
        ФайлыДокумента.Добавить(ФайлОбъект)
    ;
    Сервисы.ЗаписатьОбъект(новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(СправкаСМестаРаботы, ДанныеJson.ID), Сервисы.ИнструментыМенеджераОбъекта)
    Файлы.ЗаписатьФайлыПоВладельцу(ФайлыДокумента, СправкаСМестаРаботы.Ссылка) 
    
;

@ВПодсистеме
метод ФизическиеЛицаДокументов(Документы: ЧитаемыйМассив<СправкаСМестаРаботы.Ссылка>): ЧитаемоеСоответствие<СправкаСМестаРаботы.Ссылка, ЧитаемыйМассив<ФизическиеЛица.Ссылка>>
    знч ФизическиеЛицаДокументов: Соответствие<СправкаСМестаРаботы.Ссылка, ЧитаемыйМассив<ФизическиеЛица.Ссылка>>
    знч Запрос = Запрос{
        Выбрать
            Ссылка,
            ФизическоеЛицо
        ИЗ
            СправкаСМестаРаботы
        ГДЕ
            Ссылка в (%Документы)   
    }
    
    исп Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        ФизическиеЛицаДокументов.Вставить(СтрокаРезультата.Ссылка, [СтрокаРезультата.ФизическоеЛицо])    
    ;
    возврат ФизическиеЛицаДокументов
;

//КонецОбласти

//Область JSON

метод ДанныеСправок(Справки: ЧитаемаяКоллекция<СправкаСМестаРаботы.Ссылка>): 
    ЧитаемоеСоответствие<СправкаСМестаРаботы.Ссылка, ЧитаемоеСоответствие<Строка, Объект?>>

    знч Данные: Соответствие<СправкаСМестаРаботы.Ссылка, ЧитаемоеСоответствие<Строка, Объект?>>

    знч Запрос = Запрос{
        Выбрать
            Ссылка,
            ЗапросСправки,
            ФизическоеЛицо,
            МестоРаботы,
            Комментарий
        Из 
            СправкаСМестаРаботы
        Где 
            Ссылка В (%Справки)}
    исп Результат = Запрос.Выполнить() 
    для РезультатСтрока из Результат
        Данные.Вставить(
            РезультатСтрока.Ссылка, 
            МенеджерЗапросов.СтрокаРезультатаЗапросаВСоответствие(РезультатСтрока, Результат))
    ;
    возврат Данные
;

@ВПодсистеме
метод СправкиСМестаРаботы(ЗапросСправки: ЗапросСправкиСМестаРаботы.Ссылка): ЧитаемаяКоллекция<СправкаСМестаРаботы.Ссылка>
   
    знч МассивСправок: Массив<СправкаСМестаРаботы.Ссылка>
    
    знч Запрос = Запрос{
        Выбрать
            Ссылка
         Из
            СправкаСМестаРаботы
         Где
            ЗапросСправки == %ЗапросСправки}
    исп Результат = Запрос.Выполнить() 
    для РезультатСтрока из Результат
        МассивСправок.Добавить(РезультатСтрока.Ссылка)
    ;
    возврат МассивСправок   
;

//КонецОбласти