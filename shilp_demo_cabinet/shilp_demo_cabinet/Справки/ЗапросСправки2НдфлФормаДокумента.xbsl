импорт СтандартноеПриложение
импорт ИнтерфейсныеКомпонентыСтандартные
импорт Компания
импорт Криптография
импорт ОбменДанными
импорт ОбщегоНазначения
импорт Компания::Согласования
импорт УниверсальныеМеханизмы
импорт ФизическиеЛица
импорт ВладельцыКабинетов
импорт УниверсальныеМеханизмы::ШаблоныДокументов

@Обработчик
метод ПослеЧтения()
    ИнтерфейсныеКомпоненты.ИнициализироватьПодчиненныеКомпоненты(Компоненты)
    Компоненты.ГлавнаяГруппа.ЧтениеДанныхЗавершено = Истина
;

метод ПанельОсновнаяИспользованиеСохранитьЧерновик(): Булево
    возврат Компоненты.Содержимое.ВозможноРедактирование()
;

метод ПанельОсновнаяЗаголовокКнопкиЗаписатьИЗакрыть(): Строка
    возврат Компоненты.Содержимое.ВозможноРедактирование() ? "Заказать" : "Закрыть" 
;

метод ПанельОсновнаяСохранитьЧерновик(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    ЗаписатьИЗакрыть(Ложь)
;

метод ПанельОсновнаяЗаписатьИЗакрыть(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    ЗаписатьИЗакрыть(Истина)
;

метод ЗаписатьИЗакрыть(ОтправитьНаСогласование: Булево)
    если не Компоненты.Содержимое.ВозможноРедактирование()
        Закрыть(СтандартныеФормы.ДействиеВФорме.НеИзменен)
        возврат
    ;
    если не Компоненты.Содержимое.ПроверкаЗаполнения()
        возврат
    ;
    если ОтправитьНаСогласование
        и не Криптография.ВвестиПарольЗакрытогоКлюча(
            Объект.ФизическоеЛицо, Объект.Ссылка)
        
        возврат
    ;
    // Признак ЭтоНовый получаем до записи 
    пер ЭтоНовый: Булево = ЭтоНовый()
    пер Состояние: СостоянияДокумента = ОтправитьНаСогласование ? СостоянияДокумента.Подготовлен : СостоянияДокумента.Черновик

    пер ТабличныеЧасти: ЗапросСправки2НдфлКомпонент.ТабличныеЧасти = Компоненты.Содержимое.МодифицированныеТабличныеЧасти()
    пер ДанныеДокумента = новый ДанныеДокумента()
    ДанныеДокумента.Ссылка = Объект.Ссылка
    ДанныеДокумента.Дата = Объект.Дата
    ДанныеДокумента.ФизическоеЛицо = Объект.ФизическоеЛицо
    ДанныеДокумента.Назначение = Объект.Назначение
    ДанныеДокумента.Год = Объект.Год
    ДанныеДокумента.КоличествоМесяцев = Объект.КоличествоМесяцев
    ДанныеДокумента.Организация = Объект.Организация
    ДанныеДокумента.ПериодПодтвержденияДохода = Объект.ПериодПодтвержденияДохода
    ДанныеДокумента.МесяцНачалаПериодаПодтвержденияДохода = Объект.МесяцНачалаПериодаПодтвержденияДохода
    ДанныеДокумента.МесяцОкончанияПериодаПодтвержденияДохода = Объект.МесяцОкончанияПериодаПодтвержденияДохода
    ДанныеДокумента.ВидПериода = Объект.ВидПериода
    ДанныеДокумента.Комментарий = Объект.Комментарий
    ДанныеДокумента.ВариантПолученияДокумента = Объект.ВариантПолученияДокумента
    ДанныеДокумента.КоличествоЭкземпляров = Объект.КоличествоЭкземпляров
    ДанныеДокумента.ОтправитьНаЭлектроннуюПочту = Объект.ОтправитьНаЭлектроннуюПочту
    ДанныеДокумента.ЭлектроннаяПочта = Объект.ЭлектроннаяПочта

    пер СостояниеОбмена: ОбменДанными.СостояниеОбмена
    знч РезультатПодписания = Записать(
            ЭтоНовый(), 
            ДанныеДокумента,
            ТабличныеЧасти, 
            ОтправитьНаСогласование,
            Криптография.ПараметрыСеанса().ПарольЗакрытогоКлючаПользователя, 
            ВладельцыКабинетов.ПараметрыСеанса().ИнформационныеСистемы, СостояниеОбмена)
    если РезультатПодписания.ЕстьОшибки
        СтандартныеФормы.ПоказатьУведомление(
            "Ошибка подписания документа",
            РезультатПодписания.ТекстОшибки,
            ОценкаИнформации.Отрицательная
        )
        возврат
    ;
    
    если ОтправитьНаСогласование
        если Криптография.УстановитьПодписьВСервисеПодписания(
            Объект.Ссылка, ДанныеДокумента.ФизическоеЛицо, Согласования.РольПодписантаСотрудник()) == Ложь
            
            Прочитать(Объект.Ссылка)
            возврат
        ;
    ;
    если РассчитаннаяМодифицированность
        СобственнаяМодифицированность = Ложь
    ;
    // Опровещение выполянем перед закрытием - когда уже записаны все данные, сопровождающие запись документа
    знч ДанныеСостояния = СостояниеДокументаКомпонентДанных.Создать()
    ДанныеСостояния.Документ = Объект.Ссылка как неизвестно
    ДанныеСостояния.ДатаДокумента = Объект.Дата
    ДанныеСостояния.Состояние = Состояние
    ДанныеСостояния.ДополнительноеПредставление = СостДокументов.ПредставлениеПериодаДокумента()
    ИзмененоСостояниеДокумента.Оповестить(ДанныеСостояния, ЭтоНовый)
    если ОтправитьНаСогласование
        ЗапросыСправокКлиент.ОповеститьОВыполненномДействии(СостояниеОбмена)
    ;
    Закрыть(СтандартныеФормы.ДействиеВФорме.Изменен)
;

метод ЗапросСправки2НдфлФормаДокументаВысота(): Число
    пер ВысотаФормы = 90
    если Компоненты.Содержимое.СостояниеЗапроса == СостоянияДокумента.Выполнен
        ВысотаФормы += 20
    ;
    возврат ОсновнойИнтерфейс.ВысотаФормыДокумента(ВысотаФормы)
;

метод ОшибкаПриВыполненииКоманды(Источник: КоманднаяПанельФорм, Событие: СобытиеСДанными<Исключение>)
    Криптография.СброситьПарольЗакрытогоКлючаПриОшибкеВводаПароля(Событие.Данные)
    Компоненты.ГлавнаяГруппа.ПоказатьОшибку(ОбщегоНазначения.ОписаниеОшибкиПриДействииСДокументом(Событие.Данные, Объект.ФизическоеЛицо))
;

@НаСервере @НаКлиенте
структура ДанныеДокумента
    пер Ссылка: ЗапросСправки2Ндфл.Ссылка?
    пер Дата: Дата?
    пер ФизическоеЛицо: ФизическиеЛица.Ссылка?
    пер Назначение: НазначениеСправок2Ндфл?
    пер Год: Число?
    пер КоличествоМесяцев: Число
    пер Комментарий: Строка
    пер Организация: Организации.Ссылка?
    пер ПериодПодтвержденияДохода: ВидПериодаПодтвержденияДохода?
    пер МесяцНачалаПериодаПодтвержденияДохода: Дата?
    пер МесяцОкончанияПериодаПодтвержденияДохода: Дата?
    пер ВидПериода: ВидПериодаСправки2Ндфл? 
    пер ВариантПолученияДокумента: ВариантыПолученияДокумента
    пер КоличествоЭкземпляров: Число
    пер ОтправитьНаЭлектроннуюПочту: Булево
    пер ЭлектроннаяПочта: Строка
;

@НаСервере @ДоступноСКлиента
статический метод Записать(ЭтоНовый: Булево, 
        ДанныеДокумента: ДанныеДокумента, 
        ТабличныеЧасти: ЗапросСправки2НдфлКомпонент.ТабличныеЧасти,
        ОтправитьНаСогласование: Булево, 
        ПарольЗакрытогоКлюча: Строка?,
        ИнформационныеСистемы: Соответствие<ИнформационныеСистемы.Ссылка, ОбменДанными.НастройкиИнформационнойСистемы>, 
        СостояниеОбмена: ОбменДанными.СостояниеОбмена): Криптография.РезультатПодписания
    
    пер Заявление: ЗапросСправки2Ндфл.Объект?
    пер ЗаявлениеСсылка: ЗапросСправки2Ндфл.Ссылка? = ДанныеДокумента.Ссылка
    если ЭтоНовый
        Заявление = новый ЗапросСправки2Ндфл.Объект(ЗаявлениеСсылка.Ид).Заполнить()
    иначе
        Заявление = ЗаявлениеСсылка.ЗагрузитьОбъект()
    ;
    
    Заявление.Дата = ДанныеДокумента.Дата
    Заявление!.ФизическоеЛицо = ДанныеДокумента.ФизическоеЛицо
    Заявление!.Назначение = ДанныеДокумента.Назначение
    Заявление!.Год = ДанныеДокумента.Год
    Заявление!.КоличествоМесяцев = ДанныеДокумента.КоличествоМесяцев
    Заявление!.Организация = ДанныеДокумента.Организация
    Заявление!.ПериодПодтвержденияДохода = ДанныеДокумента.ПериодПодтвержденияДохода
    Заявление!.МесяцНачалаПериодаПодтвержденияДохода = ДанныеДокумента.МесяцНачалаПериодаПодтвержденияДохода
    Заявление!.МесяцОкончанияПериодаПодтвержденияДохода = ДанныеДокумента.МесяцОкончанияПериодаПодтвержденияДохода
    Заявление!.ВидПериода = ДанныеДокумента.ВидПериода
    Заявление!.Комментарий = ДанныеДокумента.Комментарий
    Заявление!.ВариантПолученияДокумента = ДанныеДокумента.ВариантПолученияДокумента
    Заявление!.КоличествоЭкземпляров = ДанныеДокумента.КоличествоЭкземпляров
    Заявление!.ОтправитьНаЭлектроннуюПочту = ДанныеДокумента.ОтправитьНаЭлектроннуюПочту
    Заявление!.ЭлектроннаяПочта = ДанныеДокумента.ЭлектроннаяПочта
    
    исп Транзакции.Начать()
    Заявление.Записать()
    ШаблоныДокументовМенеджер.СохранитьРеквизиты(ТабличныеЧасти.ДополнительныеРеквизиты)
    ПредставленияДокументов.СформироватьПредставленияДокумента(ЗаявлениеСсылка, Истина)
    пер РезультатПодписания: Криптография.РезультатПодписания
    если ОтправитьНаСогласование
        знч ДанныеСогласующего = новый Согласования.ДанныеСогласующего(ДанныеДокумента.ФизическоеЛицо, Согласования.РольПодписантаСотрудник())
        РезультатПодписания = Согласования.ПодписатьИУстановитьСостояниеДокумента(ЗаявлениеСсылка, ДанныеСогласующего, ПарольЗакрытогоКлюча, СостоянияДокумента.Подготовлен, ДанныеДокумента.ФизическоеЛицо)
        если РезультатПодписания.ЕстьОшибки
            возврат РезультатПодписания
        ;
        СостояниеОбмена = ВладельцыКабинетов.ПроверитьСостояниеОбмена(ДанныеДокумента.ФизическоеЛицо)
    ;
    возврат РезультатПодписания
;

метод ОсновнойКомпонентПанели(): Компонент
    возврат Компоненты.Содержимое
;
