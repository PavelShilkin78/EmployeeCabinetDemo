импорт ВладельцыКабинетов
импорт Документы
импорт ИнтерфейсныеКомпонентыСтандартные
импорт ЛичныеКабинетыПользователей
импорт СтандартноеПриложение
импорт Уведомления
импорт УниверсальныеМеханизмы
импорт Компания

// Контракт ОсновнойИнтерфейсПоставщик
@ВПроекте
@Реализация
метод РазделыПриложения(): ЧитаемаяКоллекция<ОсновнойИнтерфейс.ОписаниеРаздела>
    знч Разделы: Массив<ОсновнойИнтерфейс.ОписаниеРаздела>
    если РазделСправкиДоступен()
        Разделы.Добавить(ОписаниеРазделаСправки())
    ;
    возврат Разделы
;

@ВПроекте
@Реализация
метод Виджеты(): ЧитаемаяКоллекция<ОсновнойИнтерфейс.ОписаниеВиджета>
    знч Виджеты: Массив<ОсновнойИнтерфейс.ОписаниеВиджета>
    если РазделСправкиДоступен()
        Виджеты.Добавить(ОписаниеВиджетаСправки())
    ;
    возврат Виджеты
;

@ВПроекте
@Реализация
метод КомандыВсеФункции(): ЧитаемаяКоллекция<ОсновнойИнтерфейс.ОписательКомандыВсеФункции>
    знч Группа = новый ОсновнойИнтерфейс.ОписательГруппыКомандВсеФункции(Справки.ИМЯ_РАЗДЕЛА_СПРАВКИ, 6)
    возврат [
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Виды произвольных справок",
            СоздательФормыСписка = метод()-> возврат новый ВидыПроизвольныхСправок.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый ВидыПроизвольныхСправок.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Запрос справки 2-НДФЛ",
            СоздательФормыСписка = метод()-> возврат новый ЗапросСправки2Ндфл.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый ЗапросСправки2Ндфл.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Запрос справки по остаткам отпуска",
            СоздательФормыСписка = метод()-> возврат новый ЗапросСправкиПоОстаткамОтпуска.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый ЗапросСправкиПоОстаткамОтпуска.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Запрос справки с места работы",
            СоздательФормыСписка = метод()-> возврат новый ЗапросСправкиСМестаРаботы.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый ЗапросСправкиСМестаРаботы.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Справка 2-НДФЛ",
            СоздательФормыСписка = метод()-> возврат новый Справка2Ндфл.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый Справка2Ндфл.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Справка по остаткам отпуска",
            СоздательФормыСписка = метод()-> возврат новый СправкаПоОстаткамОтпуска.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый СправкаПоОстаткамОтпуска.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Справка с места работы",
            СоздательФормыСписка = метод()-> возврат новый СправкаСМестаРаботы.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый СправкаСМестаРаботы.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Используемая функциональность (Справки)",
            СоздательФормыСписка = метод()-> возврат новый ИспользуемаяФункциональность.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый ИспользуемаяФункциональность.АвтоматическаяФормаОбъекта();
            )
    ]
;

@ВПроекте
@Реализация
метод ДополнительныеКоманды(): ЧитаемыйМассив<Команда>
    возврат []
;

@ВПроекте
@Реализация
метод КомандыПанелиДействий(): ЧитаемыйМассив<Команда>
    возврат []
;

@ВПроекте
@Реализация
метод ДополнительныеКомандыПанелиГлавное(): ЧитаемыйМассив<Команда>
    возврат []
;
// Конец ОсновнойИнтерфейсПоставщик

// Контракт PushУведомленияОбработчик
@ВПроекте 
@Реализация
метод ВыполнитьДействие(ДанныеPush: PushУведомления.ДанныеPush)
    выбор
    когда ДанныеPush.Ссылка это ЗапросСправки2Ндфл.Ссылка
        ЗапросСправки2НдфлФормаДокумента.ОткрытьВМодальномОкне(
            КлючОбъекта = ДанныеPush.Ссылка как ЗапросСправки2Ндфл.Ссылка)
    когда ДанныеPush.Ссылка это ЗапросСправкиПоОстаткамОтпуска.Ссылка
        ЗапросСправкиПоОстаткамОтпускаФормаДокумента.ОткрытьВМодальномОкне(
            КлючОбъекта = ДанныеPush.Ссылка как ЗапросСправкиПоОстаткамОтпуска.Ссылка)
    когда ДанныеPush.Ссылка это ЗапросСправкиСМестаРаботы.Ссылка
        ЗапросСправкиСМестаРаботыФормаДокумента.ОткрытьВМодальномОкне(
            КлючОбъекта = ДанныеPush.Ссылка как ЗапросСправкиСМестаРаботы.Ссылка)
    ;
;
// Конец PushУведомленияОбработчик

// Контракт ДокументыСотрудниковПоставщик

@ВПроекте
@Реализация
метод КомандыСоздатьЗаявление(): ЧитаемыйМассив<ЭлементСпискаЗначений<Объект?>>
    пер Команды: Массив<ЭлементСпискаЗначений<Объект?>>
    для ВидСправки из Клиент.СписокВидовСправок()
        Команды.Добавить(новый ЭлементСпискаЗначений<Объект?>(
            Значение = ВидСправки.Ид,
            Представление = ВидСправки.Представление))
    ;
    возврат Команды
;

@ВПроекте
@Реализация
метод КомпонентДокумента(Заявление: ДокументСотрудника.Ссылка): ДокументСотрудникаКомпонент?
    выбор Заявление
    когда это ЗапросСправки2Ндфл.Ссылка
        возврат новый ЗапросСправки2НдфлКомпонент()
    когда это ЗапросСправкиПоОстаткамОтпуска.Ссылка
        возврат новый ЗапросСправкиПоОстаткамОтпускаКомпонент()
    когда это ЗапросСправкиСМестаРаботы.Ссылка
        возврат новый ЗапросСправкиСМестаРаботыКомпонент()
    иначе
        возврат Неопределено
    ;
;

@ВПроекте
@Реализация
метод ОткрытьЗаявлениеМодально(Заявление: ДокументСотрудника.Ссылка): СтандартныеФормы.ДействиеВФорме?
    если Заявление это ЗапросСправки2Ндфл.Ссылка
        возврат ЗапросСправки2НдфлФормаДокумента.ОткрытьВМодальномОкне(КлючОбъекта = Заявление как ЗапросСправки2Ндфл.Ссылка)   
    иначе если Заявление это ЗапросСправкиПоОстаткамОтпуска.Ссылка
        возврат ЗапросСправкиПоОстаткамОтпускаФормаДокумента.ОткрытьВМодальномОкне(КлючОбъекта = Заявление как ЗапросСправкиПоОстаткамОтпуска.Ссылка)
    иначе если Заявление это ЗапросСправкиСМестаРаботы.Ссылка
        возврат ЗапросСправкиСМестаРаботыФормаДокумента.ОткрытьВМодальномОкне(КлючОбъекта = Заявление как ЗапросСправкиСМестаРаботы.Ссылка)
    иначе
        возврат Неопределено
    ;
;

@ВПроекте
@Реализация
метод ВыполнитьКомандуСоздать(Действие: ЭлементСпискаЗначений<Объект?>)
    выбор Действие.Значение
    когда это ВидыСправок
        Клиент.ОткрытьФормуСправки(Действие.Значение как ВидыСправок)
    когда это ВидыПроизвольныхСправок.Ссылка
        Клиент.ОткрытьФормуСправки(Действие.Значение как ВидыПроизвольныхСправок.Ссылка)
    иначе
        возврат  
    ;
;

@ВПроекте
@Реализация
метод ПредставленияДокументов(): ЧитаемаяКоллекция<СостояниеДокументаКомпонентДанных>
    возврат Справки.ПредставленияСправокФизлица(ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо)  
;

// Конец ДокументыСотрудниковПоставщик

@НаКлиенте
метод РазделСправкиДоступен(): Булево
    возврат ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо != Неопределено
        и (Компания.ПараметрыСеанса().ТекущийПользовательСотрудник
            или ВладельцыКабинетов.ПараметрыСеанса().ДнейДоОтключенияКабинета != Неопределено)
        и Справки.ПараметрыСеанса().ФункциональныеОпции.ИнформацияОСправках
        и (Справки.ПараметрыСеанса().ФункциональныеОпции.СправкаСМестаРаботы 
        или Справки.ПараметрыСеанса().ФункциональныеОпции.Справка2Ндфл
        или Справки.ПараметрыСеанса().ФункциональныеОпции.СправкаПоОстаткамОтпуска)
    
;

@НаКлиенте
метод ОписаниеРазделаСправки(): ОсновнойИнтерфейс.ОписаниеРаздела
    возврат новый ОсновнойИнтерфейс.ОписаниеРаздела(
        Ид = Справки.ИД_РАЗДЕЛА_СПРАВКИ,
        Имя = "Справки",
        Пиктограмма = НавигацияСправки.Изображение,
        ЦветПиктограммы = БиблиотекаЦветов.ВидыЦвета.Зеленый,
        НавигационнаяКомандаРаздела = НавигацияСправки,
        ШиринаДляПанелиНавигации = 144)
;

@НаКлиенте
метод ОписаниеВиджетаСправки(): ОсновнойИнтерфейс.ОписаниеВиджета
    возврат новый ОсновнойИнтерфейс.ОписаниеВиджета(
        Ид = Справки.ИД_РАЗДЕЛА_СПРАВКИ,
        ИдРаздела = Справки.ИД_РАЗДЕЛА_СПРАВКИ,
        Имя = "Справки",
        Компонент = новый СправкиВиджетСодержимое(),
        Команда = Клиент.СформироватьКомандыСоздания())
;
