импорт СтандартноеПриложение
импорт ИнтерфейсныеКомпонентыСтандартные
импорт Компания
импорт Криптография
импорт ОбменДанными
импорт ОбщегоНазначения
импорт Компания::Согласования
импорт УниверсальныеМеханизмы
импорт ФизическиеЛица
импорт ВладельцыКабинетов
импорт УниверсальныеМеханизмы::ШаблоныДокументов

@Обработчик
метод ПослеЧтения()
    ИнтерфейсныеКомпоненты.ИнициализироватьПодчиненныеКомпоненты(Компоненты)
    Компоненты.ГлавнаяГруппа.ЧтениеДанныхЗавершено = Истина 
;

метод ЗапросСправкиСМестаРаботыФормаДокументаЗаголовок(): Строка
    возврат Компоненты.Содержимое.ЗаголовокФормы()
;

метод ПанельОсновнаяЗаголовокКнопкиЗаписатьИЗакрыть(): Строка
    возврат Компоненты.Содержимое.ВозможноРедактирование() ? "Заказать" : "Закрыть" 
;

метод ПанельОсновнаяЗаписатьИЗакрыть(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    ЗаписатьИЗакрыть(Истина)
;

метод ПанельОсновнаяИспользованиеСохранитьЧерновик(): Булево
    возврат Компоненты.Содержимое.ВозможноРедактирование()
;

метод ПанельОсновнаяСохранитьЧерновик(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    ЗаписатьИЗакрыть(Ложь)
;

метод ЗаписатьИЗакрыть(ОтправитьНаСогласование: Булево)
    если не Компоненты.Содержимое.ВозможноРедактирование()
        Закрыть(СтандартныеФормы.ДействиеВФорме.НеИзменен)
        возврат
    ;
    если не Компоненты.Содержимое.ПроверкаЗаполнения()
        возврат
    ;
    если Компоненты.Содержимое.ОшибкаЗагрузки
        ОбщегоНазначения.УведомлениеОшибкиЗагрузкиФайлов()
        возврат
    ;
    если ОтправитьНаСогласование
        и не Криптография.ВвестиПарольЗакрытогоКлюча(
            Объект.ФизическоеЛицо, Объект.Ссылка)
        
        возврат
    ;
    // Признак ЭтоНовый получаем до записи 
    пер ЭтоНовый: Булево = ЭтоНовый()
    пер Состояние: СостоянияДокумента = ОтправитьНаСогласование ? СостоянияДокумента.Подготовлен : СостоянияДокумента.Черновик

    пер ТабличныеЧасти: ЗапросСправкиСМестаРаботыКомпонент.ТабличныеЧасти = Компоненты.Содержимое.МодифицированныеТабличныеЧасти()
    пер ДанныеДокумента = новый ДанныеДокумента()
        
    ДанныеДокумента.Ссылка = Объект.Ссылка
    ДанныеДокумента.Дата = Объект.Дата
    ДанныеДокумента.ВидСправки = Объект.ВидСправки
    ДанныеДокумента.ФизическоеЛицо = Объект.ФизическоеЛицо
    ДанныеДокумента.МестоРаботы = Объект.МестоРаботы
    ДанныеДокумента.Назначение = Объект.Назначение
    ДанныеДокумента.Комментарий = Объект.Комментарий
    ДанныеДокумента.ВариантПолученияДокумента = Объект.ВариантПолученияДокумента
    ДанныеДокумента.КоличествоЭкземпляров = Объект.КоличествоЭкземпляров
    ДанныеДокумента.ОтправитьНаЭлектроннуюПочту = Объект.ОтправитьНаЭлектроннуюПочту
    ДанныеДокумента.ЭлектроннаяПочта = Объект.ЭлектроннаяПочта
    
    пер СостояниеОбмена: ОбменДанными.СостояниеОбмена
    знч РезультатПодписания = Записать(
            ЭтоНовый(), 
            ДанныеДокумента, 
            ТабличныеЧасти, 
            ОтправитьНаСогласование,
            Криптография.ПараметрыСеанса().ПарольЗакрытогоКлючаПользователя, 
            ВладельцыКабинетов.ПараметрыСеанса().ИнформационныеСистемы, СостояниеОбмена)
    если РезультатПодписания.ЕстьОшибки
        СтандартныеФормы.ПоказатьУведомление(
            "Ошибка подписания документа",
            РезультатПодписания.ТекстОшибки,
            ОценкаИнформации.Отрицательная
        )
        возврат
    ;
    если ОтправитьНаСогласование
        если Криптография.УстановитьПодписьВСервисеПодписания(
            Объект.Ссылка, ДанныеДокумента.ФизическоеЛицо, Согласования.РольПодписантаСотрудник()) == Ложь
            
            Прочитать(Объект.Ссылка)
            возврат
        ;
    ;
    Компоненты.Содержимое.СброситьМодифицированностьТабличныхЧастей()
    если РассчитаннаяМодифицированность
        СобственнаяМодифицированность = Ложь
    ;
    // Опровещение выполянем перед закрытием - когда уже записаны все данные, сопровождающие запись документа
    знч ДанныеСостояния = СостояниеДокументаКомпонентДанных.Создать()
    ДанныеСостояния.Документ = ДанныеДокумента.Ссылка
    ДанныеСостояния.ДатаДокумента = ДанныеДокумента.Дата
    ДанныеСостояния.Состояние = Состояние
    ДанныеСостояния.ДополнительноеПредставление = СостДокументов.ПредставлениеПериодаДокумента(ДатаДокумента = ДанныеДокумента.Дата)
    ИзмененоСостояниеДокумента.Оповестить(ДанныеСостояния, ЭтоНовый)
    если ОтправитьНаСогласование
        ЗапросыСправокКлиент.ОповеститьОВыполненномДействии(СостояниеОбмена)
    ;
    Закрыть(СтандартныеФормы.ДействиеВФорме.Изменен)
;

метод ЗапросСправкиСМестаРаботыФормаДокументаВысота(): Число
    пер ВысотаФормы = 92
    возврат ОсновнойИнтерфейс.ВысотаФормыДокумента(ВысотаФормы)
;

метод УстановитьДоступностьКоманд(Доступность: Булево)
    пер ГлавнаяГруппа: КорневойКомпонентМодальнойФормы = Компоненты.ГлавнаяГруппа
    для КоманднаяПанель из ГлавнаяГруппа.КомандныеПанели
         КоманднаяПанель.Доступность = Доступность
    ;
;

метод СодержимоеИзменениеСостоянияЗагрузкиФайлов(Источник: ЗапросСправкиСМестаРаботыКомпонент, Событие: СобытиеСДанными<Булево>)
    УстановитьДоступностьКоманд(не Событие.Данные)
;

метод ОшибкаПриВыполненииКоманды(Источник: КоманднаяПанельФорм, Событие: СобытиеСДанными<Исключение>)
    Криптография.СброситьПарольЗакрытогоКлючаПриОшибкеВводаПароля(Событие.Данные)
    Компоненты.ГлавнаяГруппа.ПоказатьОшибку(
        ОбщегоНазначения.ОписаниеОшибкиПриДействииСДокументом(Событие.Данные, Объект.ФизическоеЛицо))
;

@НаСервере @НаКлиенте
структура ДанныеДокумента
    пер Ссылка: ЗапросСправкиСМестаРаботы.Ссылка?
    пер Дата: Дата?
    пер ВидСправки: ВидыПроизвольныхСправок.Ссылка?
    пер ФизическоеЛицо: ФизическиеЛица.Ссылка?
    пер МестоРаботы: Организации.Ссылка?
    пер Назначение: Строка
    пер Комментарий: Строка
    пер ВариантПолученияДокумента: ВариантыПолученияДокумента
    пер КоличествоЭкземпляров: Число
    пер ОтправитьНаЭлектроннуюПочту: Булево
    пер ЭлектроннаяПочта: Строка
;

@НаСервере @ДоступноСКлиента
статический метод Записать(ЭтоНовый: Булево, 
        ДанныеДокумента: ДанныеДокумента, 
        ТабличныеЧасти: ЗапросСправкиСМестаРаботыКомпонент.ТабличныеЧасти, 
        ОтправитьНаСогласование: Булево, 
        ПарольЗакрытогоКлюча: Строка?,
        ИнформационныеСистемы: Соответствие<ИнформационныеСистемы.Ссылка, ОбменДанными.НастройкиИнформационнойСистемы>, 
        СостояниеОбмена: ОбменДанными.СостояниеОбмена): Криптография.РезультатПодписания
    
    пер Заявление: ЗапросСправкиСМестаРаботы.Объект?
    пер ЗаявлениеСсылка: ЗапросСправкиСМестаРаботы.Ссылка? = ДанныеДокумента.Ссылка
    если ЭтоНовый
        Заявление = новый ЗапросСправкиСМестаРаботы.Объект(ЗаявлениеСсылка.Ид).Заполнить()
    иначе
        Заявление = ЗаявлениеСсылка.ЗагрузитьОбъект()
    ;
    
    Заявление!.Дата = ДанныеДокумента.Дата
    Заявление!.ВидСправки = ДанныеДокумента.ВидСправки
    Заявление!.ФизическоеЛицо = ДанныеДокумента.ФизическоеЛицо
    Заявление!.МестоРаботы = ДанныеДокумента.МестоРаботы
    Заявление!.Назначение = ДанныеДокумента.Назначение
    Заявление!.Комментарий = ДанныеДокумента.Комментарий
    Заявление!.ВариантПолученияДокумента = ДанныеДокумента.ВариантПолученияДокумента
    Заявление!.КоличествоЭкземпляров = ДанныеДокумента.КоличествоЭкземпляров
    Заявление!.ОтправитьНаЭлектроннуюПочту = ДанныеДокумента.ОтправитьНаЭлектроннуюПочту
    Заявление!.ЭлектроннаяПочта = ДанныеДокумента.ЭлектроннаяПочта
    
    исп Транзакции.Начать()
    Заявление.Записать()
    ПрисоединенныеФайлыМенеджер.Записать(ТабличныеЧасти.ТаблицаФайлы)
    ШаблоныДокументовМенеджер.СохранитьРеквизиты(ТабличныеЧасти.ДополнительныеРеквизиты)
    ПредставленияДокументов.СформироватьПредставленияДокумента(ЗаявлениеСсылка, Истина)
    пер РезультатПодписания: Криптография.РезультатПодписания
    если ОтправитьНаСогласование
        знч ДанныеСогласующего = новый Согласования.ДанныеСогласующего(ДанныеДокумента.ФизическоеЛицо, Согласования.РольПодписантаСотрудник())
        РезультатПодписания = Согласования.ПодписатьИУстановитьСостояниеДокумента(ЗаявлениеСсылка, ДанныеСогласующего, ПарольЗакрытогоКлюча, СостоянияДокумента.Подготовлен, ДанныеДокумента.ФизическоеЛицо)
        если РезультатПодписания.ЕстьОшибки
            возврат РезультатПодписания
        ;
        СостояниеОбмена = ВладельцыКабинетов.ПроверитьСостояниеОбмена(ДанныеДокумента.ФизическоеЛицо)
    ;
    возврат РезультатПодписания
;

метод ОсновнойКомпонентПанели(): Компонент
    возврат Компоненты.Содержимое
;