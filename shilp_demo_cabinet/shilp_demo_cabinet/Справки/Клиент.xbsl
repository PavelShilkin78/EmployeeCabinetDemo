импорт УниверсальныеМеханизмы
импорт ОбщиеСтандартные
импорт Отпуск

@ВПодсистеме
конст ЗАГОЛОВОК_КОМАНДЫ_ЗАКАЗАТЬ_СПРАВКУ: Строка = "Заказать справку"

@ВПодсистеме
структура ИнформацияОВидеСправки
    обз знч Ид: ВидыСправок|ВидыПроизвольныхСправок.Ссылка
    обз знч Представление: Строка
;

@ВПодсистеме
метод ПояснениеЗапросаПослеОтправки(ДатаОтправки: Дата?, СостояниеЗапроса: СостоянияДокумента): Строка
    пер ПояснениеЗаголовок: Строка
    пер ВремяОтправки: Строка
    пер ТекущаяДата: Дата = Дата.Сейчас()
    если ДатаОтправки == ТекущаяДата
        ВремяОтправки = "сегодня" 
    иначе если ДатаОтправки.ДобавитьДни(1) == ТекущаяДата
        ВремяОтправки = "вчера" 
    иначе
        ВремяОтправки = МенеджерДат.ФорматДаты(ДатаОтправки)
    ;
    пер СтатусЗапроса: Строка
    если СостояниеЗапроса == СостоянияДокумента.Выполнен
        СтатусЗапроса = " и уже выполнен - см. вложения или комментарии к справке."
    иначе если СостояниеЗапроса == СостоянияДокумента.Подготовлен
        СтатусЗапроса = ", но еще не выполнен."
    иначе если СостояниеЗапроса == СостоянияДокумента.ПолученОтказ
        СтатусЗапроса = ", но по нему получен отказ. Причины можно уточнить в кадровой службе."
    ;
    ПояснениеЗаголовок = "Запрос справки был Подготовлен %ВремяОтправки%СтатусЗапроса" 
    возврат ПояснениеЗаголовок
;

@ВПодсистеме
метод ОткрытьФормуСправки(ВидСправки: ВидыСправок|ВидыПроизвольныхСправок.Ссылка)
    если ВидСправки это ВидыСправок
        выбор ВидСправки как ВидыСправок
        когда Справка2Ндфл
            СтатистикаИспользованияПриложения.ЗарегистрироватьЦель("СправкиСправка2НДФЛ")
            ЗапросСправки2НдфлФормаДокумента.ОткрытьВМодальномОкне()
        когда ПроизвольнаяСправкаСМестаРаботы
            СтатистикаИспользованияПриложения.ЗарегистрироватьЦель("СправкиПроизвольнаяСправкаСМестаРаботы")
            ЗапросСправкиСМестаРаботыФормаДокумента.ОткрытьВМодальномОкне()
        когда СправкаПоИспользованнымОтпускам
            СтатистикаИспользованияПриложения.ЗарегистрироватьЦель("СправкиСправкаПоИспользованнымОтпускам")
            ЗапросСправкиПоОстаткамОтпускаФормаДокумента.ОткрытьВМодальномОкне()
        ;
    иначе
        СтатистикаИспользованияПриложения.ЗарегистрироватьЦель("СправкиПроизвольнаяСправкаСМестаРаботы")
        ЗапросСправкиСМестаРаботыФормаДокумента.ОткрытьВМодальномОкне(ВидСправки = ВидСправки как ВидыПроизвольныхСправок.Ссылка)
    ;
; 

метод ВидСправкиДоступен(ВидСправки: ВидыСправок): Булево
    выбор ВидСправки
    когда Справка2Ндфл
        возврат Справки.ПараметрыСеанса().ФункциональныеОпции.Справка2Ндфл
            и Справки.ПараметрыСеанса().ФункциональныеОпции.ИнформацияОСправках
    когда ПроизвольнаяСправкаСМестаРаботы
        возврат Справки.ПараметрыСеанса().ФункциональныеОпции.СправкаСМестаРаботы
            и Справки.ПараметрыСеанса().ФункциональныеОпции.ИнформацияОСправках 
    когда СправкаПоИспользованнымОтпускам
        возврат Отпуск.ПараметрыСеанса().ФункциональныеОпции.ИнформацияОбОтпусках
            и Справки.ПараметрыСеанса().ФункциональныеОпции.СправкаПоОстаткамОтпуска
            и Справки.ПараметрыСеанса().ФункциональныеОпции.ИнформацияОСправках
    иначе
        возврат Ложь
    ;
;

@ВПодсистеме
метод ВидыПроизвольныхСправок(): ЧитаемаяКоллекция<ВидыПроизвольныхСправокКлиентСервер.ВидСправки>
    возврат Справки.ПараметрыСеанса().ВидыПроизвольныхСправок.Значения()
;

@ВПодсистеме
метод СформироватьКомандыСоздания(): Команда|ГруппаКомандногоИнтерфейса<Команда>|?
    пер СписокВидовСправок: ЧитаемыйМассив<Клиент.ИнформацияОВидеСправки> = СписокВидовСправок()
    если СписокВидовСправок.Пусто()
        возврат Неопределено
    ;
    если СписокВидовСправок.Размер() == 1
        пер ВидСправкиИнфо = СписокВидовСправок[0]
        пер Команда = новый ОбычнаяКоманда(метод (Команда: ОбычнаяКоманда) -> Клиент.ОткрытьФормуСправки(ВидСправкиИнфо.Ид);, ВидСправкиИнфо.Представление)
        возврат Команда
    иначе
        знч Команды = новый ГруппаКомандногоИнтерфейса<Команда>("Заказать справку")
        для ВидСправкиИнфо из СписокВидовСправок
            Команды.Элементы.Добавить(новый ОбычнаяКоманда((Команда) -> Клиент.ОткрытьФормуСправки(ВидСправкиИнфо.Ид), ВидСправкиИнфо.Представление))
        ;
        возврат Команды
    ;
;

@ВПодсистеме
метод ОткрытьФормуДокумента(Документ: ЗапросСправки2Ндфл.Ссылка|ЗапросСправкиСМестаРаботы.Ссылка|ЗапросСправкиПоОстаткамОтпуска.Ссылка)
    выбор Документ.ПолучитьТип()
    когда Тип<ЗапросСправки2Ндфл.Ссылка>
        ЗапросСправки2НдфлФормаДокумента.ОткрытьВМодальномОкне(КлючОбъекта = Документ как ЗапросСправки2Ндфл.Ссылка)
    когда Тип<ЗапросСправкиСМестаРаботы.Ссылка>
        ЗапросСправкиСМестаРаботыФормаДокумента.ОткрытьВМодальномОкне(КлючОбъекта = Документ как ЗапросСправкиСМестаРаботы.Ссылка)
    когда Тип<ЗапросСправкиПоОстаткамОтпуска.Ссылка>
        ЗапросСправкиПоОстаткамОтпускаФормаДокумента.ОткрытьВМодальномОкне(КлючОбъекта = Документ как ЗапросСправкиПоОстаткамОтпуска.Ссылка)
    ;
;

@ВПодсистеме
метод СписокВидовСправок(): ЧитаемыйМассив<ИнформацияОВидеСправки>
    пер СписокВидовСправок: Массив<ИнформацияОВидеСправки>
    для ВидСправкиПредопределенный из ВидыСправок.Элементы()
        если не ВидСправкиДоступен(ВидСправкиПредопределенный)
            продолжить
        ;
        если ВидСправкиПредопределенный == ВидыСправок.ПроизвольнаяСправкаСМестаРаботы
            для ВидСправкиПроизвольный из ВидыПроизвольныхСправок()
                если ВидСправкиПроизвольный.Используется
                    СписокВидовСправок.Добавить(новый ИнформацияОВидеСправки(ВидСправкиПроизвольный.Ссылка, ВидСправкиПроизвольный.Представление))
                ;
            ;
        ;
        СписокВидовСправок.Добавить(новый ИнформацияОВидеСправки(ВидСправкиПредопределенный, ВидСправкиПредопределенный.Представление()))
    ;
    возврат новый ЧитаемыйМассив<ИнформацияОВидеСправки>(СписокВидовСправок)
;