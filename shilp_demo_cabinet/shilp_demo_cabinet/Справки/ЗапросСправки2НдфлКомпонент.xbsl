импорт ИнтерфейсныеКомпонентыСтандартные
импорт ОбщегоНазначения
импорт Компания::Согласования
импорт УниверсальныеМеханизмы
импорт ОбщиеСтандартные
импорт УниверсальныеМеханизмы::ШаблоныДокументов

@НаСервере @НаКлиенте
@ВПодсистеме
структура ТабличныеЧасти
    пер ТаблицаСогласующие: Согласующие?
    пер ДополнительныеРеквизиты: РеквизитыШаблона?
;

// Контракт ДокументСотрудникаКомпонент

@ВПроекте
@Реализация
метод УстановитьТекущееЗаявление(Заявление: Объект)
    если Заявление это ЗапросСправки2Ндфл.Объект
        Объект = Заявление как ЗапросСправки2Ндфл.Объект
        ПрочитатьОбъект()
    ;
;

// Конец ДокументСотрудникаКомпонент

// Контракт ИнициализируемыйКомпонент

@ВПроекте
@Реализация
метод Инициализировать()
    ПрочитатьОбъект()
;

// Конец ИнициализируемыйКомпонент

@ВПодсистеме 
метод ВозможноРедактирование(): Булево
    возврат СостояниеЗапроса == СостоянияДокумента.Черновик или СостояниеЗапроса == Неопределено
;

@ВПодсистеме
метод ПроверкаЗаполнения(): Булево
    пер Результат = Истина
    если (Объект.Назначение) == Неопределено
        НазначениеСообщениеОшибка = "Не задано назначение справки"
        Результат = Ложь
    ;
    попытка 
        Результат = Результат и МенеджерДат.ДатаМожетБытьПереданаВV8(Объект.МесяцОкончанияПериодаПодтвержденияДохода)           
    поймать Ошибка: ИсключениеВалидации
        ПериодПодтвержденияДоходаСообщениеОшибка = Ошибка.Описание
        Результат = Ложь        
    ;
    
    Результат = Результат и Компоненты.СпособПолучения.ПроверкаЗаполнения()
    возврат Результат
;

метод ПрочитатьОбъект()
    если Объект.ЭтоНовый()
        УстановитьМесяцОкончанияПериодаПодтвержденияДохода()
        УстановитьКоличествоМесяцев()
        УстановитьМесяцНачалаПериодаПодтвержденияДохода()
        УстановитьВариантПолученияДокумента()
    ;
    пер ДанныеДокумента = ДополнительныеДанныеДокумента(Объект.Ссылка, Объект.ЭтоНовый())
    СостояниеЗапроса = ДанныеДокумента.Состояние
    пер ДанныеЗапроса: ФиксированнаяГруппа = Компоненты.ДанныеЗапроса
    ДанныеЗапроса.ТолькоЧтение = не ВозможноРедактирование()
    пер ОформленныеСправкиГруппаКомпонент: ФиксированнаяГруппа = Компоненты.Справки2Ндфл
    ОформленныеСправкиГруппаКомпонент.Содержимое.Очистить()
    если СостояниеЗапроса == СостоянияДокумента.Выполнен
        пер ОформленыеСправки2Ндфл = ДанныеДокумента.ОформленыеСправки2Ндфл
        если не ОформленыеСправки2Ндфл.Пусто()
            пер ВидимостьПоляГод: Булево = ВидимостьПоляГод()
            для ОформленнаяСправка2Ндфл из ОформленыеСправки2Ндфл
                пер СправкаКомпонент: Справка2НдфлКомпонент = новый Справка2НдфлКомпонент()
                СправкаКомпонент.РежимПросмотра = РежимПросмотра
                СправкаКомпонент.ОтображатьГодСправки = не ВидимостьПоляГод
                ОформленныеСправкиГруппаКомпонент.Содержимое.Добавить(СправкаКомпонент)
                
                пер ПараметрыКомпонентаСправка2Ндфл = новый Справка2НдфлКомпонент.ПараметрыКомпонента(ОформленнаяСправка2Ндфл)
                СправкаКомпонент.УстановитьПараметры(ПараметрыКомпонентаСправка2Ндфл)
            ;
        ;
    ;
    ТаблицаСогласующие = ДанныеДокумента.ТабличныеЧасти.ТаблицаСогласующие
    ДополнительныеРеквизиты = ДанныеДокумента.ТабличныеЧасти.ДополнительныеРеквизиты
    ДополнительныеРеквизиты = ДанныеДокумента.ТабличныеЧасти.ДополнительныеРеквизиты
    Компоненты.ДополнительныеРеквизиты.СобственнаяМодифицированность = Ложь
    если не РежимПросмотра
        ОтслеживатьИзменениеДанных(Компоненты.ДополнительныеРеквизиты, Истина)
    ;
    ИнтерфейсныеКомпоненты.ИнициализироватьПодчиненныеКомпоненты(Компоненты)
    СобственнаяМодифицированность = Ложь
    если Объект.ЭтоНовый()
        Компоненты.ДополнительныеРеквизиты.СобственнаяМодифицированность = не ДополнительныеРеквизиты.Реквизиты.Пусто()
    иначе
        Компоненты.ДополнительныеРеквизиты.СобственнаяМодифицированность = Ложь
    ;
;

метод НазначениеПриИзмененииЗначения(Источник: ПолеВводаРасширенноеНазначениеСправок2Ндфл, Событие: СобытиеПриИзменении<НазначениеСправок2Ндфл>)
    УстановитьКоличествоМесяцев()
    УстановитьМесяцНачалаПериодаПодтвержденияДохода()
    УстановитьМесяцОкончанияПериодаПодтвержденияДохода()
;

метод ПериодПодтвержденияДоходаПриИзмененииЗначения(Источник: ПолеВводаРасширенноеВидПериодаПодтвержденияДохода, Событие: СобытиеПриИзменении<ВидПериодаПодтвержденияДохода>)
    УстановитьКоличествоМесяцев()
    УстановитьМесяцНачалаПериодаПодтвержденияДохода()
    УстановитьМесяцОкончанияПериодаПодтвержденияДохода()
;

метод ПриИзмененииМесяцаОкончанияПериодаПодтвержденияДохода()
    если Объект?.МесяцОкончанияПериодаПодтвержденияДохода != Неопределено
        и Объект?.МесяцНачалаПериодаПодтвержденияДохода != Неопределено
        и (Объект.МесяцОкончанияПериодаПодтвержденияДохода) < (Объект.МесяцНачалаПериодаПодтвержденияДохода)
        Объект.МесяцНачалаПериодаПодтвержденияДохода = Объект.МесяцОкончанияПериодаПодтвержденияДохода
    ;
    УстановитьКоличествоМесяцев()
;

метод ПриИзмененииМесяцаНачалаПериодаПодтвержденияДохода()
    если Объект?.МесяцОкончанияПериодаПодтвержденияДохода != Неопределено
        и Объект?.МесяцНачалаПериодаПодтвержденияДохода != Неопределено
        и (Объект.МесяцОкончанияПериодаПодтвержденияДохода) < (Объект.МесяцНачалаПериодаПодтвержденияДохода)
        Объект.МесяцОкончанияПериодаПодтвержденияДохода = Объект.МесяцНачалаПериодаПодтвержденияДохода
    ;
    УстановитьКоличествоМесяцев()
;

метод ЗапросСправки2НдфлКомпонентЗаголовок(): Строка
    пер ЗаявлениеОбОтсутствииКомпонентЗаголовок: Строка
    если РежимПросмотра
        ЗаявлениеОбОтсутствииКомпонентЗаголовок = Справки.ЗАПРОС_СПРАВКИ_2_НДФЛ
    ;
    возврат ЗаявлениеОбОтсутствииКомпонентЗаголовок
;

метод ЗапросСправки2НдфлКомпонентОтступПоВертикали(): РазмерОтступа | Авто
    возврат РежимПросмотра ? РазмерОтступа.Двойной : РазмерОтступа.Отсутствует
;

метод УстановитьКоличествоМесяцев()
    если не ЭтоПодтверждениеДоходов()
        Объект.КоличествоМесяцев = 12
        возврат
    ;
    Объект.КоличествоМесяцев = 6
    если Объект.ПериодПодтвержденияДохода == ВидПериодаПодтвержденияДохода.ПоследниеТриМесяца
        Объект.КоличествоМесяцев = 3
    иначе если Объект.ПериодПодтвержденияДохода == ВидПериодаПодтвержденияДохода.ПоследниеДвенадцатьМесяцев
        Объект.КоличествоМесяцев = 12
    иначе если Объект.ПериодПодтвержденияДохода == ВидПериодаПодтвержденияДохода.Произвольный
        и Объект.МесяцНачалаПериодаПодтвержденияДохода != Неопределено
        и Объект.МесяцОкончанияПериодаПодтвержденияДохода != Неопределено
        пер ДатаНачала = Объект.МесяцНачалаПериодаПодтвержденияДохода
        пер ДатаОкончания = Объект.МесяцОкончанияПериодаПодтвержденияДохода
        Объект.КоличествоМесяцев = (ДатаОкончания.Месяц - ДатаНачала.Месяц) + (ДатаОкончания.Год - ДатаНачала.Год) * 12 + 1
    ;
;

метод УстановитьМесяцНачалаПериодаПодтвержденияДохода()
    если не ЭтоПодтверждениеДоходов()
        Объект.МесяцНачалаПериодаПодтвержденияДохода = Неопределено
        возврат
    ;
    пер ДатаНачала = Дата.Сейчас().НачалоМесяца().ДобавитьМесяцы(-(Объект.КоличествоМесяцев))
    Объект.МесяцНачалаПериодаПодтвержденияДохода = ДатаНачала
;

метод УстановитьМесяцОкончанияПериодаПодтвержденияДохода()
    если не ЭтоПодтверждениеДоходов()
        Объект.МесяцОкончанияПериодаПодтвержденияДохода = Неопределено
        возврат
    ;
    пер ДатаОкончания = Дата.Сейчас().НачалоМесяца().ДобавитьМесяцы(-1)
    Объект.МесяцОкончанияПериодаПодтвержденияДохода = ДатаОкончания
;

метод УстановитьВариантПолученияДокумента()
    пер ФункциональныеОпции: ОбщегоНазначения.ФункциональныеОпции = ОбщегоНазначения.ПараметрыСеанса().ФункциональныеОпции
    если ФункциональныеОпции.ФайлСЭлектроннойПодписью
        Объект.ВариантПолученияДокумента = ВариантыПолученияДокумента.ФайлСЭлектроннойПодписью
    ;   
;

метод ПояснениеЗаголовок(): Строка
    пер Пояснение: Строка
    если не ВозможноРедактирование() и СостояниеЗапроса != Неопределено
        пер ДатаОтправки: Дата? = Объект?.Дата
        Пояснение = Клиент.ПояснениеЗапросаПослеОтправки(ДатаОтправки, СостояниеЗапроса!)
    иначе если не РежимПросмотра
        Пояснение = "Выберите назначение 'Подтверждение доходов', если нужна справка для банка, посольства и т.д., или 'Для декларации', если нужна справка для заполнения декларации в налоговой инспекции"
    ;
    возврат Пояснение
;

метод ПояснениеВидимость(): Булево
    возврат не РежимПросмотра
;

метод Справки2НдфлГруппаВидимость(): Булево
    возврат Компоненты.Справки2Ндфл.Содержимое.Размер() != 0
;

метод ВидимостьПоляГод(): Булево
    возврат Объект?.Назначение == НазначениеСправок2Ндфл.ДекларированиеДоходов
;

метод ПериодПодтвержденияДоходаВидимость(): Булево
    возврат ЭтоПодтверждениеДоходов()
;

метод ПериодПодтвержденияДоходаПояснениеВидимость(): Булево
    возврат ЭтоПодтверждениеДоходов() и Объект?.ПериодПодтвержденияДохода != ВидПериодаПодтвержденияДохода.Произвольный
;

метод ПроизвольныйПериодПодтвержденияДоходаВидимость(): Булево
    возврат ЭтоПодтверждениеДоходов() и Объект?.ПериодПодтвержденияДохода == ВидПериодаПодтвержденияДохода.Произвольный
;

конст ФОРМАТ_ДАТЫ_МЕСЯЦ_ГОД = "ММММ гггг" 

метод НачалоПериодаПредставлениеЗаголовок(): Строка
    возврат МенеджерДат.ФорматДаты(Объект?.МесяцНачалаПериодаПодтвержденияДохода, ФОРМАТ_ДАТЫ_МЕСЯЦ_ГОД)
;

метод НачалоПериодаПредставлениеПриНажатии(Источник: Надпись, Событие: СобытиеПриНажатии)
    пер Год = Объект?.МесяцНачалаПериодаПодтвержденияДохода == Неопределено
        ? Дата.Сейчас().Год
        : (Объект.МесяцНачалаПериодаПодтвержденияДохода).Год
    
    пер НачалоПериода = ВыборМесяца.ОткрытьВМодальномОкне(ОжидатьЗакрытия = Истина, Год = Год)
    если НачалоПериода != Неопределено
        Объект.МесяцНачалаПериодаПодтвержденияДохода = НачалоПериода
        ПриИзмененииМесяцаНачалаПериодаПодтвержденияДохода()
    ;
;

метод ОкончаниеПериодаПредставлениеЗаголовок(): Строка
    возврат МенеджерДат.ФорматДаты(Объект?.МесяцОкончанияПериодаПодтвержденияДохода, ФОРМАТ_ДАТЫ_МЕСЯЦ_ГОД)
;

метод ОкончаниеПериодаПредставлениеПриНажатии(Источник: Надпись, Событие: СобытиеПриНажатии)
    пер Год = Объект.МесяцОкончанияПериодаПодтвержденияДохода == Неопределено
        ? Дата.Сейчас().Год
        : (Объект.МесяцОкончанияПериодаПодтвержденияДохода).Год
    пер ОкончаниеПериода = ВыборМесяца.ОткрытьВМодальномОкне(ОжидатьЗакрытия = Истина, Год = Год)
    если ОкончаниеПериода != Неопределено
        Объект.МесяцОкончанияПериодаПодтвержденияДохода = ОкончаниеПериода
        ПриИзмененииМесяцаОкончанияПериодаПодтвержденияДохода()
    ;
;

метод КоличествоМесяцевПредставлениеЗаголовок(): Строка
    если Объект == Неопределено
        возврат ""
    ;
    возврат Объект.КоличествоМесяцев.ВСтроку() + " " + МенеджерСтрок.ТекстПоКоличеству("месяц", Объект.КоличествоМесяцев)
;

метод ПериодПодтвержденияДоходаПояснениеЗаголовок(): Строка
    пер Период: Строка
    если Объект?.МесяцНачалаПериодаПодтвержденияДохода != Неопределено
        и Объект?.МесяцОкончанияПериодаПодтвержденияДохода != Неопределено
        пер Начало = МенеджерДат.ФорматДаты(Объект.МесяцНачалаПериодаПодтвержденияДохода, ФОРМАТ_ДАТЫ_МЕСЯЦ_ГОД)
        пер Окончание = МенеджерДат.ФорматДаты(Объект.МесяцОкончанияПериодаПодтвержденияДохода, ФОРМАТ_ДАТЫ_МЕСЯЦ_ГОД)
        Период = Начало + " - " + Окончание
    ;
    возврат Период
;

метод ЭтоПодтверждениеДоходов(): Булево
    возврат Объект?.Назначение == НазначениеСправок2Ндфл.ПодтверждениеДоходов
;

метод РежимПросмотра(): Булево
    возврат РежимПросмотра или не ВозможноРедактирование()
;

@НаСервере @НаКлиенте
структура ДополнительныеДанныеДокумента
    обз пер Состояние: СостоянияДокумента?
    обз пер ОформленыеСправки2Ндфл: Массив<Справка2Ндфл.Ссылка>
    обз пер ТабличныеЧасти: ТабличныеЧасти
;

@НаСервере @ДоступноСКлиента
статический метод ДополнительныеДанныеДокумента(Ссылка: ЗапросСправки2Ндфл.Ссылка?, ЭтоНовый: Булево): ДополнительныеДанныеДокумента
    пер Состояние: СостоянияДокумента? = СостДокументов.СостояниеДокумента(Ссылка)
    пер ОформленыеСправки2Ндфл = новый Массив<Справка2Ндфл.Ссылка>()
    если Состояние == СостоянияДокумента.Выполнен
        ОформленыеСправки2Ндфл.ДобавитьВсе(ОформленыеСправки2Ндфл(Ссылка))
    ;
    пер ТаблицаСогласующие = Согласования.Согласующие(Ссылка)
    пер ДополнительныеРеквизиты: РеквизитыШаблона?
    если ЭтоНовый
        ДополнительныеРеквизиты = ШаблоныДокументовМенеджер.РеквизитыШаблона(
            Неопределено, УниверсальныеМеханизмы.Ид(Справки.ИД_ПОДСИСТЕМЫ, Справки.ШАБЛОН_ЗАЯВЛЕНИЯ_СПРАВКИ_2НДФЛ))
        ДополнительныеРеквизиты.Владелец = Ссылка
    иначе
        ДополнительныеРеквизиты = ШаблоныДокументовМенеджер.РеквизитыШаблона(
            Ссылка, УниверсальныеМеханизмы.Ид(Справки.ИД_ПОДСИСТЕМЫ, Справки.ШАБЛОН_ЗАЯВЛЕНИЯ_СПРАВКИ_2НДФЛ))
    ;
        
    возврат новый ДополнительныеДанныеДокумента(Состояние, ОформленыеСправки2Ндфл,
        новый ТабличныеЧасти(ТаблицаСогласующие, ДополнительныеРеквизиты))
;


@НаСервере
статический метод ОформленыеСправки2Ндфл(ЗапросСправки: ЗапросСправки2Ндфл.Ссылка): ЧитаемаяКоллекция<Справка2Ндфл.Ссылка>
    возврат Справка2Ндфл.ОформленыеСправки2Ндфл(ЗапросСправки)
;

@ВПодсистеме
метод МодифицированныеТабличныеЧасти(): ТабличныеЧасти
    пер ТабличныеЧасти: ТабличныеЧасти
    если Компоненты.ДополнительныеРеквизиты.СобственнаяМодифицированность
        ТабличныеЧасти.ДополнительныеРеквизиты = ДополнительныеРеквизиты 
    ;
    возврат ТабличныеЧасти
;
