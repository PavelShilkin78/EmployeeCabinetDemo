импорт ОбщиеСтандартные
импорт ФизическиеЛица
импорт Компания
импорт ВебApi
импорт КонтрольДоступа
импорт ОбменДанными
импорт УниверсальныеМеханизмы

//Область РазрешенияДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): Массив<РазрешениеДоступа>
    возврат [КонтрольДоступа.ЧтениеАутентифицированным(этот),
            КонтрольДоступа.ПолныйДоступИнформационнойСистеме(этот)]
;

@Обработчик
метод ВычислитьРазрешенияДоступаДляОбъектов(Элементы: ЧитаемыйМассив<СправкаПоОстаткамОтпуска.ДанныеРасчетаРазрешений>): ЧитаемоеСоответствие<СправкаПоОстаткамОтпуска.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    знч Разрешения: Соответствие<СправкаПоОстаткамОтпуска.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    для Элемент из Элементы
        знч РазрешенияЭлемента: Множество<РазрешениеДоступа>
        РазрешенияЭлемента.Добавить(КонтрольДоступа.ПолныйДоступИнформационнойСистеме(этот))
        РазрешенияЭлемента.ДобавитьВсе(КонтрольДоступа.ЧтениеДанныхСправочниковПерсонально([Элемент.ФизическоеЛицо]))
        Разрешения.Вставить(Элемент, РазрешенияЭлемента)
    ;
    возврат Разрешения
;

//КонецОбласти

//Область JSON

@ВПроекте
структура ДанныеJson
    обз знч ID: Строка?
    обз знч personID: Строка?
    обз знч employerID: Строка?
    обз знч requestID: Строка
    обз знч note: Строка?
    обз знч attachment: МенеджерФайлов.ДанныеФайлаJson?
    обз знч document: Файлы.ЭлектронныйДокументJson?
;

@ВПодсистеме
структура ДанныеJson_V2_0
    обз знч ID: Строка?
    обз знч personID: Строка?
    обз знч employerID: Строка?
    обз знч requestID: Строка
    обз знч note: Строка?
    обз знч attachment: МенеджерФайлов.ДанныеФайлаJson?
    обз знч document: Файлы.ЭлектронныйДокументJson_V2_0?
;

@ВПодсистеме
структура ДанныеJson_V2_1
    обз знч ID: Строка?
    обз знч personID: Строка?
    обз знч employerID: Строка?
    обз знч requestID: Строка
    обз знч note: Строка?
    обз знч attachment: МенеджерФайлов.ДанныеФайлаJson?
    обз знч document: Файлы.ЭлектронныйДокументJson_V2_1?
;

@ВПроекте
метод ТипДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    если ВерсияФорматаОбмена == Неопределено
        возврат Тип<ДанныеJson>
    иначе если ВерсияФорматаОбмена >= Версия{2.1}
        возврат Тип<ДанныеJson_V2_1>
    иначе если ВерсияФорматаОбмена >= Версия{2.0}
        возврат Тип<ДанныеJson_V2_0>
    иначе если ВерсияФорматаОбмена >= Версия{1.0}
        возврат Тип<ДанныеJson>
    ;
;

@ВПроекте
метод ТипКоллекцииДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    если ВерсияФорматаОбмена == Неопределено
        возврат Тип<Массив<ДанныеJson>>
    иначе если ВерсияФорматаОбмена >= Версия{2.1}
        возврат Тип<Массив<ДанныеJson_V2_1>>
    иначе если ВерсияФорматаОбмена >= Версия{2.0}
        возврат Тип<Массив<ДанныеJson_V2_0>>
    иначе если ВерсияФорматаОбмена >= Версия{1.0}
        возврат Тип<Массив<ДанныеJson>>
    ;
;

@ВПроекте
метод ТипОбъектаJson(): Строка
    возврат "vacationBalanceReports"
;

@ВПроекте
метод ЗагрузитьОбъектИзJson(ДанныеJson: ДанныеJson, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)

    исп Транзакции.Начать() 

    пер Справка: СправкаПоОстаткамОтпуска.Объект?
    если ДанныеJson.ID == Неопределено
        Справка = новый СправкаПоОстаткамОтпуска.Объект()
    иначе
        Справка = Сервисы.ПрочитатьОбъект(ДанныеJson.ID,
            &СправкаПоОстаткамОтпуска.Объект.новый(Ууид), Тип<СправкаПоОстаткамОтпуска.Ссылка>) как СправкаПоОстаткамОтпуска.Объект
    ;
    знч ЗапросСправки = ОбменДанными.ИдентификаторыЛокальныхОбъектов([ДанныеJson.requestID], Тип<ЗапросСправкиПоОстаткамОтпуска.Ссылка>)
                        .ПолучитьИлиУмолчание(ДанныеJson.requestID)

    если ДанныеJson.personID != Неопределено
        Справка.ФизическоеЛицо
            = Сервисы.ПолучитьСсылку(ФизическиеЛица.ВнешняяСсылка(ДанныеJson.personID)) как ФизическиеЛица.Ссылка
    ;

    если ДанныеJson.employerID != Неопределено
        Справка.МестоРаботы
            = Сервисы.ПолучитьСсылку(Организации.ВнешняяСсылка(ДанныеJson.employerID)) как Организации.Ссылка
    ;

    Справка.ЗапросСправки = ЗапросСправки как ЗапросСправкиПоОстаткамОтпуска.Ссылка?
    если Справка.ЗапросСправки == Неопределено
        Справка.Владелец = ЗапросСправкиПоОстаткамОтпуска.ЗапросСправкиПоУмолчанию()
    иначе
        Справка.Владелец = Справка.ЗапросСправки
    ;
    
    Справка.Комментарий = ДанныеJson.note ?? ""

    пер ФайлыДокумента: Массив<Файлы.Объект>
    если ДанныеJson.document != Неопределено
        ФайлыДокумента = Файлы.ВложенияИзJson(ДанныеJson.document, Сервисы, Справка.Ссылка)
        для ФайлДокумента из ФайлыДокумента
            если ФайлДокумента.ВидФайла == ВидыФайла.ЭлектронныйДокумент
                Справка.Файл = ФайлДокумента.Ссылка
                прервать
            ;
        ;
    иначе если ДанныеJson.attachment != Неопределено
        знч ДанныеЗагруженногоФайла = ОбменДанными.ЗагруженныйФайл(ДанныеJson.attachment)
        знч ФайлОбъект = Файлы.НовыйФайл(ДанныеЗагруженногоФайла.Загрузить(), ДанныеJson.attachment.size)
        ФайлОбъект.ЗаполнитьПоЗагруженномуФайлу(ДанныеJson.attachment)        
        Справка.Файл = ФайлОбъект.Ссылка 
        ФайлыДокумента.Добавить(ФайлОбъект)
    ;
    Сервисы.ЗаписатьОбъект(новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(Справка, ДанныеJson.ID == Неопределено ? "" : ДанныеJson.ID),
        Сервисы.ИнструментыМенеджераОбъекта)
    Файлы.ЗаписатьФайлыПоВладельцу(ФайлыДокумента, Справка.ЗапросСправки)
;

@ВПроекте
метод ЗагрузитьОбъектИзJson(ДанныеJson: ДанныеJson_V2_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)

    исп Транзакции.Начать() 

    пер Справка: СправкаПоОстаткамОтпуска.Объект?
    если ДанныеJson.ID == Неопределено
        Справка = новый СправкаПоОстаткамОтпуска.Объект()
    иначе
        Справка = Сервисы.ПрочитатьОбъект(ДанныеJson.ID,
            &СправкаПоОстаткамОтпуска.Объект.новый(Ууид), Тип<СправкаПоОстаткамОтпуска.Ссылка>) как СправкаПоОстаткамОтпуска.Объект
    ;
    знч ЗапросСправки = ОбменДанными.ИдентификаторыЛокальныхОбъектов([ДанныеJson.requestID], Тип<ЗапросСправкиПоОстаткамОтпуска.Ссылка>)
                        .ПолучитьИлиУмолчание(ДанныеJson.requestID)

    если ДанныеJson.personID != Неопределено
        Справка.ФизическоеЛицо
            = Сервисы.ПолучитьСсылку(ФизическиеЛица.ВнешняяСсылка(ДанныеJson.personID)) как ФизическиеЛица.Ссылка
    ;

    если ДанныеJson.employerID != Неопределено
        Справка.МестоРаботы
            = Сервисы.ПолучитьСсылку(Организации.ВнешняяСсылка(ДанныеJson.employerID)) как Организации.Ссылка
    ;

    Справка.ЗапросСправки = ЗапросСправки как ЗапросСправкиПоОстаткамОтпуска.Ссылка?
    если Справка.ЗапросСправки == Неопределено
        Справка.Владелец = ЗапросСправкиПоОстаткамОтпуска.ЗапросСправкиПоУмолчанию()
    иначе
        Справка.Владелец = Справка.ЗапросСправки
    ;
    
    Справка.Комментарий = ДанныеJson.note ?? ""

    пер ФайлыДокумента: Массив<Файлы.Объект>
    если ДанныеJson.document != Неопределено
        ФайлыДокумента = Файлы.ВложенияИзJson_V2_0(ДанныеJson.document, Сервисы, Справка.Ссылка)
        для ФайлДокумента из ФайлыДокумента
            если ФайлДокумента.ВидФайла == ВидыФайла.ЭлектронныйДокумент
                Справка.Файл = ФайлДокумента.Ссылка
                прервать
            ;
        ;
    иначе если ДанныеJson.attachment != Неопределено
        знч ДанныеЗагруженногоФайла = ОбменДанными.ЗагруженныйФайл(ДанныеJson.attachment)
        знч ФайлОбъект = Файлы.НовыйФайл(ДанныеЗагруженногоФайла.Загрузить(), ДанныеJson.attachment.size)
        ФайлОбъект.ЗаполнитьПоЗагруженномуФайлу(ДанныеJson.attachment)        
        Справка.Файл = ФайлОбъект.Ссылка 
        ФайлыДокумента.Добавить(ФайлОбъект)
    ;
    Сервисы.ЗаписатьОбъект(новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(Справка, ДанныеJson.ID == Неопределено ? "" : ДанныеJson.ID),
        Сервисы.ИнструментыМенеджераОбъекта)
    Файлы.ЗаписатьФайлыПоВладельцу(ФайлыДокумента, Справка.ЗапросСправки)
;

@ВПроекте
метод ЗагрузитьОбъектИзJson(ДанныеJson: ДанныеJson_V2_1, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)

    исп Транзакции.Начать() 

    пер Справка: СправкаПоОстаткамОтпуска.Объект?
    если ДанныеJson.ID == Неопределено
        Справка = новый СправкаПоОстаткамОтпуска.Объект()
    иначе
        Справка = Сервисы.ПрочитатьОбъект(ДанныеJson.ID,
            &СправкаПоОстаткамОтпуска.Объект.новый(Ууид), Тип<СправкаПоОстаткамОтпуска.Ссылка>) как СправкаПоОстаткамОтпуска.Объект
    ;
    знч ЗапросСправки = ОбменДанными.ИдентификаторыЛокальныхОбъектов([ДанныеJson.requestID], Тип<ЗапросСправкиПоОстаткамОтпуска.Ссылка>)
                        .ПолучитьИлиУмолчание(ДанныеJson.requestID)

    если ДанныеJson.personID != Неопределено
        Справка.ФизическоеЛицо
            = Сервисы.ПолучитьСсылку(ФизическиеЛица.ВнешняяСсылка(ДанныеJson.personID)) как ФизическиеЛица.Ссылка
    ;

    если ДанныеJson.employerID != Неопределено
        Справка.МестоРаботы
            = Сервисы.ПолучитьСсылку(Организации.ВнешняяСсылка(ДанныеJson.employerID)) как Организации.Ссылка
    ;

    Справка.ЗапросСправки = ЗапросСправки как ЗапросСправкиПоОстаткамОтпуска.Ссылка?
    если Справка.ЗапросСправки == Неопределено
        Справка.Владелец = ЗапросСправкиПоОстаткамОтпуска.ЗапросСправкиПоУмолчанию()
    иначе
        Справка.Владелец = Справка.ЗапросСправки
    ;
    
    Справка.Комментарий = ДанныеJson.note ?? ""

    пер ФайлыДокумента: Массив<Файлы.Объект>
    если ДанныеJson.document != Неопределено
        ФайлыДокумента = Файлы.ВложенияИзJson_V2_1(ДанныеJson.document, Сервисы, Справка.Ссылка)
        для ФайлДокумента из ФайлыДокумента
            если ФайлДокумента.ВидФайла == ВидыФайла.ЭлектронныйДокумент
                Справка.Файл = ФайлДокумента.Ссылка
                Справка.ВариантПодписания = Файлы.ВариантПодписанияДокументаИзJson(ДанныеJson.document)
                прервать
            ;
        ;
    иначе если ДанныеJson.attachment != Неопределено
        знч ДанныеЗагруженногоФайла = ОбменДанными.ЗагруженныйФайл(ДанныеJson.attachment)
        знч ФайлОбъект = Файлы.НовыйФайл(ДанныеЗагруженногоФайла.Загрузить(), ДанныеJson.attachment.size)
        ФайлОбъект.ЗаполнитьПоЗагруженномуФайлу(ДанныеJson.attachment)        
        Справка.Файл = ФайлОбъект.Ссылка 
        ФайлыДокумента.Добавить(ФайлОбъект)
    ;
    Сервисы.ЗаписатьОбъект(новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(Справка, ДанныеJson.ID == Неопределено ? "" : ДанныеJson.ID),
        Сервисы.ИнструментыМенеджераОбъекта)
    Файлы.ЗаписатьФайлыПоВладельцу(ФайлыДокумента, Справка.ЗапросСправки)
;

метод ДанныеСправок(Справки: ЧитаемыйМассив<СправкаПоОстаткамОтпуска.Ссылка>):
    Соответствие<СправкаПоОстаткамОтпуска.Ссылка, ЧитаемоеСоответствие<Строка, Объект?>>

    пер Данные: Соответствие<СправкаПоОстаткамОтпуска.Ссылка, ЧитаемоеСоответствие<Строка, Объект?>>

    знч Запрос = Запрос{
        Выбрать
            Ссылка,
            ЗапросСправки,
            ФизическоеЛицо,
            МестоРаботы,
            Комментарий
        Из 
            СправкаПоОстаткамОтпуска
        Где 
            Ссылка В (%Справки)}
    исп Результат = Запрос.Выполнить() 
    для РезультатСтрока из Результат
        Данные.Вставить(
            РезультатСтрока.Ссылка, 
            МенеджерЗапросов.СтрокаРезультатаЗапросаВСоответствие(РезультатСтрока, Результат))
    ;
    возврат Данные
;

@ВПодсистеме
метод ФизическиеЛицаДокументов(Документы: ЧитаемыйМассив<СправкаПоОстаткамОтпуска.Ссылка>): ЧитаемоеСоответствие<СправкаПоОстаткамОтпуска.Ссылка, ЧитаемыйМассив<ФизическиеЛица.Ссылка>>
    знч ФизическиеЛицаДокументов: Соответствие<СправкаПоОстаткамОтпуска.Ссылка, ЧитаемыйМассив<ФизическиеЛица.Ссылка>>
    знч Запрос = Запрос{
        Выбрать
            Ссылка,
            ФизическоеЛицо
        ИЗ
            СправкаПоОстаткамОтпуска
        ГДЕ
            Ссылка в (%Документы)   
    }
    
    исп Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        ФизическиеЛицаДокументов.Вставить(СтрокаРезультата.Ссылка, [СтрокаРезультата.ФизическоеЛицо])    
    ;
    возврат ФизическиеЛицаДокументов
;

//КонецОбласти