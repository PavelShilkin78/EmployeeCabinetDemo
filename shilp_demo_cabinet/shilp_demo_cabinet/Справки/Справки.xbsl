импорт СтандартноеПриложение
импорт ОбщегоНазначения
импорт ОбщиеСтандартные
импорт УниверсальныеМеханизмы
импорт ФизическиеЛица

@ВПроекте
@НаКлиенте
конст ИД_РАЗДЕЛА_СПРАВКИ = "Справки"

@ВПодсистеме
@НаКлиенте
конст ИМЯ_РАЗДЕЛА_СПРАВКИ = "Справки"

@ВПодсистеме 
@НаКлиенте конст ЗАПРОС_СПРАВКИ_ОБ_ОТПУСКАХ = "Запрос справки об отпусках"
@ВПодсистеме 
@НаКлиенте конст ЗАПРОС_СПРАВКИ_2_НДФЛ = "Запрос справки 2-НДФЛ"

@ВПодсистеме конст ПОДСИСТЕМА_СПРАВКИ = "Справки"
@ВПодсистеме конст ШАБЛОН_ЗАЯВЛЕНИЯ_СПРАВКИ_2НДФЛ = "ШаблонЗавяленияНаСправку2НДФЛ"
@ВПодсистеме конст ШАБЛОН_ЗАЯВЛЕНИЯ_СПРАВКИ_С_МЕСТА_РАБОТЫ = "ШаблонЗавяленияНаСправкуСМестаРаботы"

@ВПроекте
конст ИД_ПОДСИСТЕМЫ = "Справки"

@ВПроекте
структура ФункциональныеОпции
  
    пер Справка2Ндфл: Булево = Истина
    пер СправкаСМестаРаботы: Булево = Истина
    пер СправкаПоОстаткамОтпуска: Булево = Истина
    пер ИнформацияОСправках: Булево = Истина
;

@НаСервере 
структура ДанныеСправки
    обз пер ДатаДокумента: Дата
    обз пер Представление: Строка
;

@ВПроекте
@НаСервере
метод ПолучитьФункциональныеОпции(): ФункциональныеОпции?
    возврат ИспользуемаяФункциональность.ФункциональныеОпции()
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ЗаписатьФункциональныеОпции(ФункциональныеОпции: ФункциональныеОпции)
    ИспользуемаяФункциональность.ЗаписатьФункциональныеОпции(ФункциональныеОпции)
;

@ВПроекте
@НаКлиенте
метод ПараметрыСеанса(): ПараметрыСеанса
    возврат ПараметрыСеансаСервис.ПолучитьСервис().ПараметрПоКлючу(КЛЮЧ_ПАРАМЕТРОВ_СЕАНСА) как ПараметрыСеанса
;

@ВПодсистеме
конст КЛЮЧ_ПАРАМЕТРОВ_СЕАНСА: Строка = "СправкиПараметрыСеанса" 

@ВПроекте
структура ПараметрыСеанса
    пер ВидыПроизвольныхСправок: Соответствие<ВидыПроизвольныхСправок.Ссылка, ВидыПроизвольныхСправокКлиентСервер.ВидСправки> = {:}
    пер ФункциональныеОпции: ФункциональныеОпции
;

@ВПодсистеме
@НаСервере @ДоступноСКлиента
метод ПредставленияСправокФизлица(ФизическоеЛицо: ФизическиеЛица.Ссылка?): ЧитаемаяКоллекция<СостояниеДокументаКомпонентДанных>
    пер ПредставленияСправокФизлица: Массив<СостояниеДокументаКомпонентДанных>
    если ФизическоеЛицо == Неопределено
        возврат ПредставленияСправокФизлица
    ;
    знч Запрос = Запрос{
        Выбрать
            Справки.Документ Как Документ,
            Справки.ДатаДокумента Как ДатаДокумента,
            Справки.Представление Как Представление
        Из (Выбрать
                Ссылка Как Документ,
                Дата Как ДатаДокумента,
                ПредставлениеДокумента Как Представление,
                МоментСоздания Как МоментСоздания
            Из ЗапросСправки2Ндфл
            Где ФизическоеЛицо == %ФизическоеЛицо
            Объединить Все
            Выбрать
                Ссылка,
                Дата,
                ПредставлениеДокумента,
                МоментСоздания
            Из ЗапросСправкиСМестаРаботы
            Где ФизическоеЛицо == %ФизическоеЛицо
            Объединить Все
            Выбрать
                Ссылка,
                Дата,
                ПредставлениеДокумента,
                МоментСоздания
            Из ЗапросСправкиПоОстаткамОтпуска
            Где ФизическоеЛицо == %ФизическоеЛицо) Как Справки
        Упорядочить по Справки.МоментСоздания Убыв}
    ПредставленияСправокФизлица = ДанныеПредставлений(Запрос)
    возврат ПредставленияСправокФизлица
;

@ВПодсистеме
@НаСервере @ДоступноСКлиента
метод ПредставленияСправокФизлица(ФизическоеЛицо: ФизическиеЛица.Ссылка?, КоличествоЭлементов: Число): ЧитаемаяКоллекция<СостояниеДокументаКомпонентДанных>
    пер ПредставленияСправокФизлица: Массив<СостояниеДокументаКомпонентДанных>
    если ФизическоеЛицо == Неопределено
        возврат ПредставленияСправокФизлица
    ;
    знч Запрос = Запрос{
        Выбрать Первые %КоличествоЭлементов
            Справки.Документ Как Документ,
            Справки.ДатаДокумента Как ДатаДокумента,
            Справки.Представление Как Представление
        Из (Выбрать Первые %КоличествоЭлементов
                Ссылка Как Документ,
                Дата Как ДатаДокумента,
                ПредставлениеДокумента Как Представление,
                МоментСоздания Как МоментСоздания
            Из ЗапросСправки2Ндфл
            Где ФизическоеЛицо == %ФизическоеЛицо
            Объединить Все
            Выбрать Первые %КоличествоЭлементов
                Ссылка,
                Дата,
                ПредставлениеДокумента,
                МоментСоздания
            Из ЗапросСправкиСМестаРаботы
            Где ФизическоеЛицо == %ФизическоеЛицо
            Объединить Все
            Выбрать Первые %КоличествоЭлементов
                Ссылка,
                Дата,
                ПредставлениеДокумента,
                МоментСоздания
            Из ЗапросСправкиПоОстаткамОтпуска
            Где ФизическоеЛицо == %ФизическоеЛицо) Как Справки
        Упорядочить По Справки.МоментСоздания Убыв}
    ПредставленияСправокФизлица = ДанныеПредставлений(Запрос)
    возврат ПредставленияСправокФизлица
;

@НаСервере
метод ДанныеПредставлений(Запрос: ТипизированныйЗапрос<неизвестно>): Массив<СостояниеДокументаКомпонентДанных>
    пер ПредставленияСправокФизлица: Массив<СостояниеДокументаКомпонентДанных>
    знч СправкиФизлица: Массив<ДокументИмеющийСостояние.Ссылка>
    знч ДанныеСправок: Соответствие<ДокументИмеющийСостояние.Ссылка, ДанныеСправки>
    исп РезультатЗапроса = Запрос.Выполнить()
    для СтрокаРезультата из РезультатЗапроса
        СправкиФизлица.Добавить(СтрокаРезультата.Документ)
        ДанныеСправок.Вставить(СтрокаРезультата.Документ, новый ДанныеСправки(СтрокаРезультата.ДатаДокумента, СтрокаРезультата.Представление))
    ;
    ПредставленияСправокФизлица = СостДокументов.СостоянияДокументов(СправкиФизлица)
    для Компонент из ПредставленияСправокФизлица
        Компонент.ДатаДокумента = ДанныеСправок[Компонент.Документ].ДатаДокумента
        Компонент.Представление = ДанныеСправок[Компонент.Документ].Представление
        Компонент.ДополнительноеПредставление = МенеджерДат.ФорматДаты(ДанныеСправок[Компонент.Документ].ДатаДокумента)
    ;
    знч Сервисы = СостояниеДокументовПоставщик.ПолучитьСервисы()
    для Сервис из Сервисы
        Сервис.ЗаполнитьКартинкиДокументов(ПредставленияСправокФизлица)
    ;
    возврат ПредставленияСправокФизлица
;