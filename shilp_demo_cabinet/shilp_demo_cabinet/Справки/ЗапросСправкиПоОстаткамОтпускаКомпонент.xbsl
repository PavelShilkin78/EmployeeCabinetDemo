импорт ИнтерфейсныеКомпонентыСтандартные
импорт ОбщегоНазначения
импорт Компания::Согласования
импорт УниверсальныеМеханизмы
импорт УниверсальныеМеханизмы::ШаблоныДокументов
импорт Отпуск

@НаСервере @НаКлиенте
@ВПодсистеме
структура ТабличныеЧасти
    пер ТаблицаФайлы: ПрисоединенныеФайлы?
    пер ТаблицаСогласующие: Согласующие?
    пер ДополнительныеРеквизиты: РеквизитыШаблона?
;

// Контракт ДокументСотрудникаКомпонент

@ВПроекте
@Реализация
метод УстановитьТекущееЗаявление(Заявление: Объект)
    если Заявление это ЗапросСправкиПоОстаткамОтпуска.Объект
        Объект = Заявление как ЗапросСправкиПоОстаткамОтпуска.Объект
        ПрочитатьОбъект()
    ;
;

// Конец ДокументСотрудникаКомпонент

//Контракт ИнициализируемыйКомпонент

@ВПроекте
@Реализация
метод Инициализировать()
    ПрочитатьОбъект()
;

//Конец ИнициализируемыйКомпонент

@ВПодсистеме
метод ВозможноРедактирование(): Булево
    возврат СостояниеЗапроса == СостоянияДокумента.Черновик или СостояниеЗапроса == Неопределено
;

@ВПодсистеме
метод ПроверкаЗаполнения(): Булево
    возврат Компоненты.СпособПолучения.ПроверкаЗаполнения()
;

метод ПрочитатьОбъект()
    Компоненты.СпособПолучения.ИсключаемыеВарианты.ДобавитьВсе(ИсключаемыеВариантыПолученияДокумента())
    пер ДанныеДокумента = ДополнительныеДанныеДокумента(Объект.ЭтоНовый(), Объект.Ссылка)
    СостояниеЗапроса = ДанныеДокумента.Состояние
    если Объект.ЭтоНовый()
        ТаблицаФайлы.Владелец = Объект.Ссылка
        УстановитьВариантПолученияДокумента()
    иначе
        ТаблицаФайлы = ДанныеДокумента.ТабличныеЧасти.ТаблицаФайлы
        ТаблицаСогласующие = ДанныеДокумента.ТабличныеЧасти.ТаблицаСогласующие
        ОтслеживатьИзменениеДанных(Компоненты.ПрисоединенныеФайлы, Истина)
    ;
    ДополнительныеРеквизиты = ДанныеДокумента.ТабличныеЧасти.ДополнительныеРеквизиты
    если Объект.ЭтоНовый()
        Компоненты.ДополнительныеРеквизиты.СобственнаяМодифицированность = не ДополнительныеРеквизиты.Реквизиты.Пусто()
    иначе
        Компоненты.ДополнительныеРеквизиты.СобственнаяМодифицированность = Ложь
    ;
    если не РежимПросмотра
        ОтслеживатьИзменениеДанных(Компоненты.ДополнительныеРеквизиты, Истина)
    ;
    ИнтерфейсныеКомпоненты.ИнициализироватьПодчиненныеКомпоненты(Компоненты)
    СобственнаяМодифицированность = Ложь
;

метод ЗапросСправкиПоОстаткамОтпускаКомпонентЗаголовок(): Строка
    пер ЗаявлениеОбОтсутствииКомпонентЗаголовок: Строка
    если РежимПросмотра
        ЗаявлениеОбОтсутствииКомпонентЗаголовок = Справки.ЗАПРОС_СПРАВКИ_ОБ_ОТПУСКАХ
    ;
    возврат ЗаявлениеОбОтсутствииКомпонентЗаголовок
;

метод ЗапросСправкиПоОстаткамОтпускаКомпонентОтступПоВертикали(): РазмерОтступа | Авто
    возврат РежимПросмотра ? РазмерОтступа.Двойной : РазмерОтступа.Отсутствует
;

метод ПояснениеЗаголовок(): Строка
    пер Пояснение: Строка
    если не ВозможноРедактирование()
        пер ДатаОтправки = Объект.Дата
        Пояснение = Клиент.ПояснениеЗапросаПослеОтправки(ДатаОтправки, СостояниеЗапроса!)
    иначе если не РежимПросмотра 
        Пояснение =  
            "Справка об использованных отпусках подскажет, какие права на отпуск у вас есть, напомнит, когда и сколько дней отпуска вы уже использовали.
            Это позволит понять, как сложился текущий остаток отпуска."
    ;
    возврат Пояснение
;

метод ПояснениеВидимость(): Булево
    возврат не РежимПросмотра
;

метод СостояниеЗаголовок(): Строка
    если СостояниеЗапроса == Неопределено
        или СостояниеЗапроса == СостоянияДокумента.Подготовлен
        возврат "Запрос обрабатывается ..."
    иначе если СостояниеЗапроса != СостоянияДокумента.Выполнен
        возврат "Обработка запроса остановлена ..."
    ;
    возврат ""     
;

метод РежимПросмотра(): Булево
    возврат РежимПросмотра или не ВозможноРедактирование()
;

метод УстановитьВариантПолученияДокумента()
    пер ФункциональныеОпции: ОбщегоНазначения.ФункциональныеОпции 
        = ОбщегоНазначения.ПараметрыСеанса().ФункциональныеОпции
    если ФункциональныеОпции.ФайлДляВыводаНаПринтер
        Объект.ВариантПолученияДокумента = ВариантыПолученияДокумента.ФайлДляВыводаНаПринтер
    ;  
;

@НаСервере @НаКлиенте
структура ДополнительныеДанныеДокумента
    обз пер Состояние: СостоянияДокумента?
    обз пер ТабличныеЧасти: ТабличныеЧасти
;

@НаСервере @ДоступноСКлиента
статический метод ДополнительныеДанныеДокумента(ЭтоНовый: Булево, Ссылка: ЗапросСправкиПоОстаткамОтпуска.Ссылка): ДополнительныеДанныеДокумента
    пер ДополнительныеРеквизиты: РеквизитыШаблона?
    если ЭтоНовый
        ДополнительныеРеквизиты = ШаблоныДокументовМенеджер.РеквизитыШаблона(
            Неопределено, УниверсальныеМеханизмы.Ид(Отпуск.ИД_ПОДСИСТЕМЫ, Отпуск.ШАБЛОН_ЗАЯВЛЕНИЯ_НА_СПРАВКУ_ОБ_ОСТАТКАХ))
        ДополнительныеРеквизиты.Владелец = Ссылка
    иначе
        ДополнительныеРеквизиты = ШаблоныДокументовМенеджер.РеквизитыШаблона(
            Ссылка, УниверсальныеМеханизмы.Ид(Отпуск.ИД_ПОДСИСТЕМЫ, Отпуск.ШАБЛОН_ЗАЯВЛЕНИЯ_НА_СПРАВКУ_ОБ_ОСТАТКАХ))
    ;
    возврат новый ДополнительныеДанныеДокумента(
        СостДокументов.СостояниеДокумента(Ссылка), 
        новый ТабличныеЧасти(
            ПрисоединенныеФайлыМенеджер.ПрисоединенныеФайлы(Ссылка),
            Согласования.Согласующие(Ссылка),
            ДополнительныеРеквизиты))
;

@НаСервере @ДоступноСКлиента
статический метод ИсключаемыеВариантыПолученияДокумента(): ЧитаемыйМассив<ВариантыПолученияДокумента>
    возврат ЗапросСправкиПоОстаткамОтпуска.ИсключаемыеВариантыПолученияДокумента()
;

@ВПодсистеме
метод МодифицированныеТабличныеЧасти(): ТабличныеЧасти
    пер ТабличныеЧасти: ТабличныеЧасти
    ТабличныеЧасти.ДополнительныеРеквизиты = ДополнительныеРеквизиты 
    возврат ТабличныеЧасти
;
