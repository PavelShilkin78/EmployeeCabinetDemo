импорт ИнтерфейсныеКомпонентыСтандартные
импорт ОбщегоНазначения
импорт Компания::Согласования
импорт УниверсальныеМеханизмы
импорт УниверсальныеМеханизмы::ШаблоныДокументов

// Контракт ДокументСотрудникаКомпонент

@ВПроекте
@Реализация
метод УстановитьТекущееЗаявление(Заявление: Объект)
    если Заявление это ЗапросСправкиСМестаРаботы.Объект
        Объект = Заявление как ЗапросСправкиСМестаРаботы.Объект
        ПрочитатьОбъект()
    ;
;

// Конец ДокументСотрудникаКомпонент

// Контракт ДокументСотрудникаКомпонент

@ВПроекте
@Реализация
метод Инициализировать()
    ПрочитатьОбъект()
;

// Конец ДокументСотрудникаКомпонент

@ВПодсистеме
метод ЗаголовокФормы(): Строка
    пер ЗаголовокФормы: Строка
    если не (Объект?.ЭтоНовый() ?? Истина)
        ЗаголовокФормы = Объект.ПредставлениеДокумента
    иначе
        пер ВидСправкиПредставление: Строка 
        если ЭтоЗапросПроизвольнойСправки()
            ВидСправкиПредставление = ДанныеВидаСправки.Представление
        ;
        ЗаголовокФормы = ЗапросСправкиСМестаРаботыКлиентСервер.ЗаголовокНовогоДокумента(ВидСправкиПредставление)
    ;
    возврат ЗаголовокФормы
;

@ВПодсистеме
метод ВозможноРедактирование(): Булево
    возврат СостояниеЗапроса == СостоянияДокумента.Черновик или СостояниеЗапроса == Неопределено
;

@ВПодсистеме
метод МодифицированныеТабличныеЧасти(): ЗапросСправкиСМестаРаботыКомпонент.ТабличныеЧасти
    пер ТабличныеЧасти: ЗапросСправкиСМестаРаботыКомпонент.ТабличныеЧасти
    если Компоненты.ПрисоединенныеФайлы.СобственнаяМодифицированность
        ОбщегоНазначения.ОчиститьКлиентскиеДанные(ТаблицаФайлы)    
        ТабличныеЧасти.ТаблицаФайлы = ТаблицаФайлы
    ;
    если Компоненты.ДополнительныеРеквизиты.СобственнаяМодифицированность
        ТабличныеЧасти.ДополнительныеРеквизиты = ДополнительныеРеквизиты
    ;
    возврат ТабличныеЧасти
;

@ВПодсистеме 
метод СброситьМодифицированностьТабличныхЧастей()
    Компоненты.ПрисоединенныеФайлы.СобственнаяМодифицированность = Ложь
    Компоненты.ДополнительныеРеквизиты.СобственнаяМодифицированность = Ложь
;

@ВПодсистеме
метод ПроверкаЗаполнения(): Булево
    возврат Компоненты.СпособПолучения.ПроверкаЗаполнения()
;

метод ПрочитатьОбъект()
    если ВидСправки != Неопределено
        Объект.ВидСправки = ВидСправки
    ;
    пер ДанныеДокумента = ДополнительныеДанныеДокумента(Объект.Ссылка, Объект.ВидСправки, Объект.ЭтоНовый())
    СостояниеЗапроса = ДанныеДокумента.Состояние
    пер ДанныеЗапроса: ФиксированнаяГруппа = Компоненты.ДанныеЗапроса
    ДанныеЗапроса.ТолькоЧтение = не ВозможноРедактирование()
    пер СправкиСМестаРаботы = ДанныеДокумента.СправкиСМестаРаботы
    Компоненты.СправкиСМестаРаботы.Содержимое.Очистить()
    для СправкаСМестаРаботы из СправкиСМестаРаботы
        пер СправкаСМестаРаботыКомпонент = новый СправкаСМестаРаботыКарточка()
        СправкаСМестаРаботыКомпонент.РежимПросмотра = РежимПросмотра
        СправкаСМестаРаботыКомпонент.СправкаСМестаРаботыСсылка = СправкаСМестаРаботы
        СправкаСМестаРаботыКомпонент.ПоказатьОрганизацию = СправкиСМестаРаботы.Граница() > 0
        СправкаСМестаРаботыКомпонент.Инициализировать()
        Компоненты.СправкиСМестаРаботы.Содержимое.Добавить(СправкаСМестаРаботыКомпонент)
    ;
    если Объект.ЭтоНовый()
        ТаблицаФайлы.Владелец = Объект.Ссылка
        УстановитьВариантПолученияДокумента()
    иначе
        ТаблицаФайлы = ДанныеДокумента.ТабличныеЧасти.ТаблицаФайлы
        ТаблицаСогласующие = ДанныеДокумента.ТабличныеЧасти.ТаблицаСогласующие
        ОтслеживатьИзменениеДанных(Компоненты.ПрисоединенныеФайлы, Истина)
    ;
    ДанныеВидаСправки = Неопределено
    если Объект.ВидСправки != Неопределено
        ДанныеВидаСправки = Справки.ПараметрыСеанса().ВидыПроизвольныхСправок.ПолучитьИлиУмолчание(Объект.ВидСправки)
        ТаблицаФайлы = ДанныеДокумента.ТабличныеЧасти.ТаблицаФайлы
    ;
    ДополнительныеРеквизиты = ДанныеДокумента.ТабличныеЧасти.ДополнительныеРеквизиты
    если Объект.ЭтоНовый()
        Компоненты.ДополнительныеРеквизиты.СобственнаяМодифицированность = не ДополнительныеРеквизиты.Реквизиты.Пусто()
    иначе
        Компоненты.ДополнительныеРеквизиты.СобственнаяМодифицированность = Ложь
    ;
    если не РежимПросмотра
        ОтслеживатьИзменениеДанных(Компоненты.ДополнительныеРеквизиты, Истина)
    ;
    ИнтерфейсныеКомпоненты.ИнициализироватьПодчиненныеКомпоненты(Компоненты)
    СобственнаяМодифицированность = Ложь
;

метод ЗапросСправкиСМестаРаботыКомпонентЗаголовок(): Строка
    пер ЗаявлениеОбОтсутствииКомпонентЗаголовок: Строка
    если РежимПросмотра
        ЗаявлениеОбОтсутствииКомпонентЗаголовок = ЗаголовокФормы()
    ;
    возврат ЗаявлениеОбОтсутствииКомпонентЗаголовок
;

метод ЗапросСправкиСМестаРаботыКомпонентОтступПоВертикали(): РазмерОтступа | Авто
    возврат РежимПросмотра ? РазмерОтступа.Двойной : РазмерОтступа.Отсутствует
;

метод ЭтоЗапросПроизвольнойСправки(): Булево
    возврат ДанныеВидаСправки != Неопределено
;

// Контракт ВладелецПрисоединенныеФайлыКомпонент
@Реализация
@ВПроекте
метод ПрисоединенныеФайлыНачатаЗагрузкаФайлов(Источник: ПрисоединенныеФайлыКомпонент, Событие: неизвестно, ИдКомпонента: Строка = "")
    ИзменениеСостоянияЗагрузкиФайлов(новый СобытиеСДанными(Истина))
;

@Реализация
@ВПроекте
метод ПрисоединенныеФайлыЗавершенаЗагрузкаФайлов(Источник: ПрисоединенныеФайлыКомпонент, Событие: неизвестно, ИдКомпонента: Строка = "")
    ИзменениеСостоянияЗагрузкиФайлов(новый СобытиеСДанными(Ложь))
;
// Конец ВладелецПрисоединенныеФайлыКомпонент

метод ПояснениеЗаголовок(): Строка
    пер Пояснение: Строка
    если не ВозможноРедактирование()
        пер ДатаОтправки = Объект.Дата
        Пояснение = Клиент.ПояснениеЗапросаПослеОтправки(ДатаОтправки, СостояниеЗапроса)
    иначе если ЭтоЗапросПроизвольнойСправки()
        Пояснение = ДанныеВидаСправки.Пояснение
    иначе если не РежимПросмотра
        Пояснение = "Укажите назначение справки. Например, 'для получения визы' или 'для службы занятости'. В зависимости от назначения форма справки из кадровой службы может быть разной."
    ;
    возврат Пояснение 
;

метод ПояснениеВидимость(): Булево
    возврат не РежимПросмотра
;

метод НазначениеВидимость(): Булево
    возврат не ЭтоЗапросПроизвольнойСправки()
;

метод ПрисоединенныеФайлыДобавлятьФайлы(): Булево
    возврат ВозможноРедактирование() и не РежимПросмотра и (Объект.ВидСправки) == Неопределено
;

метод СправкиСМестаРаботыГруппаВидимость(): Булево
    возврат Компоненты.СправкиСМестаРаботы.Содержимое.Размер() != 0
;

метод РежимПросмотра(): Булево
    возврат РежимПросмотра или не ВозможноРедактирование()
;

метод УстановитьВариантПолученияДокумента()
    пер ФункциональныеОпции: ОбщегоНазначения.ФункциональныеОпции 
        = ОбщегоНазначения.ПараметрыСеанса().ФункциональныеОпции
    если ФункциональныеОпции.ФайлСЭлектроннойПодписью
        Объект.ВариантПолученияДокумента = ВариантыПолученияДокумента.ФайлСЭлектроннойПодписью
    ;   
;

@ВПодсистеме
@НаСервере @НаКлиенте
структура ТабличныеЧасти
    пер ТаблицаФайлы: ПрисоединенныеФайлы?
    пер ТаблицаСогласующие: Согласующие?
    пер ДополнительныеРеквизиты: РеквизитыШаблона?
;

@НаСервере @НаКлиенте
структура ДополнительныеДанныеДокумента
    обз пер Состояние: СостоянияДокумента?
    обз пер СправкиСМестаРаботы: Массив<СправкаСМестаРаботы.Ссылка>
    обз пер ТабличныеЧасти: ТабличныеЧасти
;

@НаСервере @ДоступноСКлиента
статический метод ДополнительныеДанныеДокумента(Ссылка: ЗапросСправкиСМестаРаботы.Ссылка?, ВидСправки: ВидыПроизвольныхСправок.Ссылка?, ЭтоНовый: Булево): ДополнительныеДанныеДокумента
    
    пер Состояние: СостоянияДокумента? = СостоянияДокумента.Черновик
    пер ТабличныеЧасти: ТабличныеЧасти
    пер СправкиСМестаРаботы: Массив<СправкаСМестаРаботы.Ссылка>
    если не ЭтоНовый
        Состояние = СостДокументов.СостояниеДокумента(Ссылка)
        СправкиСМестаРаботы.ДобавитьВсе(СправкиСМестаРаботы(Ссылка))
    ;
    ТабличныеЧасти = ДанныеТабличныхЧастей(Ссылка, ВидСправки, ЭтоНовый)
    возврат новый ДополнительныеДанныеДокумента(Состояние, СправкиСМестаРаботы, ТабличныеЧасти)
;

@НаСервере
статический метод СправкиСМестаРаботы(ЗапросСправки: ЗапросСправкиСМестаРаботы.Ссылка): ЧитаемаяКоллекция<СправкаСМестаРаботы.Ссылка>
    возврат СправкаСМестаРаботы.СправкиСМестаРаботы(ЗапросСправки)
;
 
@НаСервере
статический метод ДанныеТабличныхЧастей(ЗапросСправки: ЗапросСправкиСМестаРаботы.Ссылка?, ВидСправки: ВидыПроизвольныхСправок.Ссылка?, ЭтоНовый: Булево): ТабличныеЧасти
    пер ДанныеТабличныхЧастей: ТабличныеЧасти
    если не ЭтоНовый
        ДанныеТабличныхЧастей.ТаблицаСогласующие = Согласования.Согласующие(ЗапросСправки)
    иначе
        ДанныеТабличныхЧастей.ТаблицаСогласующие = новый Согласующие(Владелец = ЗапросСправки)
    ;
    если ВидСправки != Неопределено
        ДанныеТабличныхЧастей.ТаблицаФайлы = ПрисоединенныеФайлыМенеджер.ПрисоединенныеФайлы(ВидСправки)
    иначе если не ЭтоНовый
        ДанныеТабличныхЧастей.ТаблицаФайлы = ПрисоединенныеФайлыМенеджер.ПрисоединенныеФайлы(ЗапросСправки)
    иначе
        ДанныеТабличныхЧастей.ТаблицаФайлы = новый ПрисоединенныеФайлы(Владелец = ЗапросСправки)
    ;
    если ЭтоНовый
        ДанныеТабличныхЧастей.ДополнительныеРеквизиты = ШаблоныДокументовМенеджер.РеквизитыШаблона(
            ЗапросСправки, УниверсальныеМеханизмы.Ид(Справки.ИД_ПОДСИСТЕМЫ, Справки.ШАБЛОН_ЗАЯВЛЕНИЯ_СПРАВКИ_С_МЕСТА_РАБОТЫ))
    иначе
        ДанныеТабличныхЧастей.ДополнительныеРеквизиты = ШаблоныДокументовМенеджер.РеквизитыШаблона(
            ЗапросСправки, УниверсальныеМеханизмы.Ид(Справки.ИД_ПОДСИСТЕМЫ, Справки.ШАБЛОН_ЗАЯВЛЕНИЯ_СПРАВКИ_С_МЕСТА_РАБОТЫ))
    ;
    возврат ДанныеТабличныхЧастей
;