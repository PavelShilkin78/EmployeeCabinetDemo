импорт КонтрольДоступа
импорт ФизическиеЛица
импорт СтандартноеПриложение

// Контракт ПодсистемаПриложения

@ВПроекте
@Реализация
метод ОписаниеПодсистемы(): СтандартноеПриложение.ОписаниеПодсистемы
    возврат новый СтандартноеПриложение.ОписаниеПодсистемы(
        Уведомления.ИД_ПОДСИСТЕМЫ,
        {
            КонтрольДоступа.ИД_ПОДСИСТЕМЫ, 
            ФизЛица.ИД_ПОДСИСТЕМЫ
        }
    )
;

// Конец ПодсистемаПриложения

// Контракт ОбновляемаяПодсистема

@ВПроекте
@Реализация
метод ОбработчикиЗаполнения(): Массив<СтандартноеПриложение.ОписаниеОбработчикаЗаполнения>
    пер Обработчики: Массив<СтандартноеПриложение.ОписаниеОбработчикаЗаполнения>
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаЗаполнения(
                Уведомления.ИД_ПОДСИСТЕМЫ, 
                "ЗадатьПериодПолученияУведомленийПоСпособам", 
                &Уведомления.ЗаписатьВремяПолученияУведомленийПоУмолчанию()))
    возврат Обработчики
;

@ВПроекте
@Реализация
метод ОбработчикиОбновления(): Массив<СтандартноеПриложение.ОписаниеОбработчикаОбновления>
    пер Обработчики: Массив<СтандартноеПриложение.ОписаниеОбработчикаОбновления>
    пер Сервис = УведомленияПоставщикВерсииПриложения.ПолучитьСервис()
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
                Уведомления.ИД_ПОДСИСТЕМЫ, 
                "ПереносДанныхУчетнойЗаписиПочты", 
                &УчетныеЗаписиЭлектроннойПочтыНаУдаление.ПереносДанныхУчетнойЗаписиПочты(),
                Сервис.ПереносДанныхУчетнойЗаписиПочты()))
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
                Уведомления.ИД_ПОДСИСТЕМЫ, 
                "ЗадатьПериодПолученияУведомленийПоСпособам", 
                &Уведомления.ЗаписатьВремяПолученияУведомленийПоУмолчанию(),
                Сервис.ПериодПолученияУведомленийПоУмолчанию()))
    возврат Обработчики
;

// Конец ОбновляемаяПодсистема

// Контракт УчетВременнойЗоны
@ВПроекте
@Реализация
метод ПриИзменении(СмещениеКлиента: Число)
    знч Физлицо = ПользователиСистемы.ТекущееФизическоеЛицо()
    если Физлицо != Неопределено
        знч НастройкиУведомленийФизическогоЛица = Уведомления.НастройкиУведомленийФизическогоЛица(Физлицо)
        если НастройкиУведомленийФизическогоЛица == Неопределено
            или НастройкиУведомленийФизическогоЛица.ТекущееСмещениеКлиента != СмещениеКлиента
            
            Уведомления.УстановитьТекущееСмещениеКлиента(Физлицо, СмещениеКлиента)
        ;
    ;
;
// Конец УчетВременнойЗоны