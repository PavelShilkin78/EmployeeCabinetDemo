импорт ИнтерфейсныеКомпонентыСтандартные
импорт ОбщиеСтандартные

// Контракт ЗаявлениеКомпонент

@ВПроекте
@Реализация
метод УстановитьТекущееЗаявление(Заявление: Объект)
    если Заявление это ЗаявлениеНаВыплату.Объект
        Объект = Заявление как ЗаявлениеНаВыплату.Объект
        ПрочитатьОбъект()
    ;
;

// Конец ЗаявлениеКомпонент

метод ЗаголовокЗапроса(): Строка

    пер СуммаЗапроса = МенеджерСтрок.ФорматЧисла(Объект.Сумма, ДлинаДробнойЧасти = 0) + " ₽"
    пер ДатаВремяЗапроса = МенеджерДат.ФорматМомента((Объект.МоментСоздания), "дд.ММ.гггг, ЧЧ:мм", МенеджерДат.ЧасовойПоясТекущий())
    
    возврат "Запрос на %СуммаЗапроса от %ДатаВремяЗапроса"

;

метод КоллекцияИсточникаВсеСобытияЗапросаНаВыплату(): Массив<СобытиеЗапросаНаВыплату>
    возврат ((Компоненты.ТаблицаСобытийЗапросовНаВыплату.Источник)).Данные
;

метод ЗаполнитьЗапросыНаВыплату()
 
    пер КоллекцияДанныхКомпонента = КоллекцияИсточникаВсеСобытияЗапросаНаВыплату()
    пер ПрочитаннаяКоллекцияДанных = Объект.СобытияЗапросовНаВыплату
    КоллекцияДанныхКомпонента.Очистить()
    КоллекцияДанныхКомпонента.ДобавитьВсе(ПрочитаннаяКоллекцияДанных)
    
;

метод ПрочитатьОбъект()
    ЗаполнитьЗапросыНаВыплату()    
    ЗавершеноЧтениеДанных(новый СобытиеКомпонента())
    ИнтерфейсныеКомпоненты.ИнициализироватьПодчиненныеКомпоненты(Компоненты)
    СобственнаяМодифицированность = Ложь
;

метод ИзображениеСобытия(НазваниеИзображения: Строка): ДвоичныйОбъект.Ссылка
   
   выбор НазваниеИзображения 
   когда "Send"
        возврат Ресурс{Отправить.svg}.Ссылка
    когда "Cross"
        возврат Ресурс{Cross.svg}.Ссылка
    когда "SettingOutline"
        возврат Ресурс{НастройкиКонтур.svg}.Ссылка
    когда "TimeOutline"
        возврат Ресурс{ВремяКонтур.svg}.Ссылка
    когда "Check"
        возврат Ресурс{Галочка.svg}.Ссылка
    ;
    
    возврат Ресурс{НастройкиКонтур.svg}.Ссылка
    
;

метод ВидимостьРазделаОплатыЛицензии(): Булево

    если Объект.ОплатаКомиссии != Неопределено 
        если (Объект.ОплатаКомиссии).ДатаВремяОплаты != Неопределено
            возврат Истина
        ;
    ;

    возврат Ложь

;

метод ВидимостьЧекКнопка(): Булево

    возврат ((Объект.ОплатаКомиссии).СсылкаНаФискальныйЧек != Неопределено 
        и (Объект.ОплатаКомиссии).СсылкаНаФискальныйЧек != "")
        или ((Объект.ОплатаКомиссии).СсылкаНаФискальныйЧекВозврата != Неопределено
        и (Объект.ОплатаКомиссии).СсылкаНаФискальныйЧекВозврата != "")

;

метод ПосмотретьЧекКнопкаПриНажатии(Источник: Кнопка, Событие: СобытиеПриНажатии)
    если ((Объект.ОплатаКомиссии).СсылкаНаФискальныйЧекВозврата != Неопределено 
        и (Объект.ОплатаКомиссии).СсылкаНаФискальныйЧекВозврата != "")
        
        ПерейтиПоСсылке((Объект.ОплатаКомиссии).СсылкаНаФискальныйЧекВозврата)
        возврат
    ;
    если ((Объект.ОплатаКомиссии).СсылкаНаФискальныйЧек != Неопределено 
        и (Объект.ОплатаКомиссии).СсылкаНаФискальныйЧек != "")
        
        ПерейтиПоСсылке((Объект.ОплатаКомиссии).СсылкаНаФискальныйЧек)
    ;
;  

метод ЗаголовокЧекКнопка(): Строка

    если ((Объект.ОплатаКомиссии).СсылкаНаФискальныйЧекВозврата != Неопределено 
        и (Объект.ОплатаКомиссии).СсылкаНаФискальныйЧекВозврата != "")
    
        возврат "Посмотреть чек возврата"
    
    иначе
        
        возврат "Посмотреть чек оплаты"
    
    ;

;

метод СообщитьОПроблемеКнопкаПриНажатии(Источник: Кнопка, Событие: СобытиеПриНажатии)

    СообщитьОПроблемеФорма.ОткрытьВМодальномОкне(ИдТекущегоЗапроса = Объект.Ид)

;

метод ЗаголовокМомента(МоментСобытия: Момент): Строка

    возврат МенеджерДат.ФорматМомента(МоментСобытия, "дд.ММ.гггг, ЧЧ:мм", МенеджерДат.ЧасовойПоясТекущий())
    
;

@НаСервере @ДоступноСКлиента
статический метод ЗаявлениеНаВыплатуОбъект(Заявление: ЗаявлениеНаВыплату.Ссылка): ЗаявлениеНаВыплату.Объект?
    возврат Заявление.ЗагрузитьОбъект()    
;