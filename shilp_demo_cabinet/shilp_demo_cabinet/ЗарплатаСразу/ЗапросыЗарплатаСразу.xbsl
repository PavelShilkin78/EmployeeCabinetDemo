импорт ВебApi
импорт СтандартноеПриложение

структура СтатусСотрудника
    пер account_status: Строка = "Подключён"
;

структура НовыйЗапросНаВыплату
    обз пер employee_id: Строка
    обз пер amount: Строка   
;

структура ИнформацияОПроблеме
    обз пер employee_id: Строка
    обз пер payment_request_id: Строка
    обз пер body: Строка
    обз пер email: Строка
;

структура ЗапросСсылкиНаПроведениеКомиссионногоПлатежа
    обз пер email: Строка
    обз пер return_url: Строка
;

@ВПодсистеме
метод ЗапросСпискаПодключенныхКомпаний(): ОтветHttp
    
    пер ПараметрыДоступаКЗарплатаСразу = РесурсыЗарплатаСразу.ПараметрыДоступаКЗарплатаСразу()
   
    пер Запрос: ЗапросHttp = КлиентHttp.ЗапросGet(
        АдресЗапроса(ПараметрыДоступаКЗарплатаСразу.АдресСервиса, новый РесурсыЗарплатаСразу.Компании()))
        .УстановитьЗаголовок("Content-Type", "application/json")
    
    возврат ВыполнитьЗапрос(Запрос, ПараметрыДоступаКЗарплатаСразу)

;

@ВПодсистеме
метод ЗапросСпискаСорудниковКомпании(ИдКомпании: Строка): ОтветHttp
    
    пер ПараметрыДоступаКЗарплатаСразу = РесурсыЗарплатаСразу.ПараметрыДоступаКЗарплатаСразу()
    
    пер Запрос: ЗапросHttp = КлиентHttp.ЗапросGet(
        АдресЗапроса(ПараметрыДоступаКЗарплатаСразу.АдресСервиса, 
        новый РесурсыЗарплатаСразу.СотрудникиКомпании(ИдКомпании)))
        .УстановитьЗаголовок("Content-Type", "application/json")
        
    возврат ВыполнитьЗапрос(Запрос, ПараметрыДоступаКЗарплатаСразу)  
    
;

@ВПодсистеме
метод ЗапросИнформацииОСотруднике(ИдСотрудника: Строка): ОтветHttp
    
    пер ПараметрыДоступаКЗарплатаСразу = РесурсыЗарплатаСразу.ПараметрыДоступаКЗарплатаСразу()
    пер Запрос: ЗапросHttp = КлиентHttp.ЗапросGet(
        АдресЗапроса(ПараметрыДоступаКЗарплатаСразу.АдресСервиса, 
        новый РесурсыЗарплатаСразу.Сотрудник(ИдСотрудника)))
        .УстановитьЗаголовок("Content-Type", "application/json")
        
    возврат ВыполнитьЗапрос(Запрос, ПараметрыДоступаКЗарплатаСразу)  
    
;

@ВПодсистеме
метод ЗапросПодключенияСотрудника(Сотрудник: ЗарплатаСразу.Сотрудник)
    
    пер ПараметрыДоступаКЗарплатаСразу = РесурсыЗарплатаСразу.ПараметрыДоступаКЗарплатаСразу()
    пер ТелоЗапроса = СервисыHttp.ДанныеJsonВСтроку(новый СтатусСотрудника())

    пер Запрос: ЗапросHttp = КлиентHttp.ЗапросPatch(
        АдресЗапроса(ПараметрыДоступаКЗарплатаСразу.АдресСервиса, 
        новый РесурсыЗарплатаСразу.Сотрудник(Сотрудник.Ид)))
        .УстановитьЗаголовок("Content-Type", "application/json")
        .УстановитьТело(ТелоЗапроса)
        
    ВыполнитьЗапрос(Запрос, ПараметрыДоступаКЗарплатаСразу)   
    
;

@ВПодсистеме
метод ЗапросНаСозданиеЗапросаНаВыплату(ИдСотрудника: Строка, Сумма: Строка): Строка?
    
    пер ПараметрыДоступаКЗарплатаСразу = РесурсыЗарплатаСразу.ПараметрыДоступаКЗарплатаСразу()
    пер ТелоЗапроса = 
        СервисыHttp.ДанныеJsonВСтроку(новый НовыйЗапросНаВыплату(ИдСотрудника, "%Сумма.00"))
    
    пер Запрос: ЗапросHttp = КлиентHttp.ЗапросPost(
        АдресЗапроса(ПараметрыДоступаКЗарплатаСразу.АдресСервиса, 
        новый РесурсыЗарплатаСразу.ЗапросНаВыплату()))
        .УстановитьЗаголовок("Content-Type", "application/json")
        .УстановитьТело(ТелоЗапроса)
    
    исп Ответ = ВыполнитьЗапрос(Запрос, ПараметрыДоступаКЗарплатаСразу)
    возврат ФорматЗарплатаСразу.РезультатЗапросаВыплаты(Ответ)
   
;

@ВПодсистеме
метод ЗапросИнформацииОЗапросеНаВыплату(ИдЗапроса: Строка): ОтветHttp
    
    пер ПараметрыДоступаКЗарплатаСразу = РесурсыЗарплатаСразу.ПараметрыДоступаКЗарплатаСразу()
    
    пер Запрос: ЗапросHttp = КлиентHttp.ЗапросGet(
        АдресЗапроса(ПараметрыДоступаКЗарплатаСразу.АдресСервиса, 
        новый РесурсыЗарплатаСразу.ИнформацияОЗапросеНаВыплату(ИдЗапроса)))
        .УстановитьЗаголовок("Content-Type", "application/json")
        
    возврат ВыполнитьЗапрос(Запрос, ПараметрыДоступаКЗарплатаСразу)   
    
;

@ВПодсистеме
метод ЗапросСтатусаЗапроса(ИдЗапроса: Строка): ОтветHttp
    
    пер ПараметрыДоступаКЗарплатаСразу = РесурсыЗарплатаСразу.ПараметрыДоступаКЗарплатаСразу()
    
    пер Запрос: ЗапросHttp = КлиентHttp.ЗапросGet(
        АдресЗапроса(ПараметрыДоступаКЗарплатаСразу.АдресСервиса, 
        новый РесурсыЗарплатаСразу.СтатусЗапросаНаВыплату(ИдЗапроса)))
        .УстановитьЗаголовок("Content-Type", "application/json")
        
    возврат ВыполнитьЗапрос(Запрос, ПараметрыДоступаКЗарплатаСразу)   
    
;

@ВПодсистеме
метод ЗапросСсылкиНаПроведениеКомиссионногоПлатежа(ИдЗапросаНаВыплату: Строка, ЭлектроннаяПочта: Строка, СсылкаДляВозврата: Строка): ОтветHttp 

    пер ПараметрыДоступаКЗарплатаСразу = РесурсыЗарплатаСразу.ПараметрыДоступаКЗарплатаСразу()
    
    пер ТелоЗапроса = 
        СервисыHttp.ДанныеJsonВСтроку(новый ЗапросСсылкиНаПроведениеКомиссионногоПлатежа(ЭлектроннаяПочта, СсылкаДляВозврата))
    
    пер Запрос: ЗапросHttp = КлиентHttp.ЗапросPost(
        АдресЗапроса(ПараметрыДоступаКЗарплатаСразу.АдресСервиса, 
        новый РесурсыЗарплатаСразу.СсылкаНаПроведениеКомиссионногоПлатежа(ИдЗапросаНаВыплату)))
        .УстановитьЗаголовок("Content-Type", "application/json")
        .УстановитьТело(ТелоЗапроса)
    
    возврат ВыполнитьЗапрос(Запрос, ПараметрыДоступаКЗарплатаСразу) 

; 

@ВПодсистеме
метод ЗапросТекстаПС(): ОтветHttp
    
    пер ПараметрыДоступаКЗарплатаСразу = РесурсыЗарплатаСразу.ПараметрыДоступаКЗарплатаСразу()
    
    пер Запрос: ЗапросHttp = КлиентHttp.ЗапросGet(
        АдресЗапроса(ПараметрыДоступаКЗарплатаСразу.АдресСервиса, 
        новый РесурсыЗарплатаСразу.ТекстПС()))
        .УстановитьЗаголовок("Content-Type", "application/json")
     
    возврат ВыполнитьЗапрос(Запрос, ПараметрыДоступаКЗарплатаСразу)     
    
;

@ВПодсистеме
метод ЗапросСостояния(ИдКомпании: Строка): ОтветHttp
    
    пер ПараметрыДоступаКЗарплатаСразу = РесурсыЗарплатаСразу.ПараметрыДоступаКЗарплатаСразу()
    
    пер Запрос: ЗапросHttp = КлиентHttp.ЗапросGet(
        АдресЗапроса(ПараметрыДоступаКЗарплатаСразу.АдресСервиса, 
        новый РесурсыЗарплатаСразу.Состояние(ИдКомпании)))
        .УстановитьЗаголовок("Content-Type", "application/json")
     
    возврат ВыполнитьЗапрос(Запрос, ПараметрыДоступаКЗарплатаСразу)     
    
;

@ВПодсистеме
метод ЗапросСообщитьОПроблеме(ИдСотрудника: Строка, ИдЗапросаНаВыплату: Строка, ЭлектроннаяПочта: Строка, ТекстПроблемы: Строка) 
    
    пер ПараметрыДоступаКЗарплатаСразу = РесурсыЗарплатаСразу.ПараметрыДоступаКЗарплатаСразу()
    
    пер ТелоЗапроса = СервисыHttp.ДанныеJsonВСтроку(
        новый ИнформацияОПроблеме(ИдСотрудника, ИдЗапросаНаВыплату, ТекстПроблемы, ЭлектроннаяПочта))
    
    пер Запрос: ЗапросHttp = КлиентHttp.ЗапросPost(
        АдресЗапроса(ПараметрыДоступаКЗарплатаСразу.АдресСервиса, 
        новый РесурсыЗарплатаСразу.Поддержка()))
        .УстановитьЗаголовок("Content-Type", "application/json")
        .УстановитьТело(ТелоЗапроса)
    знч Ответ = ВыполнитьЗапрос(Запрос, ПараметрыДоступаКЗарплатаСразу)
    Ответ.Закрыть()
; 

метод ВыполнитьЗапрос(Запрос: ЗапросHttp, ПараметрыДоступаКЗарплатаСразу: ЗарплатаСразу.ПараметрыДоступаКЗарплатаСразу): ОтветHttp
    
    попытка
        знч Ответ: ОтветHttp = Запрос.УстановитьЗаголовок("x-api-key", ПараметрыДоступаКЗарплатаСразу.ApiКлюч)
            .Выполнить()

        знч КодСостояния = Ответ.КодСостояния
        если КодСостояния != 200 и КодСостояния != 201 и КодСостояния != 204 и КодСостояния != 502
            пер ОшибкаЗарплатаСразу = ФорматЗарплатаСразу.ОшибкаИзJson(Ответ)
            пер АдресЗапроса = ОшибкаЗарплатаСразу.Путь
            пер Сообщение = ОшибкаЗарплатаСразу.Сообщение
            пер СообщениеПользователю = ОшибкаЗарплатаСразу.СообщениеПользователю
            пер ТекстОшибки: Строка
            если СообщениеПользователю == "" или СообщениеПользователю == Неопределено
                ТекстОшибки = "При выполнении запроса произошла ошибка. Повторите запрос позже."
            иначе
                выбор ОшибкаЗарплатаСразу.Статус
                когда 401
                    ТекстОшибки = "Произошла ошибка авторизации при отправке запроса. %СообщениеПользователю"
                когда 403
                    ТекстОшибки = "Доступ по адресу %АдресЗапроса запрещен. %СообщениеПользователю"
                когда 500
                    ТекстОшибки = "При выполнении запроса произошла ошибка. %СообщениеПользователю"
                иначе 
                    ТекстОшибки =
                    "Ошибка обращения к сервису по адресу \"%{Запрос
                    .АбсолютныйUrl}\" получен код состояния %{КодСостояния.ВСтроку()}"
                ;
            ;
            
            знч ТелоОтвета = Ответ.Тело.ПрочитатьКакСтроку()
            Журналирование.ЗарегистрироватьОшибку("ИсключениеВыполненияЗапросаКЗарплатаСразу", Описание = Сообщение,
                Важность = ВажностьСобытияЖурналаСобытий.Высокая)
            Журналирование.ЗарегистрироватьHttpЗапрос("ЗарплатаСразу", Запрос = Запрос, Ответ = Ответ, ТелоОтвета = ТелоОтвета)
            
            выбросить новый ЗарплатаСразу.ИсключениеВыполненияЗапросаКЗарплатаСразу(ТекстОшибки, Запрос.АбсолютныйUrl, КодСостояния,
                ТелоОтвета)
        иначе если Ответ.КодСостояния == 502
            выбросить новый ЗарплатаСразу.ИсключениеВыполненияЗапросаКЗарплатаСразу("Ошибка при обращении к серверу", Запрос.АбсолютныйUrl,
                КодСостояния,
                Ответ.Тело.ПрочитатьКакСтроку())
        ;

        возврат Ответ

    поймать Исключение: Исключение
        выбросить новый ЗарплатаСразу.ИсключениеВыполненияЗапросаКЗарплатаСразу("Ошибка при обращении к серверу", Запрос.АбсолютныйUrl)
    ;
        
;        

метод АдресЗапроса(АдресСервера: Строка, 
    Ресурс: РесурсыЗарплатаСразу.Компании|РесурсыЗарплатаСразу.СотрудникиКомпании|РесурсыЗарплатаСразу.Сотрудник|
    РесурсыЗарплатаСразу.ЗапросНаВыплату|РесурсыЗарплатаСразу.ИнформацияОЗапросеНаВыплату|РесурсыЗарплатаСразу.СтатусЗапросаНаВыплату|
    РесурсыЗарплатаСразу.СсылкаНаПроведениеКомиссионногоПлатежа|РесурсыЗарплатаСразу.ТекстПС|РесурсыЗарплатаСразу.Состояние|
    РесурсыЗарплатаСразу.Поддержка): Строка
    
    возврат "%АдресСервера/api/cabinet/v1/%{РесурсыЗарплатаСразу.АдресРесурса(Ресурс)}"
    
;