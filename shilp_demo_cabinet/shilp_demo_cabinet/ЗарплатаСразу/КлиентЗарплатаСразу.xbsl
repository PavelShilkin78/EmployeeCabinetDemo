импорт ФизическиеЛица
импорт КонтрольДоступа
импорт Компания
импорт ВладельцыКабинетов
импорт ОбменДанными

@ВПроекте
метод СписокПодключенныхКомпаний(): Массив<ЗарплатаСразу.Компания>
    
    исп Ответ = ЗапросыЗарплатаСразу.ЗапросСпискаПодключенныхКомпаний()
    возврат ФорматЗарплатаСразу.КомпанииИзJson(Ответ)
 
;

@ВПроекте
метод ИнформацияОТекущемСотруднике(): ЗарплатаСразу.ИнформацияОСотруднике?
    
    знч ФизическоеЛицо = ПользователиСистемы.ТекущееФизическоеЛицо()
    знч Организация = Сотрудники.ОрганизацияФизическогоЛицаПоОсновномуМестуРаботы(ФизическоеЛицо)
    
    пер Компания = ИнформацияОКомпанииТекущегоСотрудника(Организация)
    
    если Компания == Неопределено или Компания.Статус == ЗарплатаСразу.СтатусыКомпании.НеПодключена 
        или Компания.Статус == ЗарплатаСразу.СтатусыКомпании.Отключена 
        
        ФизическиеЛицаЗарплатаСразу.ОбновитьСтатусПодключенияФизическогоЛицаВСервисе(Организация, ФизическоеЛицо, СтатусыПодключенияСотрудника.НетВСервисе)
        возврат Неопределено
    ;
    
    исп ПривилегированныйРежим = КонтекстДоступа.Привилегированный()
    знч ИдСотрудника = ОбменДанными.ВнешниеИдентификаторыПоВнутреннимСсылкам(
        [Сотрудники.ОсновнойСотрудникФизическогоЛицаОрганизации(ФизическоеЛицо, Организация)]
        ).ПервыйИлиУмолчание()?.Значение
    ПривилегированныйРежим.Закрыть()
    
    пер ИнформацияОСотруднике = ИнформацияОСотрудникеВКомпании(Компания, ИдСотрудника)
    
    если ИнформацияОСотруднике != Неопределено 
         ФизическиеЛицаЗарплатаСразу.ОбновитьСтатусПодключенияФизическогоЛицаВСервисе(Организация, ФизическоеЛицо, 
            ИнформацияОСотруднике.Сотрудник.СтатусПодключения)
        иначе
            ФизическиеЛицаЗарплатаСразу.ОбновитьСтатусПодключенияФизическогоЛицаВСервисе(Организация, ФизическоеЛицо, СтатусыПодключенияСотрудника.НетВСервисе)
    ;
    
    возврат ИнформацияОСотруднике
    
;

@ВПроекте
метод ИнформацияОКомпанииТекущегоСотрудника(Организация: Организации.Ссылка? = Неопределено): ЗарплатаСразу.Компания?
    
    пер ФизическоеЛицо = ПользователиСистемы.ТекущееФизическоеЛицо()
 
    если Организация == Неопределено 
        Организация = Сотрудники.ОрганизацияФизическогоЛицаПоОсновномуМестуРаботы(ФизическоеЛицо) 
    ;
    
    если Организация == Неопределено
        возврат Неопределено
    ;
        
    исп ПривилегированныйРежим = КонтекстДоступа.Привилегированный()
    знч ИдКомпании = ОбменДанными.ВнешниеИдентификаторыПоВнутреннимСсылкам([Организация]).ПервыйИлиУмолчание()?.Значение
    
    ПривилегированныйРежим.Закрыть()
    
    знч Компания = Компания(ИдКомпании) 
    
    если Компания == Неопределено 
        ФизическиеЛицаЗарплатаСразу.ОбновитьСтатусПодключенияФизическогоЛицаВСервисе(Организация, ФизическоеЛицо, СтатусыПодключенияСотрудника.НетВСервисе)
    ;

    возврат Компания
;

@ВПроекте
метод СписокСорудниковКомпании(ИдКомпании: Строка): Массив<ЗарплатаСразу.Сотрудник>
    
    исп Ответ = ЗапросыЗарплатаСразу.ЗапросСпискаСорудниковКомпании(ИдКомпании)
 
    возврат ФорматЗарплатаСразу.СписокСотрудниковКомпанииИзJson(Ответ)

;

@ВПроекте
метод ПодключениеСотрудника(Сотрудник: ЗарплатаСразу.Сотрудник)
    
    ЗапросыЗарплатаСразу.ЗапросПодключенияСотрудника(Сотрудник)
    
;

@ВПроекте
метод ИнформацияОСотруднике(ИдСотрудника: Строка): ЗарплатаСразу.ИнформацияОСотруднике

    исп Ответ = ЗапросыЗарплатаСразу.ЗапросИнформацииОСотруднике(ИдСотрудника)
   
    возврат ФорматЗарплатаСразу.ИнформацияОСотрудникеИзJson(Ответ)
    
 ;   

@ВПроекте
метод ЗапросНаВыплату(Сотрудник: ЗарплатаСразу.Сотрудник, Сумма: Число): Строка
    
    возврат ЗапросыЗарплатаСразу.ЗапросНаСозданиеЗапросаНаВыплату(Сотрудник.Ид, Сумма.ВСтроку())
  
;

@ВПроекте
метод ИнформацияОЗапросеНаВыплату(ИдЗапросаНаВыплату: Строка): ЗарплатаСразу.ИнформацияОЗапросеНаВыплату
    
    исп Ответ = ЗапросыЗарплатаСразу.ЗапросИнформацииОЗапросеНаВыплату(ИдЗапросаНаВыплату)
   
    возврат ФорматЗарплатаСразу.ИнформацияОЗапросеНаВыплатуИзJson(Ответ)

;

@ВПроекте
метод СтатусЗапросаНаВыплату(ИдЗапросаНаВыплату: Строка): ЗарплатаСразу.СтатусЗапроса
    
    исп Ответ = ЗапросыЗарплатаСразу.ЗапросСтатусаЗапроса(ИдЗапросаНаВыплату)
    
    возврат ФорматЗарплатаСразу.СтатусЗапросаНаВыплатуИзJson(Ответ)

;

@ВПроекте
метод СсылкаНаПроведениеКомиссионногоПлатежа(ИдОплатыКомиссии: Строка, СсылкаДляВозврата: Строка): ЗарплатаСразу.СсылкаНаОплатуКомиссии
    
    знч ФизическоеЛицо = ПользователиСистемы.ТекущееФизическоеЛицо()
    знч ЗапрашиваемыеДанные: ВладельцыКабинетов.ЗапрашиваемыеДанныеВладельцевКабинетов
    ЗапрашиваемыеДанные.ЗапрашиваемыеДанныеФизическихЛиц.РабочаяКонтактнаяИнформация = Истина
    пер ДанныеФизическогоЛица = ВладельцыКабинетов.ДанныеВладельцаКабинета(ФизическоеЛицо, ЗапрашиваемыеДанные)
    пер ЭлектроннаяПочта = ДанныеФизическогоЛица.ДанныеФизлица.РабочаяКонтактнаяИнформация.ЭлектроннаяПочта
    
    исп Ответ = ЗапросыЗарплатаСразу.ЗапросСсылкиНаПроведениеКомиссионногоПлатежа(ИдОплатыКомиссии, ЭлектроннаяПочта, СсылкаДляВозврата) 
    
    возврат ФорматЗарплатаСразу.СсылкаНаПроведениеКомиссионногоПлатежаИзJson(Ответ)    
;

@ВПроекте
метод СообщитьОПроблеме(ИдСотрудника: Строка, ИдЗапросаНаВыплату: Строка, ТекстПроблемы: Строка)
    
    знч ФизическоеЛицо = ПользователиСистемы.ТекущееФизическоеЛицо()
    знч ЗапрашиваемыеДанные: ВладельцыКабинетов.ЗапрашиваемыеДанныеВладельцевКабинетов
    ЗапрашиваемыеДанные.ЗапрашиваемыеДанныеФизическихЛиц.РабочаяКонтактнаяИнформация = Истина
    пер ДанныеФизическогоЛица = ВладельцыКабинетов.ДанныеВладельцаКабинета(ФизическоеЛицо, ЗапрашиваемыеДанные)
    пер ЭлектроннаяПочта = ДанныеФизическогоЛица.ДанныеФизлица.РабочаяКонтактнаяИнформация.ЭлектроннаяПочта
        
    ЗапросыЗарплатаСразу.ЗапросСообщитьОПроблеме(ИдСотрудника, ИдЗапросаНаВыплату, ЭлектроннаяПочта, ТекстПроблемы) 
;

@ВПроекте
метод ТекстПС(): Строка
    
    исп Ответ = ЗапросыЗарплатаСразу.ЗапросТекстаПС()
    
    возврат ФорматЗарплатаСразу.ТекстПС(Ответ)
        
;

@ВПроекте
метод Состояние(ИдКомпании: Строка):ЗарплатаСразу.СтатусыСостоянияСервиса
    
    исп Ответ = ЗапросыЗарплатаСразу.ЗапросСостояния(ИдКомпании)
    
    возврат ФорматЗарплатаСразу.Состояние(Ответ)
    
;

@Локально
метод ИнформацияОСотрудникеВКомпании(Компания: ЗарплатаСразу.Компания, ИдСотрудника: Строка):ЗарплатаСразу.ИнформацияОСотруднике?
    
    пер СписокСотрудниковКомпании = СписокСорудниковКомпании(Компания.Ид)
    
    если СписокСотрудниковКомпании.Пусто()
        возврат Неопределено
    ;
    
    пер НашСотрудник = НайтиСотрудника(СписокСотрудниковКомпании, ИдСотрудника)
    
    если НашСотрудник == Неопределено
        возврат Неопределено
    ;
    
    возврат ИнформацияОСотруднике(НашСотрудник.Ид)
    
;

метод Компания(ИдКомпании: Строка): ЗарплатаСразу.Компания?
    
    пер СписокКомпаний = СписокПодключенныхКомпаний()
        
    возврат НайтиОрганизацию(СписокКомпаний, ИдКомпании)

;

@Локально
метод НайтиОрганизацию(СписокОрганизаций: Массив<ЗарплатаСразу.Компания>, ИдКомпании: Строка):ЗарплатаСразу.Компания?

    для Организация из СписокОрганизаций
        если Организация.Ид == ИдКомпании
            возврат Организация
        ;
   
    ;
    
    возврат Неопределено
;

@Локально
метод НайтиСотрудника(СписокСотрудников: Массив<ЗарплатаСразу.Сотрудник>, ИдСотрудника: Строка):ЗарплатаСразу.Сотрудник?
    
     для Сотрудник из СписокСотрудников
        если Сотрудник.Ид == ИдСотрудника
            возврат Сотрудник
        ;
    
    ;
    
    возврат Неопределено
;