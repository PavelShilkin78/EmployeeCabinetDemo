импорт ИнтерфейсныеКомпонентыСтандартные
импорт Компания::Согласования
импорт Криптография
импорт ОбщегоНазначения
импорт СтандартноеПриложение
импорт ФизическиеЛица
импорт ОбменДанными
импорт УниверсальныеМеханизмы
импорт ЛичныеКабинетыПользователей

метод ФормаДокументаВысота(): Число
    возврат ОсновнойИнтерфейс.ВысотаФормыДокумента(100)
;

@Обработчик
метод ПослеЧтения()

    ИнтерфейсныеКомпоненты.ИнициализироватьПодчиненныеКомпоненты(Компоненты)

;

метод СозданиеИПодписьЗаявления(Источник: ЗаявлениеНаВыплатуКомпонент, Событие: СобытиеКомпонента)

    знч ФизическоеЛицо = ЛичныеКабинетыПользователей.ПараметрыСеанса().ТекущееФизическоеЛицо
    
    если не ЕстьСертификат(ФизическоеЛицо) 
        СтандартныеФормы.ПоказатьУведомление("Нет электронной подписи", 
            "Сформируйте электронную подпись в профиле и попробуйте снова",
            ОценкаИнформации.Отрицательная)
        ЗаявлениеПодписано = Ложь
        возврат
    ;
    
    если не Криптография.ВвестиПарольЗакрытогоКлюча(
        ФизическоеЛицо, Объект.Ссылка)
        ЗаявлениеПодписано = Ложь
        возврат
    ;
    попытка
        Подписать(
            ФизическоеЛицо,
            Объект.Ссылка,
            Криптография.ПараметрыСеанса().ПарольЗакрытогоКлючаПользователя)
        если Криптография.УстановитьПодписьВСервисеПодписания(
                Объект.Ссылка, ФизическоеЛицо, Согласования.РольПодписантаСотрудник()) == Ложь
                
            ЗаявлениеПодписано = Ложь
            возврат
        ;
    поймать Ошибка: Исключение
         СтандартныеФормы.ПоказатьУведомление(
            "Ошибка подписания документа",
            ОбщегоНазначения.ОписаниеОшибкиПриДействииСДокументом(Ошибка, ФизическоеЛицо),
            ОценкаИнформации.Отрицательная)
        ЗаявлениеПодписано = Ложь
        возврат
    ;
    
    ПодписаноЗаявлениеНаВыплату.Оповестить()
    ЗаявлениеПодписано = Истина
  
;

метод ЗаявлениеНаВыплатуПослеОтправкиЗапроса(Источник: ЗаявлениеНаВыплатуКомпонент, Событие: СобытиеКомпонента)
    
    ЗаявлениеНаВыплату.Перезаписать(Объект.Ссылка, ИнформацияОЗапросеНаВыплату)
   
    Закрыть(новый ЗарплатаСразу.РезультатСозданияНовогоЗапроса(Истина, ИнформацияОЗапросеНаВыплату))
;

метод ЗаявлениеНаВыплатуПослеНеуспешнойОтправкиЗапроса(Источник: ЗаявлениеНаВыплатуКомпонент, Событие: СобытиеКомпонента)
    
    ЗаявлениеНаВыплату.Перезаписать(Объект.Ссылка, ИнформацияОЗапросеНаВыплату)
    
    Закрыть(новый ЗарплатаСразу.РезультатСозданияНовогоЗапроса(Истина, Неопределено))    
    
;

@ВПодсистеме
@НаСервере @ДоступноСКлиента
статический метод ЕстьСертификат(ФизическоеЛицо: ФизическиеЛица.Ссылка): Булево

    исп ПривилегированныйРежим: КонтекстДоступа = КонтекстДоступа.Привилегированный()
    пер Информация = ИнформацияОСертификатах.ИнформацияОСертификатеФизическогоЛица(ФизическоеЛицо)
    ПривилегированныйРежим.Закрыть()
    
    возврат Информация!= Неопределено
    
;

@ВПодсистеме
@НаСервере @ДоступноСКлиента
статический метод Подписать(
    ФизическоеЛицо: ФизическиеЛица.Ссылка?,
    ДокументСсылка: ЗаявлениеНаВыплату.Ссылка,   
    ПарольЗакрытогоКлюча: Строка?)
    
    исп Транзакции.Начать()

    ПредставленияДокументов.СформироватьПредставленияДокумента(ДокументСсылка, Истина)
    
    пер РезультатПодписания: Криптография.РезультатПодписания
    знч ДанныеСогласующего = новый Согласования.ДанныеСогласующего(ФизическоеЛицо, Согласования.РольПодписантаСотрудник())
    РезультатПодписания = Согласования.ПодписатьИУстановитьСостояниеДокумента(ДокументСсылка, ДанныеСогласующего, ПарольЗакрытогоКлюча, СостоянияДокумента.Выполнен, ФизическоеЛицо)
    если РезультатПодписания.ЕстьОшибки
        возврат
    ;

    пер ДанныеПодписейДокумента = СогласованияДокументов.ДанныеПодписейДокумента(ДокументСсылка)
    для ДанныеПодписи из ДанныеПодписейДокумента
        РегистрацияИзменений.ЗарегистрироватьИзменение(ДанныеПодписи.Ссылка, ДанныеПодписи.УчастникСогласования)
    ;
    СогласованияДокументов.ЗарегистрироватьПодписиОтправляемогоДокумента(ДокументСсылка, Истина)
    ОбменДанными.ЗарегистрироватьОтправляемыйДокумент(ДокументСсылка, Истина) 
    РегистрацияИзменений.ЗарегистрироватьИзменение(ДокументСсылка, ФизическоеЛицо)
    
;