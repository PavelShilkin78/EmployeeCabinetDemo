импорт ВебApi

@ВПодсистеме
структура Компания
    @JsonСвойство(Имя = "company_id")
    обз пер Ид: Строка
    @JsonСвойство(Имя = "inn")
    обз пер ИНН: Строка
    @JsonСвойство(Имя = "ogrn")
    обз пер ОГРН: Строка
    @JsonСвойство(Имя = "name")
    обз пер ПолноеНаименование: Строка
    @JsonСвойство(Имя = "status")
    обз пер Статус: Строка?
;

@ВПодсистеме
структура СотрудникиКомпании
    @JsonСвойство(Имя = "company_id")
    обз пер ИдКомпании: Строка
    @JsonСвойство(Имя = "inn")
    обз пер ИНН: Строка
    @JsonСвойство(Имя = "ogrn")
    обз пер ОГРН: Строка
    @JsonСвойство(Имя = "name")
    обз пер Название: Строка
    @JsonСвойство(Имя = "status")
    обз пер Статус: Строка
    @JsonСвойство(Имя = "employees")
    обз пер Сотрудники: Массив<Сотрудник>
;

@ВПроекте
 структура Сотрудник
    @JsonСвойство(Имя = "employee_id")
    обз пер Ид: Строка
    @JsonСвойство(Имя = "hash")
    пер Хеш: Строка?
    @JsonСвойство(Имя = "employment_status")
    пер Статус: Строка?
    @JsonСвойство(Имя = "account_status")
    пер СтатусПодключения: Строка?
;

@ВПроекте
структура Комиссия
    @JsonСвойство(Имя = "range_from")
    обз пер ВыплатаОт: Строка
    @JsonСвойство(Имя = "range_to")
    обз пер ВыплатаПо: Строка
    @JsonСвойство(Имя = "amount")
    обз пер СуммаКомиссии: Строка
    @JsonСвойство(Имя = "amount_with_discount")
    обз пер СуммаКомиссииСоСкидкой: Строка
    @JsonСвойство(Имя = "discount_days")
    обз пер ДнейДляОплаты: Число
;

@ВПроекте
структура Лимит
    @JsonСвойство(Имя = "balance")
    обз пер Баланс: Строка
    @JsonСвойство(Имя = "can_create_payment_requests")
    обз пер МожноСоздатьЗапросНаВыплату: Булево
    @JsonСвойство(Имя = "must_make_commission_payments")
    обз пер ОплачиваетКомиссию: Булево?
    @JsonСвойство(Имя = "has_unpaid_commission_payments")
    обз пер ЕстьНеоплаченныеКомиссии: Булево
    @JsonСвойство(Имя = "payment_requests_block_reason")
    обз пер ПричинаБлокировкиЗапросаНаВыплату: Строка?
    @JsonСвойство(Имя = "min_amount")
    обз пер МинимальныйРазмерДоступнойВыплаты: Строка
    @JsonСвойство(Имя = "max_amount")
    обз пер МаксимальныйРазмерДоступнойВыплаты: Строка
    @JsonСвойство(Имя = "commissions")
    обз пер СписокВозможныхКомиссий: Массив<Комиссия>?
;

@ВПроекте
структура ЗапросНаВыплату
    @JsonСвойство(Имя = "payment_request_id")
    обз пер Ид: Строка
    @JsonСвойство(Имя = "created_at")
    обз пер ДатаВремяСоздания: Момент
    @JsonСвойство(Имя = "amount")
    обз пер Сумма: Строка
    @JsonСвойство(Имя = "status")
    обз пер Статус: Строка?
;

@ВПроекте
структура РеквизитыЗаявления
    @JsonСвойство(Имя = "date_from")
    обз пер ДатаС: Дата
    @JsonСвойство(Имя = "date_to")
    обз пер ДатаПо: Дата
;

@ВПроекте
структура ИнформацияОСотруднике
    @JsonСвойство(Имя = "employee_id")
    обз пер ИдСотрудника: Строка
    @JsonСвойство(Имя = "company_id")
    обз пер ИдКомпании: Строка
    @JsonСвойство(Имя = "hash")
    обз пер Хеш: Строка?
    @JsonСвойство(Имя = "employment_status")
    обз пер Статус: Строка?
    @JsonСвойство(Имя = "account_status")
    обз пер СтатусПодключения: Строка?
    @JsonСвойство(Имя = "advance_request")
    обз пер РеквизитыЗаявления: РеквизитыЗаявления?
    @JsonСвойство(Имя = "limits")
    обз пер Лимит: Лимит?
    @JsonСвойство(Имя = "payment_requests")
    обз пер ЗапросыНаВыплату: Массив<ЗапросНаВыплату>?
    @JsonСвойство(Имя = "mode")
    пер РежимРаботыСервиса: Строка?
;

@ВПроекте
структура ИнформацияОЗапросеНаВыплату
    @JsonСвойство(Имя = "payment_request_id")
    обз пер Ид: Строка
    @JsonСвойство(Имя = "employee_id")
    обз пер ИдСотрудника: Строка
    @JsonСвойство(Имя = "created_at")
    обз пер ДатаВремяСоздания: Момент
    @JsonСвойство(Имя = "amount")
    обз пер Сумма: Строка
    @JsonСвойство(Имя = "status")
    обз пер Статус: Строка?
    @JsonСвойство(Имя = "events")
    обз пер События: Массив<ПолученноеСобытиеЗапросаНаВыплату>
    @JsonСвойство(Имя = "commission_payment")
    обз пер ОплатаКомиссии: ПолученнаяОплатаКомиссии?
;

@ВПроекте
структура СтатусЗапросаНаВыплату
    @JsonСвойство(Имя = "status")
    обз пер Статус: Строка?
    @JsonСвойство(Имя = "message")
    обз пер Сообщение: Строка?
    @JsonСвойство(Имя = "user_message")
    обз пер СообщениеПользователю: Строка?
;
  
@ВПроекте
структура ПолученноеСобытиеЗапросаНаВыплату
    @JsonСвойство(Имя = "created_at")
    обз пер ДатаВремя: Момент
    @JsonСвойство(Имя = "event")
    обз пер Событие: Строка
    @JsonСвойство(Имя = "description")
    обз пер Описание: Строка?
    @JsonСвойство(Имя = "icon")
    обз пер Иконка: Строка?
    @JsonСвойство(Имя = "status")
    обз пер Статус: Строка?
;

@ВПроекте
структура ПолученнаяОплатаКомиссии
    @JsonСвойство(Имя = "commission_payment_id")
    обз пер Ид: Строка
    @JsonСвойство(Имя = "created_at")
    обз пер ДатаВремяСоздания: Момент
    @JsonСвойство(Имя = "paid_at")
    обз пер ДатаВремяОплаты: Момент?
    @JsonСвойство(Имя = "status")
    обз пер Статус: Строка?
    @JsonСвойство(Имя = "calculated_amount")
    обз пер РасчетнаяСуммаБезСкидки: Строка
    @JsonСвойство(Имя = "calculated_amount_with_discount")
    обз пер РасчетнаяСуммаСоСкидкой: Строка
    @JsonСвойство(Имя = "current_amount")
    обз пер ФактическаяСумма: Строка
    @JsonСвойство(Имя = "is_discount_available")
    обз пер СкидкаДоступна: Булево
    @JsonСвойство(Имя = "due_date_with_discount")
    обз пер ДатаОплатыСоСкидкой: Момент
    @JsonСвойство(Имя = "receipt_link")
    обз пер СсылкаНаФискальныйЧек: Строка?
    @JsonСвойство(Имя = "refund_receipt_link")
    обз пер СсылкаНаФискальныйЧекВозврата: Строка?
;

@ВПроекте
структура ОтветНаЗапросВыплаты
    @JsonСвойство(Имя = "payment_request_id")
    обз пер ИдЗапросаНаВыплату: Строка
;

@ВПроекте
структура СсылкаНаОплатуКомиссииJson
    @JsonСвойство(Имя = "link")
    обз пер Ссылка: Строка
    @JsonСвойство(Имя = "due_date")
    обз пер ДатаДействия: Момент?
    @JsonСвойство(Имя = "current_amount")
    обз пер ТекущаяСумма: Строка
;

@ВПроекте
структура ПользовательскоеСоглашениеJson
    @JsonСвойство(Имя = "body")
    обз пер Тело: Строка
;

@ВПроекте
структура СостояниеJson
    @JsonСвойство(Имя = "status")
    обз пер Статус: Строка
;

@ВПроекте
структура ОшибкаJson
    @JsonСвойство(Имя = "timestamp")
    обз пер Время: Момент
    @JsonСвойство(Имя = "status")
    обз пер Статус: Число
    @JsonСвойство(Имя = "error")
    обз пер Ошибка: Строка
    @JsonСвойство(Имя = "message")
    обз пер Сообщение: Строка?
    @JsonСвойство(Имя = "user_message")
    обз пер СообщениеПользователю: Строка?
    @JsonСвойство(Имя = "path")
    обз пер Путь: Строка
;

@ВПодсистеме
метод КомпанииИзJson(Ответ: ОтветHttp): Массив<ЗарплатаСразу.Компания>
   
    знч НастройкиЧтения  = СервисыHttp.НастройкиЧтенияОбъектовJson()

    знч МиссивКомпаний = СервисыHttp.ИзвлечьДанныеJson(
        Ответ, Тип<Массив<Компания>>, НастройкиЧтения) как Массив<Компания>
    
    пер МассивКомпаний = новый Массив<ЗарплатаСразу.Компания>()
    
    для СтрокаКомпании из МиссивКомпаний
        знч Компания = новый ЗарплатаСразу.Компания(
            СтрокаКомпании.Ид,
            СтрокаКомпании.ИНН,
            СтрокаКомпании.ОГРН,
            СтрокаКомпании.ПолноеНаименование,
            СтатусКомпании(СтрокаКомпании.Статус)) 
        МассивКомпаний.Добавить(Компания)
    ;  
    
    возврат МассивКомпаний
  
;

@ВПодсистеме
метод СписокСотрудниковКомпанииИзJson(Ответ: ОтветHttp): Массив<ЗарплатаСразу.Сотрудник>
    
    знч НастройкиЧтения  = СервисыHttp.НастройкиЧтенияОбъектовJson()
    
    знч СотрудникиКомпании = СервисыHttp.ИзвлечьДанныеJson(
        Ответ, Тип<СотрудникиКомпании>, НастройкиЧтения) как СотрудникиКомпании
    пер МассивСотрудников = новый Массив<ЗарплатаСразу.Сотрудник>()
    
    для СтрокаСотрудника из СотрудникиКомпании.Сотрудники
        знч Сотрудник = новый ЗарплатаСразу.Сотрудник(
            СтрокаСотрудника.Ид,
            СтрокаСотрудника.Хеш,
            СтрокаСотрудника.Статус,
            СтатусПодключенияСотрудника(СтрокаСотрудника.СтатусПодключения))    
        МассивСотрудников.Добавить(Сотрудник)
    ;  
    
    возврат МассивСотрудников
  
;

@ВПодсистеме
метод ОшибкаИзJson(Ответ: ОтветHttp): ЗарплатаСразу.Ошибка

    знч НастройкиЧтения  = СервисыHttp.НастройкиЧтенияОбъектовJson()

    знч ОшибкаJson = СервисыHttp.ИзвлечьДанныеJson(
        Ответ, Тип<ОшибкаJson>, НастройкиЧтения) как ОшибкаJson
    
    знч Ошибка = новый ЗарплатаСразу.Ошибка(
        ОшибкаJson.Время,
        ОшибкаJson.Статус,
        ОшибкаJson.Ошибка,
        ОшибкаJson.Сообщение,
        ОшибкаJson.СообщениеПользователю,
        ОшибкаJson.Путь)
   
    возврат Ошибка

;

структура Тест
    обз пер Тест: Число
;
@ВПодсистеме
метод ИнформацияОСотрудникеИзJson(Ответ: ОтветHttp): ЗарплатаСразу.ИнформацияОСотруднике
    
    знч НастройкиЧтения  = СервисыHttp.НастройкиЧтенияОбъектовJson()
    
    знч ПолученнаяИнформацияОСотруднике = СервисыHttp.ИзвлечьДанныеJson(
        Ответ, Тип<ИнформацияОСотруднике>, НастройкиЧтения) как ИнформацияОСотруднике
    пер Комиссии: Массив<ЗарплатаСразу.Комиссия>? = Неопределено
    если ПолученнаяИнформацияОСотруднике.Лимит.СписокВозможныхКомиссий != Неопределено
        Комиссии = новый Массив<ЗарплатаСразу.Комиссия>()
        для СтрокаКомиссии из ПолученнаяИнформацияОСотруднике.Лимит.СписокВозможныхКомиссий
            знч Комиссия = новый ЗарплатаСразу.Комиссия(
                новый Число(СтрокаКомиссии.ВыплатаОт),
                новый Число(СтрокаКомиссии.ВыплатаПо),
                новый Число(СтрокаКомиссии.СуммаКомиссии),
                новый Число(СтрокаКомиссии.СуммаКомиссииСоСкидкой),
                СтрокаКомиссии.ДнейДляОплаты)    
                Комиссии.Добавить(Комиссия)
            ;
    ;
            
    знч Лимит = новый ЗарплатаСразу.Лимит(
        новый Число(ПолученнаяИнформацияОСотруднике.Лимит.Баланс),
        ПолученнаяИнформацияОСотруднике.Лимит.МожноСоздатьЗапросНаВыплату,
        ПолученнаяИнформацияОСотруднике.Лимит.ОплачиваетКомиссию,
        ПолученнаяИнформацияОСотруднике.Лимит.ЕстьНеоплаченныеКомиссии,
        ПолученнаяИнформацияОСотруднике.Лимит.ПричинаБлокировкиЗапросаНаВыплату,
        новый Число(ПолученнаяИнформацияОСотруднике.Лимит.МинимальныйРазмерДоступнойВыплаты),
        новый Число(ПолученнаяИнформацияОСотруднике.Лимит.МаксимальныйРазмерДоступнойВыплаты),
        Комиссии)
    
    знч ЗапросыНаВыплату = новый Массив<ЗарплатаСразу.ЗапросНаВыплату>()
    
    для СтрокаЗапросаНаВыплату из ПолученнаяИнформацияОСотруднике.ЗапросыНаВыплату
        знч ЗапросНаВыплату = новый ЗарплатаСразу.ЗапросНаВыплату(
            СтрокаЗапросаНаВыплату.Ид,
            СтрокаЗапросаНаВыплату.ДатаВремяСоздания,
            новый Число(СтрокаЗапросаНаВыплату.Сумма),
            СтатусЗапросаНаВыплату(СтрокаЗапросаНаВыплату.Статус)   
        )
        ЗапросыНаВыплату.Добавить(ЗапросНаВыплату)
    ;
        
    знч ИнформацияОСотруднике = новый ЗарплатаСразу.ИнформацияОСотруднике(
        новый ЗарплатаСразу.Сотрудник(
            ПолученнаяИнформацияОСотруднике.ИдСотрудника, 
            ПолученнаяИнформацияОСотруднике.Хеш, 
            ПолученнаяИнформацияОСотруднике.Статус,
            СтатусПодключенияСотрудника(ПолученнаяИнформацияОСотруднике.СтатусПодключения)),
        новый ЗарплатаСразу.РеквизитыДляЗаявления(ПолученнаяИнформацияОСотруднике.РеквизитыЗаявления.ДатаС, ПолученнаяИнформацияОСотруднике.РеквизитыЗаявления.ДатаПо),    
        Лимит,
        ЗапросыНаВыплату,
        РежимРаботыСервиса(ПолученнаяИнформацияОСотруднике.РежимРаботыСервиса))
    
    возврат ИнформацияОСотруднике
  
;

@ВПодсистеме
метод ИнформацияОЗапросеНаВыплатуИзJson(Ответ: ОтветHttp): ЗарплатаСразу.ИнформацияОЗапросеНаВыплату
    
    знч НастройкиЧтения  = СервисыHttp.НастройкиЧтенияОбъектовJson()

    знч ЗапросНаВыплату = СервисыHttp.ИзвлечьДанныеJson(
        Ответ, Тип<ИнформацияОЗапросеНаВыплату>, НастройкиЧтения) как ИнформацияОЗапросеНаВыплату
    
    знч СобытияЗапросаНаВыплату = новый Массив<СобытиеЗапросаНаВыплату>()
    
    для СтрокаСобытия из ЗапросНаВыплату.События
        знч СобытиеЗапросаНаВыплату = новый СобытиеЗапросаНаВыплату(
                СтрокаСобытия.ДатаВремя,
                СтрокаСобытия.Событие,
                СтрокаСобытия.Иконка,
                СтрокаСобытия.Описание,
                СтатусСобытияЗапросаНаВыплату(СтрокаСобытия.Статус)            
        )   
        СобытияЗапросаНаВыплату.Добавить(СобытиеЗапросаНаВыплату)    
    ;
    
    пер ОплатаКомиссии: ОплатаКомиссии|? = Неопределено
    
    если ЗапросНаВыплату.ОплатаКомиссии != Неопределено
            ОплатаКомиссии =  новый ОплатаКомиссии(
            ЗапросНаВыплату.ОплатаКомиссии.Ид,
            ЗапросНаВыплату.ОплатаКомиссии.ДатаВремяСоздания,
            ЗапросНаВыплату.ОплатаКомиссии.ДатаВремяОплаты,
            СтатусОплатыКомиссии(ЗапросНаВыплату.ОплатаКомиссии.Статус),
            новый Число(ЗапросНаВыплату.ОплатаКомиссии.РасчетнаяСуммаБезСкидки),
            новый Число(ЗапросНаВыплату.ОплатаКомиссии.РасчетнаяСуммаСоСкидкой),
            новый Число(ЗапросНаВыплату.ОплатаКомиссии.ФактическаяСумма),
            ЗапросНаВыплату.ОплатаКомиссии.СкидкаДоступна,
            ЗапросНаВыплату.ОплатаКомиссии.ДатаОплатыСоСкидкой,
            ЗапросНаВыплату.ОплатаКомиссии.СсылкаНаФискальныйЧек,
            ЗапросНаВыплату.ОплатаКомиссии.СсылкаНаФискальныйЧекВозврата
        )  
    ;
    
    знч ИнформацияОЗапросеНаВыплату = новый ЗарплатаСразу.ИнформацияОЗапросеНаВыплату(
        новый ЗарплатаСразу.ЗапросНаВыплату(
            ЗапросНаВыплату.Ид,
            ЗапросНаВыплату.ДатаВремяСоздания,
            новый Число(ЗапросНаВыплату.Сумма),
            СтатусЗапросаНаВыплату(ЗапросНаВыплату.Статус)        
        ),
        ЗапросНаВыплату.ИдСотрудника,
        СобытияЗапросаНаВыплату,
        ОплатаКомиссии
    )
    
    возврат ИнформацияОЗапросеНаВыплату
  
;

@ВПодсистеме
метод СтатусЗапросаНаВыплатуИзJson(Ответ: ОтветHttp): ЗарплатаСразу.СтатусЗапроса
    
    знч НастройкиЧтения  = СервисыHttp.НастройкиЧтенияОбъектовJson()

    знч ПолученныйСтатусЗапросаНаВыплату = СервисыHttp.ИзвлечьДанныеJson(
        Ответ, Тип<СтатусЗапросаНаВыплату>, НастройкиЧтения) как СтатусЗапросаНаВыплату
    
    пер СтатусЗапросаНаВыплату = новый ЗарплатаСразу.СтатусЗапроса(
        СтатусЗапросаНаВыплату(ПолученныйСтатусЗапросаНаВыплату.Статус),
        ПолученныйСтатусЗапросаНаВыплату.Сообщение,
        ПолученныйСтатусЗапросаНаВыплату.СообщениеПользователю)
    
    возврат СтатусЗапросаНаВыплату
  
;

@ВПодсистеме
метод РезультатЗапросаВыплаты(Ответ: ОтветHttp): Строка?
    
    если Ответ.КодСостояния == 201 
        знч Настройки = СервисыHttp.НастройкиЧтенияОбъектовJson()    
        знч ДанныеОтвета = СервисыHttp.ИзвлечьДанныеJson(Ответ, Тип<ОтветНаЗапросВыплаты>, Настройки) как ОтветНаЗапросВыплаты
        возврат ДанныеОтвета.ИдЗапросаНаВыплату
    иначе 
        возврат Неопределено
    ;
    
;

@ВПодсистеме
метод СсылкаНаПроведениеКомиссионногоПлатежаИзJson(Ответ: ОтветHttp): ЗарплатаСразу.СсылкаНаОплатуКомиссии

    знч НастройкиЧтения  = СервисыHttp.НастройкиЧтенияОбъектовJson()

    знч СсылкаНаОплатуКомиссииJson = СервисыHttp.ИзвлечьДанныеJson(
        Ответ, Тип<СсылкаНаОплатуКомиссииJson>, НастройкиЧтения) как СсылкаНаОплатуКомиссииJson
    
    знч СсылкаНаОплатуКомиссии = новый ЗарплатаСразу.СсылкаНаОплатуКомиссии(
        СсылкаНаОплатуКомиссииJson.Ссылка,
        СсылкаНаОплатуКомиссииJson.ДатаДействия,
        новый Число(СсылкаНаОплатуКомиссииJson.ТекущаяСумма)
    )
    
    возврат СсылкаНаОплатуКомиссии

;

@ВПодсистеме
метод ТекстПС(Ответ: ОтветHttp): Строка
    
    знч НастройкиЧтения  = СервисыHttp.НастройкиЧтенияОбъектовJson()

    знч ПользовательскоеСоглагение = СервисыHttp.ИзвлечьДанныеJson(
        Ответ, Тип<ПользовательскоеСоглашениеJson>, НастройкиЧтения) как ПользовательскоеСоглашениеJson
    
    возврат ПользовательскоеСоглагение.Тело

;

@ВПодсистеме
метод Состояние(Ответ: ОтветHttp): ЗарплатаСразу.СтатусыСостоянияСервиса
    
    знч НастройкиЧтения  = СервисыHttp.НастройкиЧтенияОбъектовJson()

    знч СостояниеСервисаЗС = СервисыHttp.ИзвлечьДанныеJson(
        Ответ, Тип<СостояниеJson>, НастройкиЧтения) как СостояниеJson
    
    возврат СтатусСостоянияСервиса(СостояниеСервисаЗС.Статус)

;

метод СтатусСостоянияСервиса(Статус: Строка?): ЗарплатаСразу.СтатусыСостоянияСервиса?
 
    выбор Статус
    когда "Активный"
        возврат ЗарплатаСразу.СтатусыСостоянияСервиса.Активный
    иначе
        возврат ЗарплатаСразу.СтатусыСостоянияСервиса.НеАктивный
    ;
    
;

метод СтатусСобытияЗапросаНаВыплату(Статус: Строка?): СтатусыСобытийЗапросовНаВыплату?
 
    выбор Статус
    когда "Позитивный" 
        возврат СтатусыСобытийЗапросовНаВыплату.Позитивный
    когда "Негативный"
        возврат СтатусыСобытийЗапросовНаВыплату.Негативный
    когда "Промежуточный" 
        возврат СтатусыСобытийЗапросовНаВыплату.Промежуточный
    иначе
        возврат Неопределено
    ;    
    
;
 
метод СтатусОплатыКомиссии(Статус: Строка?): СтатусыОплатыКомиссии?
 
    выбор Статус
    когда "Ожидается оплата" 
        возврат СтатусыОплатыКомиссии.ОжидаетсяОплата
    когда "В обработке"
        возврат СтатусыОплатыКомиссии.ВОбработке
    когда "Оплачен" 
        возврат СтатусыОплатыКомиссии.Оплачена
    когда "Отклонен"  
        возврат СтатусыОплатыКомиссии.Отклонена
    когда "Отклонён"  
        возврат СтатусыОплатыКомиссии.Отклонена
    когда "Отправлен возврат"  
        возврат СтатусыОплатыКомиссии.ОтправленВозврат
    иначе
        возврат Неопределено
    ;    
    
;

метод СтатусЗапросаНаВыплату(Статус: Строка?): СтатусыЗапросовНаВыплату?
 
    выбор Статус
    когда "Создан"
        возврат СтатусыЗапросовНаВыплату.Создан
    когда "В работе" 
        возврат СтатусыЗапросовНаВыплату.ВРаботе
    когда "Исполнен"
        возврат СтатусыЗапросовНаВыплату.Исполнен
    когда "Отклонен" 
        возврат СтатусыЗапросовНаВыплату.Отклонен
    когда "Отклонён" 
        возврат СтатусыЗапросовНаВыплату.Отклонен
    когда "Подписан"
        возврат СтатусыЗапросовНаВыплату.Подписан
    когда "Одобрен"
        возврат СтатусыЗапросовНаВыплату.Подписан
    когда "Завершен"
        возврат СтатусыЗапросовНаВыплату.Завершен
    когда "Завершён"
        возврат СтатусыЗапросовНаВыплату.Завершен
    иначе
        возврат Неопределено
    ;    
    
;

метод СтатусКомпании(Статус: Строка?): ЗарплатаСразу.СтатусыКомпании?
 
    выбор Статус
    когда "Не подключена" 
        возврат ЗарплатаСразу.СтатусыКомпании.НеПодключена
    когда "Подключена"
        возврат ЗарплатаСразу.СтатусыКомпании.Подключена
    когда "Заблокирована" 
        возврат ЗарплатаСразу.СтатусыКомпании.Заблокирована
    когда "Отключена"
        возврат ЗарплатаСразу.СтатусыКомпании.Отключена
    иначе
        возврат Неопределено
    ;    
    
;
метод СтатусПодключенияСотрудника(Статус: Строка?): СтатусыПодключенияСотрудника?
 
    выбор Статус
    когда "Доступно подключение" 
        возврат СтатусыПодключенияСотрудника.ДоступноПодключение
    когда "Подключён"
        возврат СтатусыПодключенияСотрудника.Подключен
    когда "Подключен"
        возврат СтатусыПодключенияСотрудника.Подключен
   когда "Заблокирован" 
        возврат СтатусыПодключенияСотрудника.Заблокирован
    когда "Отключён"
        возврат СтатусыПодключенияСотрудника.Отключен
    когда "Отключен"
        возврат СтатусыПодключенияСотрудника.Отключен
    когда "Приостановлен"
        возврат СтатусыПодключенияСотрудника.Приостановлен
    иначе
        возврат Неопределено
    ;
;  
    
метод РежимРаботыСервиса(Режим: Строка?): РежимыРаботыСервиса?
    
    выбор Режим
    когда "Корп"
        возврат РежимыРаботыСервиса.Корпоративный
    когда "Базовый"
        возврат РежимыРаботыСервиса.Базовый
    иначе
        возврат Неопределено      
    ;
;