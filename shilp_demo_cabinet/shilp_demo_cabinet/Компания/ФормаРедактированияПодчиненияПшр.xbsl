импорт ИнтерфейсныеКомпонентыСтандартные


@ВПодсистеме
@НаСервере @НаКлиенте
исключение ИсключениеЗаписьУжеСуществует
;

@ВПодсистеме
метод Инициализировать()
    ДоступныеЗначенияПодразделений = ПолучитьСписокДоступныхПодразделений()
    ЕстьДоступныеПодразделения = не ДоступныеЗначенияПодразделений.Пусто()
    ЕстьДоступныеПшр = ЕстьДоступныеПшр()
    если ЕстьДоступныеПшр
        ДоступныеЗначенияПшр = ПолучитьСписокДоступныхПшр(ТекущееПодразделение)
    ;
    если РежимРедактирования
        ЗаголовокФормы = "Редактирование элемента связи"
        ПервоначальноеЗначение = {ТекущееПодразделение : ТекущаяПозицияШР}
    иначе
        ЗаголовокФормы = "Создание нового элемента связи"
        если ЕстьДоступныеПодразделения
            ДоступныеЗначенияПшр.Добавить(ПолучитьСтрокуВыбора("Не выбрано подразделение"))
        ;
    ;
;

метод ПолучитьСтрокуВыбора(Текст: Строка): ЭлементСпискаЗначений<ШтатноеРасписание.Ссылка?>
    пер СтрокаСписка = новый ЭлементСпискаЗначений<ШтатноеРасписание.Ссылка?>(
        Значение = Неопределено,
        Представление = Текст
    )
    возврат СтрокаСписка
;

метод ВидимостьПредупрежденияОтсуствияПодразделений(): Булево
    возврат не ЕстьДоступныеПодразделения
;

метод ВидимостьПредупрежденияОтсуствияПозицийШР(): Булево
    возврат не ЕстьДоступныеПшр и ЕстьДоступныеПодразделения
;

метод ДоступностьДанныхФормы(): Булево
    возврат ЕстьДоступныеПодразделения и ЕстьДоступныеПшр
;

метод ПроверитьЗаполнение(): Булево
    пер РезультатПроверки = Истина

    ПодразделениеСообщениеОбОшибке = ""
    если ТекущееПодразделение == Неопределено
        ПодразделениеСообщениеОбОшибке = "Поле Подчиненное подразделение необходимо заполнить"
        РезультатПроверки = Ложь
    ;
    
    ПшрСообщениеОбОшибке = ""
    если ТекущаяПозицияШР == Неопределено
        ПшрСообщениеОбОшибке = "Поле Позиция необходимо заполнить"
        РезультатПроверки = Ложь
    ;
    возврат РезультатПроверки
;

метод ОшибкаПриВыполненииСохранения(Источник: КоманднаяПанельФорм, Событие: СобытиеСДанными<Исключение>)
    Компоненты.ГлавнаяГруппа.ПоказатьОшибку(Событие.Данные.Описание)
;

метод СохранитьДанные(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    пер РезультатБезОшибок = ПроверитьЗаполнение()
    если не РезультатБезОшибок
        возврат
    ;
    знч КоличествоСотрудниковПоПшр = КоличествоСотрудниковПоПшр(ТекущаяПозицияШР)
    если КоличествоСотрудниковПоПшр > 1
        выбросить новый ИсключениеВалидации("На выбранной позиции штатного расписания числится более одного сотрудника") 
    ;
    попытка
        ПодразделениеСообщениеОбОшибке = ""
        если РежимРедактирования
            РедактироватьСведения(
                ПервоначальноеЗначение.Ключи().ПервыйИлиУмолчание(),
                ТекущееПодразделение, 
                ТекущаяПозицияШР
            )
        иначе
            ЗаписатьСведения(ТекущееПодразделение, ТекущаяПозицияШР)
        ;
        
    поймать Исключение: ИсключениеЗаписьУжеСуществует
        РезультатБезОшибок = Ложь
        ПодразделениеСообщениеОбОшибке = Исключение.Описание
    ;
    
    если РезультатБезОшибок
        Закрыть(Истина)
    ;
;

метод УдалитьЭлемент(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    УдалитьСведения(ПервоначальноеЗначение.Ключи().ПервыйИлиУмолчание())
    Закрыть(Истина)
;

метод Отменить(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    Закрыть(Ложь)
;

метод ВыбраноПодразделения(Источник: ПолеВвода<СтруктураПредприятия.Ссылка?>, Событие: СобытиеПриИзменении<СтруктураПредприятия.Ссылка?>)
    ТекущаяПозицияШР = Неопределено
    ДоступныеЗначенияПшр = ПолучитьСписокДоступныхПшр(Источник.Значение)
    если ДоступныеЗначенияПшр.Пусто()
        ДоступныеЗначенияПшр.Добавить(ПолучитьСтрокуВыбора("Нет Позиций ШР для выбранного подразделения"))
    иначе
        ДоступныеЗначенияПшр.Добавить(ПолучитьСтрокуВыбора("Выберите Позицию штатного расписания"))
    ;
;

метод ВыбранаПозицияШР(Источник: ПолеВвода<ШтатноеРасписание.Ссылка?>, Событие: СобытиеПриИзменении<ШтатноеРасписание.Ссылка?>)
    знч Индекс = ДоступныеЗначенияПшр.Найти(ПолучитьСтрокуВыбора("Не выбрано подразделение"))
    если Индекс != Неопределено
        ДоступныеЗначенияПшр.УдалитьПоИндексу(Индекс)
    ;
;

@НаСервере @ДоступноСКлиента
статический метод ПолучитьСписокДоступныхПодразделений() : Массив<ЭлементСпискаЗначений<СтруктураПредприятия.Ссылка?>>
    пер СписокДоступныхПодразделений: Массив<ЭлементСпискаЗначений<СтруктураПредприятия.Ссылка?>>
    // Отдельная проверка для подразделелений корневых
    // Берем подразделения корневого уровня только если есть "соседние" подразделения того же уровня, хотя бы одно
    пер Подразделения = ПолучитьПодразделения("УровеньИерархии == 0")
    если Подразделения.Размер() > 1
        СписокДоступныхПодразделений.ДобавитьВсе(Подразделения)
    ;
    Подразделения = ПолучитьПодразделения("УровеньИерархии > 0")
    если Подразделения.Размер() > 0
        СписокДоступныхПодразделений.ДобавитьВсе(Подразделения)
    ;
    возврат СписокДоступныхПодразделений
;

@НаСервере @ДоступноСКлиента
статический метод ПолучитьПодразделения(ПараметрФильтра: Строка): Массив<ЭлементСпискаЗначений<СтруктураПредприятия.Ссылка?>>
    пер Запрос = новый ПроизвольныйЗапрос()
    Запрос.Текст = 
        "Выбрать
                ПС.Объект как Подразделение
            Поместить
                втПодразделения
            Из
                ПодразделенияИСотрудники Как ПС
            Где
                ПС.ТипЭлемента == ТипыЭлементовПодразделенийИСотрудников.Подразделение
            ;
            Выбрать
                ПС.Подразделение как Подразделение,
                ПС.Подразделение.Представление.ЗаменитьNull(\"\") как ПодразделениеПредставление,
                ДП.ИерархияВышестоящих как ИерархияВышестоящих
            Из
                ДанныеПодразделений как ДП
                Внутреннее Соединение втПодразделения Как ПС
                    По ДП.Владелец == ПС.Подразделение
            Где 
                %{ПараметрФильтра}
            Упорядочить по
                ДП.ИерархияВышестоящих,
                ДП.УровеньИерархии"
    пер Подразделения = новый Массив<ЭлементСпискаЗначений<СтруктураПредприятия.Ссылка?>>()
    для РезультатСтрока из Запрос.Выполнить() 
        пер ЭлементыИерархии = (РезультатСтрока.ИерархияВышестоящих.ВСтроку() как Строка).Разделить("\\")
        пер ИмяОрганизации: Строка
        если не ЭлементыИерархии.Пусто()
            ИмяОрганизации = " (%{ЭлементыИерархии.Первый()})"
        ;
        пер СтрокаСписка = новый ЭлементСпискаЗначений<СтруктураПредприятия.Ссылка?>(
            Значение = РезультатСтрока.Подразделение,
            Представление = РезультатСтрока.ПодразделениеПредставление + ИмяОрганизации
        )
        Подразделения.Добавить(СтрокаСписка)
    ;
    возврат Подразделения
;

@НаСервере @ДоступноСКлиента
статический метод ЕстьДоступныеПшр(): Булево
    знч Запрос = Запрос{
        выбрать 
            Ссылка
        из
            ШтатноеРасписание
        }
    пер Результат = новый ЧитаемыйМассив(Запрос.Выполнить())
    возврат не Результат.Пусто()
;

@НаСервере @ДоступноСКлиента
статический метод КоличествоСотрудниковПоПшр(ПозицияПшр: ШтатноеРасписание.Ссылка): Число
    знч Запрос = Запрос{
        Выбрать
            ПодразделенияИСотрудники.ФизическоеЛицо как ФизическоеЛицо
        Из
            ПодразделенияИСотрудники Как ПодразделенияИСотрудники 
        Где
            ПодразделенияИСотрудники.Позиция.Ссылка == %ПозицияПшр
            И ПодразделенияИСотрудники.ТипЭлемента == ТипыЭлементовПодразделенийИСотрудников.Сотрудник
            И ПодразделенияИСотрудники.ОсновноеМестоРаботы
    }
    знч РезультатЗапроса = новый ЧитаемыйМассив(Запрос.Выполнить())
    возврат РезультатЗапроса.Размер()
;

@НаСервере @ДоступноСКлиента
статический метод ПолучитьСписокДоступныхПшр(ТекущееПодразделение: СтруктураПредприятия.Ссылка? = Неопределено): Массив<ЭлементСпискаЗначений<ШтатноеРасписание.Ссылка?>>
    пер СписокДоступныхПшр: Массив<ЭлементСпискаЗначений<ШтатноеРасписание.Ссылка?>>
    
    если ТекущееПодразделение != Неопределено
        знч Запрос = Запрос{
            Выбрать
                Подразделения.ВышестоящееПодразделение Как Ссылка
            Поместить втВышестоящееПодразделение
            Из 
                ПодчиненностьПодразделений Как Подразделения
            Где
                Подразделения.Подразделение == %ТекущееПодразделение
                И Подразделения.Уровень > 0
            ;
            Выбрать
                Подразделения.Подразделение Как Ссылка,
                ПС.Наименование как НаименованиеПодразделения
            Поместить
                втМестаВСтруктуреПредприятия
            Из 
                втВышестоящееПодразделение Как ВышПодразделение
                внутреннее соединение ПодчиненностьПодразделений Как Подразделения
                    по ВышПодразделение.Ссылка == Подразделения.ВышестоящееПодразделение
                        И Подразделения.Подразделение != %ТекущееПодразделение  
                внутреннее соединение ПодразделенияИСотрудники как ПС
                    по Подразделения.Подразделение == ПС.Объект                        
            Где
                Подразделения.Уровень == 1
            ;
            выбрать 
                ШР.Ссылка Как ПшрСсылка,
                ШР.Должность.Представление.ЗаменитьNull("") Как ПшрДолжность,
                МестаВСтруктуре.НаименованиеПодразделения как НаименованиеПодразделения
            из
                втМестаВСтруктуреПредприятия Как МестаВСтруктуре 
                внутреннее соединение ШтатноеРасписание Как ШР
                    по МестаВСтруктуре.Ссылка == ШР.МестоВСтруктуреПредприятия
            }
            
        для РезультатСтрока из Запрос.Выполнить() 
            пер СтрокаСписка = новый ЭлементСпискаЗначений<ШтатноеРасписание.Ссылка?>()
            СтрокаСписка.Значение = РезультатСтрока.ПшрСсылка
            СтрокаСписка.Представление = РезультатСтрока.ПшрДолжность + " (%{РезультатСтрока.НаименованиеПодразделения})"
            СписокДоступныхПшр.Добавить(СтрокаСписка)
        ;
    ;
    возврат СписокДоступныхПшр    
;

@НаСервере @ДоступноСКлиента
статический метод РедактироватьСведения(ТекущееПодразделение: СтруктураПредприятия.Ссылка, НовоеПодразделение: СтруктураПредприятия.Ссылка, 
                                            ПозицияПодчинения: ШтатноеРасписание.Ссылка) 
    исп Транзакция = Транзакции.Начать()                    
    УдалитьСведения(ТекущееПодразделение)
    ЗаписатьСведения(НовоеПодразделение, ПозицияПодчинения)
    Транзакция.Фиксировать()
;

@НаСервере @ДоступноСКлиента
статический метод ЗаписатьСведения(ПодчиненноеПодразделение: СтруктураПредприятия.Ссылка, ПозицияПодчинения: ШтатноеРасписание.Ссылка)
    знч НаборЗаписей = новый ПодчиненностьПшрСведения.НаборЗаписей()
    
    НаборЗаписей.Фильтр.Подразделение.Установить(ПодчиненноеПодразделение)
    НаборЗаписей.ДобавитьЗапись(
        Подразделение = ПодчиненноеПодразделение,
        ПозицияШР = ПозицияПодчинения
    )
    попытка 
        НаборЗаписей.Записать(Замещать = Ложь)
    поймать Исключение: ИсключениеЗаписьНеУникальна
        выбросить новый ИсключениеЗаписьУжеСуществует("Запись с указанными данными уже существует")
    ;
;

@НаСервере @ДоступноСКлиента
статический метод УдалитьСведения(ТекущееПодразделение: СтруктураПредприятия.Ссылка)
    ПодчиненностьПшрСведения.Удалить(
        новый ПодчиненностьПшрСведения.КлючЗаписи(
            Подразделение = ТекущееПодразделение
        )
    )
;