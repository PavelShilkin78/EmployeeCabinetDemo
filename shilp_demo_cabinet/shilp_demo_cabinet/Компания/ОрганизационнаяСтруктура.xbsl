импорт ОбщиеСтандартные
импорт ФизическиеЛица
импорт Компания

@ВПроекте
структура ДанныеРуководителя
    знч Руководитель: ФизическиеЛица.Ссылка?
    знч Должность: Должности.Ссылка?
;

//Область СлужебныйПрограммныйИнтерфейс

@ВПроекте
структура Коллеги
    обз пер Руководитель: ФизическиеЛица.Ссылка?
    обз пер СотрудникиНаДолжности: ЧитаемыйМассив<ФизическиеЛица.Ссылка>
    обз пер СотрудникиПодразделения: ЧитаемыйМассив<ФизическиеЛица.Ссылка>
    обз пер ВыбранныеФизическиеЛица: ЧитаемыйМассив<ФизическиеЛица.Ссылка>
;

/**
 Возвращает основного непосредственного руководителя физического лица
 Применяется, например, для получения первого лица, участвующего в процессе согласования заявлений физлица
Параметры: ФизическоеЛицо - физическое лицо 
Возвращает:
 Ссылку на физическое лицо - руководителя
*/
@ВПроекте
метод НепосредственныйРуководительФизическогоЛица(ФизическоеЛицо: ФизическиеЛица.Ссылка): ФизическиеЛица.Ссылка?
    возврат НепосредственныеРуководителиФизическихЛиц([ФизическоеЛицо]).ПолучитьИлиУмолчание(ФизическоеЛицо)
;

/**
 Возвращает основного непосредственного руководителя для каждого физического лица
 Применяется, например, для получения первого лица, участвующего в процессе согласования заявлений физлица
Параметры: ФизическиеЛица - массив физических лиц 
Возвращает:
 Соответствие физического лица и его руководителя
*/
@ВПроекте
метод НепосредственныеРуководителиФизическихЛиц(ФизическиеЛица: ЧитаемыйМассив<ФизическиеЛица.Ссылка>): ЧитаемоеСоответствие<ФизическиеЛица.Ссылка, ФизическиеЛица.Ссылка?>
    возврат РуководителиФизическихЛиц(ФизическиеЛица, 1)
;

/**
 Возвращает руководителя запрашиваемого уровня для каждого физического лица
 Применяется, например, для получения первого лица, участвующего в процессе согласования заявлений физлица
Параметры: ФизическиеЛица - массив физических лиц, Уровень - число, "ранг" руководителя
Возвращает:
 Соответствие физического лица и его руководителя
*/
@ВПроекте
метод РуководителиФизическихЛиц(ФизическиеЛица: ЧитаемыйМассив<ФизическиеЛица.Ссылка>, Уровень: Число): Соответствие<ФизическиеЛица.Ссылка, ФизическиеЛица.Ссылка?>
    пер Руководители: Соответствие<ФизическиеЛица.Ссылка, ФизическиеЛица.Ссылка?>
    знч Запрос = Запрос{
        Выбрать
            КомпанияПодразделенияИСотрудники.ФизическоеЛицо как ФизическоеЛицо,
            ПодчиненностьПодразделений.ВышестоящееПодразделение.Руководитель.ЗаменитьNull(Неопределено) Как Руководитель,
            ПодчиненностьПодразделений.ВышестоящаяПозиция.ЗаменитьNull(Неопределено) Как ПозицияШР,
            ПодчиненностьПодразделений.Уровень Как Уровень
        Из
            ПодразделенияИСотрудники Как КомпанияПодразделенияИСотрудники
            Левое соединение ПодчиненностьПодразделений как ПодчиненностьПодразделений
            по ПодчиненностьПодразделений.Подразделение == КомпанияПодразделенияИСотрудники.Подразделение
        Где
            КомпанияПодразделенияИСотрудники.ФизическоеЛицо В (%ФизическиеЛица)
            И КомпанияПодразделенияИСотрудники.ОсновноеМестоРаботы
            И КомпанияПодразделенияИСотрудники.Подразделение != Неопределено
        Упорядочить По
            ФизическоеЛицо,
            Уровень}
    исп Результат = Запрос.Выполнить()
    пер ТекущийУровень: Число
    пер ТекущееФизическоеЛицо: ФизическиеЛица.Ссылка?
    для РезультатСтрока из Результат
        пер Руководитель = РезультатСтрока.Руководитель
        знч ФизическоеЛицо = РезультатСтрока.ФизическоеЛицо
        
        знч ПозицияШР = РезультатСтрока.ПозицияШР        
        если ПозицияШР != Неопределено
            Руководитель = РуководительПоПшр(ПозицияШР!)
        ;
        если ТекущееФизическоеЛицо != ФизическоеЛицо
            ТекущееФизическоеЛицо = ФизическоеЛицо
            ТекущийУровень = 0
        ;
        если (Руководитель == Неопределено или Руководитель == ФизическоеЛицо)
            продолжить  
        ;
        если ТекущийУровень < Уровень
            ТекущийУровень += 1
        иначе
            продолжить
        ;
        
        Руководители.Вставить(ФизическоеЛицо, Руководитель)
    ;
    возврат Руководители
;

/**
 Возвращает руководителей которые будут получать уведомления
 Применяется для оповещения руководителей в случае солгласования отсутствий
Параметры: Сотрудник - физическое лицо сотрудника
Возвращает:
    множество руководителей сотрудника по иерархии
*/
@ВПроекте
метод УведомляемыеРуководители(Сотрудник: ФизическиеЛица.Ссылка): Множество<ФизическиеЛица.Ссылка>
    знч Запрос = Запрос{
        Выбрать
            ПодразделенияИСотрудники.УровеньУведомления как УровеньУведомления,
            ПодчиненностьПодразделений.Уровень.ЗаменитьNull(0) Как УровеньПодразделения,
            ПодчиненностьПодразделений.ВышестоящееПодразделение.Руководитель.ЗаменитьNull(Неопределено) Как Руководитель,
            ПодчиненностьПодразделений.ВышестоящаяПозиция.ЗаменитьNull(Неопределено) Как ПозицияШР
        Из
            Сотрудники Как Сотрудники
            Внутреннее Соединение ПодчиненностьПодразделений как ПодчиненностьПодразделений
            По ПодчиненностьПодразделений.Подразделение == Сотрудники.МестоВСтруктуреПредприятия
            и Сотрудники.ФизическоеЛицо == %Сотрудник
            Внутреннее Соединение ПодразделенияИСотрудники как ПодразделенияИСотрудники
            По ПодразделенияИСотрудники.Объект == ПодчиненностьПодразделений.ВышестоящееПодразделение 
        Упорядочить По
            ПодчиненностьПодразделений.Уровень
    }
    пер Руководители = новый Массив<ФизическиеЛица.Ссылка>()
    пер Результат = Запрос.Выполнить()
    для РезультатСтрока из Результат
        пер Руководитель = РезультатСтрока.Руководитель
        знч ПозицияШР = РезультатСтрока.ПозицияШР
        если ПозицияШР != Неопределено
            Руководитель = РуководительПоПшр(ПозицияШР!)
        ;
        если Руководитель != Неопределено и (РезультатСтрока.УровеньУведомления + 1) >= РезультатСтрока.УровеньПодразделения
            и не Руководители.Содержит(Руководитель)
            Руководители.Добавить(Руководитель)
        ;
    ;
    если Руководители.Пусто()
        возврат {}
    ;
    
    если Руководители.Содержит(Сотрудник)
        Руководители.Удалить(Сотрудник)
    иначе
        знч НепосредственныйРуководитель = Руководители[0]
        Руководители.УдалитьКроме([НепосредственныйРуководитель])
    ;
    возврат новый Множество<ФизическиеЛица.Ссылка>(Руководители)
;

@ВПроекте 
метод РуководительПоПшр(ПозицияПшр: ШтатноеРасписание.Ссылка): ФизическиеЛица.Ссылка?
    знч Запрос = Запрос{
        Выбрать
            ПодразделенияИСотрудники.ФизическоеЛицо как ФизическоеЛицо
        Из
            ПодразделенияИСотрудники Как ПодразделенияИСотрудники 
        Где
            ПодразделенияИСотрудники.Позиция.Ссылка == %ПозицияПшр
            И ПодразделенияИСотрудники.ТипЭлемента == ТипыЭлементовПодразделенийИСотрудников.Сотрудник
            И ПодразделенияИСотрудники.ОсновноеМестоРаботы
    }
    пер Результат = Запрос.Выполнить().ЕдинственныйИлиУмолчание()
    если Результат != Неопределено
        возврат Результат.ФизическоеЛицо
    ;
    возврат Неопределено
;

@ВПроекте
метод РуководительСотрудника(Сотрудник: Сотрудники.Ссылка, Уровень: Число = 0): ФизическиеЛица.Ссылка?
    знч РуководителиСотрудника = РуководителиУровнейСотрудника(Сотрудник)
    для ДанныеРуководителя из РуководителиСотрудника
        если Уровень == ДанныеРуководителя.Уровень
            возврат ДанныеРуководителя.Руководитель
        ;
    ;
    возврат Неопределено
;

@ВПроекте
метод ДанныеРуководителяОрганизацииСотрудника(Сотрудник: Сотрудники.Ссылка): ДанныеРуководителя?
    знч ДанныеРуководителя = Организации.ДанныеРуководителяОрганизации(Сотрудники.ОрганизацияСотрудника(Сотрудник))
    если ДанныеРуководителя.Руководитель != Неопределено
        возврат ДанныеРуководителя
    ;
    возврат ДанныеРуководителяПодразделенияСотрудника(Сотрудник, Ложь)
;

@ВПроекте
метод ДанныеРуководителяПодразделенияСотрудника(Сотрудник: Сотрудники.Ссылка, ТекущегоПодразделдения: Булево): ДанныеРуководителя?
    знч РуководителиСотрудника = РуководителиУровнейСотрудника(Сотрудник)
    если не РуководителиСотрудника.Пусто()
        пер Руководитель: ФизическиеЛица.Ссылка?
        если ТекущегоПодразделдения
            Руководитель = РуководителиСотрудника.Первый().Руководитель
        иначе
            Руководитель = РуководителиСотрудника.Последний().Руководитель
        ;
        если Руководитель != Неопределено
            знч СотрудникиРуководителя = Сотрудники.СотрудникиФизическогоЛица(Руководитель)
            пер ДолжностьРуководителя: Должности.Ссылка?
            если не СотрудникиРуководителя.Пусто()
                ДолжностьРуководителя = МенеджерСущности.ЗначениеРеквизитаОбъекта(СотрудникиРуководителя[0], "Должность")
            ;
            возврат новый ОрганизационнаяСтруктура.ДанныеРуководителя(Руководитель, ДолжностьРуководителя)
        ;
    ;
    возврат Неопределено
;

@ВПроекте
метод ДанныеРуководителяПодразделения(Подразделение: СтруктураПредприятия.Ссылка): ДанныеРуководителя?
    знч Руководители = РуководителиПодразделения(Подразделение, Ложь)
    если не Руководители.Пусто()
        знч Руководитель = Руководители.ПервыйИлиУмолчание()
        знч Должность = ДолжностьРуководителя(Руководитель)
        возврат новый ДанныеРуководителя(Руководитель, Должность)
    ;
    возврат Неопределено
;

метод ДолжностьРуководителя(Руководитель: ФизическиеЛица.Ссылка): Должности.Ссылка?
        знч СотрудникиРуководителя = Сотрудники.СотрудникиФизическогоЛица(Руководитель)
        если не СотрудникиРуководителя.Пусто()
            возврат МенеджерСущности.ЗначениеРеквизитаОбъекта(СотрудникиРуководителя[0], "Должность")
        ;
    возврат Неопределено
;

структура РуководительУровня
    обз знч Руководитель: ФизическиеЛица.Ссылка?
    обз знч Уровень: Число
;

метод РуководителиУровнейСотрудника(Сотрудник: Сотрудники.Ссылка): Массив<РуководительУровня>
    пер Руководители = новый Массив<РуководительУровня>()
    знч Запрос = Запрос{
        Выбрать
            ПодчиненностьПодразделений.ВышестоящееПодразделение.Руководитель.ЗаменитьNull(Неопределено) Как Руководитель,
            ПодчиненностьПодразделений.Уровень.ЗаменитьNull(0) Как Уровень 
        Из
            ПодразделенияИСотрудники Как КомпанияПодразделенияИСотрудники
                Левое соединение ПодчиненностьПодразделений как ПодчиненностьПодразделений
                по ПодчиненностьПодразделений.Подразделение == КомпанияПодразделенияИСотрудники.Подразделение
        Где
            КомпанияПодразделенияИСотрудники.Объект В (%Сотрудник)
            И КомпанияПодразделенияИСотрудники.Подразделение != Неопределено
        Упорядочить По
            Уровень}
    исп Результат = Запрос.Выполнить()
    для РезультатСтрока из Результат
        Руководители.Добавить(новый РуководительУровня(РезультатСтрока.Руководитель, РезультатСтрока.Уровень))
    ;
    возврат Руководители
;

/**
Описание: Находит всех физических лиц, работающих в подразделении.
Параметры: Подразделение - подразделение, в котором выполняется поиск, 
 ДатаАктуальности - дата, по состоянию на которую определяется состав подразделения.
Возвращает: Все физические лица, работающие в подразделении.
Замечание: Нижестоящие (иерархически подчиненные) подразделения не учитываются.
*/
@ВПроекте
метод ФизическиеЛицаПодразделения(Подразделение: СтруктураПредприятия.Ссылка): Множество<ФизическиеЛица.Ссылка>
    возврат ФизическиеЛицаПодразделений(новый Множество<СтруктураПредприятия.Ссылка>([Подразделение]))
;

@ВПроекте
метод ФизическиеЛицаПодразделений(Подразделения: Множество<СтруктураПредприятия.Ссылка>): Множество<ФизическиеЛица.Ссылка>
    знч ФизическиеЛицаПодразделений: Множество<ФизическиеЛица.Ссылка>
    знч Запрос = Запрос{
        Выбрать Различные
            МестаРаботы.ФизическоеЛицо Как ФизическоеЛицо
        Из 
            Сотрудники Как МестаРаботы
        Где
            МестаРаботы.МестоВСтруктуреПредприятия В(%Подразделения)
            И Не МестаРаботы.Уволен}
    исп РезультатЗапроса = Запрос.Выполнить() 
    для РезультатЗапросаСтрока из РезультатЗапроса
        ФизическиеЛицаПодразделений.Добавить(РезультатЗапросаСтрока.ФизическоеЛицо)
    ;
    возврат ФизическиеЛицаПодразделений
;

@ВПроекте
метод ФизическиеЛицаПоПодразделениям(Подразделения: ЧитаемыйМассив<СтруктураПредприятия.Ссылка>): ЧитаемоеСоответствие<СтруктураПредприятия.Ссылка, ЧитаемыйМассив<ФизическиеЛица.Ссылка>>
    знч ФизическиеЛицаПодразделений: Соответствие<СтруктураПредприятия.Ссылка, Массив<ФизическиеЛица.Ссылка>>
    
    знч Запрос = Запрос{
        Выбрать
            МестаРаботы.ФизическоеЛицо как ФизическоеЛицо,
            ПодчиненностьПодразделений.ВышестоящееПодразделение как Подразделение
        Из
            Сотрудники как МестаРаботы
            внутреннее соединение ПодчиненностьПодразделений как ПодчиненностьПодразделений
            по МестаРаботы.МестоВСтруктуреПредприятия == ПодчиненностьПодразделений.Подразделение
        Где
            ПодчиненностьПодразделений.ВышестоящееПодразделение в (%Подразделения)
            и Не МестаРаботы.Уволен
    }
    
    исп Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        знч ФизическиеЛицаПодразделения = ФизическиеЛицаПодразделений.ВставитьЕслиОтсутствует(СтрокаРезультата.Подразделение, [])
        ФизическиеЛицаПодразделения.Добавить(СтрокаРезультата.ФизическоеЛицо)
    ;
    возврат ФизическиеЛицаПодразделений
;

/**
Описание: Находит все подразделения, в которых работает физическое лицо.
Параметры: ФизическоеЛицо - физическое лицо, для которого выполняется поиск, 
Возвращает: Все подразделения, в которых работает физическое лицо.
*/
@ВПроекте
метод ПодразделенияФизическогоЛица(ФизическоеЛицо: ФизическиеЛица.Ссылка): Множество<СтруктураПредприятия.Ссылка>
    пер ПодразделенияФизическогоЛица: Множество<СтруктураПредприятия.Ссылка>
    знч Запрос = Запрос{
        Выбрать Различные
            МестаРаботы.МестоВСтруктуреПредприятия Как Подразделение
        Из 
            Сотрудники Как МестаРаботы
        Где
            МестаРаботы.ФизическоеЛицо == %ФизическоеЛицо
            И МестаРаботы.МестоВСтруктуреПредприятия != Неопределено
            И Не МестаРаботы.Уволен}
    исп РезультатЗапроса = Запрос.Выполнить()
    для РезультатЗапросаСтрока из РезультатЗапроса
        ПодразделенияФизическогоЛица.Добавить(РезультатЗапросаСтрока.Подразделение)
    ;
    возврат ПодразделенияФизическогоЛица
;

@ВПроекте
метод ПодразделенияСотрудников(СотрудникиПодразделений: ЧитаемаяКоллекция<Сотрудники.Ссылка>): ЧитаемоеСоответствие<Сотрудники.Ссылка, СтруктураПредприятия.Ссылка>
    знч Запрос = Запрос{
        Выбрать 
            Ссылка Как Сотрудник,
            МестоВСтруктуреПредприятия Как Подразделение
        Из 
            Сотрудники
        Где 
            Ссылка В (%СотрудникиПодразделений)}
    исп Результат = Запрос.Выполнить() 
    знч ПодразделенияСотрудников: Соответствие<Сотрудники.Ссылка, СтруктураПредприятия.Ссылка>
    для РезультатСтрока из Результат
        ПодразделенияСотрудников.Вставить(РезультатСтрока.Сотрудник, РезультатСтрока.Подразделение)
    ;
    возврат ПодразделенияСотрудников
;

@ВПроекте
метод ПодразделениеСотрудника(СотрудникСсылка: Сотрудники.Ссылка): СтруктураПредприятия.Ссылка
    возврат ПодразделенияСотрудников([СотрудникСсылка])[СотрудникСсылка]
;
/**
Описание: Находит руководителя подразделения, а также (опционально) руководителей всех вышестоящих подразделений.
Параметры: Подразделение - подразделение, для которого выполняется поиск руководителя, 
 ТолькоНепосредственный - если установлено, то поиск вышестоящих руководителей выполняться не будет.
Возвращает: Все физические лица, являющиеся руководителями выбранного и вышестоящих подразделений (если заказано).
*/
@ВПроекте
метод РуководителиПодразделения(Подразделение: СтруктураПредприятия.Ссылка, ТолькоНепосредственный: Булево = Истина): Множество<ФизическиеЛица.Ссылка>
    знч Руководители: Массив<ФизическиеЛица.Ссылка>
    ДобавитьРуководителя(Руководители, Подразделение)
    если не ТолькоНепосредственный
        Руководители.ДобавитьВсе(РуководителиВышестоящихПодразделений(Подразделение))
    ;
    возврат новый Множество<ФизическиеЛица.Ссылка>(Руководители)
;

@ВПроекте
метод ПодразделенияРуководителя(Руководитель: ФизическиеЛица.Ссылка?): Множество<СтруктураПредприятия.Ссылка>
    знч ПодразделенияРуководителя: Множество<СтруктураПредприятия.Ссылка>
    если Руководитель == Неопределено
        возврат ПодразделенияРуководителя
    ;
    знч Запрос = Запрос{
        Выбрать Различные
            СтруктураПредприятия.Ссылка Как Ссылка
        Из 
            СтруктураПредприятия Как СтруктураПредприятия 
        Где 
            СтруктураПредприятия.Руководитель == %Руководитель}
    исп РезультатЗапроса = Запрос.Выполнить() 
    для РезультатЗапросаСтрока из РезультатЗапроса
        ПодразделенияРуководителя.Добавить(РезультатЗапросаСтрока.Ссылка)
    ;
    если ПодразделенияИСотрудники.ИспользуетсяСтруктураПодчиненияПшр()
        пер ЗапросПшр = Запрос{
            Выбрать
                Пшр.Подразделение.Ссылка.ЗаменитьNull(Неопределено) как Подразделение,
                ДП.Элемент как ПодчиненноеПодразделение
            Из
                ПодразделенияИСотрудники Как ПодрИСотр
                Внутреннее Соединение ПодчиненностьПшрСведения Как Пшр
                по Пшр.ПозицияШР == ПодрИСотр.Позиция
                Внутреннее Соединение ДанныеПодразделений.ВсеПодчиненные Как ДП
                по ДП.Владелец.Владелец == Пшр.Подразделение
            Где
                ПодрИСотр.ФизическоеЛицо == %Руководитель
                И ЕстьПодчиненныеЭлементы
            }
        для РезультатЗапросаСтрока из ЗапросПшр.Выполнить() 
            знч Подразделение = РезультатЗапросаСтрока.Подразделение
            если Подразделение != Неопределено и не ПодразделенияРуководителя.Содержит(Подразделение)
                ПодразделенияРуководителя.Добавить(Подразделение)
            ;
            знч Подчиненное = РезультатЗапросаСтрока.ПодчиненноеПодразделение
            если не ПодразделенияРуководителя.Содержит(Подчиненное)
                ПодразделенияРуководителя.Добавить(Подчиненное)
            ;
        ;
    ;
    возврат ПодразделенияРуководителя
;

@ВПроекте
метод ПодчиненныеРуководителя(Руководитель: ФизическиеЛица.Ссылка?, Подразделения: ЧитаемыйМассив<СтруктураПредприятия.Ссылка>): Множество<ФизическиеЛица.Ссылка>
    пер ПодчиненныеРуководителя: Множество<ФизическиеЛица.Ссылка>
    пер ПодчиненныеПодразделения = СтруктураПредприятия.ПодчиненныеПодразделения(Подразделения)
    если не ПодчиненныеПодразделения.Пусто()
        пер СписокПодразделений: Множество<СтруктураПредприятия.Ссылка>
        для КлючИЗначение из ПодчиненныеПодразделения
            СписокПодразделений.ДобавитьВсе(КлючИЗначение.Значение)
        ;
        пер Руководители = РуководителиПодразделений(СписокПодразделений)
        ПодчиненныеРуководителя.ДобавитьВсе(Руководители.Значения())
    ;
    если ПодчиненныеРуководителя.Содержит(Руководитель)
        ПодчиненныеРуководителя.Удалить(Руководитель)
    ;
    пер ПодразделенияРуководителя = СтруктураПредприятия.ПодчиненныеПодразделенияБезРуководителей(Подразделения)
    ПодразделенияРуководителя.ДобавитьВсе(Подразделения)
    знч НеУчитываемыеВидыЗанятости: Массив<ВидыЗанятостиСотрудников> = 
        [ВидыЗанятостиСотрудников.ВнутреннийСовместитель, ВидыЗанятостиСотрудников.Подработка]
    знч Запрос = Запрос{
        Выбрать Различные
            Сотрудники.ФизическоеЛицо Как ФизическоеЛицо
        Из 
            Сотрудники Как Сотрудники 
        Внутреннее Соединение ПодразделенияИСотрудники Как ПодразделенияИСотрудники
            По Сотрудники.ФизическоеЛицо == ПодразделенияИСотрудники.ФизическоеЛицо
                И (Сотрудники.МестоВСтруктуреПредприятия В(%ПодразделенияРуководителя))
                И (Сотрудники.ФизическоеЛицо != %Руководитель)
                И (Не Сотрудники.ФизическоеЛицо В(%ПодчиненныеРуководителя))
                И (Сотрудники.ВидЗанятости Не В (%НеУчитываемыеВидыЗанятости))
                И Сотрудники.МестоВСтруктуреПредприятия == ПодразделенияИСотрудники.Подразделение
                И (ПодразделенияИСотрудники.ОсновноеМестоРаботы)}
    исп РезультатЗапроса = Запрос.Выполнить() 
    для РезультатЗапросаСтрока из РезультатЗапроса
        ПодчиненныеРуководителя.Добавить(РезультатЗапросаСтрока.ФизическоеЛицо)
    ;
    возврат ПодчиненныеРуководителя
;

@ВПроекте
метод РуководителиПодразделений(Подразделения: ЧитаемоеМножество<СтруктураПредприятия.Ссылка>): ЧитаемоеСоответствие<СтруктураПредприятия.Ссылка, ФизическиеЛица.Ссылка>
    знч РуководителиПодразделений: Соответствие<СтруктураПредприятия.Ссылка, ФизическиеЛица.Ссылка>
    знч Руководители = МенеджерСущности.ЗначениеРеквизитаОбъектов(Подразделения, "Руководитель")
    для Элемент из Руководители
        если Элемент.Значение != Неопределено
            РуководителиПодразделений.Вставить(Элемент.Ключ как СтруктураПредприятия.Ссылка, Элемент.Значение как ФизическиеЛица.Ссылка?)
        ;
    ; 
    возврат РуководителиПодразделений
;

@ВПроекте
метод ВсеРуководителиКомпании(): Массив<ФизическиеЛица.Ссылка>
    пер ВсеПодразделения: Массив<ФизическиеЛица.Ссылка>
    знч Запрос = Запрос{
        Выбрать Различные
            Руководитель
        Из
            СтруктураПредприятия}
    исп Результат = Запрос.Выполнить() 
    для РезультатСтрока из Результат
        если РезультатСтрока.Руководитель != Неопределено
            ВсеПодразделения.Добавить(РезультатСтрока.Руководитель)
        ;
    ;
    возврат ВсеПодразделения
;

@ВПроекте
метод КоллегиФизическогоЛица(ФизическоеЛицо: ФизическиеЛица.Ссылка, СтрокаПоиска: Строка): Коллеги
    пер Руководитель = НепосредственныйРуководительФизическогоЛица(ФизическоеЛицо)
    пер ВыбранныеФизическиеЛица: Массив<ФизическиеЛица.Ссылка>
    если не СтрокаПоиска.Пусто()
        знч Запрос = Запрос{
            Выбрать
               ФизическиеЛица.Ссылка Как ФизическоеЛицо
            Из 
               ФизическиеЛица Как ФизическиеЛица
            Где 
               ФизическиеЛица.Наименование Подобно %{"\%%СтрокаПоиска\%"}}
        исп РезультатПоНаименованиям = Запрос.Выполнить()
        для РезультатПоНаименованиямСтрока из РезультатПоНаименованиям
            ВыбранныеФизическиеЛица.Добавить(РезультатПоНаименованиямСтрока.ФизическоеЛицо)
        ;
        если ВыбранныеФизическиеЛица.Найти(Руководитель) == Неопределено
            Руководитель = Неопределено
        ;
    ;
    знч Запрос = Запрос{
        Выбрать Различные
            Сотрудники.ФизическоеЛицо Как ФизическоеЛицо,
            Выбор
                Когда Сотрудники.Должность == РабочиеМеста.Должность
                    Тогда Истина
                Иначе Ложь
            Конец Как ДолжностьСовпадает
        Из 
            Сотрудники Как Сотрудники 
        Внутреннее Соединение Сотрудники Как РабочиеМеста 
            По Сотрудники.Организация == РабочиеМеста.Организация
            И Сотрудники.МестоВСтруктуреПредприятия == РабочиеМеста.МестоВСтруктуреПредприятия
            И (РабочиеМеста.ФизическоеЛицо == %ФизическоеЛицо)
            И (Сотрудники.ФизическоеЛицо != %ФизическоеЛицо)
            И (%{ВыбранныеФизическиеЛица.Пусто()} Или Сотрудники.ФизическоеЛицо В (%ВыбранныеФизическиеЛица))}
    
    пер СотрудникиПодразделения: Массив<ФизическиеЛица.Ссылка>
    пер СотрудникиНаДолжности: Массив<ФизическиеЛица.Ссылка>
    исп РезультатПоСотрудникам = Запрос.Выполнить() 
    для РезультатПоСотрудникамСтрока из РезультатПоСотрудникам
        если РезультатПоСотрудникамСтрока.ФизическоеЛицо == Руководитель
            продолжить
        ;
        если РезультатПоСотрудникамСтрока.ДолжностьСовпадает
            СотрудникиНаДолжности.Добавить(РезультатПоСотрудникамСтрока.ФизическоеЛицо)
        иначе
            СотрудникиПодразделения.Добавить(РезультатПоСотрудникамСтрока.ФизическоеЛицо)
        ;
    ;
    пер КоллегиФизическогоЛица = новый Коллеги(Руководитель, СотрудникиНаДолжности, СотрудникиПодразделения, ВыбранныеФизическиеЛица)
    возврат КоллегиФизическогоЛица
;

@ВПроекте
метод ГрафикРаботыФизическогоЛица(ФизическоеЛицо: ФизическиеЛица.Ссылка): ГрафикиРаботы.Ссылка?
    пер ГрафикиРаботыФизическихЛиц = ГрафикиРаботыФизическихЛиц([ФизическоеЛицо])
    возврат ГрафикиРаботыФизическихЛиц.ПолучитьИлиУмолчание(ФизическоеЛицо, Неопределено)
;


метод ГрафикиРаботыФизическихЛиц(СсылкиФизическихЛиц: Массив<ФизическиеЛица.Ссылка>): ЧитаемоеСоответствие<ФизическиеЛица.Ссылка, ГрафикиРаботы.Ссылка?>
    знч Запрос = Запрос{
        Выбрать 
            Сотрудники.ФизическоеЛицо Как ФизическоеЛицо,
            Сотрудники.ГрафикРаботы Как ГрафикРаботы
        Из 
            Сотрудники Как Сотрудники 
        Где 
            Сотрудники.ФизическоеЛицо В(%СсылкиФизическихЛиц)
            И Сотрудники.ВидЗанятости Не В (ВидыЗанятостиСотрудников.ВнутреннийСовместитель, ВидыЗанятостиСотрудников.Подработка)}
    исп Результат = Запрос.Выполнить() 
    пер ГрафикиРаботыФизическихЛиц: Соответствие<ФизическиеЛица.Ссылка, ГрафикиРаботы.Ссылка?>
    для РезультатСтрока из Результат
        ГрафикиРаботыФизическихЛиц.Вставить(РезультатСтрока.ФизическоеЛицо, РезультатСтрока.ГрафикРаботы)
    ;
    возврат ГрафикиРаботыФизическихЛиц
;

@ВПроекте
метод ВТФизическиеЛицаСотрудников()
    знч Запрос = Запрос{
        Выбрать Различные
            Сотрудники.ФизическоеЛицо Как ФизическоеЛицо
        Поместить ВТФизическиеЛицаСотрудников
        Из 
            Сотрудники Как Сотрудники 
        Где
            Сотрудники.ВидЗанятости Не В (ВидыЗанятостиСотрудников.ВнутреннийСовместитель, ВидыЗанятостиСотрудников.Подработка)
            И Не Сотрудники.Уволен
            И Не СкрыватьВСписках}
    Запрос.Выполнить()
;

//КонецОбласти

//Область СлужебныеПроцедурыИФункции

метод ВышестоящееПодразделение(Подразделение: СтруктураПредприятия.Ссылка): СтруктураПредприятия.Ссылка? 
    пер ВышестоящееПодразделение = МенеджерСущности.ЗначениеРеквизитаОбъекта(Подразделение, "Родитель")
    возврат (ВышестоящееПодразделение == Null ? Неопределено : ВышестоящееПодразделение)
;

метод ДобавитьРуководителя(Руководители: Массив<ФизическиеЛица.Ссылка>, Подразделение: СтруктураПредприятия.Ссылка)
    пер Руководитель = РуководительПодразделения(Подразделение) 
    если Руководитель != Неопределено 
        Руководители.Добавить(Руководитель)
    ;
;

метод РуководительПодразделения(Подразделение: СтруктураПредприятия.Ссылка): ФизическиеЛица.Ссылка?
    пер Руководитель = МенеджерСущности.ЗначениеРеквизитаОбъекта(Подразделение, "Руководитель")
    возврат (Руководитель == Null ? Неопределено : Руководитель)
;

метод РуководителиВышестоящихПодразделений(Подразделение: СтруктураПредприятия.Ссылка): Множество<ФизическиеЛица.Ссылка>
    пер РуководителиВышестоящихПодразделений: Множество<ФизическиеЛица.Ссылка>
    знч Запрос = Запрос{
        Выбрать Различные
            ДанныеПодразделенийВышестоящие.Элемент.Руководитель.ЗаменитьNull(Неопределено) Как Руководитель
        Из
            ДанныеПодразделений.Вышестоящие Как ДанныеПодразделенийВышестоящие
        Где 
            ДанныеПодразделенийВышестоящие.Владелец.Владелец == %Подразделение
            И ДанныеПодразделенийВышестоящие.Элемент.Руководитель != Неопределено}
    исп РезультатЗапроса = Запрос.Выполнить() 
    для РезультатЗапросаСтрока из РезультатЗапроса
        если РезультатЗапросаСтрока.Руководитель != Неопределено
            РуководителиВышестоящихПодразделений.Добавить(РезультатЗапросаСтрока.Руководитель!)
        ;
    ;
    возврат РуководителиВышестоящихПодразделений
;

//КонецОбласти