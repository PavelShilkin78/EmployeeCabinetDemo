импорт ОбщиеСтандартные
импорт ФизическиеЛица
импорт Компания
импорт ВебApi

//Область ОбработчикиСобытий

@Обработчик
@ВыполнятьПриЗагрузкеДанных
метод ПередЗаписью(ПредыдущееЗначение: Сотрудники.Данные, ПараметрыЗаписи: Сотрудники.ПараметрыЗаписи)
    если ВидЗанятости != ВидыЗанятостиСотрудников.ОсновнаяРабота
        и ВидЗанятости != ВидыЗанятостиСотрудников.Подработка
        
        если ДатаПриемаНаРаботу == Неопределено
            Наименование = "совмещение"
        иначе 
            Наименование = "совмещение с " + 
                МенеджерСтрок.Просклонять(
                    МенеджерДат.ФорматДаты(ДатаПриемаНаРаботу, "ММММ"), 
                    МенеджерСтрок.Падежи.Родительный) + " " + 
                ДатаПриемаНаРаботу.Год.ВСтроку()
        ;
    ;
;

@Обработчик
@ВыполнятьПриЗагрузкеДанных
метод ПередУдалением(ПараметрыУдаления: Сотрудники.ПараметрыУдаления)
    УдалитьВторичныеДанные()
;
//КонецОбласти

//Область СлужебныеПроцедурыИФункции

@ВПодсистеме
метод ЗаполнитьПоДаннымJson(ДанныеJson: Сотрудники.Сотрудник_1_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)

    знч ВнешниеСсылки: Множество<ВебApiСервер.ВнешняяСсылка>
    ВнешниеСсылки.Добавить(ФизическиеЛица.ВнешняяСсылка(ДанныеJson.ФизическоеЛицо))
    ВнешниеСсылки.Добавить(Организации.ВнешняяСсылка(ДанныеJson.Организация))
    если ДанныеJson.Подразделение != Неопределено
        ВнешниеСсылки.Добавить(СтруктураПредприятия.ВнешняяСсылка(ДанныеJson.Подразделение))
    ;
    если ДанныеJson.Должность != Неопределено
        ВнешниеСсылки.Добавить(Должности.ВнешняяСсылка(ДанныеJson.Должность))
    ;
    если ДанныеJson.Позиция != Неопределено
        ВнешниеСсылки.Добавить(ШтатноеРасписание.ВнешняяСсылка(ДанныеJson.Позиция))
    ;
    если ДанныеJson.ГрафикРаботы != Неопределено
        ВнешниеСсылки.Добавить(ГрафикиРаботы.ВнешняяСсылка(ДанныеJson.ГрафикРаботы))
    ;
    Сервисы.ПолучитьСсылки(ВнешниеСсылки)

    этот.ФизическоеЛицо = Сервисы.ПолучитьСсылку(
        ФизическиеЛица.ВнешняяСсылка(ДанныеJson.ФизическоеЛицо)) как ФизическиеЛица.Ссылка
    этот.Организация = Сервисы.ПолучитьСсылку(
        Организации.ВнешняяСсылка(ДанныеJson.Организация)) как Организации.Ссылка
    если ДанныеJson.Подразделение != Неопределено
        этот.МестоВСтруктуреПредприятия = Сервисы.ПолучитьСсылку(
            СтруктураПредприятия.ВнешняяСсылка(ДанныеJson.Подразделение)) как СтруктураПредприятия.Ссылка
    ;
    если ДанныеJson.Должность != Неопределено
        этот.Должность = Сервисы.ПолучитьСсылку(
            Должности.ВнешняяСсылка(ДанныеJson.Должность)) как Должности.Ссылка
    ;
    если ДанныеJson.Позиция != Неопределено
        этот.Позиция = Сервисы.ПолучитьСсылку(
            ШтатноеРасписание.ВнешняяСсылка(ДанныеJson.Позиция)) как ШтатноеРасписание.Ссылка
    ;
    этот.ДатаПриемаНаРаботу = ДанныеJson.ДатаПриема?.Дата
    этот.ВидЗанятости = ВидЗанятостиИзJson(ДанныеJson.ВидЗанятости)
    этот.ДатаПереводаНаПозицию = ДанныеJson.ДатаЗанятияПозиции?.Дата
    если ДанныеJson.ГрафикРаботы != Неопределено
        этот.ГрафикРаботы = Сервисы.ПолучитьСсылку(
            ГрафикиРаботы.ВнешняяСсылка(ДанныеJson.ГрафикРаботы)) как ГрафикиРаботы.Ссылка
    ;
    этот.Уволен = ДанныеJson.Уволен ?? Ложь
    этот.СкрыватьВСписках = ДанныеJson.СкрыватьВСписках ?? Ложь
;

@ВПодсистеме
метод ЗаполнитьПоДаннымJson(ДанныеJson: Сотрудники.Сотрудник_3_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)

    знч ВнешниеСсылки: Множество<ВебApiСервер.ВнешняяСсылка>
    ВнешниеСсылки.Добавить(ФизическиеЛица.ВнешняяСсылка(ДанныеJson.ФизическоеЛицо))
    ВнешниеСсылки.Добавить(Организации.ВнешняяСсылка(ДанныеJson.Организация))
    если ДанныеJson.Подразделение != Неопределено
        ВнешниеСсылки.Добавить(СтруктураПредприятия.ВнешняяСсылка(ДанныеJson.Подразделение))
    ;
    если ДанныеJson.Должность != Неопределено
        ВнешниеСсылки.Добавить(Должности.ВнешняяСсылка(ДанныеJson.Должность))
    ;
    если ДанныеJson.Позиция != Неопределено
        ВнешниеСсылки.Добавить(ШтатноеРасписание.ВнешняяСсылка(ДанныеJson.Позиция))
    ;
    если ДанныеJson.ГрафикРаботы != Неопределено
        ВнешниеСсылки.Добавить(ГрафикиРаботы.ВнешняяСсылка(ДанныеJson.ГрафикРаботы))
    ;
    Сервисы.ПолучитьСсылки(ВнешниеСсылки)

    этот.ФизическоеЛицо = Сервисы.ПолучитьСсылку(
        ФизическиеЛица.ВнешняяСсылка(ДанныеJson.ФизическоеЛицо)) как ФизическиеЛица.Ссылка
    этот.Организация = Сервисы.ПолучитьСсылку(
        Организации.ВнешняяСсылка(ДанныеJson.Организация)) как Организации.Ссылка
    если ДанныеJson.Подразделение != Неопределено
        этот.МестоВСтруктуреПредприятия = Сервисы.ПолучитьСсылку(
            СтруктураПредприятия.ВнешняяСсылка(ДанныеJson.Подразделение)) как СтруктураПредприятия.Ссылка
    ;
    если ДанныеJson.Должность != Неопределено
        этот.Должность = Сервисы.ПолучитьСсылку(
            Должности.ВнешняяСсылка(ДанныеJson.Должность)) как Должности.Ссылка
    ;
    если ДанныеJson.Позиция != Неопределено
        этот.Позиция = Сервисы.ПолучитьСсылку(
            ШтатноеРасписание.ВнешняяСсылка(ДанныеJson.Позиция)) как ШтатноеРасписание.Ссылка
    ;
    этот.ДатаПриемаНаРаботу = ДанныеJson.ДатаПриема?.Дата
    этот.ВидЗанятости = ВидЗанятостиИзJson(ДанныеJson.ВидЗанятости)
    этот.ДатаПереводаНаПозицию = ДанныеJson.ДатаЗанятияПозиции?.Дата
    если ДанныеJson.ГрафикРаботы != Неопределено
        этот.ГрафикРаботы = Сервисы.ПолучитьСсылку(
            ГрафикиРаботы.ВнешняяСсылка(ДанныеJson.ГрафикРаботы)) как ГрафикиРаботы.Ссылка
    ;
    этот.Уволен = ДанныеJson.Уволен ?? Ложь
    этот.СкрыватьВСписках = ДанныеJson.СкрыватьВСписках ?? Ложь
    этот.ТабельныйНомер = ДанныеJson.ТабельныйНомер ?? ""
;

метод ВидЗанятостиИзJson(ВидJson: Сотрудники.ВидЗанятостиJson): ВидыЗанятостиСотрудников
    пер Вид: ВидыЗанятостиСотрудников
    выбор ВидJson
    когда mainWork
        Вид = ВидыЗанятостиСотрудников.ОсновнаяРабота
    когда extraWorkExternal
        Вид = ВидыЗанятостиСотрудников.Совместитель
    когда extraWorkInternal
        Вид = ВидыЗанятостиСотрудников.ВнутреннийСовместитель
    когда extraWorkTemporary
        Вид = ВидыЗанятостиСотрудников.Подработка
    ;
    возврат Вид
;

метод УдалитьВторичныеДанные()
    знч Запрос = Запрос{
        Выбрать
            КомпанияПодразделенияИСотрудники.Ссылка Как Ссылка
        Из
            ПодразделенияИСотрудники Как КомпанияПодразделенияИСотрудники
        Где
            КомпанияПодразделенияИСотрудники.Объект == %Ссылка}
    исп Результат = Запрос.Выполнить() 
    для РезультатСтрока из Результат
        пер ПодразделенияИСотрудникиОбъект = РезультатСтрока.Ссылка.ЗагрузитьОбъект()
        если ПодразделенияИСотрудникиОбъект != Неопределено
            ПодразделенияИСотрудникиОбъект.Удалить()
        ;
    ;
;

//КонецОбласти