импорт ОбщиеСтандартные
импорт ФизическиеЛица
импорт Компания
импорт ВебApi
импорт КонтрольДоступа
импорт УниверсальныеМеханизмы

//Область ОбработчикиСобытий

@Обработчик
@ВыполнятьПриЗагрузкеДанных
метод ПередЗаписью(ПредыдущееЗначение: СтруктураПредприятия.Данные, ПараметрыЗаписи: СтруктураПредприятия.ПараметрыЗаписи)
    ЗаполнитьНаименованиеСИерархией(ПредыдущееЗначение)
;

@Обработчик
@ВыполнятьПриЗагрузкеДанных
метод ПослеЗаписи(ПредыдущееЗначение: СтруктураПредприятия.Данные, ПараметрыЗаписи: СтруктураПредприятия.ПараметрыЗаписи)
    если не ПараметрыЗаписи.РежимЗагрузкиДанных
        ОбновитьГруппуДоступа(ПредыдущееЗначение)
		если ПараметрыЗаписи.РежимОбновленияВторичныхДанных != Истина
			СтруктураПредприятия.ОбновитьДанныеПодразделений()
			ЗаполнитьНаименованиеСИерархиейДляПодчиненных(Ссылка)
		;
    ;
;

//КонецОбласти

//Область СлужебныеПроцедурыИФункции

метод ЗаполнитьНаименованиеСИерархией(ПредыдущееЗначение: СтруктураПредприятия.Данные)
    если ЭтоНовый() 
        или ПредыдущееЗначение.Наименование != Наименование или ПредыдущееЗначение.Родитель != Родитель
        
        ЗаполнитьНаименованиеСИерархией()
    ;
;

метод ЗаполнитьНаименованиеСИерархией()
    если Родитель == Неопределено
        НаименованиеСИерархией = Наименование
    иначе
        НаименованиеСИерархией = СтруктураПредприятия.НаименованиеСИерархией(Наименование, СтруктураПредприятия.ИерархияВышестоящих(Ссылка))
    ;
;

метод ЗаполнитьНаименованиеСИерархиейДляПодчиненных(СсылкаНаОбъект: СтруктураПредприятия.Ссылка)
    знч Запрос = Запрос{
        Выбрать
            СтруктураПредприятия.Ссылка
        Из СтруктураПредприятия Как СтруктураПредприятия
        Где СтруктураПредприятия.Родитель == %СсылкаНаОбъект
    }
    исп РезультатЗапроса = Запрос.Выполнить()
    для СтрокаРезультата из РезультатЗапроса
        знч Объект = СтрокаРезультата.Ссылка.ЗагрузитьОбъект()
        Объект.ЗаполнитьНаименованиеСИерархией()
        Объект.Записать()
        ЗаполнитьНаименованиеСИерархиейДляПодчиненных(СтрокаРезультата.Ссылка)
    ;
    возврат
;

@ВПодсистеме
метод ЗаполнитьПоДаннымJson(ДанныеJson: СтруктураПредприятия.Подразделение_1_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    этот.Наименование = ДанныеJson.Наименование
    этот.Код = ДанныеJson.Код
    если ДанныеJson.Родитель != Неопределено и ДанныеJson.Родитель != ДанныеJson.Ид
        этот.Родитель = Сервисы.ПолучитьСсылку(
            СтруктураПредприятия.ВнешняяСсылка(ДанныеJson.Родитель)) как СтруктураПредприятия.Ссылка
    иначе
        этот.Родитель = Неопределено
    ;
    если ДанныеJson.Руководитель != Неопределено
        этот.Руководитель = Сервисы.ПолучитьСсылку(
            ФизическиеЛица.ВнешняяСсылка(ДанныеJson.Руководитель)) как ФизическиеЛица.Ссылка
    иначе
        этот.Руководитель = Неопределено
    ;
    этот.Приоритет = ДанныеJson.Приоритет ?? ""
;

@ВПодсистеме
метод ЗаполнитьПоДаннымJson(ДанныеJson: СтруктураПредприятия.Подразделение_3_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    этот.Наименование = ДанныеJson.Наименование
    этот.Код = ДанныеJson.Код
    если ДанныеJson.Родитель != Неопределено и ДанныеJson.Родитель != ДанныеJson.Ид
        этот.Родитель = Сервисы.ПолучитьСсылку(
            СтруктураПредприятия.ВнешняяСсылка(ДанныеJson.Родитель)) как СтруктураПредприятия.Ссылка
    иначе
        этот.Родитель = Неопределено
    ;
    если ДанныеJson.Руководитель != Неопределено
        этот.Руководитель = Сервисы.ПолучитьСсылку(
            ФизическиеЛица.ВнешняяСсылка(ДанныеJson.Руководитель)) как ФизическиеЛица.Ссылка
    иначе
        этот.Руководитель = Неопределено
    ;
    этот.Приоритет = ДанныеJson.Приоритет ?? ""
    если ДанныеJson.СклоненияПредставления != Неопределено
        СклоненияПредставленийОбъектов.ЗаписатьСклоненияПредставления(этот.Ссылка,
            СклоненияПредставленийОбъектов.СклоненияПредставленияОбъектаИзJson(ДанныеJson.СклоненияПредставления))
    ;
;

метод ОбновитьГруппуДоступа(ПредыдущееЗначение: СтруктураПредприятия.Данные)
    если не ЭтоНовый()
        если Руководитель == ПредыдущееЗначение.Руководитель и Родитель == ПредыдущееЗначение.Родитель
            возврат
        ;
    ;
    
    МенеджерЗаданий.ПроверитьАвтозапускЗапланированныхЗаданийВключен()
    ЗапланированныеЗадания.Создать(&СтруктураПредприятия.ОбновитьГруппыДоступаПодразделений, [Ссылка])
        .ЗапланироватьВТранзакции()
;

//КонецОбласти