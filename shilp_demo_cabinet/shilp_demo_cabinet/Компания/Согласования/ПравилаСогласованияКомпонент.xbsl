импорт ОбщиеСтандартные
импорт КонтрольДоступа
импорт ИнтерфейсныеКомпонентыСтандартные


@ВПроекте
@Реализация
метод Инициализировать()
    КоличествоПравил = КоличествоПравил(ВидСогласуемогоЗаявления)
    НастройкаПравилДоступна = ДоступнаНастройкаПравилСогласования()
    СобственнаяМодифицированность = РедактированиеНеЗавершено(ВидСогласуемогоЗаявления)
;

метод ДобавитьПравилоПриНажатии(Команда: ОбычнаяКоманда)
    знч НовоеПравилоСогласования = новый Согласования.ПравилоСогласования(ВидСогласуемогоЗаявления = ВидСогласуемогоЗаявления)
    НовоеПравилоСогласования.Автор = КонтрольДоступа.ПараметрыСеанса().ФизлицоТекущегоПользователя
    НовоеПравилоСогласования.ШагиПравила.Добавить(новый Согласования.ШагПравилаСогласования(1, ТипыШаговСогласования
        .ВсеСогласующие, [Согласования.РольПодписантаНепосредственныйРуководитель()]))

    РедактироватьПравило(НовоеПравилоСогласования)
;

метод ЗакончитьРедактированиеПриНажатии(Источник: Кнопка, Событие: СобытиеПриНажатии)
    ЗакончитьРедактирование()
    СобственнаяМодифицированность = Ложь
    СтандартныеФормы.ПоказатьУведомление("Редактирование завершено", "Изменения скоро вступят в силу")
;

метод СтрокаПоискаВыполнитьПоиск(Источник: СтрокаПоиска, Событие: СобытиеСДанными<Строка>)
    СтрокаПоиска = Событие.Данные
    УстановитьФильтрСписка()
;

метод УстановитьФильтрСписка()
    пер ИсточникДанныхФильтр = Компоненты.ПравилаСогласования.Источник.Фильтр
    пер ЭлементФильтра: ЭлементФильтра = ИсточникДанныхФильтр.Элементы[0] как ЭлементФильтра
    ЭлементФильтра.Значение = СтрокаПоиска
    ЭлементФильтра.Использовать = не СтрокаПоиска.Пусто()
;

метод ЗакончитьРедактированиеВидимость(): Булево
    возврат СобственнаяМодифицированность
;

метод ПравилаСогласованияПриНажатииЭлемента(Источник: Список<ДинамическийСписок>, Событие: СобытиеСДанными<СтрокаСписка<СтрокаДинамическогоСписка>>)
    знч ПравилоСогласованияСсылка = Событие.Данные.ДанныеСтроки.Данные["Ссылка"] как ПравилаСогласования.Ссылка
    знч ТекущееФизлицо = КонтрольДоступа.ПараметрыСеанса().ФизлицоТекущегоПользователя
    РедактироватьПравило(Согласования.ДанныеПравилаСогласования(ПравилоСогласованияСсылка, ТекущееФизлицо))
;

метод РедактироватьПравило(ПравилоСогласования: Согласования.ПравилоСогласования)
    знч ДоступноУдаление =
        ПравилоСогласования.Ссылка != Неопределено и КоличествоПравил > 1 и не ПравилоСогласования.ПоУмолчанию

    пер ФормаРедактирования =
        новый ФормаРедактированияПравилаСогласования(ПравилоСогласования = ПравилоСогласования,
        ДоступноУдаление = ДоступноУдаление, НастройкаПравилДоступна = НастройкаПравилДоступна)
    ФормаРедактирования.Инициализировать()
    знч РезультатРедактирования = ФормаРедактирования.ОткрытьВМодальномОкне()

    если РезультатРедактирования == Истина
        КоличествоПравил = КоличествоПравил(ВидСогласуемогоЗаявления)
        Компоненты.ПравилаСогласования.Обновить()
        СобственнаяМодифицированность = Истина
    ;
;

метод ПредставлениеПравилаЗаголовок(ДанныеЭлемента: СтрокаДинамическогоСписка): Строка
    если ДанныеЭлемента.Данные["ПодразделениеФизическоеЛицо"] != ""
        возврат ДанныеЭлемента.Данные["ПодразделениеФизическоеЛицо"] как Строка
    иначе
        если КоличествоПравил == 1
            возврат "Для всех подразделений"
        иначе
            возврат "Для остальных подразделений"
        ;
    ;
;

метод КоличествоШаговЗаголовок(ДанныеЭлемента: СтрокаДинамическогоСписка): Строка
    знч КоличествоШагов = ДанныеЭлемента.Данные["КоличествоШагов"] как Число
    возврат "%{КоличествоШагов.ВСтроку()} %{МенеджерСтрок.ТекстПоКоличеству("шаг", КоличествоШагов)}"
;

метод ПредставлениеСогласующихЗаголовок(ДанныеЭлемента: СтрокаДинамическогоСписка): Строка
    возврат ДанныеЭлемента.Данные["ПредставлениеСогласующих"] как Строка
;

@НаСервере
@ДоступноСКлиента
статический метод КоличествоПравил(ВидСогласуемогоЗаявления: ВидыСогласуемыхЗаявлений.Ссылка?): Число
    знч Запрос = Запрос{
        Выбрать
            Количество(*) как Количество
        Из
            ПравилаСогласования
        Где
            Действие != ДействияСПравиломСогласования.Удалить
            и ВидСогласуемогоЗаявления == %ВидСогласуемогоЗаявления
    }

    исп Результат = Запрос.Выполнить()
    знч РезультатСтроки = новый ЧитаемыйМассив(Результат)
    если (не РезультатСтроки.Пусто())
        возврат РезультатСтроки[0].Количество
    иначе
        возврат 0
    ;
;

@НаСервере
@ДоступноСКлиента
статический метод РедактированиеНеЗавершено(ВидСогласуемогоЗаявления: ВидыСогласуемыхЗаявлений.Ссылка?): Булево
    знч Запрос = Запрос{
        Выбрать первые 1
            1 как Значение
        Из
            ПравилаСогласования
        Где
            СостояниеПравила == СостоянияПравилСогласования.Черновик
            и ВидСогласуемогоЗаявления == %ВидСогласуемогоЗаявления
    }

    исп Результат = Запрос.Выполнить()
    знч РезультатСтроки = новый ЧитаемыйМассив(Результат)
    возврат (не РезультатСтроки.Пусто())
;

@НаСервере
@ДоступноСКлиента
статический метод ЗакончитьРедактирование()
    Согласования.ЗапланироватьОбновлениеПравилСогласования()
;

@НаСервере
@ДоступноСКлиента
статический метод ДоступнаНастройкаПравилСогласования(): Булево
    возврат ИспользуемаяФункциональность.ФункциональныеОпции().ДоступнаНастройкаПравилСогласования
;