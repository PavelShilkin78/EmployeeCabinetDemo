импорт КонтрольДоступа

//Область РазрешенияДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): Массив<РазрешениеДоступа>
    возврат КонтрольДоступа.РазрешенияДоступаТаблицыСервисныхДанныхПриложения()
;

//КонецОбласти

@ВПодсистеме
метод ЗаполнитьПредопределенныеВидыСогласуемыхЗаявлений()
    для Сервис из СогласованияПользователь.ПолучитьСервисы()
        Сервис.ЗаполнитьПредопределенныеВидыСогласуемыхЗаявлений()
    ;
;

@ВПроекте
метод ДобавитьВидСогласуемогоЗаявления(Наименование: Строка, ЗначениеJson: Строка,
    Используется: Булево, Настраиваемый: Булево = Ложь): ВидыСогласуемыхЗаявлений.Ссылка
    
    исп Транзакция = Транзакции.Начать()
    знч ВидЗаявления = новый ВидыСогласуемыхЗаявлений.Объект()
    ВидЗаявления.Наименование = Наименование
    ВидЗаявления.ЗначениеJson = ЗначениеJson
    ВидЗаявления.Настраиваемый = Настраиваемый
    ВидЗаявления.Отключен = не Используется
    ВидЗаявления.Записать()
    Транзакция.Фиксировать()
    возврат ВидЗаявления.Ссылка
;

@ВПроекте
метод ОбновитьПредставление(ВидЗаявленияСсылка: ВидыСогласуемыхЗаявлений.Ссылка, Наименование: Строка)
    исп Транзакция = Транзакции.Начать()
    знч ВидЗаявления = ВидЗаявленияСсылка.ЗагрузитьОбъект(Истина)
    ВидЗаявления.Наименование = Наименование
    ВидЗаявления.Записать()
    Транзакция.Фиксировать()
;

@ВПроекте
метод ДобавитьПредопределенныйВидСогласуемогоЗаявления(Наименование: Строка, ЗначениеJson: Строка,
    ИмяПредопределенныхДанных: Строка,
    ВидСогласуемогоЗаявленияУстарело: ВидыСогласуемыхЗаявленийУстарело? = Неопределено,
    Настраиваемый: Булево = Ложь)
    
    если ИмяПредопределенныхДанных.Пусто()
        возврат
    ;
    
    исп Транзакция = Транзакции.Начать()
    знч Запрос = Запрос{
        Выбрать
            Ссылка
        из
            ВидыСогласуемыхЗаявлений
        Где
            ИмяПредопределенныхДанных == %ИмяПредопределенныхДанных}
    исп Результат = Запрос.Выполнить()
    знч ВидЗаявленияСсылка = Результат.ПервыйИлиУмолчание()?.Ссылка
    пер ВидЗаявления: ВидыСогласуемыхЗаявлений.Объект?
    если ВидЗаявленияСсылка == Неопределено
        ВидЗаявления = новый ВидыСогласуемыхЗаявлений.Объект()
    иначе
        ВидЗаявления = ВидЗаявленияСсылка.ЗагрузитьОбъект(Истина)
    ;
    
    ВидЗаявления.Наименование = Наименование
    ВидЗаявления.ЗначениеJson = ЗначениеJson
    ВидЗаявления.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных
    ВидЗаявления.ВидСогласуемогоЗаявленияУстарело = ВидСогласуемогоЗаявленияУстарело
    ВидЗаявления.Настраиваемый = Настраиваемый
    ВидЗаявления.Записать()
    Транзакция.Фиксировать()
;

@ВПроекте
метод НайтиПредопределенное(ИмяПредопределенныхДанных: Строка): ВидыСогласуемыхЗаявлений.Ссылка?
    если ИмяПредопределенныхДанных.Пусто()
        возврат Неопределено
    ;
    
    знч Запрос = Запрос{
        Выбрать
            Ссылка
        из
            ВидыСогласуемыхЗаявлений
        Где
            ИмяПредопределенныхДанных == %ИмяПредопределенныхДанных}
    исп Результат = Запрос.Выполнить()
    возврат Результат.ПервыйИлиУмолчание()?.Ссылка
;

@ВПодсистеме
метод СоответствиеВидовСогласуемыхЗаявлений(): ЧитаемоеСоответствие<ВидыСогласуемыхЗаявленийУстарело, ВидыСогласуемыхЗаявлений.Ссылка>
    знч ВидыСогласуемыхЗаявлений: Соответствие<ВидыСогласуемыхЗаявленийУстарело, ВидыСогласуемыхЗаявлений.Ссылка>
    знч Запрос = Запрос{
        Выбрать
            Ссылка,
            ВидСогласуемогоЗаявленияУстарело
        Из
            ВидыСогласуемыхЗаявлений
        Где
            ВидСогласуемогоЗаявленияУстарело != Неопределено}
            
    исп Результат = Запрос.Выполнить()
    для РезультатСтрока из Результат
        ВидыСогласуемыхЗаявлений.Вставить(РезультатСтрока.ВидСогласуемогоЗаявленияУстарело, РезультатСтрока.Ссылка)
    ;
    
    возврат ВидыСогласуемыхЗаявлений
;

@ВПроекте
метод УстановитьИспользуемостьВидаСогласования(ВидЗаявленияСсылка: ВидыСогласуемыхЗаявлений.Ссылка, Используется: Булево)
    исп Транзакции.Начать()
    знч ВидЗаявления = ВидЗаявленияСсылка.ЗагрузитьОбъект(Истина)
    ВидЗаявления.Отключен = не Используется
    ВидЗаявления.Записать()
;