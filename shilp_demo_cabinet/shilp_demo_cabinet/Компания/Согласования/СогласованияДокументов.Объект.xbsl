импорт ОбщиеСтандартные
импорт ОбменДанными
импорт ВебApi
импорт Криптография

//Область ОбработчикиСобытий

@Обработчик
@ВыполнятьПриЗагрузкеДанных
метод ПередЗаписью(ПредыдущееЗначение: СогласованияДокументов.Данные, ПараметрыЗаписи: СогласованияДокументов.ПараметрыЗаписи)
    если не МенеджерСущности.СсылкаСуществует(Документ)
        выбросить новый Криптография.ИсключениеПодписанныйДокументОтсутствует("Подписанный документ отсутствует", Документ)
    ;
    Наименование = Подпись.Представление()
;

@Обработчик
@ВыполнятьПриЗагрузкеДанных
метод ПослеЗаписи(ПредыдущееЗначение: СогласованияДокументов.Данные, ПараметрыЗаписи: СогласованияДокументов.ПараметрыЗаписи)
    если Результат != РезультатыСогласования.НаПодписанииВСервисеПодписания
        исп КонтекстДоступа.Привилегированный()
        пер ТребуетсяРегистрацияИзменений = не ПараметрыЗаписи.РежимЗагрузкиДанных 
            и РегистрацияИзменений.ТребуетсяРегистрацияИзмененийОбъекта(этот, ПредыдущееЗначение)
            
        если Согласования.РолиПодписантовПриложения().Содержит(РольПодписанта)
            СогласованияДокументов.ПослеЗаписиДополнение(Ссылка, ТребуетсяРегистрацияИзменений, Документ)
        ;
    ;
;

@Обработчик
@ВыполнятьПриЗагрузкеДанных
метод ПередУдалением(ПараметрыУдаления: СогласованияДокументов.ПараметрыУдаления)
    если Документ это ИсходящиеДанные.Ссылка
        и ОбменДанными.ЭтоОтправляемыйДокумент(Документ как ИсходящиеДанные.Ссылка)
        
        выбросить новый ОбменДанными.ИсключениеДокументУжеОтправлен("Документ уже отправлен", Документ)
    ;
    исп КонтекстДоступа.Привилегированный()
    МенеджерСущности.УдалитьПодчиненныеОбъекты(Ссылка, Тип<ВерсииДанныхОбъектов>, "Объект")
    если Подпись != Неопределено
        знч ПодписьОбъект = Подпись.ЗагрузитьОбъект()
        если ПодписьОбъект != Неопределено
            ПодписьОбъект.Удалить()
        ;
    ;
;

//КонецОбласти