импорт ОбщиеСтандартные


@ВПодсистеме
метод ДанныеШаговПравилСогласования(Правила: ЧитаемаяКоллекция<ПравилаСогласования.Ссылка>): ЧитаемоеСоответствие<ПравилаСогласования.Ссылка, Массив<ЧитаемоеСоответствие<Строка, Объект?>>>
    
    исп ПривилегированныйРежим: КонтекстДоступа = КонтекстДоступа.Привилегированный()
    
    пер ДанныеШагов: Соответствие<ПравилаСогласования.Ссылка, Массив<ЧитаемоеСоответствие<Строка, Объект?>>>
        
    знч Запрос = Запрос{
    Выбрать
            ШагиПравилСогласования.ПравилоСогласования,
            ШагиПравилСогласования.ШагСогласования,
            ШагиПравилСогласования.ИдентификаторЗаписи,
            ШагиПравилСогласования.ТипШага,
            ШагиПравилСогласования.РольСогласующего,
            ШагиПравилСогласования.Согласующий,
            ШагиПравилСогласования.ТребуемаяПодпись            
        Из
            ШагиПравилСогласования Как ШагиПравилСогласования 
        Где
            ПравилоСогласования В (%Правила)} 
    исп Результат = Запрос.Выполнить()
    для РезультатСтрока из Результат
        
        пер МассивШагов: Массив<ЧитаемоеСоответствие<Строка, Объект?>>
        ДанныеШагов.ВставитьЕслиОтсутствует(
            РезультатСтрока.ПравилоСогласования,
            МассивШагов)
        
        МассивШагов = ДанныеШагов[РезультатСтрока.ПравилоСогласования]
        МассивШагов.Добавить(МенеджерЗапросов.СтрокаРезультатаЗапросаВСоответствие(РезультатСтрока, Результат))
                
    ;
    
    ПривилегированныйРежим.Закрыть()        
    возврат ДанныеШагов   
;

//Область РазрешенияДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): Массив<РазрешениеДоступа>
    возврат СогласованияКонтрольДоступаПоставщик.ПолучитьСервис().ВычислитьРазрешенияДоступаШагиПравилСогласования()
;

//КонецОбласти

//Область Обновление
@ВПодсистеме
метод ОбновитьРолиПодписантов(РолиПодписантов: ЧитаемоеСоответствие<РолиПодписантовУстарело, РолиПодписантов.Ссылка>)
    знч Запрос = Запрос{
        Выбрать
            ПравилоСогласования,
            ШагСогласования,
            ИдентификаторЗаписи,
            ТипШага,
            Согласующий,
            РольСогласующегоУстарело,
            ТребуемаяПодпись
        Из
            ШагиПравилСогласования
        Где
            РольСогласующего == Неопределено
    }
    
    исп Результат = Запрос.Выполнить()
    для РезультатСтрока из Результат
        знч НаборЗаписей = новый ШагиПравилСогласования.НаборЗаписей()
        НаборЗаписей.Фильтр.ПравилоСогласования.Установить(РезультатСтрока.ПравилоСогласования)
        НаборЗаписей.Фильтр.ШагСогласования.Установить(РезультатСтрока.ШагСогласования)
        НаборЗаписей.Фильтр.ИдентификаторЗаписи.Установить(РезультатСтрока.ИдентификаторЗаписи)
        
        НаборЗаписей.ДобавитьЗапись(
            ПравилоСогласования = РезультатСтрока.ПравилоСогласования,
            ШагСогласования = РезультатСтрока.ШагСогласования,
            ИдентификаторЗаписи = РезультатСтрока.ИдентификаторЗаписи,
            ТипШага = РезультатСтрока.ТипШага,
            Согласующий = РезультатСтрока.Согласующий,
            ТребуемаяПодпись = РезультатСтрока.ТребуемаяПодпись,
            РольСогласующегоУстарело = РезультатСтрока.РольСогласующегоУстарело,
            РольСогласующего = РолиПодписантов.ПолучитьИлиУмолчание(РезультатСтрока.РольСогласующегоУстарело)
        )
        
        НаборЗаписей.Записать()
    ;
;

//КонецОбласти

@ВПодсистеме
метод УдалитьЗаписиПравилаСогласования(ПравилоСогласования: ПравилаСогласования.Ссылка)
    знч НаборЗаписей = новый ШагиПравилСогласования.НаборЗаписей()
    НаборЗаписей.Фильтр.ПравилоСогласования.Установить(ПравилоСогласования)
    НаборЗаписей.Записать()
;