импорт ВебApi
импорт КонтрольДоступа

//Область РазрешенияДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): Массив<РазрешениеДоступа>
    возврат КонтрольДоступа.РазрешенияДоступаHttpВызоваКонтентДанныхПриложения()
;

//КонецОбласти

//Область ОбработчикиHttpМетодов

метод ОбновитьПравилаСогласования(ЗапросHttp: HttpСервисЗапрос)
    знч ПроверкаФорматаОбмена = ВебApiСервер.ПроверитьФорматОбмена(ЗапросHttp)
    если ПроверкаФорматаОбмена.НеПоддерживаемыйТипДанных
        возврат
    ;
    ВебApiСервер.ЗагрузитьОбъекты(ЗапросHttp, Тип<ПравилаСогласования.Ссылка>,
    новый ВебApiСервер.ИнструментыМенеджераОбъекта(
        (Объект: Сущность.Объект) -> (Объект как ПравилаСогласования.Объект).Записать()
    ), ПроверкаФорматаОбмена.ФорматОбмена)
;

метод ПолучитьПравилоСогласования(ЗапросHttp: HttpСервисЗапрос)
    знч ПроверкаФорматаОбмена = ВебApiСервер.ПроверитьФорматОбмена(ЗапросHttp)
    если ПроверкаФорматаОбмена.НеПоддерживаемыйТипДанных
        возврат
    ;
    ВебApiСервер.ОтправитьОбъектПоСсылке(ЗапросHttp, Тип<ПравилаСогласования.Ссылка>,
        новый СервисыHttp.ОжидаемыйПараметр("ID", Истина, СервисыHttp.ТипыПараметраUrl.Строка),
        (Ууид) -> ПравилаСогласования.ПолучитьСсылку(Ууид), ПроверкаФорматаОбмена.ФорматОбмена)
;

метод УдалитьПравилоСогласования(ЗапросHttp: HttpСервисЗапрос)
    знч ПроверкаФорматаОбмена = ВебApiСервер.ПроверитьФорматОбмена(ЗапросHttp)
    если ПроверкаФорматаОбмена.НеПоддерживаемыйТипДанных
        возврат
    ;
    ВебApiСервер.УдалитьОбъектПоИдентификатору(ЗапросHttp, 
        новый СервисыHttp.ОжидаемыйПараметр("ID", Истина, СервисыHttp.ТипыПараметраUrl.Строка),
        (Объект: Справочник.Объект) -> (Объект как ПравилаСогласования.Объект).Удалить())
;

//КонецОбласти