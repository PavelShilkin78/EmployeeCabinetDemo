импорт ФизическиеЛица
импорт ВебApi
импорт СтандартноеПриложение
импорт КонтрольДоступа
импорт ОбменДанными

// Контракт ПодсистемаПриложения

@ВПроекте
@Реализация
метод ОписаниеПодсистемы(): СтандартноеПриложение.ОписаниеПодсистемы
    возврат новый СтандартноеПриложение.ОписаниеПодсистемы(Согласования.ИД_ПОДСИСТЕМЫ, {Компания.ИД_ПОДСИСТЕМЫ})
;

// Конец ПодсистемаПриложения

// Контракт ОбновляемаяПодсистема

@ВПроекте
@Реализация
метод ОбработчикиЗаполнения(): Массив<СтандартноеПриложение.ОписаниеОбработчикаЗаполнения>
    пер Обработчики: Массив<СтандартноеПриложение.ОписаниеОбработчикаЗаполнения>
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаЗаполнения(
                    Согласования.ИД_ПОДСИСТЕМЫ, 
                    "РолиПодписантовЗаполнитьПредопределенныеРолиПодписантов", 
                    &РолиПодписантов.ЗаполнитьПредопределенныеРолиПодписантов()))
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаЗаполнения(
                    Согласования.ИД_ПОДСИСТЕМЫ, 
                    "ВидыСогласуемыхЗаявленийЗаполнитьПредопределенныеВидыСогласуемыхЗаявлений", 
                    &ВидыСогласуемыхЗаявлений.ЗаполнитьПредопределенныеВидыСогласуемыхЗаявлений()))
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаЗаполнения(
                    Согласования.ИД_ПОДСИСТЕМЫ, 
                    "ПравилаСогласованияЗаполнитьПравилоСогласованияПоУмолчанию", 
                    &ПравилаСогласования.ЗаполнитьПравилоСогласованияПоУмолчанию()))
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаЗаполнения(
                    Согласования.ИД_ПОДСИСТЕМЫ, 
                    "ТипыСогласуемыхДокументовЗаполнитьПредопределенные", 
                    &ТипыСогласуемыхДокументов.ЗаполнитьПредопределенные()))
    возврат Обработчики
;

@ВПроекте
@Реализация
метод ОбработчикиОбновления(): Массив<СтандартноеПриложение.ОписаниеОбработчикаОбновления>
    пер Обработчики: Массив<СтандартноеПриложение.ОписаниеОбработчикаОбновления>
    пер Сервис = СогласованияПоставщикВерсииПриложения.ПолучитьСервис()
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
                Согласования.ИД_ПОДСИСТЕМЫ, 
                "ВидыСогласуемыхЗаявленийЗаполнитьПредопределенныеВидыСогласуемыхЗаявлений", 
                &ВидыСогласуемыхЗаявлений.ЗаполнитьПредопределенныеВидыСогласуемыхЗаявлений(), 
                Сервис.ВидыСогласуемыхЗаявленийЗаполнитьПредопределенныеВидыСогласуемыхЗаявлений()))
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
                Согласования.ИД_ПОДСИСТЕМЫ, 
                "РолиПодписантовЗаполнитьПредопределенныеРолиПодписантов", 
                &РолиПодписантов.ЗаполнитьПредопределенныеРолиПодписантов(), 
                Сервис.РолиПодписантовЗаполнитьПредопределенныеРолиПодписантов()))
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
                Согласования.ИД_ПОДСИСТЕМЫ, 
                "СогласованияОбновитьВидыСогласуемыхЗаявленийИРолиПодписантов", 
                &Согласования.ОбновитьВидыСогласуемыхЗаявленийИРолиПодписантов(), 
                Сервис.СогласованияОбновитьВидыСогласуемыхЗаявленийИРолиПодписантов()))
	Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
                Согласования.ИД_ПОДСИСТЕМЫ, 
                "ТипыСогласуемыхДокументовЗаполнитьРазделителиИнформационныхСистем", 
                &ТипыСогласуемыхДокументов.ЗаполнитьРазделителиИнформационныхСистем(), 
                Сервис.ТипыСогласуемыхДокументовЗаполнитьРазделителиИнформационныхСистем()))
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
                Согласования.ИД_ПОДСИСТЕМЫ, 
                "ВидыСогласуемыхЗаявленийЗаполнитьПризнакНастраиваемый", 
                &ВидыСогласуемыхЗаявлений.ЗаполнитьПредопределенныеВидыСогласуемыхЗаявлений(), 
                Сервис.ВидыСогласуемыхЗаявленийЗаполнитьПризнакНастраиваемый()))
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
                Согласования.ИД_ПОДСИСТЕМЫ,
                "ТипыСогласуемыхДокументовЗаполнитьРазделителиВерсийДанныхОбъектовСогласованийДокументов", 
                &ТипыСогласуемыхДокументов.ЗаполнитьРазделителиВерсийДанныхОбъектовСогласованийДокументов(), 
                Сервис.ТипыСогласуемыхДокументовЗаполнитьРазделителиВерсийДанныхОбъектовСогласованийДокументов()))
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
                Согласования.ИД_ПОДСИСТЕМЫ, 
                "ТипыСогласуемыхДокументовЗаполнитьРазделителиВерсийДанныхОбъектовПравилСогласований", 
                &ТипыСогласуемыхДокументов.ЗаполнитьРазделителиВерсийДанныхОбъектовПравилСогласований(), 
                Сервис.ТипыСогласуемыхДокументовЗаполнитьРазделителиВерсийДанныхОбъектовПравилСогласований()))
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
                Согласования.ИД_ПОДСИСТЕМЫ,
                "ПеренестиДанныеПодписей", 
                &СогласованияДокументов.ПеренестиДанныеПодписей(), 
                Сервис.СогласованияДокументовПеренестиДанныеПодписей()))
                
    возврат Обработчики
;

// Конец ОбновляемаяПодсистема

//Контракт ДанныеApi
@ВПроекте
@Реализация
метод МассивТипов(Получатель: ВидПриложения?, ВерсияФорматаОбмена: Версия?): Массив<Тип>
    пер Типы: Массив<Тип>
    если Получатель == ВидПриложения.Hrm
        Типы.ДобавитьВсе(СогласованияОбменДаннымиПоставщик.ПолучитьСервис().МассивТиповHrmПриложения())
    иначе если Получатель == ВидПриложения.Ess
        Типы.Добавить(Тип<ПравилаСогласования.Ссылка>)
        Типы.Добавить(Тип<СогласованияДокументов.Ссылка>)
    иначе если Получатель == ВидПриложения.Hr
        Типы.Добавить(Тип<СогласованияДокументов.Ссылка>)
    ;
    возврат Типы
;

@ВПроекте
@Реализация
метод ТипДанныхJson(ТипОбъекта: Тип, ВерсияФорматаОбмена: Версия?): Массив<Тип>
    пер Типы: Массив<Тип>
    выбор ТипОбъекта
    когда Тип<ПравилаСогласования.Ссылка>
        Типы.Добавить(ПравилаСогласования.ТипДанныхJson(ВерсияФорматаОбмена))
    когда Тип<СогласованияДокументов.Ссылка>
        Типы.Добавить(СогласованияДокументов.ТипДанныхJson(ВерсияФорматаОбмена))
    ;
    возврат Типы
;

@ВПроекте
@Реализация
метод ТипКоллекцииДанныхJson(ТипОбъекта: Тип, ВерсияФорматаОбмена: Версия?): Массив<Тип>
    пер Типы: Массив<Тип>
    выбор ТипОбъекта
    когда Тип<ПравилаСогласования.Ссылка>
        Типы.Добавить(ПравилаСогласования.ТипКоллекцииДанныхJson(ВерсияФорматаОбмена))
    когда Тип<СогласованияДокументов.Ссылка>
        Типы.Добавить(СогласованияДокументов.ТипКоллекцииДанныхJson(ВерсияФорматаОбмена))
    ;
    возврат Типы
;

@ВПроекте
@Реализация
метод ИнструментыМенеджераОбъекта(ТипОбъекта: Тип): Массив<ВебApiСервер.ИнструментыМенеджераОбъекта>
    пер НаборИнструментыМенеджераОбъекта: Массив<ВебApiСервер.ИнструментыМенеджераОбъекта>
    пер ИнструментыМенеджераОбъекта: ВебApiСервер.ИнструментыМенеджераОбъекта
    выбор ТипОбъекта
    когда Тип<ПравилаСогласования.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как ПравилаСогласования.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    когда Тип<СогласованияДокументов.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как СогласованияДокументов.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    ;
    возврат НаборИнструментыМенеджераОбъекта
;

@ВПроекте
@Реализация
метод ПолучитьДанныеJson(ТипОбъекта: Тип, Ссылка: ВходящиеДанные.Ссылка|ИсходящиеДанные.Ссылка, 
    Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?): Массив<Объект?>
    
    пер ДанныеJson: Массив<Объект?>
    выбор ТипОбъекта
    когда Тип<ПравилаСогласования.Ссылка>
        ДанныеJson.Добавить(ПравилаСогласования.ПолучитьДанныеJson(Ссылка как ПравилаСогласования.Ссылка?, Сервисы, ВерсияФорматаОбмена))
    когда Тип<СогласованияДокументов.Ссылка>
        ДанныеJson.Добавить(СогласованияДокументов.ПолучитьДанныеJson(Ссылка как СогласованияДокументов.Ссылка, Сервисы, ВерсияФорматаОбмена))
    ;
    возврат ДанныеJson
;

@ВПроекте
@Реализация
метод МассивСсылокПоФильтру(ТипОбъекта: Тип, Фильтр: () -> ЧитаемыйМассив<Справочник.Ссылка>): Массив<ЧитаемыйМассив<Справочник.Ссылка>>
    пер МассивСсылок: Массив<ЧитаемыйМассив<Справочник.Ссылка>>
    возврат МассивСсылок
;

@ВПроекте
@Реализация
метод УдалитьОбъекты(ТипОбъекта: Тип, ПараметрыЗапроса: ЧитаемоеСоответствие<Строка, Число|Булево|Ууид|Строка>, Сервисы: ВебApiСервер.СервисыУдаленияОбъектов)
;

@ВПроекте
@Реализация
метод ТипОбъектаJson(ТипОбъекта: Тип): Массив<Строка>
    пер ТипОбъектаJson: Массив<Строка>
    выбор ТипОбъекта
    когда Тип<ПравилаСогласования.Ссылка>
        ТипОбъектаJson.Добавить(ПравилаСогласования.ТипОбъектаJson())
    когда Тип<СогласованияДокументов.Ссылка>
        ТипОбъектаJson.Добавить(СогласованияДокументов.ТипОбъектаJson())
    ;
    возврат ТипОбъектаJson
;

@ВПроекте
@Реализация
метод ЗагрузитьОбъектИзJson(ТипОбъекта: Тип, ТипДанных: Тип, ДанныеJson: Объект?, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    выбор ТипОбъекта
    когда Тип<ПравилаСогласования.Ссылка>
        выбор ТипДанных
        когда Тип<ПравилаСогласования.ДанныеJson>
            ПравилаСогласования.ЗагрузитьОбъектИзJson(ДанныеJson как ПравилаСогласования.ДанныеJson, Сервисы)
        когда Тип<ПравилаСогласования.ДанныеJson_V3_0>
            ПравилаСогласования.ЗагрузитьОбъектИзJson_V3_0(ДанныеJson как ПравилаСогласования.ДанныеJson_V3_0, Сервисы)
        ;
    когда Тип<СогласованияДокументов.Ссылка>
        выбор ТипДанных
        когда Тип<СогласованияДокументов.ДанныеJson>
            СогласованияДокументов.ЗагрузитьОбъектИзJson(ДанныеJson как СогласованияДокументов.ДанныеJson, Сервисы)
        когда Тип<СогласованияДокументов.ДанныеJson_V1_2>
            СогласованияДокументов.ЗагрузитьОбъектИзJson(ДанныеJson как СогласованияДокументов.ДанныеJson_V1_2, Сервисы)        
        когда Тип<СогласованияДокументов.ДанныеJson_V2_0>
            СогласованияДокументов.ЗагрузитьОбъектИзJson(ДанныеJson как СогласованияДокументов.ДанныеJson_V2_0, Сервисы)        
        когда Тип<СогласованияДокументов.ДанныеJson_V3_0>
            СогласованияДокументов.ЗагрузитьОбъектИзJson(ДанныеJson как СогласованияДокументов.ДанныеJson_V3_0, Сервисы)        
        ;
    ;
;

@ВПроекте
@Реализация
метод ПослеЗаписиГруппыОбъектов(ТипОбъекта: Тип, МассивОбъектовОтложенногоОбновления: Массив<ВебApiСервер.ОбъектОтложенногоОбновления>)
;

@ВПроекте
@Реализация
метод ИзменитьОбъектИзJson(ТипОбъекта: Тип, ДанныеJson: Объект, Сервисы: ВебApiСервер.СервисыЗагрузкиJson, ЗаданиеМодификации: ВебApiСервер.ЗаданиеМодификации)
;

@ВПроекте
@Реализация
метод ЗавершитьИзменениеОбъектИзJson(ТипОбъекта: Тип, МассивСсылок: ЧитаемыйМассив<ВходящиеДанные.Ссылка>, ЗаданиеМодификации: ВебApiСервер.ЗаданиеМодификации)
;

@ВПроекте
@Реализация
метод ГруппаИзмененийВJson(ТипОбъекта: Тип, Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>,
    Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?): Массив<ЧитаемоеСоответствие<Строка, Массив<Объект?>>>
    
    пер ДанныеJson: Массив<ЧитаемоеСоответствие<Строка, Массив<Объект?>>>
    выбор ТипОбъекта
    когда Тип<ПравилаСогласования.Ссылка>
        ДанныеJson.Добавить(ПравилаСогласования.ГруппаИзмененийВJson(Ссылки, Сервисы, ВерсияФорматаОбмена))
    когда Тип<СогласованияДокументов.Ссылка>
        ДанныеJson.Добавить(СогласованияДокументов.ГруппаИзмененийВJson(Ссылки, Сервисы, ВерсияФорматаОбмена))
    ;
    возврат ДанныеJson
;

//Конец ДанныеApi

// Контракт ИнформационныеСистемыОбработчикСобытий

@ВПроекте
@Реализация
метод ПослеЗаписи(ТекущееЗначение: ИнформационныеСистемы.Объект, ПредыдущееЗначение: ИнформационныеСистемы.Данные, ПараметрыЗаписи: ИнформационныеСистемы.ПараметрыЗаписи)
    знч ВидПриложения = ТекущееЗначение.ВидПриложения
    знч ТипыСогласуемыхДокументов: Массив<ТипыСогласуемыхДокументов.Ссылка>
    для Сервис из СогласованияПользователь.ПолучитьСервисы()
        ТипыСогласуемыхДокументов.ДобавитьВсе(Сервис.ТипыСогласуемыхДокументовПолучателя(ВидПриложения))
    ;
    
    для ТипСогласуемогоДокумента из ТипыСогласуемыхДокументов
        ИнформационныеСистемыРазделителейДанных.ОбновитьИнформационныеСистемыРазделителейДанных(
            ТипСогласуемогоДокумента, ТекущееЗначение.Ссылка
        )
    ;
;

// Конец ИнформационныеСистемыОбработчикСобытий

// Контракт ФизическиеЛицаОбработчикСобытий
@ВПроекте
@Реализация
метод ПередУдалениемФизлица(ФизическоеЛицо: ФизическиеЛица.Ссылка)
;
    
@ВПроекте
@Реализация
метод ПослеЗаписиФизлицПриЗагрузке(Физлица: ЧитаемыйМассив<ФизическиеЛица.Ссылка>)
    Согласования.ОбновлениеПриИзмененииФизическихЛиц(Физлица)
;

@ВПроекте
@Реализация
метод ПослеДеактивацииФизлица(Физлица: Массив<ФизическиеЛица.Ссылка>)
;

@ВПроекте
@Реализация
метод ПослеЗаписиГруппыОбъектов(ФизическоеЛицо: ФизическиеЛица.Ссылка, Отправитель: ВходящиеДанные.Ссылка)
;

// Конец ФизическиеЛицаОбработчикСобытий

// Контракт ПараметрыСеансаПоставщик

@ВПроекте
@Реализация
метод КоллекцияПараметровСеанса(МобильныйИнтерфейс: Булево): Соответствие<Строка, Объект>
    пер ПараметрыСеанса: Согласования.ПараметрыСеанса
    знч ТекущееФизЛицо = ПользователиСистемы.ТекущееФизическоеЛицо()
    если ТекущееФизЛицо != Неопределено
        ПараметрыСеанса.ЭтоСогласователь = Согласования.СотрудникУчаствуетВСогласованиях(ТекущееФизЛицо)
    ;
    возврат {Согласования.КЛЮЧ_ПАРАМЕТРОВ_СЕАНСА: ПараметрыСеанса}
;

// Конец ПараметрыСеансаПоставщик

// Контракт ВторичныеДанные

@ВПроекте
@Реализация
метод Пересчитать()
    ВидыСогласуемыхЗаявлений.ЗаполнитьПредопределенныеВидыСогласуемыхЗаявлений()
    ТипыСогласуемыхДокументов.ЗаполнитьПредопределенные()
    Согласования.ОбновитьПравилаСогласования()
;

// Конец ВторичныеДанные