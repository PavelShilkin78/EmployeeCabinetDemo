импорт ОбменДанными
импорт ФизическиеЛица

@ВПодсистеме
метод ДобавитьПредопределенное(ИмяПредопределенныхДанных: Строка)
    если ИмяПредопределенныхДанных.Пусто()
        возврат
    ;
    
    исп Транзакция = Транзакции.Начать()
    знч Запрос = Запрос{
        Выбрать
            Ссылка
        из
            ТипыСогласуемыхДокументов
        Где
            ИмяПредопределенныхДанных == %ИмяПредопределенныхДанных}
    исп Результат = Запрос.Выполнить()
    знч ТипДокумента = Результат.ПервыйИлиУмолчание()?.Ссылка.ЗагрузитьОбъект(Истина) ?? новый ТипыСогласуемыхДокументов.Объект()
    ТипДокумента.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных
    ТипДокумента.Записать()
    Транзакция.Фиксировать()
;

@ВПодсистеме
метод НайтиПредопределенное(ИмяПредопределенныхДанных: Строка): ТипыСогласуемыхДокументов.Ссылка?
    если ИмяПредопределенныхДанных.Пусто()
        возврат Неопределено
    ;
    
    знч Запрос = Запрос{
        Выбрать
            Ссылка
        из
            ТипыСогласуемыхДокументов
        Где
            ИмяПредопределенныхДанных == %ИмяПредопределенныхДанных}
    исп Результат = Запрос.Выполнить()
    возврат Результат.ПервыйИлиУмолчание()?.Ссылка
;

@ВПодсистеме
метод ЗаполнитьПредопределенные()
    для Сервис из СогласованияПользователь.ПолучитьСервисы()
        Сервис.ЗаполнитьПредопределенныеТипыСогласуемыхДокументов()
    ;
;

@ВПодсистеме
метод ЗаполнитьРазделителиИнформационныхСистем()
    ЗаполнитьПредопределенные()
    знч ДанныеИнформационныхСистем = ИнформационныеСистемы.ДанныеИнформационныхСистем()
    для ДанныеИнформационнойСистемы из ДанныеИнформационныхСистем
        знч ВидПриложения = ДанныеИнформационнойСистемы.Значение.ВидПриложения
        знч ТипыСогласуемыхДокументов: Массив<ТипыСогласуемыхДокументов.Ссылка>
        для Сервис из СогласованияПользователь.ПолучитьСервисы()
            ТипыСогласуемыхДокументов.ДобавитьВсе(
                Сервис.ТипыСогласуемыхДокументовПолучателя(ВидПриложения))
        ;
        
        для ТипСогласуемогоДокумента из ТипыСогласуемыхДокументов
            ИнформационныеСистемыРазделителейДанных.ОбновитьИнформационныеСистемыРазделителейДанных(
                ТипСогласуемогоДокумента, ДанныеИнформационнойСистемы.Ключ
            )
        ;
    ;
;

@ВПодсистеме
метод ЗаполнитьРазделителиВерсийДанныхОбъектовСогласованийДокументов()
    знч ВерсииДанных = ОбменДанными.ВерсииДанныхПоТипуОбъекта(Тип<СогласованияДокументов.Ссылка>)
    знч РазделителиВерсийДанных = ОбменДанными.РазделителиВерсийДанных(ВерсииДанных)
    знч ОбъектыВерсийДанных = ОбменДанными.ОбъектыВерсийДанных(ВерсииДанных)
    знч Согласования: Массив<СогласованияДокументов.Ссылка>
    для ОбъектВерсииДанных из ОбъектыВерсийДанных
        Согласования.Добавить(ОбъектВерсииДанных.Значение как СогласованияДокументов.Ссылка)
    ;
    знч ДокументыСогласований = СогласованияДокументов.ДокументыСогласований(Согласования)
    
    для КлючИЗначение из РазделителиВерсийДанных
        если не (КлючИЗначение.Значение это ФизическиеЛица.Ссылка)
            продолжить
        ;
        знч ВерсииДанныхОбъект = КлючИЗначение.Ключ.ЗагрузитьОбъект()
        знч ДокументСогласования =
            ДокументыСогласований.ПолучитьИлиУмолчание(ВерсииДанныхОбъект.Объект как СогласованияДокументов.Ссылка)
        если ДокументСогласования == Неопределено
            продолжить
        ;
        
        пер ТипСогласуемогоДокумента: ТипыСогласуемыхДокументов.Ссылка?
        для Сервис из СогласованияПользователь.ПолучитьСервисы()
            ТипСогласуемогоДокумента = Сервис.ТипСогласуемогоДокумента(ДокументСогласования)
            если ТипСогласуемогоДокумента != Неопределено
                прервать
            ;
        ;
        если ТипСогласуемогоДокумента == Неопределено
            продолжить
        ;
        ВерсииДанныхОбъект.РазделительВыгружаемыхДанных = ТипСогласуемогоДокумента
        
        ВерсииДанныхОбъект.Записать()
    ;
;

@ВПодсистеме
метод ЗаполнитьРазделителиВерсийДанныхОбъектовПравилСогласований()
    знч ВерсииДанных = ОбменДанными.ВерсииДанныхПоТипуОбъекта(Тип<ПравилаСогласования.Ссылка>)
    знч РазделителиВерсийДанных = ОбменДанными.РазделителиВерсийДанных(ВерсииДанных)
    знч ОбъектыВерсийДанных = ОбменДанными.ОбъектыВерсийДанных(ВерсииДанных)
    
    знч Правила: Массив<ПравилаСогласования.Ссылка>
    для ОбъектВерсииДанных из ОбъектыВерсийДанных
        Правила.Добавить(ОбъектВерсииДанных.Значение как ПравилаСогласования.Ссылка)
    ;
    знч ВидыЗаявленийПравилСогласований = ПравилаСогласования.ВидыЗаявленийПравилСогласования(Правила)
    
    для КлючИЗначение из РазделителиВерсийДанных
        если КлючИЗначение.Значение!= Неопределено
            и не (КлючИЗначение.Значение это ФизическиеЛица.Ссылка)
            
            продолжить
        ;
        знч ВерсииДанныхОбъект = КлючИЗначение.Ключ.ЗагрузитьОбъект()
        знч ВидЗаявления =
            ВидыЗаявленийПравилСогласований.ПолучитьИлиУмолчание(ВерсииДанныхОбъект.Объект как ПравилаСогласования.Ссылка)
        если ВидЗаявления == Неопределено
            продолжить
        ;
        
        пер ТипСогласуемогоДокумента: ТипыСогласуемыхДокументов.Ссылка?
        для Сервис из СогласованияПользователь.ПолучитьСервисы()
            ТипСогласуемогоДокумента = Сервис.ТипСогласуемогоДокумента(ВидЗаявления)
            если ТипСогласуемогоДокумента != Неопределено
                прервать
            ;
        ;
        если ТипСогласуемогоДокумента == Неопределено
            продолжить
        ;
        ВерсииДанныхОбъект.РазделительВыгружаемыхДанных = ТипСогласуемогоДокумента
        
        ВерсииДанныхОбъект.Записать()
    ;
;