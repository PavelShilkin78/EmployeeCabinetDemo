импорт КонтрольДоступа
импорт ФизическиеЛица
импорт ИнтерфейсныеКомпонентыСтандартные
импорт Компания

@ВПроекте
@Реализация
метод Инициализировать()
    ФизическоеЛицо = КонтрольДоступа.ПараметрыСеанса().ФизлицоТекущегоПользователя
    
    знч ДанныеЗаместителя = ДанныеЗаместителя(ФизическоеЛицо, ВидСогласуемогоЗаявления)
    если ДанныеЗаместителя != Неопределено
        СпособЗамещения = ДанныеЗаместителя.СпособЗамещения
        Заместитель = ДанныеЗаместителя.Заместитель
    иначе
        СпособЗамещения = Неопределено
        Заместитель = Неопределено
    ;
    ИнтерфейсныеКомпоненты.ИнициализироватьПодчиненныеКомпоненты(Компоненты)
;

метод ЗаместителиСогласованийВидимость(): Булево
    возврат Согласования.ПараметрыСеанса().ЭтоСогласователь
;

метод ПояснениеЗаголовок(): Строка
    возврат "Вы можете указать сотрудника, который будет вместо вас или одновременно с вами согласовывать заявления, поступающие вам на согласование."
;

метод ЗаместительПриИзменении(Источник: ПолеВвода<ФизическиеЛица.Ссылка?>, Событие: СобытиеПриИзменении<ФизическиеЛица.Ссылка?>)
    если Событие.СтароеЗначение == Событие.НовоеЗначение или ВидСогласуемогоЗаявления == Неопределено
        возврат
    ;
    если Событие.НовоеЗначение == Неопределено
        СпособЗамещения = Неопределено
    ;
    ЗаписатьЗаместителя(ФизическоеЛицо, ВидСогласуемогоЗаявления, СпособЗамещения, Заместитель)
;

метод СпособЗамещенияПриИзменении(Источник: РадиоКнопка, Событие: СобытиеПриИзменении<СпособыЗамещения?>)
    если Событие.НовоеЗначение == Событие.СтароеЗначение или ВидСогласуемогоЗаявления == Неопределено
        возврат
    ;
    если Событие.НовоеЗначение == Неопределено
        Заместитель = Неопределено
        ЗаписатьЗаместителя(ФизическоеЛицо, ВидСогласуемогоЗаявления, СпособЗамещения, Заместитель)
    иначе если Заместитель != Неопределено
        ЗаписатьЗаместителя(ФизическоеЛицо, ВидСогласуемогоЗаявления, СпособЗамещения, Заместитель)
    иначе
        Компоненты.Заместитель.Активировать()
    ;
;

@НаСервере @НаКлиенте
структура ДанныеЗаместителя
    обз знч Согласующий: ФизическиеЛица.Ссылка
    обз знч ВидСогласуемогоЗаявления: ВидыСогласуемыхЗаявлений.Ссылка
    обз знч Заместитель: ФизическиеЛица.Ссылка
    обз знч СпособЗамещения: СпособыЗамещения
;
    
@НаСервере @ДоступноСКлиента
статический метод ДанныеЗаместителя(
        Согласующий: ФизическиеЛица.Ссылка, 
        ВидЗаявления: ВидыСогласуемыхЗаявлений.Ссылка): ДанныеЗаместителя?
    знч Запрос = Запрос{
        Выбрать
            Заместитель,
            СпособЗамещения
        Из
            ЗаместителиПриСогласовании
        Где
            Согласующий == %Согласующий
            И ВидСогласуемогоЗаявления == %ВидЗаявления}
    знч Выборка = Запрос.Выполнить().ЕдинственныйИлиУмолчание()
    если Выборка == Неопределено
        возврат Неопределено
    ;
    
    возврат новый ДанныеЗаместителя(
            Согласующий, 
            ВидЗаявления, 
            Выборка.Заместитель, 
            Выборка.СпособЗамещения)
;

@НаСервере @ДоступноСКлиента
статический метод ЗаписатьЗаместителя(ФизическоеЛицо: ФизическиеЛица.Ссылка?, ВидЗаявления: ВидыСогласуемыхЗаявлений.Ссылка, СпособЗамещения: СпособыЗамещения?, Заместитель: ФизическиеЛица.Ссылка?)
    если ФизическоеЛицо == Неопределено
        возврат
    ;
    
    если СпособЗамещения == Неопределено
        Согласования.УдалитьЗаместителя(ВидЗаявления, ФизическоеЛицо)
    иначе
        Согласования.ЗаписатьЗаместителя(ВидЗаявления, ФизическоеЛицо, СпособЗамещения, Заместитель)
    ;
;

метод ЗаместительНастройкиВводаСсылок(): НастройкиВводаСсылок
    возврат Компания.НастройкиВводаВсеФизическиеЛицаСотрудникиКроме(ФизическоеЛицо)
;