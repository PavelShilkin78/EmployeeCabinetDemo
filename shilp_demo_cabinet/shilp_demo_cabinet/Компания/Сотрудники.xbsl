импорт ОбщиеСтандартные
импорт ФизическиеЛица
импорт Компания
импорт ВебApi
импорт КонтрольДоступа
импорт Компания::Согласования

конст КЛЮЧ_ЗАДАНИЯ_ПОСЛЕ_ЗАПИСИ_ГРУППЫ_ОБЪЕКТОВ = "ПослеЗаписиГруппыОбъектовСотрудники"

//Область РазрешенияДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): Массив<РазрешениеДоступа>
    возврат КонтрольДоступа.РазрешенияДоступаТаблицыКонтентДанныхАбонентаЧтениеВсем()
;

//КонецОбласти

//Область СлужебныйПрограммныйИнтерфейс

@ВПроекте
структура Сотрудник_1_0
    @JsonСвойство(Имя = "ID")
    обз знч Ид: Строка
    @JsonСвойство(Имя = "personID")
    обз знч ФизическоеЛицо: Строка
    @JsonСвойство(Имя = "employerID")
    обз знч Организация: Строка
    @JsonСвойство(Имя = "employmentDate")
    обз знч ДатаПриема: ДатаВремя?
    @JsonСвойство(Имя = "employmentType")
    обз знч ВидЗанятости: ВидЗанятостиJson?
    @JsonСвойство(Имя = "staffListPositionID")
    обз знч Позиция: Строка?
    @JsonСвойство(Имя = "divisionID")
    обз знч Подразделение: Строка?
    @JsonСвойство(Имя = "positionID")
    обз знч Должность: Строка?
    @JsonСвойство(Имя = "transferDate")
    обз знч ДатаЗанятияПозиции: ДатаВремя?
    @JsonСвойство(Имя = "wageRate")
    обз знч ОплатаТруда: ОплатаТрудаСотрудников.ДанныеJson?
    @JsonСвойство(Имя = "workScheduleID")
    обз знч ГрафикРаботы: Строка?
    @JsonСвойство(Имя = "dismissed")
    обз знч Уволен: Булево?
    @JsonСвойство(Имя = "hidden")
    обз знч СкрыватьВСписках: Булево?
;

@ВПроекте
структура Сотрудник_3_0
    @JsonСвойство(Имя = "ID")
    обз знч Ид: Строка
    @JsonСвойство(Имя = "personID")
    обз знч ФизическоеЛицо: Строка
    @JsonСвойство(Имя = "employerID")
    обз знч Организация: Строка
    @JsonСвойство(Имя = "employmentDate")
    обз знч ДатаПриема: ДатаВремя?
    @JsonСвойство(Имя = "employmentType")
    обз знч ВидЗанятости: ВидЗанятостиJson?
    @JsonСвойство(Имя = "staffListPositionID")
    обз знч Позиция: Строка?
    @JsonСвойство(Имя = "divisionID")
    обз знч Подразделение: Строка?
    @JsonСвойство(Имя = "positionID")
    обз знч Должность: Строка?
    @JsonСвойство(Имя = "transferDate")
    обз знч ДатаЗанятияПозиции: ДатаВремя?
    @JsonСвойство(Имя = "wageRate")
    обз знч ОплатаТруда: ОплатаТрудаСотрудников.ДанныеJson?
    @JsonСвойство(Имя = "workScheduleID")
    обз знч ГрафикРаботы: Строка?
    @JsonСвойство(Имя = "dismissed")
    обз знч Уволен: Булево?
    @JsonСвойство(Имя = "hidden")
    обз знч СкрыватьВСписках: Булево?
    @JsonСвойство(Имя = "employeeNumber")
    обз знч ТабельныйНомер: Строка?
    @JsonСвойство(Имя = "workplaceSafetyID")
    обз знч РабочееМесто: Строка?
    @JsonСвойство(Имя = "classWorkingConditions")
    обз знч КлассУсловийТруда: Строка?
;


@ВПроекте
метод ТипДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    если ВерсияФорматаОбмена == Неопределено
        возврат Тип<Сотрудник_1_0>
    иначе если ВерсияФорматаОбмена >= Версия{3.0}
        возврат Тип<Сотрудник_3_0>
    иначе если ВерсияФорматаОбмена >= Версия{1.0}
        возврат Тип<Сотрудник_1_0>
    ;
;

@ВПроекте
метод ТипКоллекцииДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    если ВерсияФорматаОбмена == Неопределено
        возврат Тип<Массив<Сотрудник_1_0>>
    иначе если ВерсияФорматаОбмена >= Версия{3.0}
        возврат Тип<Массив<Сотрудник_3_0>>
    иначе если ВерсияФорматаОбмена >= Версия{1.0}
        возврат Тип<Массив<Сотрудник_1_0>>
    ;
;

@ВПодсистеме
перечисление ВидЗанятостиJson
    mainWork,
    extraWorkInternal,
    extraWorkExternal,
    extraWorkTemporary
;

@ВПроекте
метод ТипОбъектаJson(): Строка
    возврат "employees"
;

@ВПроекте
метод ЗагрузитьОбъектИзJson(ДанныеJson: Сотрудник_1_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    исп Транзакции.Начать()
    знч Сотрудник = Сервисы.ПрочитатьОбъект(ДанныеJson.Ид, &Сотрудники.Объект.новый(Ууид), Тип<Сотрудники.Ссылка>) как Сотрудники.Объект
    знч ПодразделениеСотрудника = Сотрудник.МестоВСтруктуреПредприятия
    Сотрудник.ЗаполнитьПоДаннымJson(ДанныеJson, Сервисы)
    Сервисы.ЗаписатьОбъект(новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(Сотрудник, ДанныеJson.Ид, ПодразделениеСотрудника), Сервисы.ИнструментыМенеджераОбъекта)
    ОплатаТрудаСотрудников.ЗагрузитьОбъектИзJsonДанныхСотрудника(ДанныеJson, Сервисы, Сотрудник.Ссылка)
;

@ВПроекте
метод ЗагрузитьОбъектИзJson(ДанныеJson: Сотрудник_3_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    исп Транзакции.Начать()
    знч Сотрудник = Сервисы.ПрочитатьОбъект(ДанныеJson.Ид, &Сотрудники.Объект.новый(Ууид), Тип<Сотрудники.Ссылка>) как Сотрудники.Объект
    знч ПодразделениеСотрудника = Сотрудник.МестоВСтруктуреПредприятия
    Сотрудник.ЗаполнитьПоДаннымJson(ДанныеJson, Сервисы)
    Сервисы.ЗаписатьОбъект(новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(Сотрудник, ДанныеJson.Ид, ПодразделениеСотрудника), Сервисы.ИнструментыМенеджераОбъекта)
    
    знч СервисыПоддержкаApi_V2_2 = СотрудникиПоддержкаApi_V2_2.ПолучитьСервисы()
    для Сервис из СервисыПоддержкаApi_V2_2
        Сервис.ЗагрузитьОбъектИзJsonДанныхСотрудника(ДанныеJson, Сервисы, Сотрудник.Ссылка)
    ;
;

@ВПроекте
метод ПослеЗаписиГруппыОбъектов(МассивОбъектовОтложенногоОбновления: Массив<ВебApiСервер.ОбъектОтложенногоОбновления>)
    знч ЗагруженныеСотрудники: Массив<Сотрудники.Ссылка>
    
    для ОбъектОтложенногоОбновления из МассивОбъектовОтложенногоОбновления
        ЗагруженныеСотрудники.Добавить(ОбъектОтложенногоОбновления.ОбновляемыйОбъект как Сотрудники.Ссылка)
    ;
    пер ОбрабатываемыеПодразделения: Массив<СтруктураПредприятия.Ссылка>
    пер ТекущиеПодразделения = ОрганизационнаяСтруктура.ПодразделенияСотрудников(ЗагруженныеСотрудники).Значения()
    ОбрабатываемыеПодразделения.ДобавитьВсе(ТекущиеПодразделения)
    СтруктураПредприятия.ОбновитьГруппыДоступаПодразделений(новый ЧитаемыйМассив(ОбрабатываемыеПодразделения))
    ПодразделенияИСотрудники.ОбновитьДанныеСотрудников(ЗагруженныеСотрудники)
    Согласования.ОбновлениеПриИзмененииФизическихЛиц(ФизическиеЛицаСотрудников(ЗагруженныеСотрудники))
;

@ВПроекте
структура СотрудникСПриоритетом
    обз пер Сотрудник: Сотрудники.Ссылка 
    обз пер Организация: Организации.Ссылка?
    обз пер Позиция: ШтатноеРасписание.Ссылка?
    обз пер МестоВСтруктуреПредприятия: СтруктураПредприятия.Ссылка?
    обз пер Должность: Должности.Ссылка?
    обз пер Основной: Булево
;

@ВПроекте
метод СотрудникиФизическогоЛицаОрганизации(ФизическоеЛицо: ФизическиеЛица.Ссылка, Организация: Организации.Ссылка? = Неопределено,
    ПоГоловнойОрганизации: Булево = Ложь, ВключаяУволенных: Булево = Ложь): ЧитаемыйМассив<СотрудникСПриоритетом>
    
    пер ФильтрПоРаботающимНеУстановлен: Булево
    если ВключаяУволенных
        ФильтрПоРаботающимНеУстановлен = Истина
    ;
    пер МассивСотрудников: Массив<СотрудникСПриоритетом>
    знч Запрос = Запрос{
        Выбрать
            Сотрудники.Ссылка Как Сотрудник,
            Сотрудники.Организация Как Организация,
            Сотрудники.Позиция Как Позиция,
            Сотрудники.МестоВСтруктуреПредприятия Как МестоВСтруктуреПредприятия,
            Сотрудники.Должность Как Должность,
            ПодразделенияИСотрудники.ОсновноеМестоРаботы.ЗаменитьNull(Ложь) Как Основной
         Из
            Сотрудники Как Сотрудники
                Левое Соединение ПодразделенияИСотрудники Как ПодразделенияИСотрудники
                По Сотрудники.Ссылка == ПодразделенияИСотрудники.Объект
         Где
            Сотрудники.ФизическоеЛицо == %ФизическоеЛицо
            И (%ФильтрПоРаботающимНеУстановлен Или Не Сотрудники.Уволен)
            И Сотрудники.ВидЗанятости != ВидыЗанятостиСотрудников.Подработка
            И (%{Организация == Неопределено} Или Не %ПоГоловнойОрганизации И Сотрудники.Организация == %Организация
                Или %ПоГоловнойОрганизации И Сотрудники.Организация.ГоловнаяОрганизация == %Организация)
         Упорядочить По
            ПодразделенияИСотрудники.ОсновноеМестоРаботы.ЗаменитьNull(Ложь) Убыв,
            Сотрудники.ВидЗанятости,
            Сотрудники.ДатаПриемаНаРаботу}
    исп Результат = Запрос.Выполнить() 
    для РезультатСтрока из Результат
        МассивСотрудников.Добавить(новый СотрудникСПриоритетом(
             РезультатСтрока.Сотрудник,
             РезультатСтрока.Организация,
             РезультатСтрока.Позиция,
             РезультатСтрока.МестоВСтруктуреПредприятия,
             РезультатСтрока.Должность,
             РезультатСтрока.Основной))
    ;
    возврат МассивСотрудников
;

@ВПроекте
метод ДанныеОсновногоСотрудника(ФизическоеЛицо: ФизическиеЛица.Ссылка, Организация: Организации.Ссылка? = Неопределено,
    ПоГоловнойОрганизации: Булево = Ложь, ВключаяУволенных: Булево = Ложь): СотрудникСПриоритетом?
    
    пер ДанныеСотрудника: СотрудникСПриоритетом?
    знч ДанныеСотрудников: ЧитаемыйМассив<Сотрудники.СотрудникСПриоритетом> = СотрудникиФизическогоЛицаОрганизации(
        ФизическоеЛицо, Организация, ПоГоловнойОрганизации, ВключаяУволенных)
    если не ДанныеСотрудников.Пусто()
        ДанныеСотрудника = ДанныеСотрудников[0]
    ;
    возврат ДанныеСотрудника
;

@ВПроекте
метод ОсновнойСотрудникФизическогоЛицаОрганизации(ФизическоеЛицо: ФизическиеЛица.Ссылка, Организация: Организации.Ссылка,
    ПоГоловнойОрганизации: Булево = Ложь, ВключаяУволенных: Булево = Ложь): Сотрудники.Ссылка?
    
    пер ОсновнойСотрудник: Сотрудники.Ссылка?
    знч ДанныеСотрудника = ДанныеОсновногоСотрудника(ФизическоеЛицо, Организация, ПоГоловнойОрганизации, ВключаяУволенных)
    если ДанныеСотрудника != Неопределено
        ОсновнойСотрудник = ДанныеСотрудника.Сотрудник
    ;
    возврат ОсновнойСотрудник
;

@ВПроекте
метод ОсновнойСотрудникФизическогоЛица(ФизическоеЛицо: ФизическиеЛица.Ссылка): Сотрудники.Ссылка?
    знч Сотрудники = СотрудникиФизическогоЛицаОрганизации(ФизическоеЛицо)
    для ДанныеСотрудника из Сотрудники
        если ДанныеСотрудника.Основной
            возврат ДанныеСотрудника.Сотрудник
        ;
    ;
    
    возврат Сотрудники.ПервыйИлиУмолчание()?.Сотрудник
;

@ВПроекте
метод СотрудникиФизическогоЛица(ФизическоеЛицо: ФизическиеЛица.Ссылка): ЧитаемыйМассив<Сотрудники.Ссылка>
    пер Сотрудники: Массив<Сотрудники.Ссылка>
    знч Запрос = Запрос{
        Выбрать
            Ссылка
         Из
            Сотрудники
         Где
            ФизическоеЛицо == %ФизическоеЛицо
            И Не Уволен
            И ВидЗанятости != ВидыЗанятостиСотрудников.Подработка
         Упорядочить По
            ВидЗанятости,
            ДатаПриемаНаРаботу}
    исп Результат = Запрос.Выполнить() 
    для РезультатСтрока из Результат
        Сотрудники.Добавить(РезультатСтрока.Ссылка)
    ;
    возврат Сотрудники
;

@ВПроекте
метод НаименьшаяДатаПриемаРаботающихСотрудниковФизическогоЛица(ФизическоеЛицо: ФизическиеЛица.Ссылка, ГоловнаяОрганизация: Организации.Ссылка? = Неопределено): Дата?
    пер ДатаРаннегоПриемаНаРаботу: Дата?
    пер РаботающиеСотрудники = новый ЧитаемоеМножество<Сотрудники.Ссылка>(СотрудникиФизическогоЛица(ФизическоеЛицо))
    пер ДанныеСотрудников = МенеджерСущности.ЗначенияРеквизитовОбъектов(РаботающиеСотрудники, ["ДатаПриемаНаРаботу", "Организация.ГоловнаяОрганизация"])
    для ДанныеСотрудника из ДанныеСотрудников
        если ГоловнаяОрганизация == Неопределено
            или ГоловнаяОрганизация == ДанныеСотрудника.Значение.Получить("ОрганизацияГоловнаяОрганизация")
            если ДатаРаннегоПриемаНаРаботу == Неопределено или ДатаРаннегоПриемаНаРаботу > ДанныеСотрудника.Значение.Получить("ДатаПриемаНаРаботу")
                ДатаРаннегоПриемаНаРаботу = ДанныеСотрудника.Значение.Получить("ДатаПриемаНаРаботу")
            ;
        ;
    ;
    возврат ДатаРаннегоПриемаНаРаботу
;

@ВПроекте
метод ЭтоУволенныйСотрудник(ФизическоеЛицо: ФизическиеЛица.Ссылка): Булево
    знч Запрос = Запрос{
        Выбрать
            Минимум(Уволен).ЗаменитьNull(Ложь) Как Уволен
        Из
            Сотрудники Как Сотрудники
        Где
            Сотрудники.ФизическоеЛицо == %ФизическоеЛицо
    } 
    возврат Запрос.Выполнить().Единственный().Уволен
;

//КонецОбласти

//Область JSON

@ВПроекте
метод ВнешняяСсылка(Идентификатор: Строка): ВебApiСервер.ВнешняяСсылка
    возврат новый ВебApiСервер.ВнешняяСсылка(Идентификатор, (Ууид) -> Сотрудники.ПолучитьСсылку(Ууид))
;

//КонецОбласти

//Область СлужебныеПроцедурыИФункции
@ВПодсистеме
метод ФизическиеЛицаСотрудников(Сотрудники: ЧитаемыйМассив<Сотрудники.Ссылка>): ЧитаемыйМассив<ФизическиеЛица.Ссылка>
    знч ФизическиеЛица: Массив<ФизическиеЛица.Ссылка>
    знч Запрос = Запрос{
        Выбрать
            ФизическоеЛицо
        Из 
            Сотрудники
        Где
            Ссылка в (%Сотрудники)
    }
    исп Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        ФизическиеЛица.Добавить(СтрокаРезультата.ФизическоеЛицо)
    ;
    возврат ФизическиеЛица
;

@ВПроекте
метод ОрганизацииФизическогоЛица(
        ФизическоеЛицо: ФизическиеЛица.Ссылка, 
        ВключаяФилиалы: Булево = Истина,
        ВключаяУволенных: Булево = Ложь): ЧитаемыйМассив<ОргструктураКлиентСервер.ИнформацияОбОрганизации>
    
    пер ФильтрПоРаботающимНеУстановлен: Булево
    если ВключаяУволенных
        ФильтрПоРаботающимНеУстановлен = Истина
    ;
    пер Запрос: неизвестно
    если ВключаяФилиалы
        Запрос = Запрос{
            Выбрать
                Сотрудники.Организация Как Организация,
                Сотрудники.Организация.ЭтоФилиал.ЗаменитьNull(Ложь) Как ЭтоФилиал,
                Выбор
                    Когда Не Сотрудники.Организация.ЭтоФилиал 
                        Тогда Сотрудники.Организация
                    Иначе
                        Сотрудники.Организация.ГоловнаяОрганизация
                    Конец Как ГоловнаяОрганизация,
                Минимум(Сотрудники.ДатаПриемаНаРаботу) Как ДатаПриемаНаРаботу,
                Максимум(ПодразделенияИСотрудники.ОсновноеМестоРаботы) Как ОсновноеМестоРаботы
            Поместить ВТОрганизацииСотрудников
            Из
                Сотрудники Как Сотрудники
                Левое Соединение ПодразделенияИСотрудники Как ПодразделенияИСотрудники
                По Сотрудники.Ссылка == ПодразделенияИСотрудники.Объект
                Внутреннее соединение  Организации Как Организации
                По Сотрудники.Организация == Организации.Ссылка
            Где
                Сотрудники.ФизическоеЛицо == %ФизическоеЛицо
                И Сотрудники.Организация != Неопределено
                И Сотрудники.ВидЗанятости != ВидыЗанятостиСотрудников.Подработка
                И (%ФильтрПоРаботающимНеУстановлен Или Не Сотрудники.Уволен)
            Сгруппировать По
                Сотрудники.Организация
            ;
            Выбрать
                Организация,
                ЭтоФилиал,
                ГоловнаяОрганизация,
                ДатаПриемаНаРаботу
            Из
                ВТОрганизацииСотрудников
            Упорядочить По
                ОсновноеМестоРаботы Убыв,
                ДатаПриемаНаРаботу}
    иначе    
        Запрос = Запрос{
            Выбрать
                Выбор
                    Когда Не Сотрудники.Организация.ЭтоФилиал 
                        Тогда Сотрудники.Организация
                    Иначе
                        Сотрудники.Организация.ГоловнаяОрганизация
                    Конец Как Организация,
                Выбор
                    Когда Не Сотрудники.Организация.ЭтоФилиал 
                        Тогда Сотрудники.Организация
                    Иначе
                        Сотрудники.Организация.ГоловнаяОрганизация
                    Конец Как ГоловнаяОрганизация,
                Сотрудники.Организация.ЭтоФилиал.ЗаменитьNull(Ложь) Как ЭтоФилиал,
                Сотрудники.ДатаПриемаНаРаботу Как ДатаПриемаНаРаботу,
                ПодразделенияИСотрудники.ОсновноеМестоРаботы Как ОсновноеМестоРаботы
            Поместить ВТОрганизацииСотрудников
            Из
                Сотрудники Как Сотрудники
                Левое Соединение ПодразделенияИСотрудники Как ПодразделенияИСотрудники
                По Сотрудники.Ссылка == ПодразделенияИСотрудники.Объект
                Внутреннее соединение Организации Как Организации
                По Сотрудники.Организация == Организации.Ссылка
            Где
                Сотрудники.ФизическоеЛицо == %ФизическоеЛицо
                И Сотрудники.Организация != Неопределено
                И Сотрудники.ВидЗанятости != ВидыЗанятостиСотрудников.Подработка
            И (%ФильтрПоРаботающимНеУстановлен Или Не Сотрудники.Уволен)
            ;
            Выбрать
                Организация,
                Максимум(ЭтоФилиал) Как ЭтоФилиал,
                ГоловнаяОрганизация,
                Минимум(ДатаПриемаНаРаботу) Как ДатаПриемаНаРаботу
            Из
                ВТОрганизацииСотрудников
            Сгруппировать По
                Организация,
                ГоловнаяОрганизация
            Упорядочить По
                Максимум(ОсновноеМестоРаботы) Убыв,
                ДатаПриемаНаРаботу}
    ;
    исп Результат = Запрос.Выполнить() 
    пер МассивОписанийОрганизацийФизическогоЛица = новый Массив<ОргструктураКлиентСервер.ИнформацияОбОрганизации>()
    для СтрокаРезультата из Результат
        пер Представление: Строка =
            МенеджерСущности.ПредставлениеСсылки(СтрокаРезультата.Организация)
            + ", с " + МенеджерДат.ФорматДаты(СтрокаРезультата.ДатаПриемаНаРаботу как Дата?)
        пер ДанныеРабочегоМеста = новый ОргструктураКлиентСервер.ИнформацияОбОрганизации(
            СтрокаРезультата.Организация,
            СтрокаРезультата.ЭтоФилиал,
            СтрокаРезультата.ГоловнаяОрганизация, 
            Представление)
        МассивОписанийОрганизацийФизическогоЛица.Добавить(ДанныеРабочегоМеста)
    ;
    возврат МассивОписанийОрганизацийФизическогоЛица
;

@ВПроекте
метод ОрганизацияФизическогоЛицаПоОсновномуМестуРаботы(ФизическоеЛицо: ФизическиеЛица.Ссылка, ВключаяФилиалы: Булево = Истина,
    ВключаяУволенных: Булево  = Ложь): Организации.Ссылка?
    
    пер ОрганизацияФизическогоЛицаПоОсновномуМестуРаботы: Организации.Ссылка? = Неопределено    
    пер ОрганизацииФизическогоЛица = ОрганизацииФизическогоЛица(ФизическоеЛицо = ФизическоеЛицо, ВключаяУволенных = ВключаяУволенных)
    если ОрганизацииФизическогоЛица.Пусто()
        возврат ОрганизацияФизическогоЛицаПоОсновномуМестуРаботы
    ;
    если ВключаяФилиалы
        ОрганизацияФизическогоЛицаПоОсновномуМестуРаботы = ОрганизацииФизическогоЛица[0].Организация
    иначе
        пер ЭтоФилиал: Булево|Null = ОрганизацииФизическогоЛица[0].ЭтоФилиал
        если не (ЭтоФилиал это Null) и ЭтоФилиал как Булево
            ОрганизацияФизическогоЛицаПоОсновномуМестуРаботы = ОрганизацииФизическогоЛица[0].ГоловнаяОрганизация
        иначе
            ОрганизацияФизическогоЛицаПоОсновномуМестуРаботы = ОрганизацииФизическогоЛица[0].Организация
        ;
    ;
    возврат ОрганизацияФизическогоЛицаПоОсновномуМестуРаботы
;

@ВПроекте
метод ПредставлениеРабочегоМеста(Сотрудник: Сотрудники.Ссылка, ПоказыватьОрганизацию: Булево = Истина): Строка
    знч Реквизиты = МенеджерСущности.ЗначенияРеквизитовОбъекта(Сотрудник,
        ["Позиция", "Должность", "МестоВСтруктуреПредприятия", "Организация"])
    
    возврат ПредставлениеРабочегоМеста(Реквизиты["Позиция"], Реквизиты["Должность"],
        Реквизиты["МестоВСтруктуреПредприятия"], Реквизиты["Организация"], ПоказыватьОрганизацию)
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ПредставлениеРабочегоМеста(
        Позиция: ШтатноеРасписание.Ссылка, 
        Должность: Должности.Ссылка, 
        МестоВСтруктуреПредприятия: СтруктураПредприятия.Ссылка,
        Организация: Организации.Ссылка, 
        ПоказыватьОрганизацию: Булево): Строка
    
    пер Представление = Позиция.Представление()
    если Представление.Пусто()
        Представление = "%{Должность.Представление()} (%{МестоВСтруктуреПредприятия.Представление()})"
    ;
    если ПоказыватьОрганизацию
        Представление = "%Представление (%{Организация.Представление()})"
    ;
    возврат Представление
;

@ВПроекте
метод ОрганизацияСотрудника(Сотрудник: Сотрудники.Ссылка): Организации.Ссылка?
    возврат МенеджерСущности.ЗначениеРеквизитаОбъекта(Сотрудник, "Организация")
;

@ВПроекте
метод ДолжностьСотрудника(Сотрудник: Сотрудники.Ссылка): Должности.Ссылка?
    возврат МенеджерСущности.ЗначениеРеквизитаОбъекта(Сотрудник, "Должность")
;

//КонецОбласти
