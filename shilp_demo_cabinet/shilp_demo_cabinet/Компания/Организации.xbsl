импорт ВебApi
импорт КонтрольДоступа
импорт ОбщиеСтандартные

//Область РазрешенияДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): Массив<РазрешениеДоступа>
    возврат КонтрольДоступа.РазрешенияДоступаТаблицыКонтентДанныхАбонентаЧтениеВсем()
;

//КонецОбласти

//Область СлужебныйПрограммныйИнтерфейс

@ВПроекте
структура ДанныеJson
    обз знч ID: Строка
    обз знч name: Строка
    обз знч taxID: Строка?
    обз знч isBranch: Булево?
    обз знч parentOrganizationID: Строка?
;

@ВПроекте
структура ДанныеJson_V2_0
    обз знч ID: Строка
    обз знч name: Строка
    обз знч taxID: Строка? // ИНН
    обз знч isBranch: Булево?
    обз знч parentOrganizationID: Строка?
    обз знч principalID: Строка?
    обз знч positionOfprincipalID: Строка?
    обз знч fullName: Строка?
    обз знч primaryStateRegistrationNumber: Строка? // ОГРН
    обз знч taxRegistrationReasonCode: Строка? // КПП
;

@ВПроекте
структура ДанныеJson_V2_2
    обз знч ID: Строка
    обз знч name: Строка
    обз знч taxID: Строка? // ИНН
    обз знч isBranch: Булево?
    обз знч parentOrganizationID: Строка?
    обз знч principalID: Строка?
    обз знч positionOfprincipalID: Строка?
    обз знч fullName: Строка?
    обз знч primaryStateRegistrationNumber: Строка? // ОГРН
    обз знч taxRegistrationReasonCode: Строка? // КПП
    обз знч shortName: Строка?
;

@ВПроекте
метод ТипДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    если ВерсияФорматаОбмена == Неопределено
        возврат Тип<ДанныеJson>
    иначе если ВерсияФорматаОбмена >= Версия{2.2}
        возврат Тип<ДанныеJson_V2_2>
    иначе если ВерсияФорматаОбмена >= Версия{2.0}
        возврат Тип<ДанныеJson_V2_0>
    иначе если ВерсияФорматаОбмена >= Версия{1.0}
        возврат Тип<ДанныеJson>
    ;
;

@ВПроекте
метод ТипКоллекцииДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    если ВерсияФорматаОбмена == Неопределено
        возврат Тип<Массив<ДанныеJson>>
    иначе если ВерсияФорматаОбмена >= Версия{2.2}
        возврат Тип<Массив<ДанныеJson_V2_2>>
    иначе если ВерсияФорматаОбмена >= Версия{2.0}
        возврат Тип<Массив<ДанныеJson_V2_0>>
    иначе если ВерсияФорматаОбмена >= Версия{1.0}
        возврат Тип<Массив<ДанныеJson>>
    ;
;

@ВПроекте
метод ТипОбъектаJson(): Строка
    возврат "employers"
;

@ВПроекте
метод ЗагрузитьОбъектИзJson(ДанныеJson: ДанныеJson, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)

    исп Транзакции.Начать() 

    знч Организация = Сервисы.ПрочитатьОбъект(ДанныеJson.ID, &Организации.Объект.новый(Ууид), Тип<Организации.Ссылка>) как Организации.Объект
    Организация.ЗаполнитьПоДаннымJSON(ДанныеJson, Сервисы)
    Сервисы.ЗаписатьОбъект(новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(Организация, ДанныеJson.ID), Сервисы.ИнструментыМенеджераОбъекта)
;

@ВПроекте
метод ЗагрузитьОбъектИзJson(ДанныеJson: ДанныеJson_V2_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)

    исп Транзакции.Начать() 

    знч Организация = Сервисы.ПрочитатьОбъект(ДанныеJson.ID, &Организации.Объект.новый(Ууид), Тип<Организации.Ссылка>) как Организации.Объект
    Организация.ЗаполнитьПоДаннымJSON(ДанныеJson, Сервисы)
    Сервисы.ЗаписатьОбъект(новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(Организация, ДанныеJson.ID), Сервисы.ИнструментыМенеджераОбъекта)
;

@ВПроекте
метод ЗагрузитьОбъектИзJson(ДанныеJson: ДанныеJson_V2_2, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)

    исп Транзакции.Начать() 

    знч Организация = Сервисы.ПрочитатьОбъект(ДанныеJson.ID, &Организации.Объект.новый(Ууид), Тип<Организации.Ссылка>) как Организации.Объект
    Организация.ЗаполнитьПоДаннымJSON(ДанныеJson, Сервисы)
    Сервисы.ЗаписатьОбъект(новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(Организация, ДанныеJson.ID), Сервисы.ИнструментыМенеджераОбъекта)
;

@ВПроекте
метод ВнешняяСсылка(Идентификатор: Строка): ВебApiСервер.ВнешняяСсылка
    возврат новый ВебApiСервер.ВнешняяСсылка(Идентификатор, (Ууид) -> Организации.ПолучитьСсылку(Ууид))
;

@ВПроекте
метод ОрганизацияПоУмолчанию(): Организации.Ссылка?
    пер СписокОрганизаций = новый Массив<Организации.Ссылка>()
    знч Запрос = Запрос{
        Выбрать Первые 2
            Организации.Ссылка Как Организация
        Из
            Организации Как Организации}
    
    исп РезультатЗапроса = Запрос.Выполнить() 
    для РезультатЗапросаСтрока из РезультатЗапроса
        СписокОрганизаций.Добавить(РезультатЗапросаСтрока.Организация)
    ;
    если СписокОрганизаций.Размер() == 1
        возврат СписокОрганизаций[0]
    ;
    возврат Неопределено
;

@ВПроекте
метод ДанныеРуководителяОрганизации(Организация: Организации.Ссылка?): ОрганизационнаяСтруктура.ДанныеРуководителя
    если Организация == Неопределено
        возврат новый ОрганизационнаяСтруктура.ДанныеРуководителя()
    ;
    знч Реквизиты = МенеджерСущности.ЗначенияРеквизитовОбъекта(
        Организация, ["Руководитель", "ДолжностьРуководителя"])
    возврат новый ОрганизационнаяСтруктура.ДанныеРуководителя(Реквизиты["Руководитель"], Реквизиты["ДолжностьРуководителя"])
;
//КонецОбласти