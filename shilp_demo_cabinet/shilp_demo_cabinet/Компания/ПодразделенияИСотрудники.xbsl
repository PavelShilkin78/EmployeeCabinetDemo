импорт Компания
импорт КонтрольДоступа
импорт УниверсальныеМеханизмы
импорт ФизическиеЛица

//Область РазрешенияДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): Массив<РазрешениеДоступа>
    возврат КонтрольДоступа.РазрешенияДоступаТаблицыСервисныхДанныхАбонентаЧтениеВсем()
;

//КонецОбласти

//Область СлужебныйПрограммныйИнтерфейс

@ВПодсистеме
метод ОбновитьДанныеСотрудников(Сотрудники: ЧитаемаяКоллекция<Сотрудники.Ссылка>? = Неопределено)

    // Подготовка списков сотрудников физических лиц с несколькими местами работы
    пер ФизическиеЛицаСНесколькимиМестамиРаботы = ФизическиеЛицаСНесколькимиМестамиРаботы(Сотрудники)

    знч Запрос = Запрос{
        Выбрать
            Сотрудники.ФизическоеЛицо.Наименование.ЗаменитьNull("") Как Наименование,
            Сотрудники.Ссылка Как Объект,
            Сотрудники.МестоВСтруктуреПредприятия Как Подразделение,
            Сотрудники.ФизическоеЛицо Как ФизическоеЛицо,
            Сотрудники.ВидЗанятости Как ВидЗанятости,
            ТипыЭлементовПодразделенийИСотрудников.Сотрудник Как ТипЭлемента,
            "" Как Приоритет,
            Сотрудники.ФизическоеЛицо.Наименование.ЗаменитьNull("") Как СтрокиПоиска,
            ПодразделенияИСотрудники.Ссылка.ЗаменитьNull(Неопределено) Как СсылкаНаСтруктуру,
            Сотрудники.Должность Как Должность,
            Сотрудники.Позиция Как Позиция,
            ФайлыФотографий.Ссылка.ЗаменитьNull(Неопределено) Как Фотография,
            ФайлыМиниатюр.Ссылка.ЗаменитьNull(Неопределено) Как Миниатюра,
            Истина Как ОсновноеМестоРаботы,
            ПодразделенияИСотрудники.УровеньУведомления.ЗаменитьNull(0) как УровеньУведомления
        Породить ДанныеСотрудника
        Из
            Сотрудники Как Сотрудники
                Левое Соединение ПодразделенияИСотрудники Как ПодразделенияИСотрудники
                По Сотрудники.Ссылка == ПодразделенияИСотрудники.Объект
                Левое Соединение Файлы Как ФайлыФотографий
                По Сотрудники.ФизическоеЛицо == ФайлыФотографий.Владелец
                    И Сотрудники.ФизическоеЛицо.Фотография == ФайлыФотографий.Ссылка
                Левое Соединение Файлы Как ФайлыМиниатюр
                По Сотрудники.ФизическоеЛицо == ФайлыМиниатюр.Владелец
                    И Сотрудники.ФизическоеЛицо.Миниатюра == ФайлыМиниатюр.Ссылка
                Внутреннее Соединение СтруктураПредприятия Как СтруктураПредприятия
                По Сотрудники.МестоВСтруктуреПредприятия == СтруктураПредприятия.Ссылка
        Где
            Сотрудники.ФизическоеЛицо != Неопределено
            И Не Сотрудники.Уволен
            И Не Сотрудники.СкрыватьВСписках
            И Не Сотрудники.ФизическоеЛицо.Ссылка Есть Null
            И (%{Сотрудники == Неопределено или Сотрудники.Пусто()}
                Или Сотрудники.Ссылка В (%Сотрудники))}


    пер ОбработанныеСотрудники = новый Массив<СтруктураПредприятия.Ссылка|Сотрудники.Ссылка>()

    исп Результат = Запрос.Выполнить()
    для РезультатСтрока из Результат

        пер ОбъектСтруктуры: ПодразделенияИСотрудники.Объект?
        если РезультатСтрока.СсылкаНаСтруктуру == Неопределено
            ОбъектСтруктуры = новый ПодразделенияИСотрудники.Объект()
        иначе
            ОбъектСтруктуры = РезультатСтрока.СсылкаНаСтруктуру.ЗагрузитьОбъект()
        ;
        ЗаполнитьОбъектСтруктуры(ОбъектСтруктуры, РезультатСтрока)

        // Заполнение реквизита ОсновноеМестоРаботы сотрудников физических лиц с несколькими местами работы
        если ФизическиеЛицаСНесколькимиМестамиРаботы.СодержитКлюч(ОбъектСтруктуры.ФизическоеЛицо)
            пер СотрудникиФизическогоЛица = ФизическиеЛицаСНесколькимиМестамиРаботы.Получить(ОбъектСтруктуры.ФизическоеЛицо)
            ОбъектСтруктуры.ОсновноеМестоРаботы = ОбъектСтруктуры.Объект == СотрудникиФизическогоЛица[0]
        ;

        ОбработанныеСотрудники.Добавить(ОбъектСтруктуры.Объект)

        ОбъектСтруктуры.Записать()
    ;

    // Подготовка списка сотрудников физических лиц с несколькими местами работы,
    // которые не приняли участия в заполнении справочника ПодразделенияИСотрудники
    пер НеобработанныеСотрудники = новый Массив<Сотрудники.Ссылка>()
    для ДанныеСотрудниковФизическогоЛица из ФизическиеЛицаСНесколькимиМестамиРаботы
        для СотрудникФизическогоЛица из ДанныеСотрудниковФизическогоЛица.Значение
            если не ОбработанныеСотрудники.Содержит(СотрудникФизическогоЛица)
                НеобработанныеСотрудники.Добавить(СотрудникФизическогоЛица)
            ;
        ;
    ;

    // Обновление значений реквизитов ОсновноеМестоРаботы сотрудникам физических лиц с несколькими местами работы,
    // у которых значение реквизита ОсновноеМестоРаботы не соответсвует вновь рассчитанному
    ОбновитьОсновноеМестоРаботыСотрудников(НеобработанныеСотрудники, ФизическиеЛицаСНесколькимиМестамиРаботы)
    ПересчетВторичныхДанных()   
;

@ВПодсистеме
метод ПересчетВторичныхДанных()
    // Обновление структуры предприятия
    СтруктураПредприятия.ОбновитьВторичныеДанные()

    ОбновитьДанныеПодразделений()

    // Удаление подразделений в которых не осталось сотрудников и сотрудников которые уволены или скрыты в списках
    УдалитьНеОтображаемыеЭлементы()
    
    // перезаполнение родителей 
    ЗаполнитьРодителей()
    // Выставляем флаг подразделениям и сотрудникам, если этому сотруднику как позиции ШР подчинен отдел
    УстановитьФлагНаличияПодчиненныхЭлементов()

    // Отделы которые подчинены позиции ШР должны иметь не пустое поле Позиция, в этом поле указано какой ПШР они подчинены 
    СформироватьСтруктуруПодчиненияПшр()
    
    УстановитьФлагНаличияПодчиненныхПодразделений()
;

@ВПодсистеме
метод ОбновитьДанныеФизическихЛиц(СсылкиФизическихЛиц: ЧитаемаяКоллекция<ФизическиеЛица.Ссылка>)

    знч Запрос = Запрос{
        Выбрать
            ПодразделенияИСотрудники.ФизическоеЛицо.Наименование.ЗаменитьNull("") Как Наименование,
            ПодразделенияИСотрудники.ФизическоеЛицо.Наименование.ЗаменитьNull("") Как СтрокиПоиска,
            ПодразделенияИСотрудники.ФизическоеЛицо.Миниатюра.ЗаменитьNull(Неопределено) Как Миниатюра,
            ПодразделенияИСотрудники.Ссылка Как СсылкаНаСтруктуру
        Из
            ПодразделенияИСотрудники Как ПодразделенияИСотрудники
        Где
            ПодразделенияИСотрудники.ФизическоеЛицо В (%СсылкиФизическихЛиц)
            И (ПодразделенияИСотрудники.Наименование != ПодразделенияИСотрудники.ФизическоеЛицо.Наименование
                Или ПодразделенияИСотрудники.Миниатюра != ПодразделенияИСотрудники.ФизическоеЛицо.Миниатюра)}
    исп Результат = Запрос.Выполнить()
    для РезультатСтрока из Результат

        пер ОбъектСтруктуры = РезультатСтрока.СсылкаНаСтруктуру.ЗагрузитьОбъект()
        ОбъектСтруктуры.Наименование = РезультатСтрока.Наименование
        ОбъектСтруктуры.СтрокиПоиска = РезультатСтрока.СтрокиПоиска
        ОбъектСтруктуры.Миниатюра    = РезультатСтрока.Миниатюра

        ОбъектСтруктуры.Записать()
    ;
;

@ВПодсистеме
метод УдалитьДанныеФизическихЛиц(СсылкиФизическихЛиц: ЧитаемыйМассив<ФизическиеЛица.Ссылка>)
    знч Запрос = Запрос{
        Выбрать
            ПодразделенияИСотрудники.Ссылка Как Ссылка
        Из
            ПодразделенияИСотрудники Как ПодразделенияИСотрудники
        Где
            ПодразделенияИСотрудники.ФизическоеЛицо В (%СсылкиФизическихЛиц)}
    исп Результат = Запрос.Выполнить()
    для РезультатСтрока из Результат
        РезультатСтрока.Ссылка.ЗагрузитьОбъект().Удалить()
    ;
;

@ВПодсистеме
метод ЗаполнитьРодителей()
    знч Запрос = Запрос{
        Выбрать
            Ссылка,
            Объект
        Из 
            ПодразделенияИСотрудники
        Где ТипЭлемента == %{ТипыЭлементовПодразделенийИСотрудников.Подразделение}}
    исп Результат = Запрос.Выполнить()
    для РезультатСтрока из Результат
        ЗаполнитьРодителя(РезультатСтрока.Ссылка, РезультатСтрока.Объект как СтруктураПредприятия.Ссылка)
    ;
;

метод ЗаполнитьРодителя(Родитель: ПодразделенияИСотрудники.Ссылка, Подразделение: СтруктураПредприятия.Ссылка)
    исп Транзакции.Начать()
    знч Запрос = Запрос{
        Выбрать
            Ссылка
        Из 
            ПодразделенияИСотрудники
        Где Подразделение == %Подразделение и Родитель != %Родитель}
    исп Результат = Запрос.Выполнить()
    для РезультатСтрока из Результат
        знч Элемент = РезультатСтрока.Ссылка.ЗагрузитьОбъект(Истина)
        Элемент.Родитель = Родитель
        Элемент.Записать()
    ;
;

//КонецОбласти

//Область СлужебныеПроцедурыИФункции

метод ЗаполнитьОбъектСтруктуры(ОбъектСтруктуры: ПодразделенияИСотрудники.Объект, Данные: ДанныеСотрудника|ДанныеПодразделения)
    знч ДанныеОбъекта: неизвестно = Данные
    ОбъектСтруктуры.Наименование = ДанныеОбъекта.Наименование
    ОбъектСтруктуры.Объект = ДанныеОбъекта.Объект
    ОбъектСтруктуры.Подразделение = ДанныеОбъекта.Подразделение
    ОбъектСтруктуры.ФизическоеЛицо = ДанныеОбъекта.ФизическоеЛицо
    ОбъектСтруктуры.ВидЗанятости = ДанныеОбъекта.ВидЗанятости
    ОбъектСтруктуры.ТипЭлемента = ДанныеОбъекта.ТипЭлемента
    ОбъектСтруктуры.Приоритет = ДанныеОбъекта.Приоритет
    ОбъектСтруктуры.СтрокиПоиска = ДанныеОбъекта.СтрокиПоиска
    ОбъектСтруктуры.Должность = ДанныеОбъекта.Должность
    ОбъектСтруктуры.Позиция = ДанныеОбъекта.Позиция
    ОбъектСтруктуры.Фотография = ДанныеОбъекта.Фотография
    ОбъектСтруктуры.Миниатюра = ДанныеОбъекта.Миниатюра
    ОбъектСтруктуры.ОсновноеМестоРаботы = ДанныеОбъекта.ОсновноеМестоРаботы
    ОбъектСтруктуры.УровеньУведомления = ДанныеОбъекта.УровеньУведомления
;

метод ФизическиеЛицаСНесколькимиМестамиРаботы(Сотрудники: ЧитаемаяКоллекция<Сотрудники.Ссылка>? = Неопределено): ЧитаемоеСоответствие<ФизическиеЛица.Ссылка, ЧитаемыйМассив<Сотрудники.Ссылка>>
    пер ФизическиеЛицаСНесколькимиСотрудниками = новый Соответствие<ФизическиеЛица.Ссылка, Массив<Сотрудники.Ссылка>>()
    пер СотрудникиНеЗаданы: Булево = (Сотрудники == Неопределено)
    знч Запрос = Запрос{
        Выбрать Различные
            КомпанияСотрудники.ФизическоеЛицо Как ФизическоеЛицо
        Поместить ВТФизическиеЛица
        Из
            Сотрудники Как КомпанияСотрудники
        Где
            Не КомпанияСотрудники.Уволен
            И Не КомпанияСотрудники.СкрыватьВСписках
            И (%СотрудникиНеЗаданы Или КомпанияСотрудники.Ссылка В (%Сотрудники))
        ;
        Выбрать
            КомпанияСотрудники.ФизическоеЛицо Как ФизическоеЛицо
        Поместить ВТФизическиеЛицаСНесколькимиСотрудниками
        Из
            Сотрудники Как КомпанияСотрудники
            Внутреннее Соединение ВТФизическиеЛица Как ФизическиеЛица
            По КомпанияСотрудники.ФизическоеЛицо == ФизическиеЛица.ФизическоеЛицо
            Внутреннее соединение  Организации Как Организации
            По КомпанияСотрудники.Организация == Организации.Ссылка
        Где
            Не КомпанияСотрудники.Уволен
            И Не КомпанияСотрудники.СкрыватьВСписках
        Сгруппировать По
            КомпанияСотрудники.ФизическоеЛицо
        Имеющие Количество(Различные КомпанияСотрудники.Ссылка) > 1
        ;
        Выбрать
            КомпанияСотрудники.ФизическоеЛицо Как ФизическоеЛицо,
            КомпанияСотрудники.Ссылка Как Сотрудник
        Из
            Сотрудники Как КомпанияСотрудники
            Внутреннее Соединение ВТФизическиеЛицаСНесколькимиСотрудниками Как ФизическиеЛица
            По КомпанияСотрудники.ФизическоеЛицо == ФизическиеЛица.ФизическоеЛицо
        Где
            Не КомпанияСотрудники.Уволен
            И Не КомпанияСотрудники.СкрыватьВСписках
        Упорядочить По
            ФизическоеЛицо,
            ВидЗанятости,
            ДатаПриемаНаРаботу Убыв,
            Ссылка}

    пер ФизическоеЛицо: ФизическиеЛица.Ссылка?
    пер СотрудникиФизическогоЛица: Массив<Сотрудники.Ссылка>
    исп РезультатОсновныхМестРаботы = Запрос.Выполнить()
    для РезультатОсновныхМестРаботыСтрока из РезультатОсновныхМестРаботы
        если ФизическоеЛицо != РезультатОсновныхМестРаботыСтрока.ФизическоеЛицо
            ФизическоеЛицо = РезультатОсновныхМестРаботыСтрока.ФизическоеЛицо
            СотрудникиФизическогоЛица = новый Массив<Сотрудники.Ссылка>()
            ФизическиеЛицаСНесколькимиСотрудниками.Вставить(ФизическоеЛицо, СотрудникиФизическогоЛица)
        ;
        СотрудникиФизическогоЛица.Добавить(РезультатОсновныхМестРаботыСтрока.Сотрудник)
    ;
    возврат ФизическиеЛицаСНесколькимиСотрудниками
;

метод ОбновитьОсновноеМестоРаботыСотрудников(Сотрудники: ЧитаемыйМассив<Сотрудники.Ссылка>, ФизическиеЛицаСНесколькимиМестамиРаботы: ЧитаемоеСоответствие<ФизическиеЛица.Ссылка, ЧитаемыйМассив<Сотрудники.Ссылка>>)
    если Сотрудники.Пусто()
        возврат
    ;
    знч Запрос = Запрос{
        Выбрать
            КомпанияПодразделенияИСотрудники.Ссылка Как Ссылка,
            КомпанияПодразделенияИСотрудники.ФизическоеЛицо Как ФизическоеЛицо,
            КомпанияПодразделенияИСотрудники.Объект Как Сотрудник,
            КомпанияПодразделенияИСотрудники.ОсновноеМестоРаботы Как ОсновноеМестоРаботы
        Из
            ПодразделенияИСотрудники Как КомпанияПодразделенияИСотрудники
        Где
            КомпанияПодразделенияИСотрудники.Объект В (%Сотрудники)}
    исп Результат = Запрос.Выполнить()
    для РезультатСтрока из Результат
        если ФизическиеЛицаСНесколькимиМестамиРаботы.СодержитКлюч(РезультатСтрока.ФизическоеЛицо)
            пер СотрудникиФизическогоЛица = ФизическиеЛицаСНесколькимиМестамиРаботы.Получить(РезультатСтрока.ФизическоеЛицо)
            пер НовоеЗначениеОсновноеМестоРаботы = РезультатСтрока.Сотрудник == СотрудникиФизическогоЛица[0]
            если НовоеЗначениеОсновноеМестоРаботы != РезультатСтрока.ОсновноеМестоРаботы
                пер ОбъектСтруктуры = РезультатСтрока.Ссылка.ЗагрузитьОбъект()
                ОбъектСтруктуры.ОсновноеМестоРаботы = НовоеЗначениеОсновноеМестоРаботы
                ОбъектСтруктуры.Записать()
            ;
        ;
    ;
;

@ВПодсистеме
метод ИспользуетсяСтруктураПодчиненияПшр(): Булево
    знч Запрос = Запрос{
        Выбрать первые 1
            Подразделение
        Из
            ПодчиненностьПшрСведения
    }
    знч РезультатСтроки = новый ЧитаемыйМассив(Запрос.Выполнить())
    возврат (не РезультатСтроки.Пусто())
;

@ВПодсистеме
метод СформироватьСтруктуруПодчиненияПшр()
    знч Запрос = Запрос{
        Выбрать
            ПодразделенияИСотрудники.Ссылка как Ссылка,
            ПшрСведения.ПозицияШР.ЗаменитьNull(Неопределено) Как ПодчинениеПшр
        Из
            ПодразделенияИСотрудники Как ПодразделенияИСотрудники
            Левое Соединение ПодчиненностьПшрСведения Как ПшрСведения
                По ПодразделенияИСотрудники.Объект == ПшрСведения.Подразделение
        Где
            ПодразделенияИСотрудники.ТипЭлемента == ТипыЭлементовПодразделенийИСотрудников.Подразделение
    }
    исп Результат = Запрос.Выполнить()
    для РезультатСтрока из Результат
        пер ОбъектСтруктуры = РезультатСтрока.Ссылка.ЗагрузитьОбъект()
        ОбъектСтруктуры.Позиция = РезультатСтрока.ПодчинениеПшр
        ОбъектСтруктуры.Записать()
    ;
;

@ВПодсистеме
метод УстановитьФлагНаличияПодчиненныхЭлементов()
    знч Запрос = Запрос{
        Выбрать
            ПшрСведения.ПозицияШР
        Поместить
            втПозицииШР
        Из
            ПодчиненностьПшрСведения Как ПшрСведения
        Сгруппировать по
            ПшрСведения.ПозицияШР
        ;
        Выбрать
            ПодразделенияИСотрудники.Ссылка как Ссылка,
            ПодразделенияИСотрудники.ТипЭлемента как ТипЭлементаПС,
            ПшрСведения.ПозицияШР есть не Null Как ЕстьПодчиненные
        Из
            ПодразделенияИСотрудники Как ПодразделенияИСотрудники
            Левое Соединение втПозицииШР Как ПшрСведения
            По ПодразделенияИСотрудники.Позиция == ПшрСведения.ПозицияШР
    }
    исп Результат = Запрос.Выполнить()
    для РезультатСтрока из Результат
        пер ОбъектСтруктуры = РезультатСтрока.Ссылка.ЗагрузитьОбъект()
        ОбъектСтруктуры.ЕстьПодчиненныеЭлементы = РезультатСтрока.ЕстьПодчиненные
            или РезультатСтрока.ТипЭлементаПС == ТипыЭлементовПодразделенийИСотрудников.Подразделение
        ОбъектСтруктуры.Записать()
    ;
;

@ВПодсистеме
метод УстановитьФлагНаличияПодчиненныхПодразделений()
    знч Запрос = Запрос{
        Выбрать Различные
            ПодразделенияИСотрудники.Ссылка Как Ссылка,
            Выбор
                Когда ПодразделенияИСотрудники.ТипЭлемента != ТипыЭлементовПодразделенийИСотрудников.Подразделение
                    Тогда Ложь
                Когда СтруктураПредприятия.Родитель есть Null
                    Тогда Ложь
                Иначе Истина
            Конец Как ЕстьПодчиненные
        Из
            ПодразделенияИСотрудники Как ПодразделенияИСотрудники
                Левое Соединение СтруктураПредприятия Как СтруктураПредприятия
                По ПодразделенияИСотрудники.Объект == СтруктураПредприятия.Родитель
    }
    исп Результат = Запрос.Выполнить()
    для РезультатСтрока из Результат
        пер ОбъектСтруктуры = РезультатСтрока.Ссылка.ЗагрузитьОбъект()
        ОбъектСтруктуры.ЕстьПодчиненныеПодразделения = РезультатСтрока.ЕстьПодчиненные
        ОбъектСтруктуры.Записать()
    ;
;

метод УдалитьНеОтображаемыеЭлементы()
    знч Запрос = Запрос{
        Выбрать
            ПодразделенияИСотрудники.Ссылка
        Из
            ПодразделенияИСотрудники Как ПодразделенияИСотрудники
            Левое Соединение ДанныеПодразделений Как ДанныеПодразделений
                По ПодразделенияИСотрудники.Объект == ДанныеПодразделений.Владелец
        Где
            ПодразделенияИСотрудники.ТипЭлемента == ТипыЭлементовПодразделенийИСотрудников.Подразделение
            И ДанныеПодразделений.КоличествоВсехСотрудников.ЗаменитьNull(0) == 0
        Объединить Все
        Выбрать
            ПодразделенияИСотрудники.Ссылка
        Из
            ПодразделенияИСотрудники Как ПодразделенияИСотрудники
            Левое Соединение Сотрудники Как Сотрудники
                По ПодразделенияИСотрудники.Объект == Сотрудники.Ссылка
        Где
            ПодразделенияИСотрудники.ТипЭлемента == ТипыЭлементовПодразделенийИСотрудников.Сотрудник
            И (Сотрудники.Уволен.ЗаменитьNull(Истина)
                Или Сотрудники.СкрыватьВСписках.ЗаменитьNull(Истина))}
    исп Результат = Запрос.Выполнить()
    для РезультатСтрока из Результат
        РезультатСтрока.Ссылка.ЗагрузитьОбъект().Удалить()
    ;
;

метод ОбновитьДанныеПодразделений()

    знч Запрос = Запрос{
        Выбрать
            СтруктураПредприятия.Наименование Как Наименование,
            СтруктураПредприятия.Ссылка Как Объект,
            СтруктураПредприятия.Родитель Как Подразделение,
            Неопределено Как ФизическоеЛицо,
            Неопределено Как ВидЗанятости,
            ТипыЭлементовПодразделенийИСотрудников.Подразделение Как ТипЭлемента,
            СтруктураПредприятия.Приоритет Как Приоритет,
            СтруктураПредприятия.Наименование Как СтрокиПоиска,
            ПодразделенияИСотрудники.Ссылка.ЗаменитьNull(Неопределено) Как СсылкаНаСтруктуру,
            Неопределено Как Должность,
            Неопределено Как Позиция,
            Неопределено Как Фотография,
            Неопределено Как Миниатюра,
            Ложь Как ОсновноеМестоРаботы,
            ПодразделенияИСотрудники.УровеньУведомления.ЗаменитьNull(0) как УровеньУведомления
        Породить ДанныеПодразделения
        Из
            СтруктураПредприятия Как СтруктураПредприятия
            Левое Соединение ПодразделенияИСотрудники Как ПодразделенияИСотрудники
                По СтруктураПредприятия.Ссылка == ПодразделенияИСотрудники.Объект
            Левое Соединение ДанныеПодразделений Как ДанныеПодразделений
                По СтруктураПредприятия.Ссылка == ДанныеПодразделений.Владелец
        Где
            ПодразделенияИСотрудники.Объект Есть NULL
            И ДанныеПодразделений.КоличествоВсехСотрудников.ЗаменитьNull(0) != 0
        ОБЪЕДИНИТЬ ВСЕ
        Выбрать
            СтруктураПредприятия.Наименование,
            СтруктураПредприятия.Ссылка,
            СтруктураПредприятия.Родитель,
            Неопределено,
            Неопределено,
            ТипыЭлементовПодразделенийИСотрудников.Подразделение,
            СтруктураПредприятия.Приоритет,
            СтруктураПредприятия.Наименование,
            ПодразделенияИСотрудники.Ссылка.ЗаменитьNull(Неопределено),
            Неопределено,
            Неопределено,
            Неопределено,
            Неопределено,
            Ложь,
            0
        Из
            СтруктураПредприятия Как СтруктураПредприятия
            Внутреннее Соединение ПодразделенияИСотрудники Как ПодразделенияИСотрудники
                По СтруктураПредприятия.Ссылка == ПодразделенияИСотрудники.Объект
            Левое Соединение ДанныеПодразделений Как ДанныеПодразделений
                По СтруктураПредприятия.Ссылка == ДанныеПодразделений.Владелец
        Где
            не (СтруктураПредприятия.Наименование == ПодразделенияИСотрудники.Наименование и
            СтруктураПредприятия.Ссылка == ПодразделенияИСотрудники.Объект И
            СтруктураПредприятия.Родитель == ПодразделенияИСотрудники.Подразделение и
            СтруктураПредприятия.Приоритет == ПодразделенияИСотрудники.Приоритет и
            СтруктураПредприятия.Наименование == ПодразделенияИСотрудники.СтрокиПоиска)
            И ДанныеПодразделений.КоличествоВсехСотрудников.ЗаменитьNull(0) != 0}

    исп Результат = Запрос.Выполнить()
    для РезультатСтрока из Результат
        пер ОбъектСтруктуры: ПодразделенияИСотрудники.Объект
        если РезультатСтрока.СсылкаНаСтруктуру == Неопределено
            ОбъектСтруктуры = новый ПодразделенияИСотрудники.Объект()
        иначе
            ОбъектСтруктуры = РезультатСтрока.СсылкаНаСтруктуру.ЗагрузитьОбъект()
        ;
        ЗаполнитьОбъектСтруктуры(ОбъектСтруктуры, РезультатСтрока)
        ОбъектСтруктуры.Записать()
    ;
;
@ВПодсистеме
метод ЗаполнитьМиниатюры()
    пер ФизическиеЛицаКОбновлению = новый Массив<ФизическиеЛица.Ссылка>()
    знч Запрос = Запрос{
        Выбрать Различные
            ФизическоеЛицо
        Из
            ПодразделенияИСотрудники
        Где
            ФизическоеЛицо != Неопределено
            И ФизическоеЛицо.Миниатюра != Неопределено
            И Миниатюра == Неопределено}
    исп Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        ФизическиеЛицаКОбновлению.Добавить(СтрокаРезультата.ФизическоеЛицо)
    ;
    если не ФизическиеЛицаКОбновлению.Пусто()
        ОбновитьДанныеФизическихЛиц(ФизическиеЛицаКОбновлению)
    ;
;

@ВПроекте
метод ДанныеПодразделений(): Множество<ПодразделенияИСотрудники.Ссылка>
    знч Запрос = Запрос{
        Выбрать
            Ссылка как Ссылка
        Из
            ПодразделенияИСотрудники
        Где
            ТипЭлемента == ТипыЭлементовПодразделенийИСотрудников.Подразделение
    }
    пер ВсеПодразделения = новый Множество<ПодразделенияИСотрудники.Ссылка>()
    исп Результат = Запрос.Выполнить()
    для РезультатСтрока из Результат
        ВсеПодразделения.Добавить(РезультатСтрока.Ссылка)
    ;
    возврат ВсеПодразделения
;


@ВПроекте
метод ДанныеПодразделений(Руководитель: ФизическиеЛица.Ссылка): Множество<ПодразделенияИСотрудники.Ссылка>
    знч Запрос = Запрос{
        Выбрать
            КомпанияПодразделенияИСотрудники.Ссылка как Ссылка
        Из
            ПодразделенияИСотрудники Как КомпанияПодразделенияИСотрудники
            Внутреннее соединение СтруктураПредприятия как Структура
            по Структура.Ссылка == КомпанияПодразделенияИСотрудники.Объект
        Где
            ТипЭлемента == ТипыЭлементовПодразделенийИСотрудников.Подразделение
            И Структура.Руководитель == %Руководитель
    }
    пер ВсеПодразделения = новый Множество<ПодразделенияИСотрудники.Ссылка>()
    исп Результат = Запрос.Выполнить()
    для РезультатСтрока из Результат
        ВсеПодразделения.Добавить(РезультатСтрока.Ссылка)
    ;
    возврат ВсеПодразделения
;

//КонецОбласти
