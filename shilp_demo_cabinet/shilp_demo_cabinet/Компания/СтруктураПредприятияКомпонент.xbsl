импорт ИнтерфейсныеКомпонентыСтандартные
импорт Компания
импорт ОбщиеСтандартные
импорт СтандартноеПриложение
импорт ФизическиеЛица

@ВПодсистеме
структура ПараметрСобытияПриВыбореСтруктурнойЕдиницы
    обз пер ДанныеСтроки: Компания.ДанныеСтруктурнойЕдиницы
    обз пер Подразделение: СтруктураПредприятия.Ссылка?
    обз пер ФизическоеЛицо: ФизическиеЛица.Ссылка?
    обз пер РежимОтображения: Компания.РежимОтображенияСписка
;

@ВПроекте
@Реализация
метод Инициализировать()
    ИнтерфейсныеКомпоненты.ИнициализироватьТаблицу(Таблица = Компоненты.ПодразделенияСотрудники,
        ИспользоватьВыделениеСтроки = Истина, АвтоВыделениеСтроки = АвтоВыделениеСтроки.ВыделятьПервый)
    если РежимВыбора
        РежимОтображенияСписка = Компания.РежимОтображенияСписка.СтруктураПредприятия
        знч ВыбранныеЭлементы = ВыбранныеЭлементыСпискаПодразделенияИСотрудники(ВыбранныеПодразделения)
        для СтрокаСписка из ВыбранныеЭлементы
            Компоненты.ПодразделенияСотрудники.ОтметитьСтроку(СтрокаСписка, Истина)
        ;
    ;
    УстановитьФильтры()
;

метод ПереключательРежимовПриИзменении(Источник: Переключатель<Компания.РежимОтображенияСписка>, Событие: СобытиеПриИзменении<Компания.РежимОтображенияСписка>)
    СтатистикаИспользованияПриложения.ЗарегистрироватьЦель("КомпанияРежимОтображения%{РежимОтображенияСписка.ВСтроку()}")
    УстановитьФильтры()
;
метод ПерейтиВКорень()
    ВышестоящиеЭлементыСтруктуры.Очистить()
    АктивныйЭлементСтруктуры = Неопределено
    ВывестиВышестоящиеПодразделения()
    УстановитьФильтры()
;

метод ПоменятьАктивныйЭлемент(ВыбранныйЭлемент: Компания.ДанныеСтруктурнойЕдиницы, НовыйАктивныйЭлемент: Объект)
    пер Индекс: Число = ВышестоящиеЭлементыСтруктуры.Найти(ВыбранныйЭлемент)
    если Индекс < ВышестоящиеЭлементыСтруктуры.Граница()
        ВышестоящиеЭлементыСтруктуры.УдалитьДиапазон(Индекс + 1)
        АктивныйЭлементСтруктуры = НовыйАктивныйЭлемент
    ;
    ВывестиВышестоящиеПодразделения()
    УстановитьФильтры()
;

метод ПоменятьАктивныйЭлемент(ВыбранныйЭлемент: Компания.ДанныеСтруктурнойЕдиницы)
    АктивныйЭлементСтруктуры = ПолучитьЭлементНавигации(ВыбранныйЭлемент)
    ВывестиВышестоящиеПодразделения()
    УстановитьФильтры()
;

метод УстановитьФильтрПриНажатии(Источник: Кнопка, Событие: СобытиеПриНажатии, ДанныеТекущегоЭлемента: Объект?)
    знч СтрокаДанных = (ДанныеТекущегоЭлемента как СтрокаДинамическогоСписка).Данные
    знч ДанныеСтруктурнойЕдиницы = ДанныеСтруктурнойЕдиницыПоДанымСтроки(СтрокаДанных)
    знч ЭтоПодразделение = ДанныеСтруктурнойЕдиницы.Объект это СтруктураПредприятия.Ссылка
    знч ЭтоПозицияШР = ДанныеСтруктурнойЕдиницы.Объект это Сотрудники.Ссылка и ДанныеСтруктурнойЕдиницы.Позиция != Неопределено
    если ЭтоПодразделение
        АктивныйЭлементСтруктуры = ДанныеСтруктурнойЕдиницы.Объект
    ;
    если ЭтоПозицияШР
        АктивныйЭлементСтруктуры = ДанныеСтруктурнойЕдиницы.Позиция
    ;
    ВышестоящиеЭлементыСтруктуры.Добавить(ДанныеСтруктурнойЕдиницы)
    ВывестиВышестоящиеПодразделения()
    УстановитьФильтры()
;

метод ИнициироватьСобытиеПриВыбореСтруктурнойЕдиницы(ДанныеСтроки: Компания.ДанныеСтруктурнойЕдиницы)
    пер ФизическоеЛицо: ФизическиеЛица.Ссылка?
    пер Подразделение: СтруктураПредприятия.Ссылка?
    если ДанныеСтроки.Объект это СтруктураПредприятия.Ссылка 
        Подразделение = ДанныеСтроки.Объект как СтруктураПредприятия.Ссылка
        если ДанныеСтроки.Руководитель != Неопределено
            ФизическоеЛицо = ДанныеСтроки.Руководитель!
        ;
    иначе
        ФизическоеЛицо = ДанныеСтроки.ФизическоеЛицо
    ;
    знч Параметр = новый ПараметрСобытияПриВыбореСтруктурнойЕдиницы(ДанныеСтроки, Подразделение, ФизическоеЛицо, РежимОтображенияСписка)
    ПриВыбореСтруктурнойЕдиницы(новый СобытиеСДанными(Параметр))
;

@ВПодсистеме
метод ПолучитьВыделеннуюСтроку(УстановкаСтроки: Булево = Ложь): Объект?
    возврат Компоненты.ПодразделенияСотрудники.ВыделеннаяСтрока
;

@ВПодсистеме
метод УстановитьФильтры()
    пер Фильтр = Компоненты.ПодразделенияСотрудники.Источник.Фильтр
    
    знч ЭлементФильтра_0: ЭлементФильтра = Фильтр.Элементы[0] как ЭлементФильтра
    знч ЭлементФильтра_1: ЭлементФильтра = Фильтр.Элементы[1] как ЭлементФильтра
    знч ЭлементФильтра_2: ЭлементФильтра = Фильтр.Элементы[2] как ЭлементФильтра
    знч ЭлементФильтра_3: ЭлементФильтра = Фильтр.Элементы[3] как ЭлементФильтра
    знч ЭлементФильтра_4: ЭлементФильтра = Фильтр.Элементы[4] как ЭлементФильтра
    знч ЭлементФильтра_5: ЭлементФильтра = Фильтр.Элементы[5] как ЭлементФильтра
    знч ЭлементФильтра_6: ЭлементФильтра = Фильтр.Элементы[6] как ЭлементФильтра
    знч ЭлементФильтра_7: ЭлементФильтра = Фильтр.Элементы[7] как ЭлементФильтра
    
    знч ОтображатьТолькоСотрудников = (РежимОтображенияСписка == Компания.РежимОтображенияСписка.Сотрудники)

    // Фильтр по типу элементов
    ЭлементФильтра_1.Использовать = ОтображатьТолькоСотрудников
    // Фильтр по виду занятости
    ЭлементФильтра_2.Использовать = ОтображатьТолькоСотрудников
    // Фильтр по приоритету
    ЭлементФильтра_4.Использовать = ОтображатьТолькоСотрудников
    // Фильтр по наличию подчиненных элементов
    ЭлементФильтра_6.Использовать = не ОтображатьТолькоСотрудников
    // Фильтр по подразделениям
    ЭлементФильтра_0.Использовать = не ОтображатьТолькоСотрудников    
    // Фильтр по позиции ШР
    ЭлементФильтра_5.Использовать = не ОтображатьТолькоСотрудников    
    // Фильтр подразделений по количеству сотрудников на основном месте работы
    ЭлементФильтра_7.Использовать = (РежимОтображенияСписка == Компания.РежимОтображенияСписка.СтруктураПредприятия)

    если ОтображатьТолькоСотрудников
        ЭлементФильтра_1.Значение = ТипыЭлементовПодразделенийИСотрудников.Сотрудник
    иначе
        если АктивныйЭлементСтруктуры это СтруктураПредприятия.Ссылка или АктивныйЭлементСтруктуры == Неопределено
            ЭлементФильтра_5.Использовать = Ложь
            ЭлементФильтра_0.Использовать = не ЭлементФильтра_3.Использовать
            ЭлементФильтра_0.Значение = АктивныйЭлементСтруктуры
            ЭлементФильтра_1.Использовать = Ложь
        иначе
            ЭлементФильтра_0.Использовать = Ложь
            ЭлементФильтра_5.Использовать = Истина
            ЭлементФильтра_5.Значение = АктивныйЭлементСтруктуры
            ЭлементФильтра_1.Использовать = Истина
            ЭлементФильтра_1.Значение = ТипыЭлементовПодразделенийИСотрудников.Подразделение
        ;
        ЭлементФильтра_6.Использовать = (РежимОтображенияСписка == Компания.РежимОтображенияСписка.СтруктураПредприятия)
        если не ВышестоящиеЭлементыСтруктуры.Пусто()
            ИнициироватьСобытиеПриВыбореСтруктурнойЕдиницы(ВышестоящиеЭлементыСтруктуры.Последний())
        ;
    ;
;

метод ВывестиВышестоящиеПодразделения()
    пер ГруппаВышестоящиеПодразделения = Компоненты.ВышестоящиеПодразделения
    ГруппаВышестоящиеПодразделения.Содержимое.Очистить()
    если не ВышестоящиеЭлементыСтруктуры.Пусто() и РежимОтображенияСписка != Компания.РежимОтображенияСписка.Сотрудники
        пер КомпонентДомой = новый КомпонентВыбора()
        КомпонентДомой.Изображение = Ресурс{Домой.svg}.Ссылка
        КомпонентДомой.ДополнительныеДанные = Неопределено
        КомпонентДомой.ПриНажатии = (Источник, Событие) -> ВышестоящееПодразделениеПриНажатии(Источник)
        ГруппаВышестоящиеПодразделения.Содержимое.Добавить(КомпонентДомой)
        
        пер МаксимальноеКоличествоВыводимыхПодразделенийИерархии = 3
        если КлиентскоеУстройство.ВидИнтерфейса == ВидИнтерфейса.Телефон
            МаксимальноеКоличествоВыводимыхПодразделенийИерархии = 1
        ;  
        
        пер ПодразделенияКВыводу: Массив<Компания.ДанныеСтруктурнойЕдиницы>
        если МаксимальноеКоличествоВыводимыхПодразделенийИерархии == 1
            ПодразделенияКВыводу.Добавить(ВышестоящиеЭлементыСтруктуры[ВышестоящиеЭлементыСтруктуры.Граница()])
        иначе если ВышестоящиеЭлементыСтруктуры.Размер() > МаксимальноеКоличествоВыводимыхПодразделенийИерархии
            ПодразделенияКВыводу.Добавить(ВышестоящиеЭлементыСтруктуры[0])
            ПодразделенияКВыводу.ДобавитьВсе(ВышестоящиеЭлементыСтруктуры.ПодМассив(Макс(0, ВышестоящиеЭлементыСтруктуры.Размер() 
                - МаксимальноеКоличествоВыводимыхПодразделенийИерархии + 1)))      
        иначе
            ПодразделенияКВыводу = ВышестоящиеЭлементыСтруктуры
        ;
        
        для СвойстваВышестоящегоПодразделения из ПодразделенияКВыводу
            пер КомпонентПодразделения = новый КомпонентВыбора()
            КомпонентПодразделения.Закрываемый = Истина
            КомпонентПодразделения.ДополнительныеДанные = ПолучитьЭлементНавигации(СвойстваВышестоящегоПодразделения)
            если СвойстваВышестоящегоПодразделения.Объект это Сотрудники.Ссылка 
                КомпонентПодразделения.Заголовок = МенеджерСущности.ПредставлениеСсылки(СвойстваВышестоящегоПодразделения.Должность, "Должность не известна")
            иначе
                КомпонентПодразделения.Заголовок = СвойстваВышестоящегоПодразделения.Наименование
            ;
            КомпонентПодразделения.РастягиватьПоГоризонтали = Истина
            КомпонентПодразделения.МаксимальнаяШирина = 320
            КомпонентПодразделения.ВесПриРастягивании = КомпонентПодразделения.Заголовок.Длина()
            если КлиентскоеУстройство.ВидИнтерфейса == ВидИнтерфейса.Телефон
                КомпонентПодразделения.МинимальнаяШирина = Метрики.РАЗМЕР_ПОЛУИНТЕРВАЛА * 5
            иначе
                КомпонентПодразделения.МинимальнаяШирина = Метрики.РАЗМЕР_ПОЛУИНТЕРВАЛА * 10
            ;
            КомпонентПодразделения.ПриНажатии = (Источник, Событие) -> ВышестоящееПодразделениеПриНажатии(Источник)
            КомпонентПодразделения.ПриНажатииЗакрытия = (Источник, Событие) -> ВышестоящееПодразделениеПриВызовеЗакрытия(Источник)
            ГруппаВышестоящиеПодразделения.Содержимое.Добавить(КомпонентПодразделения)
        ;
    ;
;

метод ВышестоящееПодразделениеПриНажатии(Компонент: КомпонентВыбора): Булево
    если Компонент.ДополнительныеДанные == Неопределено
        ПерейтиВКорень()
    иначе
        для СвойстваВышестоящегоПодразделения из ВышестоящиеЭлементыСтруктуры
            пер ВышестоящийЭлемент = ПолучитьЭлементНавигации(СвойстваВышестоящегоПодразделения)
            если Компонент.ДополнительныеДанные == ПолучитьЭлементНавигации(СвойстваВышестоящегоПодразделения)
                ПоменятьАктивныйЭлемент(СвойстваВышестоящегоПодразделения, ВышестоящийЭлемент)
                ИнициироватьСобытиеПриВыбореСтруктурнойЕдиницы(СвойстваВышестоящегоПодразделения)
                прервать
            ;
        ;
    ;
    возврат Истина
;

метод ВышестоящееПодразделениеПриВызовеЗакрытия(Компонент: КомпонентВыбора): Булево
    пер СвойстваПредыдущегоПодразделения: Компания.ДанныеСтруктурнойЕдиницы?
    для СвойстваВышестоящегоПодразделения из ВышестоящиеЭлементыСтруктуры

        если Компонент.ДополнительныеДанные == ПолучитьЭлементНавигации(СвойстваВышестоящегоПодразделения)
            пер Индекс: Число = ВышестоящиеЭлементыСтруктуры.Найти(СвойстваВышестоящегоПодразделения)
            если Индекс <= ВышестоящиеЭлементыСтруктуры.Граница()
                ВышестоящиеЭлементыСтруктуры.УдалитьДиапазон(Индекс)
            ;
            если СвойстваПредыдущегоПодразделения == Неопределено
                ПерейтиВКорень()
            иначе
                ПоменятьАктивныйЭлемент(СвойстваПредыдущегоПодразделения)
                ИнициироватьСобытиеПриВыбореСтруктурнойЕдиницы(СвойстваПредыдущегоПодразделения!)
            ;
            прервать
        ;
        СвойстваПредыдущегоПодразделения = СвойстваВышестоящегоПодразделения
    ;
    возврат Истина
;

метод ПолучитьЭлементНавигации(СвойстваЭлемента: Компания.ДанныеСтруктурнойЕдиницы): СтруктураПредприятия.Ссылка|ШтатноеРасписание.Ссылка  
    если СвойстваЭлемента.Объект это СтруктураПредприятия.Ссылка
        возврат СвойстваЭлемента.Объект как СтруктураПредприятия.Ссылка
    иначе
        возврат СвойстваЭлемента.Позиция!
    ;
;

метод ВышестоящиеПодразделенияВидимость(): Булево
    возврат РежимОтображенияСписка != Компания.РежимОтображенияСписка.Сотрудники
;

метод СтрокаПоискаКомпонентВидимость(): Булево
    возврат не РежимВыбора
;

метод СтрокаПоискаКомпонентВыполнитьПоиск(Источник: СтрокаПоиска, Событие: СобытиеСДанными<Строка>)
    пер Фильтр = Компоненты.ПодразделенияСотрудники.Источник.Фильтр
    знч ЭлементФильтра_0: ЭлементФильтра = Фильтр.Элементы[0] как ЭлементФильтра
    знч ЭлементФильтра_3: ЭлементФильтра = Фильтр.Элементы[3] как ЭлементФильтра
    если Событие.Данные.Пусто()
        ЭлементФильтра_3.Использовать = Ложь
        УстановитьФильтры()
    иначе
        ЭлементФильтра_3.Использовать = Истина
        ЭлементФильтра_3.Значение = Событие.Данные
        ЭлементФильтра_0.Использовать = Ложь
    ;
;

метод ПереключательРежимовВидимость(): Булево
    возврат не РежимВыбора
;

@ВПодсистеме
метод ОтмеченныеПодразделения(): Множество<СтруктураПредприятия.Ссылка>
    пер ПодразделенияИСотрудники: Множество<ПодразделенияИСотрудники.Ссылка>
    знч ОтмеченныеЭлементы = Компоненты.ПодразделенияСотрудники.ПолучитьОтмеченныеСтроки()
    для ОтмеченныйЭлемент из ОтмеченныеЭлементы
        ПодразделенияИСотрудники.Добавить(ОтмеченныйЭлемент как ПодразделенияИСотрудники.Ссылка)
    ;
    ВыбранныеПодразделения = ВыбранныеПодразделения(ПодразделенияИСотрудники)
    возврат ВыбранныеПодразделения
;

// Область Методы обслуживания ТаблицаРасширенная
метод УстановитьВидимостьДляПодразделений(ДанныеЭлемента: СтрокаДинамическогоСписка): Булево
    возврат РежимОтображенияСписка != Компания.РежимОтображенияСписка.Все 
        или (ДанныеЭлемента.Данные["ТипЭлемента"] == ТипыЭлементовПодразделенийИСотрудников.Сотрудник) 
        или (ДанныеЭлемента.Данные["КоличествоСотрудниковНаОсновнойРаботе"] это не Null
            и (ДанныеЭлемента.Данные["КоличествоСотрудниковНаОсновнойРаботе"] как Число) > 0)
;

метод УстановитьФильтрВидимость(ДанныеЭлемента: СтрокаДинамическогоСписка): Булево
    возврат (РежимОтображенияСписка == Компания.РежимОтображенияСписка.Все 
                и ДанныеЭлемента.Данные["ЕстьПодчиненныеЭлементы"] как Булево)
            или (РежимОтображенияСписка == Компания.РежимОтображенияСписка.СтруктураПредприятия 
                и ДанныеЭлемента.Данные["ЕстьПодчиненныеПодразделения"] как Булево)
;

метод ОбработчикПриНажатииСтроки(Источник: Список<ДинамическийСписок>, Событие: СобытиеСДанными<СтрокаСписка<СтрокаДинамическогоСписка>>)
    ВыделенныйЭлемент = Событие.Данные.ДанныеСтроки
;

метод ПодразделенияСотрудникиПриВыделенииСтроки(Источник: Список<ДинамическийСписок>, Событие: СобытиеСДанными<Сущность.Ключ?>)
    если ВыделенныйЭлемент == Неопределено
        ВыделенныйЭлемент = Источник.ПолучитьДанныеСтроки(Событие.Данные)
    ;
    ИнициироватьСобытиеПриВыбореСтруктурнойЕдиницы(ДанныеСтруктурнойЕдиницыПоДанымСтроки(ВыделенныйЭлемент.Данные))
;

метод ДанныеСтруктурнойЕдиницыПоДанымСтроки(СтрокаДанных: ЧитаемоеСоответствие<Строка, неизвестно>): Компания.ДанныеСтруктурнойЕдиницы
    знч ДанныеСтруктурнойЕдиницы: Компания.ДанныеСтруктурнойЕдиницы
    ДанныеСтруктурнойЕдиницы.Наименование = СтрокаДанных["Наименование"]
    ДанныеСтруктурнойЕдиницы.Объект = СтрокаДанных["Объект"] как СтруктураПредприятия.Ссылка|Сотрудники.Ссылка|Неопределено
    если не (СтрокаДанных["Руководитель_Ссылка"] это Null)
        ДанныеСтруктурнойЕдиницы.Руководитель = СтрокаДанных["Руководитель_Ссылка"] как ФизическиеЛица.Ссылка?
    ;
    если не (СтрокаДанных["ФизическоеЛицо"] это Null)
        ДанныеСтруктурнойЕдиницы.ФизическоеЛицо = СтрокаДанных["ФизическоеЛицо"] как ФизическиеЛица.Ссылка?
    ;
    если не (СтрокаДанных["Позиция"] это Null)
        ДанныеСтруктурнойЕдиницы.Позиция = СтрокаДанных["Позиция"] как ШтатноеРасписание.Ссылка?
    ;
    если не (СтрокаДанных["Должность"] это Null)
        ДанныеСтруктурнойЕдиницы.Должность = СтрокаДанных["Должность"] как Должности.Ссылка?
    ;
    если не (СтрокаДанных["Подразделение"] это Null)
        ДанныеСтруктурнойЕдиницы.Подразделение = СтрокаДанных["Подразделение"] как СтруктураПредприятия.Ссылка?
    ;
    если не (СтрокаДанных["КоличествоВсехПодчиненных"] это Null)
        ДанныеСтруктурнойЕдиницы.КоличествоВсехПодчиненных = СтрокаДанных["КоличествоВсехПодчиненных"] как Число
        ДанныеСтруктурнойЕдиницы.КоличествоПодчиненныхНепосредственно = СтрокаДанных["КоличествоПодчиненныхНепосредственно"] как Число
        ДанныеСтруктурнойЕдиницы.КоличествоСотрудниковНаОсновнойРаботе = СтрокаДанных["КоличествоСотрудниковНаОсновнойРаботе"] как Число
        ДанныеСтруктурнойЕдиницы.КоличествоВсехСотрудников = СтрокаДанных["КоличествоВсехСотрудников"] как Число
        ДанныеСтруктурнойЕдиницы.КоличествоСотрудниковПодразделенияНаОсновнойРаботе = СтрокаДанных["КоличествоСотрудниковПодразделенияНаОсновнойРаботе"] как Число
    ;
    возврат ДанныеСтруктурнойЕдиницы
;

метод ОсновнойЗаголовок(ДанныеЭлемента: СтрокаДинамическогоСписка): Строка
    знч ЕстьПодчиненные = ДанныеЭлемента.Данные["ЕстьПодчиненныеЭлементы"] как Булево
    если ДанныеЭлемента.Данные["Объект"] это СтруктураПредприятия.Ссылка или не ЕстьПодчиненные 
        возврат ДанныеЭлемента.Данные["Наименование"] как Строка
    ;
    если РежимОтображенияСписка == Компания.РежимОтображенияСписка.СтруктураПредприятия 
        возврат МенеджерСущности.ПредставлениеСсылки(
                ДанныеЭлемента.Данные["Должность"] как Должности.Ссылка?, "Должность не известна")
    иначе
        возврат ДанныеЭлемента.Данные["Наименование"] как Строка
    ;        
;

метод ДополнительныйЗаголовок(ДанныеЭлемента: СтрокаДинамическогоСписка): Строка
    если ДанныеЭлемента.Данные["Объект"] это СтруктураПредприятия.Ссылка
        возврат МенеджерСущности.ПредставлениеСсылки(
                ДанныеЭлемента.Данные["Руководитель"] как ФизическиеЛица.Ссылка?, "Руководитель не известен")
    ;
    если РежимОтображенияСписка != Компания.РежимОтображенияСписка.СтруктураПредприятия 
        возврат МенеджерСущности.ПредставлениеСсылки(
                ДанныеЭлемента.Данные["Должность"] как Должности.Ссылка?, "Должность не известна")
    иначе
        возврат ДанныеЭлемента.Данные["Наименование"] как Строка
    ;        
;

метод РабочийТелефонВидимость(ДанныеЭлемента: СтрокаДинамическогоСписка): Булево
    пер РабочийТелефонВидимость: Булево
    если ДанныеЭлемента.Данные["РабочиеКонтактыФизическихЛиц_Ссылка"] != Null
        пер РабочийТелефон: Строка = ДанныеЭлемента.Данные["РабочийТелефон"] как Строка
        РабочийТелефонВидимость = не РабочийТелефон.Пусто()
    ;
    возврат РабочийТелефонВидимость
;

метод Картинка(ДанныеЭлемента: СтрокаДинамическогоСписка): ДвоичныйОбъект.Ссылка?
    пер Картинка: ДвоичныйОбъект.Ссылка = СтандартноеПриложение.ПараметрыСеанса().АватарПоУмолчанию
    если ДанныеЭлемента.Данные["Объект"] это СтруктураПредприятия.Ссылка 
        Картинка = КартинкаПодразделения
    иначе если ДанныеЭлемента.Данные["Миниатюра_Хранилище"] это ДвоичныйОбъект.Ссылка
        Картинка = ДанныеЭлемента.Данные["Миниатюра_Хранилище"] как ДвоичныйОбъект.Ссылка
    ;
    возврат Картинка
;

метод РабочийТелефонЗаголовок(ДанныеЭлемента: СтрокаДинамическогоСписка): Строка
    пер РабочийТелефон: Строка
    если ДанныеЭлемента.Данные["РабочиеКонтактыФизическихЛиц_Ссылка"] != Null
        РабочийТелефон = ДанныеЭлемента.Данные["РабочийТелефон"] как Строка
    ;
    возврат РабочийТелефон
;

метод ЭлектроннаяПочтаЗаголовок(ДанныеЭлемента: СтрокаДинамическогоСписка): Строка
    пер ЭлектроннаяПочта: Строка
    если ДанныеЭлемента.Данные["РабочиеКонтактыФизическихЛиц_Ссылка"] != Null
        ЭлектроннаяПочта = ДанныеЭлемента.Данные["ЭлектроннаяПочта"] как Строка
    ;
    возврат ЭлектроннаяПочта
;

// КонецОбласти Методы обслуживания ТаблицаРасширенная 

@НаСервере @ДоступноСКлиента
статический метод ВыбранныеПодразделения(ПодразделенияИСотрудники: Множество<ПодразделенияИСотрудники.Ссылка>): Множество<СтруктураПредприятия.Ссылка>
    пер ВыбранныеПодразделения: Множество<СтруктураПредприятия.Ссылка>
    знч ЗначениеРеквизитаОбъектов = МенеджерСущности.ЗначениеРеквизитаОбъектов(ПодразделенияИСотрудники, "Объект")
    для Элемент из ЗначениеРеквизитаОбъектов
        ВыбранныеПодразделения.Добавить(Элемент.Значение как СтруктураПредприятия.Ссылка)
    ;
    возврат ВыбранныеПодразделения
;

@НаСервере @ДоступноСКлиента
статический метод ВыбранныеЭлементыСпискаПодразделенияИСотрудники(Подразделения: Множество<СтруктураПредприятия.Ссылка>): Множество<ПодразделенияИСотрудники.Ссылка>
    
    пер ВыбранныеЭлементы: Множество<ПодразделенияИСотрудники.Ссылка>
    
    знч Запрос = Запрос{
        Выбрать
            КомпанияПодразделенияИСотрудники.Ссылка Как Ссылка 
        Из
            ПодразделенияИСотрудники Как КомпанияПодразделенияИСотрудники
        Где
            КомпанияПодразделенияИСотрудники.Объект В(%Подразделения)}
    
    исп Результат = Запрос.Выполнить() 
    для РезультатСтрока из Результат
        ВыбранныеЭлементы.Добавить(РезультатСтрока.Ссылка)
    ;
    
    возврат ВыбранныеЭлементы
    
;