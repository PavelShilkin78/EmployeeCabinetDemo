импорт СтандартноеПриложение

// Контракт ОсновнойИнтерфейсПоставщик
@ВПроекте
@Реализация
метод РазделыПриложения(): ЧитаемаяКоллекция<ОсновнойИнтерфейс.ОписаниеРаздела>
    если Компания.ПараметрыСеанса().ФункциональныеОпции.ИнформацияОКомпании
        возврат [ОписаниеРазделаКомпания()]
    иначе
        возврат []
    ;
;

@ВПроекте
@Реализация
метод Виджеты(): ЧитаемаяКоллекция<ОсновнойИнтерфейс.ОписаниеВиджета>
    возврат []
;

@ВПроекте
@Реализация
метод КомандыВсеФункции(): ЧитаемаяКоллекция<ОсновнойИнтерфейс.ОписательКомандыВсеФункции>
    знч Группа = Компания.ГруппаКомандВсеФункции()
    возврат [
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Графики работы",
            СоздательФормыСписка = метод()-> возврат новый ГрафикиРаботы.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый ГрафикиРаботы.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Данные графиков работы",
            СоздательФормыСписка = метод()-> возврат новый ДанныеГрафиковРаботы.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый ДанныеГрафиковРаботы.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Данные подразделений",
            СоздательФормыСписка = метод()-> возврат новый ДанныеПодразделений.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый ДанныеПодразделений.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Должности",
            СоздательФормыСписка = метод()-> возврат новый Должности.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый Должности.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Оплата труда сотрудников",
            СоздательФормыСписка = метод()-> возврат новый ОплатаТрудаСотрудников.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый ОплатаТрудаСотрудников.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Организации",
            СоздательФормыСписка = метод()-> возврат новый Организации.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый Организации.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Подразделения и сотрудники",
            СоздательФормыСписка = метод()-> возврат новый ПодразделенияИСотрудники.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый ПодразделенияИСотрудники.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Подразделения к обновлению",
            СоздательФормыСписка = метод()-> возврат новый ПодразделенияКОбновлению.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый ПодразделенияКОбновлению.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Подчиненность подразделений",
            СоздательФормыСписка = метод()-> возврат новый ПодчиненностьПодразделений.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый ПодчиненностьПодразделений.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Подчиненность ПШР",
            СоздательФормыСписка = метод()-> возврат новый ПодчиненностьПшрСведения.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый ПодчиненностьПшрСведения.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Праздничные дни",
            СоздательФормыСписка = метод()-> возврат новый ПраздничныеДни.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый ПраздничныеДни.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Сотрудники к обновлению",
            СоздательФормыСписка = метод()-> возврат новый СотрудникиКОбновлению.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый СотрудникиКОбновлению.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Сотрудники",
            СоздательФормыСписка = метод()-> возврат новый Сотрудники.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый Сотрудники.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Структура предприятия",
            СоздательФормыСписка = метод()-> возврат новый СтруктураПредприятия.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый СтруктураПредприятия.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Штатное расписание",
            СоздательФормыСписка = метод()-> возврат новый ШтатноеРасписание.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый ШтатноеРасписание.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Категории должности",
            СоздательФормыСписка = метод()-> возврат новый КатегорииДолжности.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый КатегорииДолжности.АвтоматическаяФормаОбъекта();
            ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа, 
            Представление = "Описание работодателя",
            СоздательФормыСписка = метод()-> возврат новый ОписаниеРаботодателя.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый ОписаниеРаботодателя.АвтоматическаяФормаОбъекта();
            )
    ]
;

@ВПроекте
@Реализация
метод ДополнительныеКоманды(): ЧитаемыйМассив<Команда>
    возврат []
;

@ВПроекте
@Реализация
метод КомандыПанелиДействий(): ЧитаемыйМассив<Команда>
    возврат []
;

@ВПроекте
@Реализация
метод ДополнительныеКомандыПанелиГлавное(): ЧитаемыйМассив<Команда>
    возврат []
;
// Конец ОсновнойИнтерфейсПоставщик

метод ОписаниеРазделаКомпания(): ОсновнойИнтерфейс.ОписаниеРаздела
    возврат новый ОсновнойИнтерфейс.ОписаниеРаздела(
        Ид = Компания.ИД_РАЗДЕЛА_КОМПАНИЯ,
        Имя = Компания.ИМЯ_РАЗДЕЛА_КОМПАНИЯ,
        Пиктограмма = НавигацияКомпания.Изображение,
        ЦветПиктограммы = Неопределено,
        НавигационнаяКомандаРаздела = НавигацияКомпания,
        ШиринаДляПанелиНавигации = 156)
;