импорт ФизическиеЛица
импорт СтандартноеПриложение
импорт КонтрольДоступа
импорт ОбменДанными

@ВПроекте
конст ИД_РАЗДЕЛА_КОМПАНИЯ = "Компания"

@ВПодсистеме конст ИМЯ_РАЗДЕЛА_КОМПАНИЯ = "Компания"

конст ТИП_АТРИБУТА_ДОСТУПА_ОРГАНИЗАЦИИ = "Организации"
конст ТИП_АТРИБУТА_ДОСТУПА_ПОДРАЗДЕЛЕНИЯ = "Подразделения"

@ВПроекте
конст ИД_ПОДСИСТЕМЫ = "Компания"

@ВПроекте
@НаКлиенте
метод ПараметрыСеанса(): ПараметрыСеанса
    возврат ПараметрыСеансаСервис.ПолучитьСервис().ПараметрПоКлючу(КЛЮЧ_ПАРАМЕТРОВ_СЕАНСА) как ПараметрыСеанса
;

@ВПроекте
конст ВЫБОР_ПОДРАЗДЕЛЕНИЙ_ЗАВЕРШЕН = "ВыборПодразделенийЗавершен"

@ВПодсистеме
конст КЛЮЧ_ПАРАМЕТРОВ_СЕАНСА: Строка = "КомпанияПараметрыСеанса" 

@ВПроекте
конст ТИП_DTO_СТРУКТУРА_ПРЕДПРИЯТИЯ = "СтруктураПредприятия"
@ВПроекте
конст ТИП_DTO_ДОЛЖНОСТИ = "Должности"
@ВПроекте
конст ТИП_DTO_ШТАТНОЕ_РАСПИСАНИЕ = "ШтатноеРасписание"
@ВПроекте
конст ТИП_DTO_ОРГАНИЗАЦИИ = "Организации"
@ВПроекте
конст ТИП_DTO_СОТРУДНИКИ = "Сотрудники"
@ВПроекте
конст ТИП_DTO_ГРАФИКИ_РАБОТЫ = "ГрафикиРаботы"

@ВПроекте
конст РОЛЬ_РУКОВОДИТЕЛЬ_ПОДРАЗДЕЛЕНИЯ = "РольРуководительПодразделения"

@ВПроекте
@НаСервере
метод ДобавитьРоли()
    ДобавитьРольРуководительПодразделения()
;

@ВПодсистеме
@НаСервере
метод ДобавитьРольРуководительПодразделения()
    КомпанияКонтрольДоступаПоставщик.ПолучитьСервис().ДобавитьРольРуководительПодразделения()
;

@ВПодсистеме
@НаСервере
метод РольРуководительПодразделения(): Роли.Ссылка?
    возврат КонтрольДоступа.Роль(РОЛЬ_РУКОВОДИТЕЛЬ_ПОДРАЗДЕЛЕНИЯ)
;

@ВПодсистеме
@НаСервере
метод ДобавитьТипDtoОбъекта()
    ДобавитьТипDtoОбъектаСтруктураПредприятия()
    ДобавитьТипDtoОбъектаДолжности()
    ДобавитьТипDtoОбъектаШтатноеРасписание()
    ДобавитьТипDtoОбъектаОрганизации()
    ДобавитьТипDtoОбъектаСотрудники()
    ДобавитьТипDtoОбъектаГрафикиРаботы()
;

@НаСервере
метод ДобавитьТипDtoОбъектаСтруктураПредприятия()
    ТипыDtoОбъектов.ДобавитьТипDtoОбъекта(
        "Структура Предприятия",
        ТИП_DTO_СТРУКТУРА_ПРЕДПРИЯТИЯ
    )
;

@НаСервере
метод ДобавитьТипDtoОбъектаДолжности()
    ТипыDtoОбъектов.ДобавитьТипDtoОбъекта(
        "Должности",
        ТИП_DTO_ДОЛЖНОСТИ
    )
;

@НаСервере
метод ДобавитьТипDtoОбъектаШтатноеРасписание()
    ТипыDtoОбъектов.ДобавитьТипDtoОбъекта(
        "ШтатноеРасписание",
        ТИП_DTO_ШТАТНОЕ_РАСПИСАНИЕ
    )
;

@НаСервере
метод ДобавитьТипDtoОбъектаОрганизации()
    ТипыDtoОбъектов.ДобавитьТипDtoОбъекта(
        "Организации",
        ТИП_DTO_ОРГАНИЗАЦИИ
    )
;

@НаСервере
метод ДобавитьТипDtoОбъектаСотрудники()
    ТипыDtoОбъектов.ДобавитьТипDtoОбъекта(
        "Сотрудники",
        ТИП_DTO_СОТРУДНИКИ
    )
;

@НаСервере
метод ДобавитьТипDtoОбъектаГрафикиРаботы()
    ТипыDtoОбъектов.ДобавитьТипDtoОбъекта(
        "ГрафикиРаботы",
        ТИП_DTO_ГРАФИКИ_РАБОТЫ
    )
;

@ВПроекте
структура ПараметрыСеанса
    пер ПодразделенияРуководителя: Массив<СтруктураПредприятия.Ссылка>
    пер ТекущийПользовательРуководитель: Булево
    пер РуководительТекущегоПользователя: ФизическиеЛица.Ссылка?
    пер ТекущийПользовательСотрудник: Булево
    пер ФункциональныеОпции: ФункциональныеОпции
;

@ВПроекте
структура ФункциональныеОпции
    пер ИнформацияОКомпании: Булево = Истина
    пер ИспользоватьРабочиеГруппы: Булево
    пер РасширенныеРолиСогласующих: Булево
    пер ДоступнаНастройкаПравилСогласования: Булево = Истина
;

@ВПроекте
@НаСервере
метод ОбновитьДанныеСотрудников()
    ПодразделенияИСотрудники.ОбновитьДанныеСотрудников()
;

@ВПроекте
@НаСервере
метод УдалитьДанныеФизическихЛиц(СсылкиФизическихЛиц: ЧитаемыйМассив<ФизическиеЛица.Ссылка>)
    ПодразделенияИСотрудники.УдалитьДанныеФизическихЛиц(СсылкиФизическихЛиц)
;

@ВПроекте
@НаСервере
метод ПолучитьФункциональныеОпции(): Компания.ФункциональныеОпции?
    возврат ИспользуемаяФункциональность.ФункциональныеОпции()
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ЗаписатьФункциональныеОпции(ФункциональныеОпции: Компания.ФункциональныеОпции)
    ИспользуемаяФункциональность.ЗаписатьФункциональныеОпции(ФункциональныеОпции)
;

@ВПодсистеме
перечисление РежимОтображения
    Список умолчание,
    Схема
;

@ВПодсистеме
перечисление РежимОтображенияСписка
    Сотрудники умолчание,
    СтруктураПредприятия,
    Все
;

@ВПодсистеме
@НаСервере
метод ДобавитьТипАтрибутаДоступаОрганизации()
    КонтрольДоступа.ДобавитьТипАтрибута(
        "Организации",
        ТИП_АТРИБУТА_ДОСТУПА_ОРГАНИЗАЦИИ
    )
;

@ВПодсистеме
@НаСервере
метод ДобавитьТипАтрибутаДоступаПодразделения()
    КонтрольДоступа.ДобавитьТипАтрибута(
        "Подразделения",
        ТИП_АТРИБУТА_ДОСТУПА_ПОДРАЗДЕЛЕНИЯ
    )
;

@ВПроекте
@НаСервере
метод ТипАтрибутаДоступаОрганизации(): ТипыАтрибутов.Ссылка?
    возврат КонтрольДоступа.ТипАтрибута(ТИП_АТРИБУТА_ДОСТУПА_ОРГАНИЗАЦИИ)
;

@ВПроекте
@НаСервере
метод ТипАтрибутаДоступаПодразделения(): ТипыАтрибутов.Ссылка?
    возврат КонтрольДоступа.ТипАтрибута(ТИП_АТРИБУТА_ДОСТУПА_ПОДРАЗДЕЛЕНИЯ)
;

@ВПодсистеме
@НаСервере @НаКлиенте
структура ДанныеСтруктурнойЕдиницы
    пер Наименование: Строка
    пер Руководитель: ФизическиеЛица.Ссылка?
    пер ФизическоеЛицо: ФизическиеЛица.Ссылка?
    пер Объект: СтруктураПредприятия.Ссылка|Сотрудники.Ссылка|Неопределено
    пер Позиция: ШтатноеРасписание.Ссылка?
    пер Подразделение: СтруктураПредприятия.Ссылка?
    пер Должность: Должности.Ссылка?
    пер КоличествоВсехСотрудников: Число
    пер КоличествоСотрудниковПодразделения: Число
    пер КоличествоВсехПодчиненных: Число
    пер КоличествоПодчиненныхНепосредственно: Число
    пер КоличествоСотрудниковНаОсновнойРаботе: Число
    пер КоличествоСотрудниковПодразделенияНаОсновнойРаботе: Число
;

@ВПроекте
@НаСервере
метод ПодразделенияКампании(): Множество<СтруктураПредприятия.Ссылка>
    знч ПодразделенияКампании: Множество<СтруктураПредприятия.Ссылка>
    знч Запрос = Запрос{
        Выбрать Различные
            СтруктураПредприятия.Ссылка Как Ссылка
        Из 
            СтруктураПредприятия Как СтруктураПредприятия 
        }
    исп РезультатЗапроса = Запрос.Выполнить() 
    для РезультатЗапросаСтрока из РезультатЗапроса
        ПодразделенияКампании.Добавить(РезультатЗапросаСтрока.Ссылка)
    ;
    возврат ПодразделенияКампании
;

@ВПроекте
@НаСервере
метод ОписаниеРаботодателяИнтерактивноеРедактированиеДоступно(): Булево
    возврат КомпанияКонтрольДоступаПоставщик.ПолучитьСервис().ОписаниеРаботодателяИнтерактивноеРедактированиеДоступно()    
;

@ВПроекте
@НаКлиенте @НаСервере
структура КадровыеДанныеФизическогоЛица
    обз пер ФизическоеЛицо: ФизическиеЛица.Ссылка
    пер ФамилияИнициалы: Строка
    пер Миниатюра: ДвоичныйОбъект.Ссылка?
    пер Позиция: ШтатноеРасписание.Ссылка?
    пер Должность: Должности.Ссылка?
    пер Подразделение: СтруктураПредприятия.Ссылка?
;

@ВПроекте
@НаСервере @ДоступноСКлиента
статический метод КадровыеДанныеФизическихЛиц(ФизическиеЛица: ФизическиеЛица.Ссылка|Массив<ФизическиеЛица.Ссылка>): Массив<КадровыеДанныеФизическогоЛица>
    пер КадровыеДанныеФизическихЛиц: Массив<КадровыеДанныеФизическогоЛица>
    знч Запрос = Запрос{
        Выбрать
            ФизическиеЛица.Ссылка Как ФизическоеЛицо,
            ФизическиеЛица.Фамилия Как Фамилия,
            ФизическиеЛица.ИнициалыИмени Как ИнициалыИмени,
            ФизическиеЛица.Миниатюра.Хранилище.ЗаменитьNull(Неопределено) Как Миниатюра,
            ПодразделенияИСотрудники.Позиция.ЗаменитьNull(Неопределено) Как Позиция,
            ПодразделенияИСотрудники.Должность.ЗаменитьNull(Неопределено) Как Должность,
            ПодразделенияИСотрудники.Подразделение.ЗаменитьNull(Неопределено) Как Подразделение
        Из
            ФизическиеЛица Как ФизическиеЛица
                Левое Соединение ПодразделенияИСотрудники Как ПодразделенияИСотрудники 
                По ФизическиеЛица.Ссылка == ПодразделенияИСотрудники.ФизическоеЛицо
        Где
            ФизическиеЛица.Ссылка В (%ФизическиеЛица)
            И ПодразделенияИСотрудники.ОсновноеМестоРаботы.ЗаменитьNull(Ложь)
        }
    исп Результат = Запрос.Выполнить()
    для РезультатСтрока из Результат
        КадровыеДанныеФизическихЛиц.Добавить(
            новый КадровыеДанныеФизическогоЛица(
                РезультатСтрока.ФизическоеЛицо,
                РезультатСтрока.Фамилия + " " + РезультатСтрока.ИнициалыИмени,
                РезультатСтрока.Миниатюра,
                РезультатСтрока.Позиция,
                РезультатСтрока.Должность,
                РезультатСтрока.Подразделение
            )
        )
    ;
    возврат КадровыеДанныеФизическихЛиц
;

@ВПодсистеме
@НаКлиенте
метод ГруппаКомандВсеФункции(): ОсновнойИнтерфейс.ОписательГруппыКомандВсеФункции
    возврат новый ОсновнойИнтерфейс.ОписательГруппыКомандВсеФункции(ИМЯ_РАЗДЕЛА_КОМПАНИЯ, 27)
;

@ВПроекте
@НаСервере
метод ДобавитьГруппыДоступаПодразделений()
    СтруктураПредприятия.ДобавитьГруппыДоступаПодразделений()
;

@ВПроекте
@НаКлиенте
метод НастройкиВводаВсеФизическиеЛицаСотрудники(): НастройкиВводаСсылок
    возврат НастройкиВводаПоНастройкамФизлиц(ФизЛица.НастройкиВводаВсе())
;

@ВПроекте
@НаКлиенте
метод НастройкиВводаВсеФизическиеЛицаСотрудникиКроме(ТекущееФизическоеЛицо: ФизическиеЛица.Ссылка): НастройкиВводаСсылок    
    возврат НастройкиВводаПоНастройкамФизлиц(ФизЛица.НастройкиВводаВсеКроме(ТекущееФизическоеЛицо))
;

@ВПроекте
@НаКлиенте
метод НастройкиВводаВсеФизическиеЛицаРуководители(): НастройкиВводаСсылок
    возврат ФизЛица.НастройкиВводаОграниченныйСписок(ВсеРуководителиКомпании())    
;

@ВПроекте
@НаКлиенте
метод НастройкиВводаПоНастройкамФизлиц(Настройки: НастройкиВводаСсылок): НастройкиВводаСсылок    
    знч Настройка = Настройки.НастройкиПоТипу[Тип<ФизическиеЛица.Ссылка>]
    Настройка.ПрисоединенныеТаблицы.Добавить(
        новый ПрисоединеннаяТаблица(
            Таблица = "%ПодразделенияИСотрудники",
            Псевдоним = "ПодразделенияИСотрудники",
            Фильтр = новый ГруппаЭлементовФильтра(
                Элементы = [
                    новый ЭлементФильтраВыражение(
                        Выражение = "ФизическиеЛица.Ссылка == ПодразделенияИСотрудники.ФизическоеЛицо"
                    ),
                    новый ЭлементФильтра(
                        Поле = "ОсновноеМестоРаботы",
                        ВидСравнения = ВидСравнения.Равно,
                        Значение = Истина,
                        Использовать = Истина)
                ]
            )
        ) 
    )    
    Настройка.Фильтр.Элементы.Добавить(
        новый ЭлементФильтра(
            Поле = "ПодразделенияИСотрудники.Объект.Уволен",
            ВидСравнения = ВидСравнения.Равно,
            Значение = Ложь,
            Использовать = Истина)
    )
    Настройка.Фильтр.Элементы.Добавить(
        новый ЭлементФильтра(
            Поле = "ПодразделенияИСотрудники.Ссылка",
            ВидСравнения = ВидСравнения.НеРавно,
            Значение = Null,
            Использовать = Истина)
    )   
    возврат Настройки
;

@НаСервере @ДоступноСКлиента
статический метод ВсеРуководителиКомпании(): Массив<ФизическиеЛица.Ссылка>
    возврат ОрганизационнаяСтруктура.ВсеРуководителиКомпании()    
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ФизическиеЛицаСотрудников(СписокСотрудников: Множество<Сотрудники.Ссылка>): Множество<ФизическиеЛица.Ссылка>
    возврат Сотрудники.ФизическиеЛицаСотрудников(новый ЧитаемыйМассив<Сотрудники.Ссылка>(СписокСотрудников)).ВоМножество()   
;