импорт СтандартноеПриложение
импорт ФизическиеЛица

@Обработчик
метод ПослеСоздания()
    Инициализировать()
;

@ВПроекте
метод Инициализировать()
    пер Фильтр = Компоненты.СписокФизическихЛиц.Источник.Фильтр
    (Фильтр.Элементы[0] как ЭлементФильтра).Использовать = ВыборСотрудников != Неопределено
    (Фильтр.Элементы[0] как ЭлементФильтра).ВидСравнения = (ВыборСотрудников == Истина ? ВидСравнения.НеРавно : ВидСравнения.Равно)
    для ВыбранноеФизическоеЛицо из ВыбранныеФизическиеЛица
        Компоненты.СписокФизическихЛиц.ОтметитьСтроку(ВыбранноеФизическоеЛицо, Истина)
    ;
;

метод Миниатюра(ДанныеЭлемента: СтрокаДинамическогоСписка): ДвоичныйОбъект.Ссылка?
    если ДанныеЭлемента.Данные["Миниатюра_Хранилище"] это ДвоичныйОбъект.Ссылка
        возврат ДанныеЭлемента.Данные["Миниатюра_Хранилище"] как ДвоичныйОбъект.Ссылка
    ;
    возврат СтандартноеПриложение.ПараметрыСеанса().АватарПоУмолчанию
;

метод ПредставлениеЗаголовок(ДанныеЭлемента: СтрокаДинамическогоСписка): Строка
    возврат ДанныеЭлемента.Данные["Наименование"] как Строка
;

метод ПредставлениеМаксимальнаяВысотаВСтроках(): Число
    возврат (КомпактныйРежимОтображения() ? 1 : 3)
;

метод ДолжностьЗаголовок(ДанныеЭлемента: СтрокаДинамическогоСписка): Строка
    если ДанныеЭлемента.Данные["Должность"] это Должности.Ссылка
        возврат (ДанныеЭлемента.Данные["Должность"] как Должности.Ссылка).Представление()
    ;
    возврат ""
;

метод ПодразделениеЗаголовок(ДанныеЭлемента: СтрокаДинамическогоСписка): Строка
    если ДанныеЭлемента.Данные["Подразделение"] это СтруктураПредприятия.Ссылка
        возврат (ДанныеЭлемента.Данные["Подразделение"] как СтруктураПредприятия.Ссылка).Представление()
    ;
    возврат ""
;

метод КомпактныйРежимОтображения(): Булево
    возврат КлиентскоеУстройство.ВидИнтерфейса == ВидИнтерфейса.Телефон
;

метод ДолжностьКомпактнаяВидимость(): Булево
    возврат КомпактныйРежимОтображения()
;

метод ДолжностьВидимость(): Булево
    возврат не ДолжностьКомпактнаяВидимость()
;

метод ПодразделениеКомпактнаяВидимость(): Булево
    возврат КомпактныйРежимОтображения()
;

метод ПодразделениеВидимость(): Булево
    возврат не ПодразделениеКомпактнаяВидимость()
;

метод СписокФизическихЛицОтображатьШапку(): Булево
    возврат не КомпактныйРежимОтображения()
;

метод ВыбратьОбработчик(Команда: КомандаСПараметром<Массив<Сущность.Ключ>>, Параметр: Массив<Сущность.Ключ>)
    ВыбраныФизическиеЛица.Оповестить(Параметр.Преобразовать(Элемент -> Элемент как ФизическиеЛица.Ссылка).ВоМножество())
    Закрыть()
;

метод ДолжностьПриИзменении(Источник: ПолеВвода<Должности.Ссылка?>, Событие: СобытиеПриИзменении<неизвестно>)
    ИспользуетсяФильтрПоДолжности = Должность != Неопределено
    УстановитьФильтрПоДолжности(Должность)
;

метод ПодразделениеПриИзменении(Источник: ПолеВвода<СтруктураПредприятия.Ссылка?>, Событие: СобытиеПриИзменении<неизвестно>)
    ИспользуетсяФильтрПоПодразделению = Подразделение != Неопределено
    УстановитьФильтрПоПодразделению(Подразделение)
;

метод УстановитьФильтрПоДолжности(ЗначениеФильтра: Должности.Ссылка?)
    УстановитьФильтрПоПолю("Должность", ЗначениеФильтра)
;

метод УстановитьФильтрПоПодразделению(ЗначениеФильтра: СтруктураПредприятия.Ссылка?)
    если ЗначениеФильтра == Неопределено
        УстановитьФильтрПоПолю("Подразделение", Неопределено)
        возврат
    ;
    пер ПодразделенияФильтра = новый Массив<СтруктураПредприятия.Ссылка>()
    ПодразделенияФильтра.ДобавитьВсе(ПодчиненныеПодразделения(ЗначениеФильтра!))
    ПодразделенияФильтра.Добавить((ЗначениеФильтра!))
    УстановитьФильтрПоПолю("Подразделение", ПодразделенияФильтра)
;

метод ОтоборГруппаОриентация(): ОриентацияСодержимого
    возврат (КлиентскоеУстройство.ВидИнтерфейса == ВидИнтерфейса.Телефон ? ОриентацияСодержимого.Вертикальная : ОриентацияСодержимого.Горизонтальная)
;

@ВПроекте
метод УстановитьФильтрПоПолю(ИмяПоля: Строка, ЗначениеФильтра: неизвестно)
    пер Фильтр = Компоненты.СписокФизическихЛиц.Источник.Фильтр
    пер ФильтрПоля: ЭлементФильтра?
    для ЭлементКоллекции из Фильтр.Элементы
        если ЭлементКоллекции это ЭлементФильтра
            если (ЭлементКоллекции как ЭлементФильтра).Поле == ИмяПоля
                ФильтрПоля = ЭлементКоллекции как ЭлементФильтра
                прервать
            ;
        ;
    ;
    
    пер ВидСравненияФильтра = ВидСравнения.ВСписке
    если ЗначениеФильтра это СтруктураПредприятия.Ссылка
        ВидСравненияФильтра = ВидСравнения.Равно
    иначе если ЗначениеФильтра это Должности.Ссылка
        ВидСравненияФильтра = ВидСравнения.Равно
    ;
    
    если ФильтрПоля == Неопределено
        если ЗначениеФильтра == Неопределено
            возврат
        ;
        ФильтрПоля = новый ЭлементФильтра(ИмяПоля, ВидСравненияФильтра, ЗначениеФильтра, Истина)
        Фильтр.Элементы.Добавить(ФильтрПоля)
    иначе
        ФильтрПоля!.ВидСравнения = ВидСравненияФильтра
        ФильтрПоля!.Значение = ЗначениеФильтра
        ФильтрПоля!.Использовать = ЗначениеФильтра != Неопределено
    ;
;

@НаСервере @ДоступноСКлиента
статический метод ПодчиненныеПодразделения(Подразделение: СтруктураПредприятия.Ссылка): ЧитаемаяКоллекция<СтруктураПредприятия.Ссылка>
    возврат СтруктураПредприятия.ПодчиненныеПодразделения(Подразделение) 
;

метод СнятьФлажкиОбработчик(Команда: ОбычнаяКоманда)
    Компоненты.СписокФизическихЛиц.ОчиститьОтмеченныеСтроки()
;

метод УстановитьФлажкиОбработчик(Команда: ОбычнаяКоманда)
    пер ВсеСтроки = СтрокиСписка()
    для ВыбранноеФизическоеЛицо из ВсеСтроки
        Компоненты.СписокФизическихЛиц.ОтметитьСтроку(ВыбранноеФизическоеЛицо, Истина)
    ;
;

метод ИнвертироватьФлажкиОбработчик(Команда: ОбычнаяКоманда)
    пер ОтмеченныеСтроки = Компоненты.СписокФизическихЛиц.ПолучитьОтмеченныеСтроки()
    пер ВсеСтроки = СтрокиСписка()
    для ВыбранноеФизическоеЛицо из ВсеСтроки
        Компоненты.СписокФизическихЛиц.ОтметитьСтроку(ВыбранноеФизическоеЛицо,
            не ОтмеченныеСтроки.Содержит(ВыбранноеФизическоеЛицо))
    ;
;

метод СтрокиСписка(): Массив<ФизическиеЛица.Ссылка>
    пер КоллекцияФильтров = новый Массив<ЭлементФильтра>()
    для ЭлементФильтра из Компоненты.СписокФизическихЛиц.Источник.Фильтр.Элементы
        если (ЭлементФильтра как ЭлементФильтра).Использовать
            КоллекцияФильтров.Добавить(ЭлементФильтра как ЭлементФильтра)
        ;
    ;
    возврат ФизическиеЛицаДинамическогоСписка(КоллекцияФильтров)
;

@НаСервере @ДоступноСКлиента
статический метод ФизическиеЛицаДинамическогоСписка(КоллекцияФильтров: Массив<ЭлементФильтра>): Массив<ФизическиеЛица.Ссылка>
    пер СписокФизическихЛиц = новый Массив<ФизическиеЛица.Ссылка>()
    
    пер НетФильтраПоНаименованию = Истина
    пер ФильтрПоНаименованию = "Пусто"
    
    пер НетФильтраПоДолжности = Истина
    пер ФильтрПоДолжности: Должности.Ссылка?
    
    пер НетФильтраПоПодразделению = Истина
    пер ФильтрПоПодразделению: Массив<СтруктураПредприятия.Ссылка>
    
    пер НетОтобораПоЗанятости = Истина
    пер ФильтрПоЗанятости = Истина
    
    для ЭлементФильтра из КоллекцияФильтров 
        выбор ЭлементФильтра.Поле
        когда "ФизическиеЛица.Наименование"
            НетФильтраПоНаименованию = Ложь
            ФильтрПоНаименованию = "\%%{ЭлементФильтра.Значение}\%"
        когда "Должность"
            НетФильтраПоДолжности = Ложь
            ФильтрПоДолжности = ЭлементФильтра.Значение как Должности.Ссылка
        когда "Подразделение"
            НетФильтраПоПодразделению = Ложь
            ФильтрПоПодразделению = ЭлементФильтра.Значение как Массив<СтруктураПредприятия.Ссылка> 
        когда "ПодразделенияИСотрудники.ФизическоеЛицо"
            НетОтобораПоЗанятости = Ложь
            ФильтрПоЗанятости = ЭлементФильтра.ВидСравнения != ВидСравнения.Равно
        ;
    ;
    знч Запрос = Запрос{
        Выбрать
            ФизическиеЛица.Ссылка Как Ссылка
        Из
            ФизическиеЛица Как ФизическиеЛица
            Левое Соединение ПодразделенияИСотрудники Как ПодразделенияИСотрудники
            По ФизическиеЛица.Ссылка == ПодразделенияИСотрудники.ФизическоеЛицо
                И ПодразделенияИСотрудники.ОсновноеМестоРаботы
        Где
            (%НетФильтраПоНаименованию
                Или ФизическиеЛица.Наименование Подобно %ФильтрПоНаименованию)
            И (%НетФильтраПоДолжности
                Или ПодразделенияИСотрудники.Должность == %ФильтрПоДолжности)
            И (%НетФильтраПоПодразделению
                Или ПодразделенияИСотрудники.Подразделение В (%ФильтрПоПодразделению))
            И (%НетОтобораПоЗанятости
                Или Не %ФильтрПоЗанятости И ПодразделенияИСотрудники.ФизическоеЛицо Есть Null
                Или %ФильтрПоЗанятости И Не ПодразделенияИСотрудники.ФизическоеЛицо Есть Null)}
    исп Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        СписокФизическихЛиц.Добавить(СтрокаРезультата.Ссылка)
    ;
    возврат СписокФизическихЛиц
;