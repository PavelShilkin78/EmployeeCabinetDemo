импорт АдаптацияПерсонала
импорт Анкетирование
импорт Компания::Согласования
импорт ЛичныеКабинетыКандидатов
импорт ОбщиеСтандартные
импорт ОценкаПерсонала
импорт ПодборПерсонала
импорт СтандартноеПриложение
импорт Тестирование
импорт Уведомления
импорт УниверсальныеМеханизмы
импорт ФизическиеЛица
импорт Компания
импорт ВебApi

// Контракт ОбновляемаяПодсистема

@ВПроекте
@Реализация
метод ОбработчикиЗаполнения(): Массив<СтандартноеПриложение.ОписаниеОбработчикаЗаполнения>
    возврат [
        новый СтандартноеПриложение.ОписаниеОбработчикаЗаполнения(
                АдаптацияПерсонала.ИД_ПОДСИСТЕМЫ,
                "АдаптацияПерсоналаЗапланироватьУведомления",
                &ЗапланироватьУведомленияАдаптацииПерсонала())
    ]
;

@ВПроекте
@Реализация
метод ОбработчикиОбновления(): Массив<СтандартноеПриложение.ОписаниеОбработчикаОбновления>
    знч Обработчики: Массив<СтандартноеПриложение.ОписаниеОбработчикаОбновления>
    знч Сервис = АдаптацияПерсоналаПоставщикВерсииПриложения.ПолучитьСервис()
    Обработчики.Добавить(новый СтандартноеПриложение.ОписаниеОбработчикаОбновления(
                АдаптацияПерсонала.ИД_ПОДСИСТЕМЫ, 
                "АдаптацияПерсоналаЗапланироватьУведомления", 
                &ЗапланироватьУведомленияАдаптацииПерсонала(),
                Сервис.АдаптацияПерсоналаЗапланироватьУведомления()))            
    возврат Обработчики
;

@ВПроекте
метод ЗапланироватьУведомленияАдаптацииПерсонала()
    ЗапланированныеУведомления.ЗапланироватьУведомленияОПросроченныхМероприятиях()
;

// Конец ОбновляемаяПодсистема

// Контракт УведомленияПодбораПерсонала
@ВПроекте
@Реализация
метод ПослеЗаписиЗаявкиНаПодбор(Заявка:ЗаявкиНаПодбор.Объект, До: ЗаявкиНаПодбор.Данные, ПараметрыЗаписи: ЗаявкиНаПодбор.ПараметрыЗаписи, ЭтоНовый: Булево)
;

@ВПроекте
@Реализация
метод ПослеЗаписиСтатусаЗаявкиНаПодбор(НаборЗаписей: СтатусыЗаявокНаПодбор.НаборЗаписей, Замещать: Булево, ПараметрыЗаписи: СтатусыЗаявокНаПодбор.ПараметрыЗаписи)
    
    знч Заявка: ЗаявкиНаПодбор.Ссылка? = НаборЗаписей.Фильтр.Заявка.Значение
    знч ЗаписьНабора: СтатусыЗаявокНаПодбор.Запись? = НаборЗаписей.ЕдинственныйИлиУмолчание()
    если Заявка == Неопределено или ЗаписьНабора == Неопределено
        возврат
    ;
    если ЗаписьНабора.Статус == Неопределено или ЗаписьНабора.Статус == ПараметрыЗаписи.ПредыдущийСтатус
        возврат
    ;
    
    знч ДанныеДокумента = МенеджерСущности.ЗначенияРеквизитовОбъекта(Заявка, ["Инициатор", "МаршрутСогласования"])
    
    выбор ЗаписьНабора.Статус
    когда СтатусыЗаявкиНаПодбор.Согласование
        
        знч МаршрутСогласования = ДанныеДокумента["МаршрутСогласования"] как ПравилаСогласования.Ссылка
        знч ТекущиеСогласующие = ПравилаСогласования.СогласующиеПравилаСогласования(МаршрутСогласования)
                
        пер ИменаРесурсов = [
            ПодборПерсонала.ЗАЯВКА_НА_ПОДБОР_СОГЛАСОВАНИЕ_SMS,
            ПодборПерсонала.ЗАЯВКА_НА_ПОДБОР_СОГЛАСОВАНИЕ_PUSH,
            ПодборПерсонала.ЗАЯВКА_НА_ПОДБОР_СОГЛАСОВАНИЕ_EMAIL,
            ПодборПерсонала.ЗАЯВКА_НА_ПОДБОР_СОГЛАСОВАНИЕ_ТЕМА]
        пер ЗначенияРесурсов = УниверсальныеМеханизмы.ЗначенияРесурсовПодсистемы(ПодборПерсонала.ИД_РАЗДЕЛА_ПОДБОР_ПЕРСОНАЛА, ИменаРесурсов)
        
        для Согласующий из ТекущиеСогласующие
            пер ТекстыСообщений = ФизЛица.ЗаполнитьПараметрыПолучателяВСообщении(ЗначенияРесурсов, Согласующий)       
            ТекстыСообщений = ЗаявкиНаПодбор.ЗаполнитьПараметрыЗаявкиНаПодборВСообщении(ТекстыСообщений, Заявка)
            ТекстыСообщений = ОписаниеРаботодателя.ЗаполнитьОписаниеРаботодателяВСообщении(ТекстыСообщений)
            пер ТекстыУведомлений = новый УведомленияСервер.ТекстыСообщений(
                ТекстыСообщений[ПодборПерсонала.ЗАЯВКА_НА_ПОДБОР_СОГЛАСОВАНИЕ_ТЕМА],
                ТекстыСообщений[ПодборПерсонала.ЗАЯВКА_НА_ПОДБОР_СОГЛАСОВАНИЕ_SMS],
                ТекстыСообщений[ПодборПерсонала.ЗАЯВКА_НА_ПОДБОР_СОГЛАСОВАНИЕ_PUSH],
                ТекстыСообщений[ПодборПерсонала.ЗАЯВКА_НА_ПОДБОР_СОГЛАСОВАНИЕ_EMAIL])
            пер ДанныеУведомления = новый УведомленияСервер.ДанныеУведомления(Уведомления.ВидыУведомлений.Согласование, Согласующий)
            УведомленияСервер.ЗапланироватьУведомление(Согласующий, ТекстыУведомлений, ДанныеУведомления)
        ;
    ;
;

@ВПроекте
@Реализация
метод ПослеЗаписиВакансии(Вакансия:Вакансии.Объект, До: Вакансии.Данные, ПараметрыЗаписи: Вакансии.ПараметрыЗаписи, ЭтоНовый: Булево)
    
;

@ВПроекте
@Реализация
метод ПослеЗаписиСтатусаВакансии(НаборЗаписей: СтатусыВакансии.НаборЗаписей, Замещать: Булево, ПараметрыЗаписи: СтатусыВакансии.ПараметрыЗаписи)
;

@ВПроекте
@Реализация
метод ПослеЗаписиОтклика(Отклик:Отклики.Объект, До: Отклики.Данные, ПараметрыЗаписи: Отклики.ПараметрыЗаписи, ЭтоНовый: Булево)
    
;

@ВПроекте
@Реализация
метод ПослеЗаписиСогласия(Согласие:СогласияНаОбработкуПдн.Объект, До: СогласияНаОбработкуПдн.Данные, ПараметрыЗаписи: СогласияНаОбработкуПдн.ПараметрыЗаписи, ЭтоНовый: Булево)    
    если Согласие.Субъект == Неопределено
        возврат
    ;
    
    если НастройкиПерсональныхДанных.ВедетсяСборСогласий() и Согласие.Статус == СтатусыСогласийНаОбработкуПдн.Подписано и Согласие.Субъект это Кандидаты.Ссылка
        ЛичныеКабинетыКандидатов.СформироватьУведомлениеОПодписанииСогласия(Согласие.Субъект как Кандидаты.Ссылка)
    ;
;

@ВПроекте
@Реализация
метод ПослеЗаписиСтатусаРассматриваемогоКандидата(НаборЗаписей: СтатусыРассматриваемыхКандидатов.НаборЗаписей, Замещать: Булево, ПараметрыЗаписи: СтатусыРассматриваемыхКандидатов.ПараметрыЗаписи)
    знч Кандидат: РассматриваемыеКандидаты.Ссылка? = НаборЗаписей.Фильтр.Кандидат.Значение
    если Кандидат == Неопределено
        возврат
    ;
    если НаборЗаписей.Пусто()
        возврат
    ;
    знч ЗаписьНабора: СтатусыРассматриваемыхКандидатов.Запись? = НаборЗаписей.Последний()
    если ЗаписьНабора.Статус == Неопределено или ЗаписьНабора.Статус == ПараметрыЗаписи.ПредыдущийСтатус
        возврат
    ;
    
    исп Результат = Запрос{
        ВЫБРАТЬ 
            РассматриваемыеКандидаты.Вакансия как Вакансия,
            РассматриваемыеКандидаты.Вакансия.Инициатор.ЗаменитьNull(Неопределено) как Инициатор
        ИЗ
            РассматриваемыеКандидаты КАК РассматриваемыеКандидаты
        ГДЕ
            РассматриваемыеКандидаты.Ссылка == %Кандидат
    }.Выполнить()
    
    знч ДанныеКандидата = Результат.Единственный()
    знч СтатусНаправленЗаказчику = СтатусыВоронки.СтатусНаправленЗаказчику()
    если СтатусНаправленЗаказчику != Неопределено и ЗаписьНабора.Статус == СтатусНаправленЗаказчику

        знч Получатели: Множество<ФизическиеЛица.Ссылка>
        если ДанныеКандидата.Инициатор != Неопределено
            Получатели.Добавить(ДанныеКандидата.Инициатор)
        ;
        
        пер ИменаРесурсов = [
            ПодборПерсонала.СПИСОК_КАНДИДАТОВ_НА_УТВЕРЖДЕНИЕ_SMS,
            ПодборПерсонала.СПИСОК_КАНДИДАТОВ_НА_УТВЕРЖДЕНИЕ_PUSH,
            ПодборПерсонала.СПИСОК_КАНДИДАТОВ_НА_УТВЕРЖДЕНИЕ_EMAIL,
            ПодборПерсонала.СПИСОК_КАНДИДАТОВ_НА_УТВЕРЖДЕНИЕ_ТЕМА]
        пер ЗначенияРесурсов = УниверсальныеМеханизмы.ЗначенияРесурсовПодсистемы(ПодборПерсонала.ИД_РАЗДЕЛА_ПОДБОР_ПЕРСОНАЛА, ИменаРесурсов)
        
        для Получатель из Получатели 
            пер ТекстыСообщений = ФизЛица.ЗаполнитьПараметрыПолучателяВСообщении(ЗначенияРесурсов, Получатель)       
            ТекстыСообщений = Вакансии.ЗаполнитьПараметрыВакансииВСообщении(ТекстыСообщений, ДанныеКандидата.Вакансия)
            ТекстыСообщений = РассматриваемыеКандидаты.ЗаполнитьПараметрыРассматриваемогоКандидатаВСообщении(ТекстыСообщений, Кандидат)
            ТекстыСообщений = ОписаниеРаботодателя.ЗаполнитьОписаниеРаботодателяВСообщении(ТекстыСообщений)
            пер ТекстыУведомлений = новый УведомленияСервер.ТекстыСообщений(
                ТекстыСообщений[ПодборПерсонала.СПИСОК_КАНДИДАТОВ_НА_УТВЕРЖДЕНИЕ_ТЕМА],
                ТекстыСообщений[ПодборПерсонала.СПИСОК_КАНДИДАТОВ_НА_УТВЕРЖДЕНИЕ_SMS],
                ТекстыСообщений[ПодборПерсонала.СПИСОК_КАНДИДАТОВ_НА_УТВЕРЖДЕНИЕ_PUSH],
                ТекстыСообщений[ПодборПерсонала.СПИСОК_КАНДИДАТОВ_НА_УТВЕРЖДЕНИЕ_EMAIL])
            пер ДанныеУведомления = новый УведомленияСервер.ДанныеУведомления(Уведомления.ВидыУведомлений.ПерсональнаяИнформация, Получатель)
            УведомленияСервер.ЗапланироватьУведомление(Получатель, ТекстыУведомлений, ДанныеУведомления)
        ;
    ;
;

@ВПроекте
@Реализация
метод ПослеЗаписиСобеседования(Собеседование:Собеседования.Объект, До: Собеседования.Данные, ПараметрыЗаписи: Собеседования.ПараметрыЗаписи, ЭтоНовый: Булево)
    
    знч ДанныеКандидата = МенеджерСущности.ЗначенияРеквизитовОбъекта(Собеседование.Кандидат, ["Вакансия"])
    
    пер ИменаРесурсов = [
        ПодборПерсонала.ПРИГЛАШЕНИЕ_НА_СОБЕСЕДОВАНИЕ_SMS,
        ПодборПерсонала.ПРИГЛАШЕНИЕ_НА_СОБЕСЕДОВАНИЕ_PUSH,
        ПодборПерсонала.ПРИГЛАШЕНИЕ_НА_СОБЕСЕДОВАНИЕ_EMAIL,
        ПодборПерсонала.ПРИГЛАШЕНИЕ_НА_СОБЕСЕДОВАНИЕ_ТЕМА]
    пер ЗначенияРесурсов = УниверсальныеМеханизмы.ЗначенияРесурсовПодсистемы(ПодборПерсонала.ИД_РАЗДЕЛА_ПОДБОР_ПЕРСОНАЛА, ИменаРесурсов)
    
    для Получатель из Собеседование.Участники
        если не ЭтоНовый и До.Участники.Найти(Получатель) != Неопределено
            продолжить
        ;
        пер ТекстыСообщений = ФизЛица.ЗаполнитьПараметрыПолучателяВСообщении(ЗначенияРесурсов, Получатель)       
        ТекстыСообщений = Вакансии.ЗаполнитьПараметрыВакансииВСообщении(ТекстыСообщений, ДанныеКандидата.Получить("Вакансия"))
        ТекстыСообщений = РассматриваемыеКандидаты.ЗаполнитьПараметрыРассматриваемогоКандидатаВСообщении(ТекстыСообщений, Собеседование.Кандидат)
        ТекстыСообщений = Собеседования.ЗаполнитьПараметрыСобеседованияВСообщении(ТекстыСообщений, Собеседование.Ссылка)
        ТекстыСообщений = ОписаниеРаботодателя.ЗаполнитьОписаниеРаботодателяВСообщении(ТекстыСообщений)
        пер ТекстыУведомлений = новый УведомленияСервер.ТекстыСообщений(
            ТекстыСообщений[ПодборПерсонала.ПРИГЛАШЕНИЕ_НА_СОБЕСЕДОВАНИЕ_ТЕМА],
            ТекстыСообщений[ПодборПерсонала.ПРИГЛАШЕНИЕ_НА_СОБЕСЕДОВАНИЕ_SMS],
            ТекстыСообщений[ПодборПерсонала.ПРИГЛАШЕНИЕ_НА_СОБЕСЕДОВАНИЕ_PUSH],
            ТекстыСообщений[ПодборПерсонала.ПРИГЛАШЕНИЕ_НА_СОБЕСЕДОВАНИЕ_EMAIL])
        пер ДанныеУведомления = новый УведомленияСервер.ДанныеУведомления(Уведомления.ВидыУведомлений.ПерсональнаяИнформация, Получатель)
        УведомленияСервер.ЗапланироватьУведомление(Получатель, ТекстыУведомлений, ДанныеУведомления)
    ;
;
// Конец УведомленияПодбораПерсонала

//Контракт УведомленияАдаптацииПерсонала

@ВПроекте
@Реализация
метод ПослеЗаписиСтатусаПроцессаАдаптации(НаборЗаписей: СтатусыПроцессовАдаптации.НаборЗаписей, Замещать: Булево, ПараметрыЗаписи: СтатусыПроцессовАдаптации.ПараметрыЗаписи)
    
    знч ПроцессАдаптации: ПроцессыАдаптации.Ссылка? = НаборЗаписей.Фильтр.ПроцессАдаптации.Значение
    знч ЗаписьНабора: СтатусыПроцессовАдаптации.Запись? = НаборЗаписей.ЕдинственныйИлиУмолчание()
    если ПроцессАдаптации == Неопределено или ЗаписьНабора == Неопределено
        возврат
    ;
    если ЗаписьНабора.Статус == ПараметрыЗаписи.ПредыдущийСтатус
        возврат
    ;
    
    знч ДанныеПроцессаАдаптации = МенеджерСущности.ЗначенияРеквизитовОбъекта(ПроцессАдаптации, ["Сотрудник", "Руководитель"])
    
    пер ИменаРесурсов = [
        АдаптацияПерсонала.ИЗМЕНЕН_СТАТУС_ПРОЦЕССА_АДАПТАЦИИ_SMS,
        АдаптацияПерсонала.ИЗМЕНЕН_СТАТУС_ПРОЦЕССА_АДАПТАЦИИ_PUSH,
        АдаптацияПерсонала.ИЗМЕНЕН_СТАТУС_ПРОЦЕССА_АДАПТАЦИИ_EMAIL,
        АдаптацияПерсонала.ИЗМЕНЕН_СТАТУС_ПРОЦЕССА_АДАПТАЦИИ_ТЕМА]
    пер ЗначенияРесурсов = УниверсальныеМеханизмы.ЗначенияРесурсовПодсистемы(АдаптацияПерсонала.ИД_РАЗДЕЛА_АДАПТАЦИЯ_ПЕРСОНАЛА, ИменаРесурсов)
    
    знч Получатель: ФизическиеЛица.Ссылка? = ДанныеПроцессаАдаптации.Получить("Руководитель") как ФизическиеЛица.Ссылка?
    если Получатель == Неопределено
        возврат
    ;
    
    пер ТекстыСообщений = ФизЛица.ЗаполнитьПараметрыПолучателяВСообщении(ЗначенияРесурсов, Получатель)       
    ТекстыСообщений = ПроцессыАдаптации.ЗаполнитьПараметрыПроцессаАдаптацииВСообщении(ТекстыСообщений, ПроцессАдаптации)
    ТекстыСообщений = ФизЛица.ЗаполнитьПолноеИмяФизическогоЛицаВСообщении(ТекстыСообщений, ДанныеПроцессаАдаптации.Получить("Сотрудник"), "\%КМПолноеИмяСотрудника\%")       
    ТекстыСообщений = ОписаниеРаботодателя.ЗаполнитьОписаниеРаботодателяВСообщении(ТекстыСообщений)
    пер ТекстыУведомлений = новый УведомленияСервер.ТекстыСообщений(
        ТекстыСообщений[АдаптацияПерсонала.ИЗМЕНЕН_СТАТУС_ПРОЦЕССА_АДАПТАЦИИ_ТЕМА],
        ТекстыСообщений[АдаптацияПерсонала.ИЗМЕНЕН_СТАТУС_ПРОЦЕССА_АДАПТАЦИИ_SMS],
        ТекстыСообщений[АдаптацияПерсонала.ИЗМЕНЕН_СТАТУС_ПРОЦЕССА_АДАПТАЦИИ_PUSH],
        ТекстыСообщений[АдаптацияПерсонала.ИЗМЕНЕН_СТАТУС_ПРОЦЕССА_АДАПТАЦИИ_EMAIL])
    пер ДанныеУведомления = новый УведомленияСервер.ДанныеУведомления(Уведомления.ВидыУведомлений.ПерсональнаяИнформация, Получатель)
    УведомленияСервер.ОтправитьУведомление(Получатель, ТекстыУведомлений, ДанныеУведомления)
    
;

//Конец УведомленияАдаптацииПерсонала

//Контракт УведомленияАнкетирования

@ВПроекте
@Реализация
метод ПослеЗаписиАнкеты(Анкета: Анкеты.Объект, До: Анкеты.Данные, ПараметрыЗаписи: Анкеты.ПараметрыЗаписи)
    
    если Анкета.Статус == До.Статус и не Анкета.ЭтоНовый()
        возврат
    ;
    
    выбор Анкета.Статус
    когда Отправлена
    
        пер ИменаРесурсов = [
            Анкетирование.ОТПРАВКА_АНКЕТЫ_РЕСПОНДЕНТУ_SMS,
            Анкетирование.ОТПРАВКА_АНКЕТЫ_РЕСПОНДЕНТУ_PUSH,
            Анкетирование.ОТПРАВКА_АНКЕТЫ_РЕСПОНДЕНТУ_EMAIL,
            Анкетирование.ОТПРАВКА_АНКЕТЫ_РЕСПОНДЕНТУ_ТЕМА]
        пер ЗначенияРесурсов = УниверсальныеМеханизмы.ЗначенияРесурсовПодсистемы(Анкетирование.ИД_РАЗДЕЛА_АНКЕТИРОВАНИЕ, ИменаРесурсов)
        
        знч Получатель: ФизическиеЛица.Ссылка? = Анкета.Респондент как ФизическиеЛица.Ссылка?
        если Получатель == Неопределено
            возврат
        ;
        пер ТекстыСообщений = ФизЛица.ЗаполнитьПараметрыПолучателяВСообщении(ЗначенияРесурсов, Получатель)       
        ТекстыСообщений = Анкеты.ЗаполнитьПараметрыАнкетыВСообщении(ТекстыСообщений, Анкета.Ссылка)
        ТекстыСообщений = ОписаниеРаботодателя.ЗаполнитьОписаниеРаботодателяВСообщении(ТекстыСообщений)
        пер ТекстыУведомлений = новый УведомленияСервер.ТекстыСообщений(
            ТекстыСообщений[Анкетирование.ОТПРАВКА_АНКЕТЫ_РЕСПОНДЕНТУ_ТЕМА],
            ТекстыСообщений[Анкетирование.ОТПРАВКА_АНКЕТЫ_РЕСПОНДЕНТУ_SMS],
            ТекстыСообщений[Анкетирование.ОТПРАВКА_АНКЕТЫ_РЕСПОНДЕНТУ_PUSH],
            ТекстыСообщений[Анкетирование.ОТПРАВКА_АНКЕТЫ_РЕСПОНДЕНТУ_EMAIL])
        пер ДанныеУведомления = новый УведомленияСервер.ДанныеУведомления(Уведомления.ВидыУведомлений.ПерсональнаяИнформация, Получатель)
        УведомленияСервер.ОтправитьУведомление(Получатель, ТекстыУведомлений, ДанныеУведомления)
    ;
;

@ВПроекте
@Реализация
метод ПослеЗаписиОпроса(Опрос: Опросы.Объект, До: Опросы.Данные, ПараметрыЗаписи: Опросы.ПараметрыЗаписи)
    
    если Опрос.Статус == До.Статус
        возврат
    ;
    
    выбор Опрос.Статус
    когда Запущен
        пер ИменаРесурсов = [
            Анкетирование.ОТПРАВКА_ОПРОСА_РЕСПОНДЕНТУ_SMS,
            Анкетирование.ОТПРАВКА_ОПРОСА_РЕСПОНДЕНТУ_PUSH,
            Анкетирование.ОТПРАВКА_ОПРОСА_РЕСПОНДЕНТУ_EMAIL,
            Анкетирование.ОТПРАВКА_ОПРОСА_РЕСПОНДЕНТУ_ТЕМА]
        пер ЗначенияРесурсов = УниверсальныеМеханизмы.ЗначенияРесурсовПодсистемы(Анкетирование.ИД_РАЗДЕЛА_АНКЕТИРОВАНИЕ, ИменаРесурсов)
        
        для Участник из Опрос.Участники
            знч Получатель: ФизическиеЛица.Ссылка? = Участник как ФизическиеЛица.Ссылка?
            если Получатель == Неопределено
                продолжить
            ;
            пер ТекстыСообщений = ФизЛица.ЗаполнитьПараметрыПолучателяВСообщении(ЗначенияРесурсов, Получатель)       
            ТекстыСообщений = Опросы.ЗаполнитьПараметрыОпросаВСообщении(ТекстыСообщений, Опрос.Ссылка)
            ТекстыСообщений = ОписаниеРаботодателя.ЗаполнитьОписаниеРаботодателяВСообщении(ТекстыСообщений)
            пер ТекстыУведомлений = новый УведомленияСервер.ТекстыСообщений(
                ТекстыСообщений[Анкетирование.ОТПРАВКА_ОПРОСА_РЕСПОНДЕНТУ_ТЕМА],
                ТекстыСообщений[Анкетирование.ОТПРАВКА_ОПРОСА_РЕСПОНДЕНТУ_SMS],
                ТекстыСообщений[Анкетирование.ОТПРАВКА_ОПРОСА_РЕСПОНДЕНТУ_PUSH],
                ТекстыСообщений[Анкетирование.ОТПРАВКА_ОПРОСА_РЕСПОНДЕНТУ_EMAIL])
            пер ДанныеУведомления = новый УведомленияСервер.ДанныеУведомления(Уведомления.ВидыУведомлений.ПерсональнаяИнформация, Получатель)
            УведомленияСервер.ОтправитьУведомление(Получатель, ТекстыУведомлений, ДанныеУведомления)
        ;
    ;
;

@ВПроекте
@Реализация
метод ОтправкаАнкетыРеспонденту(Анкета: Анкеты.Ссылка, Респондент: РеспондентАнкетирования.Ссылка?)
    
;
//Конец УведомленияАнкетирования

//Контракт УведомленияТестирования

@ВПроекте
@Реализация
метод ПослеЗаписиРезультатовТестирования(Результат: РезультатыТестирования.Объект, До: РезультатыТестирования.Данные, ПараметрыЗаписи: РезультатыТестирования.ПараметрыЗаписи)
    
    если Результат.Статус == До.Статус
        возврат
    ;
    
    выбор Результат.Статус
    когда НеНачато
    
        пер ИменаРесурсов = [
            Тестирование.ОТПРАВКА_ТЕСТА_РЕСПОНДЕНТУ_SMS,
            Тестирование.ОТПРАВКА_ТЕСТА_РЕСПОНДЕНТУ_PUSH,
            Тестирование.ОТПРАВКА_ТЕСТА_РЕСПОНДЕНТУ_EMAIL,
            Тестирование.ОТПРАВКА_ТЕСТА_РЕСПОНДЕНТУ_ТЕМА]
        пер ЗначенияРесурсов = УниверсальныеМеханизмы.ЗначенияРесурсовПодсистемы(Тестирование.ИД_РАЗДЕЛА_ТЕСТИРОВАНИЕ, ИменаРесурсов)
        
        знч ДанныеАнкеты = МенеджерСущности.ЗначенияРеквизитовОбъекта(Результат.Анкета, ["Респондент"])
        знч Получатель: ФизическиеЛица.Ссылка? = ДанныеАнкеты.Получить("Респондент") как ФизическиеЛица.Ссылка?
        если Получатель == Неопределено
            возврат
        ;
        пер ТекстыСообщений = ФизЛица.ЗаполнитьПараметрыПолучателяВСообщении(ЗначенияРесурсов, Получатель)       
        ТекстыСообщений = РезультатыТестирования.ЗаполнитьПараметрыРезультатаТестированияВСообщении(ТекстыСообщений, Результат.Ссылка)
        ТекстыСообщений = ОписаниеРаботодателя.ЗаполнитьОписаниеРаботодателяВСообщении(ТекстыСообщений)
        пер ТекстыУведомлений = новый УведомленияСервер.ТекстыСообщений(
            ТекстыСообщений[Тестирование.ОТПРАВКА_ТЕСТА_РЕСПОНДЕНТУ_ТЕМА],
            ТекстыСообщений[Тестирование.ОТПРАВКА_ТЕСТА_РЕСПОНДЕНТУ_SMS],
            ТекстыСообщений[Тестирование.ОТПРАВКА_ТЕСТА_РЕСПОНДЕНТУ_PUSH],
            ТекстыСообщений[Тестирование.ОТПРАВКА_ТЕСТА_РЕСПОНДЕНТУ_EMAIL])
        пер ДанныеУведомления = новый УведомленияСервер.ДанныеУведомления(Уведомления.ВидыУведомлений.ПерсональнаяИнформация, Получатель)
        УведомленияСервер.ОтправитьУведомление(Получатель, ТекстыУведомлений, ДанныеУведомления)
    ;
;

//Конец УведомленияТестирования

//Контракт УведомленияОценкиПерсонала

@ВПроекте
@Реализация
метод ПослеЗаписиЭкземпляраОценкиПерсоналаПоМетоду360(ЭкземплярОценки: ЭкземплярыОценкиПерсоналаПоМетоду360.Объект, До: ЭкземплярыОценкиПерсоналаПоМетоду360.Данные, ПараметрыЗаписи: ЭкземплярыОценкиПерсоналаПоМетоду360.ПараметрыЗаписи)
    
    если ЭкземплярОценки.Статус == До.Статус
        возврат
    ;
    
    выбор ЭкземплярОценки.Статус
    когда Запущена
    
        пер ИменаРесурсов = [
            ОценкаПерсонала.НАЧАЛО_ОЦЕНКИ_СОТРУДНИКА_SMS,
            ОценкаПерсонала.НАЧАЛО_ОЦЕНКИ_СОТРУДНИКА_PUSH,
            ОценкаПерсонала.НАЧАЛО_ОЦЕНКИ_СОТРУДНИКА_EMAIL,
            ОценкаПерсонала.НАЧАЛО_ОЦЕНКИ_СОТРУДНИКА_ТЕМА]
        пер ЗначенияРесурсов = УниверсальныеМеханизмы.ЗначенияРесурсовПодсистемы(ОценкаПерсонала.ИД_РАЗДЕЛА_ОЦЕНКА_ПЕРСОНАЛА, ИменаРесурсов)
        
        знч Получатель: ФизическиеЛица.Ссылка? = ЭкземплярОценки.Оценивающий
        если Получатель == Неопределено
            возврат
        ;
        пер ТекстыСообщений = ФизЛица.ЗаполнитьПараметрыПолучателяВСообщении(ЗначенияРесурсов, Получатель)       
        ТекстыСообщений = ФизЛица.ЗаполнитьПолноеИмяФизическогоЛицаВСообщении(ТекстыСообщений, ЭкземплярОценки.Оцениваемый, "\%КМПолноеИмяСотрудника\%")       
        ТекстыСообщений = ОписаниеРаботодателя.ЗаполнитьОписаниеРаботодателяВСообщении(ТекстыСообщений)
        пер ТекстыУведомлений = новый УведомленияСервер.ТекстыСообщений(
            ТекстыСообщений[ОценкаПерсонала.НАЧАЛО_ОЦЕНКИ_СОТРУДНИКА_ТЕМА],
            ТекстыСообщений[ОценкаПерсонала.НАЧАЛО_ОЦЕНКИ_СОТРУДНИКА_SMS],
            ТекстыСообщений[ОценкаПерсонала.НАЧАЛО_ОЦЕНКИ_СОТРУДНИКА_PUSH],
            ТекстыСообщений[ОценкаПерсонала.НАЧАЛО_ОЦЕНКИ_СОТРУДНИКА_EMAIL])
        пер ДанныеУведомления = новый УведомленияСервер.ДанныеУведомления(Уведомления.ВидыУведомлений.ПерсональнаяИнформация, Получатель)
        УведомленияСервер.ОтправитьУведомление(Получатель, ТекстыУведомлений, ДанныеУведомления)
    ;
;

//Конец УведомленияОценкиПерсонала

// Контракт ФизическиеЛицаОбработчикСобытий
@ВПроекте
@Реализация
метод ПередУдалениемФизлица(ФизическоеЛицо: ФизическиеЛица.Ссылка)
;

@ВПроекте
@Реализация
метод ПослеЗаписиФизлицПриЗагрузке(Физлица: ЧитаемыйМассив<ФизическиеЛица.Ссылка>)
    знч НастройкиУведомленийФизическихЛиц = Уведомления.НастройкиУведомленийФизическихЛиц(Физлица)
    для ФизическоеЛицо из Физлица
        если НастройкиУведомленийФизическихЛиц.СодержитКлюч(ФизическоеЛицо)
            продолжить
        ;
        Уведомления.УстановитьПредпочтительныйСпособУведомления(ФизическоеЛицо, СпособыУведомления.Push)
    ;
;

@ВПроекте
@Реализация
метод ПослеДеактивацииФизлица(Физлица: Массив<ФизическиеЛица.Ссылка>)
;

@ВПроекте
@Реализация
метод ПослеЗаписиГруппыОбъектов(ФизическоеЛицо: ФизическиеЛица.Ссылка, Отправитель: ВходящиеДанные.Ссылка)
;

// Конец ФизическиеЛицаОбработчикСобытий

// Контракт ВторичныеДанные

@ВПроекте
@Реализация
метод Пересчитать()
    ЗапланированныеУведомления.ЗапланироватьУведомленияОПросроченныхМероприятиях() 
;

// Конец ВторичныеДанные