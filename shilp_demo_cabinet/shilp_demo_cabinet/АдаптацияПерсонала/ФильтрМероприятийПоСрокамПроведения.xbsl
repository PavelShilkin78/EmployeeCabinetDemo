конст ПровестиНеРанееИмя = "ПровестиНеРанее"
конст ПровестиНеПозднееИмя = "ПровестиНеПозднее"

@ВПодсистеме
@НаСервере @НаКлиенте
перечисление ВариантыФильтра
    ЗаВсеВремя умолчание,
    Прошедшие,
    НаПрошлойНеделе,
    Сегодня,
    Завтра,
    НаТекущейНеделе,
    НаСледующейНеделе,
    Предстоящие
;

@ВПодсистеме
метод ЭлементФильтра(): ЭлементФильтра|ГруппаЭлементовФильтра
    выбор Значение
    когда ЗаВсеВремя
        возврат ФильтрЗаВсеВремя()
    когда Прошедшие
        возврат ФильтрПрошедшие()
    когда НаПрошлойНеделе
        возврат ФильтрНаПрошлойНеделе()
    когда Сегодня
        возврат ФильтрСегодня()
    когда Завтра
        возврат ФильтрЗавтра()
    когда НаТекущейНеделе
        возврат ФильтрНаТекущейНеделе()
    когда НаСледующейНеделе
        возврат ФильтрНаСледующейНеделе()
    когда Предстоящие
        возврат ФильтрПредстоящие()
    ;
;

метод Команды(): ГруппаКомандногоИнтерфейса<Команда>?
    знч Группа = новый ГруппаКомандногоИнтерфейса<Команда>("")
    для ВариантФильтра из ВариантыФильтра.Элементы()
        знч Команда = новый ОбычнаяКоманда(
            Обработчик = Команда -> УстановитьВариантФильтра(ВариантФильтра),
            Представление = ВариантФильтра.Представление()
        )
        Группа.Элементы.Добавить(Команда)
    ;
    возврат Группа
;

метод УстановитьВариантФильтра(НовыйВариантФильтра: ВариантыФильтра)
    Значение = НовыйВариантФильтра
    ПриИзменении(новый СобытиеКомпонента())
;

метод ФильтрЗаВсеВремя(): ГруппаЭлементовФильтра
    возврат новый ГруппаЭлементовФильтра(
        Использовать = Ложь
    )
;

метод ФильтрПрошедшие(): ЭлементФильтра
    возврат новый ЭлементФильтра(
        Поле = ПровестиНеПозднееИмя,
        ВидСравнения = ВидСравнения.Меньше,
        Значение = Дата.Сейчас()
    )
;

метод ФильтрНаПрошлойНеделе(): ГруппаЭлементовФильтра
    возврат ФильтрКонкретнаяНеделя(Дата.Сейчас() - 7д)
;

метод ФильтрСегодня(): ГруппаЭлементовФильтра
    возврат ФильтрКонкретныйДень(Дата.Сейчас())
;

метод ФильтрЗавтра(): ГруппаЭлементовФильтра
    возврат ФильтрКонкретныйДень(Дата.Сейчас() + 1д)
;

метод ФильтрНаТекущейНеделе(): ГруппаЭлементовФильтра
    возврат ФильтрКонкретнаяНеделя(Дата.Сейчас())
;

метод ФильтрНаСледующейНеделе(): ГруппаЭлементовФильтра
    возврат ФильтрКонкретнаяНеделя(Дата.Сейчас() + 7д)
;

метод ФильтрПредстоящие(): ЭлементФильтра
    возврат новый ЭлементФильтра(
        Поле = ПровестиНеРанееИмя,
        ВидСравнения = ВидСравнения.Больше,
        Значение = Дата.Сейчас()
    )
;

метод ФильтрКонкретныйДень(День: Дата): ГруппаЭлементовФильтра
    возврат ФильтрПоПериоду(День, День)
;

метод ФильтрКонкретнаяНеделя(ЛюбойДеньНедели: Дата): ГруппаЭлементовФильтра
    знч НачалоНедели = ЛюбойДеньНедели.СДнемНедели(ДеньНедели.Понедельник)
    знч КонецНедели = ЛюбойДеньНедели.СДнемНедели(ДеньНедели.Воскресенье)
    возврат ФильтрПоПериоду(НачалоНедели, КонецНедели)
;

метод ФильтрПоПериоду(ДатаНачала: Дата, ДатаОкончания: Дата): ГруппаЭлементовФильтра
    знч Группа = новый ГруппаЭлементовФильтра()
    Группа.Элементы.Добавить(новый ЭлементФильтра(
        Поле = ПровестиНеРанееИмя,
        ВидСравнения = ВидСравнения.МеньшеИлиРавно,
        Значение = ДатаОкончания
    ))
    Группа.Элементы.Добавить(новый ЭлементФильтра(
        Поле = ПровестиНеПозднееИмя,
        ВидСравнения = ВидСравнения.БольшеИлиРавно,
        Значение = ДатаНачала
    ))
    возврат Группа
;