импорт КонтрольДоступа

//КонтрольДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): ЧитаемаяКоллекция<РазрешениеДоступа>
    возврат [КонтрольДоступа.ЧтениеАутентифицированным(этот),
            КонтрольДоступа.ПолныйДоступИнформационнойСистеме(этот)]
;

//КонтрольДоступа

@ВПроекте
@НаСервере @ДоступноСКлиента
метод Записать(ПроцессАдаптации: ПроцессыАдаптации.Ссылка, Статус: СтатусыПроцессаАдаптации)
    знч Запись = новый СтатусыПроцессовАдаптации.Запись()
    Запись.ПроцессАдаптации = ПроцессАдаптации
    Запись.Статус = Статус
    Запись.Дата = Дата.Сейчас()
    Записать(Запись)
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод Прочитать(ПроцессАдаптации: ПроцессыАдаптации.Ссылка): СтатусыПроцессаАдаптации?
    знч Запрос = Запрос{
        Выбрать
            Статус
        Из
            СтатусыПроцессовАдаптации
        Где
            ПроцессАдаптации == %ПроцессАдаптации
    }
    возврат Запрос.Выполнить().ЕдинственныйИлиУмолчание()?.Статус
;

@ВПроекте
@НаКлиенте
метод Установить(ПроцессАдаптации: ПроцессыАдаптации.Ссылка, Статус: СтатусыПроцессаАдаптации)
    ЗаписатьСКонтролем(ПроцессАдаптации, Статус)
    СтатусПроцессаАдаптацииПослеЗаписи.Оповестить(ПроцессАдаптации)
;

@НаСервере @ДоступноСКлиента
метод ЗаписатьСКонтролем(ПроцессАдаптации: ПроцессыАдаптации.Ссылка, Статус: СтатусыПроцессаАдаптации)
    ПроверитьВозможностьИзмененияСтатуса(ПроцессАдаптации)
    исп КонтекстДоступа.Привилегированный()
    Записать(ПроцессАдаптации, Статус)
;

метод ПроверитьВозможностьИзмененияСтатуса(ПроцессАдаптации: ПроцессыАдаптации.Ссылка)
    если не АдаптацияПерсонала.ЕстьПравоРедактироватьСтатусПроцессаАдаптации(ПроцессАдаптации)
        выбросить новый ИсключениеВыполнения("Нет права на редактирования статуса процесса адаптации")
    ;
;