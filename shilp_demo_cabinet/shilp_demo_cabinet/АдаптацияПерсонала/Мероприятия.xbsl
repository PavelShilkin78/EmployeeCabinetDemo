импорт ФизическиеЛица
импорт Компания
импорт ОбщиеСтандартные

@ВПроекте
@НаКлиенте @НаСервере
структура ОсновныеДанные
    обз знч Наименование: Строка
    обз знч ПроцессАдаптации: ПроцессыАдаптации.Ссылка
    обз знч ПровестиНеРанее: Дата
    обз знч ПровестиНеПозднее: Дата
    обз знч Ответственный: ФизическиеЛица.Ссылка
    обз знч Участники: Массив<УчастникМероприятия>
    обз знч Внеплановое: Булево
;

//КонтрольДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): ЧитаемаяКоллекция<РазрешениеДоступа>
    возврат АдаптацияПерсоналаКонтрольДоступаПоставщик.ПолучитьСервис().ВычислитьРазрешенияДоступаДляМероприятий()
;

@Обработчик
метод ВычислитьРазрешенияДоступаДляОбъектов(Объекты: ЧитаемыйМассив<Мероприятия.ДанныеРасчетаРазрешений>): ЧитаемоеСоответствие<Мероприятия.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    возврат АдаптацияПерсоналаКонтрольДоступаПоставщик.ПолучитьСервис().ВычислитьРазрешенияДоступаДляМероприятий(Объекты)
;

//КонтрольДоступа

@ВПроекте
@НаСервере @ДоступноСКлиента
метод Прочитать(Мероприятие: Мероприятия.Ссылка): ОсновныеДанные
    возврат Прочитать([Мероприятие])[Мероприятие]
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод Прочитать(Мероприятия: ЧитаемаяКоллекция<Мероприятия.Ссылка>): Соответствие<Мероприятия.Ссылка, ОсновныеДанные>
    если Мероприятия.Пусто()
        возврат {:}
    ;
    знч УчастникиМероприятий = УчастникиМероприятий(Мероприятия)
    знч Запрос = Запрос{
        Выбрать
            Ссылка,
            Наименование,
            ПроцессАдаптации,
            ПровестиНеРанее,
            ПровестиНеПозднее,
            Ответственный,
            Внеплановое
        Из
            Мероприятия
        Где
            Ссылка В (%Мероприятия)
    }
    знч Результат: Соответствие<Мероприятия.Ссылка, ОсновныеДанные>
    знч РезультатЗапроса = Запрос.Выполнить()
    для СтрокаРезультата из РезультатЗапроса
        знч Данные = новый ОсновныеДанные(
            СтрокаРезультата.Наименование,
            СтрокаРезультата.ПроцессАдаптации,
            СтрокаРезультата.ПровестиНеРанее,
            СтрокаРезультата.ПровестиНеПозднее,
            СтрокаРезультата.Ответственный,
            УчастникиМероприятий[СтрокаРезультата.Ссылка],
            СтрокаРезультата.Внеплановое
        )
        Результат.Вставить(СтрокаРезультата.Ссылка, Данные)
    ;
    возврат Результат
;

@ВПроекте
@НаСервере
метод ЗагрузитьОбъекты(Ссылки: Обходимое<Мероприятия.Ссылка>): Массив<Мероприятия.Объект>  
    знч Объекты: Массив<Мероприятия.Объект>
    для Ссылка из Ссылки
        Объекты.Добавить(Ссылка.ЗагрузитьОбъект())
    ;
    возврат Объекты   
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ПолучитьВсе(ПроцессАдаптации: ПроцессыАдаптации.Ссылка): Множество<Мероприятия.Ссылка>
    знч Мероприятия: Множество<Мероприятия.Ссылка>
    знч Запрос = Запрос{
        Выбрать
            Ссылка Как Мероприятие
        Из
            Мероприятия Как Мероприятия
        Где
            Мероприятия.ПроцессАдаптации == %ПроцессАдаптации
    }
    знч Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        Мероприятия.Добавить(СтрокаРезультата.Мероприятие)
    ;
    возврат Мероприятия
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ПолучитьВсеПлановые(ПроцессАдаптации: ПроцессыАдаптации.Ссылка): Множество<Мероприятия.Ссылка>
    знч Мероприятия: Множество<Мероприятия.Ссылка>
    знч Запрос = Запрос{
        Выбрать
            Ссылка Как Мероприятие
        Из
            Мероприятия Как Мероприятия
        Где
            Мероприятия.ПроцессАдаптации == %ПроцессАдаптации
            И Не Мероприятия.Внеплановое
    }
    знч Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        Мероприятия.Добавить(СтрокаРезультата.Мероприятие)
    ;
    возврат Мероприятия
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ПолучитьПоСтатусу(ПроцессАдаптации: ПроцессыАдаптации.Ссылка, Статусы: Обходимое<СтатусыМероприятия>): Множество<Мероприятия.Ссылка>
    знч Мероприятия: Множество<Мероприятия.Ссылка>
    знч Запрос = Запрос{
        Выбрать
            Мероприятие
        Из
            Мероприятия Как Мероприятия
            Соединение СтатусыМероприятий.СрезПоследних Как СтатусыМероприятий
                По Мероприятия.Ссылка == СтатусыМероприятий.Мероприятие
                    И СтатусыМероприятий.Статус В (%Статусы)
        Где
            Мероприятия.ПроцессАдаптации == %ПроцессАдаптации
    }
    знч Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        Мероприятия.Добавить(СтрокаРезультата.Мероприятие)
    ;
    возврат Мероприятия
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ПолучитьПоСтатусу(ПроцессАдаптации: ПроцессыАдаптации.Ссылка, Статус: СтатусыМероприятия): Множество<Мероприятия.Ссылка>
    возврат ПолучитьПоСтатусу(ПроцессАдаптации, [Статус])
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ЕстьЗаписи(ПроцессАдаптации: ПроцессыАдаптации.Ссылка): Булево
    знч Запрос = Запрос{
        Выбрать Первые 1
            Ссылка
        Из
            Мероприятия
        Где
            ПроцессАдаптации == %ПроцессАдаптации
    }
    исп РезультатЗапроса = Запрос.Выполнить()
    возврат не РезультатЗапроса.Пусто()
;

@ВПроекте
@НаСервере @НаКлиенте
метод СтатусНового(СтатусПроцессаАдаптации: СтатусыПроцессаАдаптации): СтатусыМероприятия
    возврат СтатусПроцессаАдаптации == СтатусыПроцессаАдаптации.Черновик ? СтатусыМероприятия.Черновик : СтатусыМероприятия.Запланировано
;

@ВПроекте
@НаКлиенте
метод ОткрытьМодальноФормуНового(ПроцессАдаптации: ПроцессыАдаптации.Ссылка)
    знч Статус = СтатусНового(ПроцессАдаптации)
    МероприятиеКарточка.ОткрытьВМодальномОкне(ПроцессАдаптацииНового = ПроцессАдаптации, Статус = Статус)
;

@ВПроекте
@НаКлиенте
метод ОткрытьМодальноФормуКопии(КопируемоеМероприятие: Мероприятия.Ссылка)
    знч Статус = СтатусНового(КопируемоеМероприятие)
    МероприятиеКарточка.ОткрытьВМодальномОкне(КопируемоеМероприятие = КопируемоеМероприятие, Статус = Статус)
;

@ВПроекте
@НаКлиенте
метод ОткрытьМодальноФорму(Мероприятие: Мероприятия.Ссылка)
    знч ФормаОбъекта = новый МероприятиеКарточка()
    ФормаОбъекта.Прочитать(Мероприятие)
    ФормаОбъекта.ОткрытьВМодальномОкне()
;

@ВПодсистеме
метод УдалитьВсе(ПроцессАдаптации: ПроцессыАдаптации.Ссылка)
    ПолучитьВсе(ПроцессАдаптации)
        .ДляКаждого(Мероприятие -> Мероприятие.ЗагрузитьОбъект(Истина)?.Удалить())
;

@ВПодсистеме
@НаСервере @НаКлиенте
метод ПредставлениеСроковПроведения(ПровестиНеРанее: Дата, ПровестиНеПозднее: Дата): Строка
    если ПровестиНеРанее == ПровестиНеПозднее
        возврат "$ПровестиНеРанее"
    иначе
        возврат "$ПровестиНеРанее - $ПровестиНеПозднее"
    ;
;

@ВПодсистеме
@НаКлиенте
метод УдалитьСКонтролем(Мероприятие: Мероприятия.Ссылка): Булево
    пер Удалено = Ложь
    знч Ответ = Диалог.Вопрос(
                    "Вы действительно хотите безвозвратно удалить мероприятие?", 
                    [КнопкаДиалога.Да, КнопкаДиалога.Нет, КнопкаДиалога.Отмена], 
                    "Удаление", Ресурс{МусорнаяКорзинаКонтур.svg}.Ссылка)     
    знч УдалениеПодтверждено = (Ответ == КнопкаДиалога.Да)
    если УдалениеПодтверждено
        знч Предупреждение = Удалить(Мероприятие)
        Удалено = (Предупреждение == Неопределено)
        если Удалено
            МероприятиеПослеУдаления.Оповестить(Мероприятие)
        иначе
            Предупреждение!.Показать()    
        ;
    ;    
    возврат Удалено 
;

@НаСервере @ДоступноСКлиента
метод Удалить(Мероприятие: Мероприятия.Ссылка): ПредупреждениеПользователя?
    если не АдаптацияПерсонала.ЕстьПравоУдалитьМероприятие(Мероприятие)
        возврат ПредупреждениеПользователя.ОтсутствиеПрав("Отсутствуют права для удаления мероприятия. Мероприятие не удалено")
    ;
    исп ГрупповаяОперация.Начать(Транзакция = Истина, ПривилегированныйРежим = Истина)
    знч МероприятиеОбъект = Мероприятие.ЗагрузитьОбъект(Истина)
    знч Статус = СтатусыМероприятий.Прочитать(Мероприятие)
    если не АдаптацияПерсонала.МожноУдалитьМероприятие(Статус)
        возврат ПредупреждениеПользователя.НедопустимоеСостояние("Невозможно удалить мероприятие в статусе \"$Статус\". Мероприятие не удалено") 
    ;
    МероприятиеОбъект.Удалить()
    возврат Неопределено
;

@ВПроекте
@НаСервере
метод ВсеУчастники(Мероприятие: Мероприятия.Объект): Множество<ФизическиеЛица.Ссылка>
    знч ВсеУчастники: Множество<ФизическиеЛица.Ссылка>
    если Мероприятие.Ответственный != Неопределено
        ВсеУчастники.Добавить(Мероприятие.Ответственный!)
    ;
    для Участник из Мероприятие.Участники
        ВсеУчастники.Добавить(Участник.Участник)    
    ;
    возврат ВсеУчастники
;

@ВПроекте
@НаСервере
метод ВсеУчастники(Мероприятие: Мероприятия.Данные): Множество<ФизическиеЛица.Ссылка>
    знч ВсеУчастники: Множество<ФизическиеЛица.Ссылка>
    если Мероприятие.Ответственный != Неопределено
        ВсеУчастники.Добавить(Мероприятие.Ответственный!)
    ;
    для Участник из Мероприятие.Участники
        ВсеУчастники.Добавить(Участник.Участник)    
    ;
    возврат ВсеУчастники
;

@ВПроекте
@НаСервере
метод ВсеУчастники(Мероприятие: Мероприятия.Ссылка): Множество<ФизическиеЛица.Ссылка>
    знч МероприятиеОбъект = Мероприятие.ЗагрузитьОбъект()
    если МероприятиеОбъект == Неопределено
        возврат новый Множество<ФизическиеЛица.Ссылка>()
    ;
    
	возврат ВсеУчастники(МероприятиеОбъект)
;

метод УчастникиМероприятий(Мероприятия: ЧитаемаяКоллекция<Мероприятия.Ссылка>): Соответствие<Мероприятия.Ссылка, Массив<УчастникМероприятия>>
    знч Результат = новый Соответствие<Мероприятия.Ссылка, Массив<УчастникМероприятия>>()
    если Мероприятия.Пусто()
        возврат Результат
    ;
    для Мероприятие из Мероприятия
        Результат.Вставить(Мероприятие, [])
    ;
    знч Запрос = Запрос{
        Выбрать
            Владелец Как Мероприятие,
            Элемент Как УчастникМероприятия
        Из
            Мероприятия.Участники
        Где
            Владелец В(%Мероприятия)
        Упорядочить По
            Мероприятие,
            Индекс Возр
    }
    знч РезультатЗапроса = Запрос.Выполнить()
    для СтрокаРезультата из РезультатЗапроса
        Результат[СтрокаРезультата.Мероприятие].Добавить(СтрокаРезультата.УчастникМероприятия)
    ;
    возврат Результат
;

@ВПроекте
@НаСервере
метод ПодразделенияМероприятий(Мероприятия: ЧитаемаяКоллекция<Мероприятия.Ссылка>): ЧитаемоеСоответствие<Мероприятия.Ссылка, СтруктураПредприятия.Ссылка?>
    знч ПодразделенияМероприятий: Соответствие<Мероприятия.Ссылка, СтруктураПредприятия.Ссылка?>
    знч Запрос = Запрос{
        Выбрать
            Ссылка как Ссылка,
            ПроцессАдаптации.Подразделение.ЗаменитьNull(Неопределено) как Подразделение
        Из
            Мероприятия
        Где
            Ссылка в (%Мероприятия)
    }
    исп Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        ПодразделенияМероприятий.Вставить(СтрокаРезультата.Ссылка, СтрокаРезультата.Подразделение)
    ;

    возврат ПодразделенияМероприятий
;

@ВПроекте
@НаСервере
метод РуководителиМероприятий(Мероприятия: ЧитаемаяКоллекция<Мероприятия.Ссылка>): ЧитаемоеСоответствие<Мероприятия.Ссылка, ФизическиеЛица.Ссылка?>
    знч РуководителиМероприятий: Соответствие<Мероприятия.Ссылка, ФизическиеЛица.Ссылка?>
    знч Запрос = Запрос{
        Выбрать
            Ссылка как Ссылка,
            ПроцессАдаптации.Руководитель.ЗаменитьNull(Неопределено) как Руководитель
        Из
            Мероприятия
        Где
            Ссылка в (%Мероприятия)
    }
    исп Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        РуководителиМероприятий.Вставить(СтрокаРезультата.Ссылка, СтрокаРезультата.Руководитель)
    ;

    возврат РуководителиМероприятий
;

@НаСервере @ДоступноСКлиента
метод СтатусНового(КопируемоеМероприятие: Мероприятия.Ссылка): СтатусыМероприятия
    знч ПроцессАдаптации = КопируемоеМероприятие.ЗагрузитьОбъект()!.ПроцессАдаптации
    возврат СтатусНового(ПроцессАдаптации)
;

@НаСервере @ДоступноСКлиента
метод СтатусНового(ПроцессАдаптации: ПроцессыАдаптации.Ссылка): СтатусыМероприятия
    знч СтатусПроцессаАдаптации = СтатусыПроцессовАдаптации.Прочитать(ПроцессАдаптации)!
    возврат СтатусНового(СтатусПроцессаАдаптации)
;

@ВПроекте
метод ЗаполнитьПараметрыМероприятияВСообщении(ТекстыСообщений: Соответствие<Строка, Строка>, Мероприятие: Мероприятия.Ссылка): Соответствие<Строка, Строка>
    знч ДанныеМероприятия = МенеджерСущности.ЗначенияРеквизитовОбъекта(Мероприятие, ["Наименование"])
    пер Тексты: Соответствие<Строка, Строка>
    для КлючИЗначение из ТекстыСообщений
        пер Текст = КлючИЗначение.Значение.Заменить("\%КМНаименованиеМероприятия\%", ДанныеМероприятия.Получить("Наименование"))
        Тексты.Вставить(КлючИЗначение.Ключ, Текст)
    ;
    возврат Тексты
;