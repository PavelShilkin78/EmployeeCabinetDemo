импорт КонтрольДоступа
импорт ФизическиеЛица

//КонтрольДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): ЧитаемаяКоллекция<РазрешениеДоступа>
    возврат [КонтрольДоступа.ЧтениеАутентифицированным(этот)]
;

@Обработчик
метод ВычислитьРазрешенияДоступаДляОбъектов(Записи: ЧитаемыйМассив<УчастникиМероприятий.ДанныеРасчетаРазрешений>): ЧитаемоеСоответствие<УчастникиМероприятий.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    знч Разрешения: Соответствие<УчастникиМероприятий.ДанныеРасчетаРазрешений, Множество<РазрешениеДоступа>>
    для Запись из Записи
        знч РазрешенияЗаписи: Множество<РазрешениеДоступа>
        РазрешенияЗаписи.Добавить(КонтрольДоступа.ЧтениеИнформационнойСистеме(УчастникиМероприятий))
        РазрешенияЗаписи.ДобавитьВсе(КонтрольДоступа.ЧтениеДанныхСправочниковПерсонально([Запись.Участник]))
        РазрешенияЗаписи.ДобавитьВсе(КонтрольДоступа.ЧтениеДанныхРегистровПоПолномочиям(
            [АдаптацияПерсонала.ПолномочиеПросмотрИнформацииПоПроцессуАдаптации()], Неопределено))
        Разрешения.Вставить(Запись, РазрешенияЗаписи)
    ;
    возврат Разрешения
;

//КонтрольДоступа

@ВПодсистеме
@НаСервере
метод ЕстьЗапланированныеМероприятия(Участник: ФизическиеЛица.Ссылка): Булево
    знч Запрос = Запрос{
        Выбрать Первые 1
            УчастникиМероприятий.Мероприятие Как Мероприятие
        Из
            УчастникиМероприятий Как УчастникиМероприятий
            Соединение СтатусыМероприятий.СрезПоследних Как СтатусыМероприятий
                По УчастникиМероприятий.Мероприятие == СтатусыМероприятий.Мероприятие
        Где
            УчастникиМероприятий.Участник == %Участник
            И СтатусыМероприятий.Статус == %{СтатусыМероприятия.Запланировано}
    }
    возврат Запрос.Выполнить().ПервыйИлиУмолчание() != Неопределено
;

@НаСервере
@ВыполнятьПриЗагрузкеДанных
@Подписка(Событие{Мероприятия.Объект.ПослеЗаписи})
метод ПослеЗаписиМероприятия(Мероприятие: Мероприятия.Данные, До: Мероприятия.Данные, ПараметрыЗаписи: Мероприятия.ПараметрыЗаписи)
    исп КонтекстДоступа.Привилегированный()
    ОбновитьПослеЗаписиМероприятия(Мероприятие)
;

@НаСервере
метод ОбновитьПослеЗаписиМероприятия(Мероприятие: Мероприятия.Данные)
    знч УчастникиПоРолям = ПолучитьУчастниковПоРолям(Мероприятие)
    ЗаписатьНаборПоУчастникам(Мероприятие, УчастникиПоРолям)
;

@НаСервере
метод ПолучитьУчастниковПоРолям(Мероприятие: Мероприятия.Данные): Соответствие<ФизическиеЛица.Ссылка, РолиУчастниковМероприятия>
    знч УчастникиПоРолям: Соответствие<ФизическиеЛица.Ссылка, РолиУчастниковМероприятия>
    для УчастникМероприятия из Мероприятие.Участники
        УчастникиПоРолям.Вставить(УчастникМероприятия.Участник, РолиУчастниковМероприятия.Участник)
    ;
    УчастникиПоРолям.Вставить(Мероприятие.Ответственный, РолиУчастниковМероприятия.Ответственный)
    возврат УчастникиПоРолям
;

@НаСервере
метод ЗаписатьНаборПоУчастникам(Мероприятие: Мероприятия.Данные, УчастникиПоРолям: Соответствие<ФизическиеЛица.Ссылка, РолиУчастниковМероприятия>)
    знч НаборЗаписей = новый УчастникиМероприятий.НаборЗаписей()
    НаборЗаписей.Фильтр.Установить(Мероприятие = Мероприятие.Ссылка)
    для УчастникИРоль из УчастникиПоРолям
        НаборЗаписей.ДобавитьЗапись(
            Мероприятие = Мероприятие.Ссылка,
            Участник = УчастникИРоль.Ключ,
            Роль = УчастникИРоль.Значение,
            ПровестиНеРанее = Мероприятие.ПровестиНеРанее,
            ПровестиНеПозднее = Мероприятие.ПровестиНеПозднее)
    ;
    НаборЗаписей.Записать()
;