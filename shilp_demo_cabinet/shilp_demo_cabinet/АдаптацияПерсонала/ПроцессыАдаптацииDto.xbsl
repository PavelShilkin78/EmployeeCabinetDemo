импорт ВебApi
импорт Компания
импорт ФизическиеЛица

@ВПроекте
структура ПроцессАдаптации_2_0
    @JsonСвойство("ID")
    обз знч Ид: Строка
    @JsonСвойство("employerID")
    обз знч Сотрудник: Строка
    @JsonСвойство("headID")
    обз знч Руководитель: Строка
    @JsonСвойство("hrManagerID")
    обз знч HrМенеджер: Строка?
    @JsonСвойство("divisionID")
    обз знч Подразделение: Строка
    @JsonСвойство("positionID")
    обз знч Должность: Строка
    @JsonСвойство("eventDate")
    обз знч ДатаСобытия: Дата
    @JsonСвойство("plannedEndDate")
    обз знч ПлановаяДатаЗавершения: Дата?
    @JsonСвойство("status")
    обз знч Статус: СтатусыПроцессаАдаптации_2_0
    @JsonСвойство("statusDate")
    обз знч ДатаСтатуса: Дата
;

перечисление СтатусыПроцессаАдаптации_2_0
    draft,
    inProgress,
    completed,
    cancelled
;

@ВПодсистеме
метод ТипОбъектаJson(): Строка
    возврат "adaptationProcesses"
;

@ВПодсистеме
метод ТипДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    если ВерсияФорматаОбмена == Неопределено или ВерсияФорматаОбмена < Версия{2.0}
        выбросить новый ИсключениеВыполнения("Неверный формат")
    ;
    возврат Тип<ПроцессАдаптации_2_0>
;

@ВПодсистеме
метод ТипКоллекцииДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    если ВерсияФорматаОбмена == Неопределено или ВерсияФорматаОбмена < Версия{2.0}
        выбросить новый ИсключениеВыполнения("Неверный формат")
    ;
    возврат Тип<Массив<ПроцессАдаптации_2_0>>
;

@ВПодсистеме
метод ГруппаИзмененийВJson(Ссылки: ЧитаемаяКоллекция<ПроцессыАдаптации.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?): ЧитаемоеСоответствие<Строка, Массив<Объект?>>
    если ВерсияФорматаОбмена == Неопределено или ВерсияФорматаОбмена < Версия{2.0}
        выбросить новый ИсключениеВыполнения("Неверный формат")
    ;
    возврат {"adaptationProcesses": ПолучитьПроцессыАдаптации_2_0(Ссылки, Сервисы)}
;

@ВПодсистеме
метод ПолучитьДанныеJson(Ссылка: ПроцессыАдаптации.Ссылка, Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?): Объект
    если ВерсияФорматаОбмена == Неопределено или ВерсияФорматаОбмена < Версия{2.0}
        выбросить новый ИсключениеВыполнения("Неверный формат")
    ;
    возврат ПолучитьПроцессАдаптации_2_0(Ссылка, Сервисы)
;

метод ПолучитьПроцессАдаптации_2_0(Ссылка: ПроцессыАдаптации.Ссылка, Сервисы: ВебApiСервер.СервисыУпаковкиJson): ПроцессАдаптации_2_0
    возврат ПолучитьПроцессыАдаптации_2_0([Ссылка], Сервисы).Первый()! как ПроцессАдаптации_2_0
;

метод ПолучитьПроцессыАдаптации_2_0(Ссылки: ЧитаемаяКоллекция<ПроцессыАдаптации.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): Массив<Объект?>
    знч Данные: Массив<Объект?>
    если Ссылки.Пусто()
        возврат Данные
    ;
    знч ДанныеПроцессовАдаптации = ПроцессыАдаптации.Прочитать(Ссылки)
    знч ЗаписиСтатусов = ПолучитьЗаписиСтатусов(Ссылки)
    для КлючЗначение из ДанныеПроцессовАдаптации
        знч ПроцессАдаптации = КлючЗначение.Ключ
        знч ДанныеПроцессаАдаптации = КлючЗначение.Значение
        знч ЗаписьСтатуса = ЗаписиСтатусов[ПроцессАдаптации]
        Данные.Добавить(новый ПроцессАдаптации_2_0(
            Ид = Сервисы.ПолучитьИдентификатор(ПроцессАдаптации),
            Сотрудник = Сервисы.ПолучитьИдентификатор(ДанныеПроцессаАдаптации.Сотрудник),
            Руководитель = Сервисы.ПолучитьИдентификатор(ДанныеПроцессаАдаптации.Руководитель),
            HrМенеджер = ДанныеПроцессаАдаптации.HrМенеджер != Неопределено ? Сервисы.ПолучитьИдентификатор(ДанныеПроцессаАдаптации.HrМенеджер!) : Неопределено,
            Подразделение = Сервисы.ПолучитьИдентификатор(ДанныеПроцессаАдаптации.Подразделение),
            Должность = Сервисы.ПолучитьИдентификатор(ДанныеПроцессаАдаптации.Должность),
            ДатаСобытия = ДанныеПроцессаАдаптации.ДатаСобытия,
            ПлановаяДатаЗавершения = ДанныеПроцессаАдаптации.ПлановаяДатаЗавершения,
            Статус = ПолучитьСтатусПроцессаАдаптации_2_0(ЗаписьСтатуса.Статус),
            ДатаСтатуса = ЗаписьСтатуса.Дата
        ))
    ;
    возврат Данные
;

метод ПолучитьСтатусПроцессаАдаптации_2_0(Статус: СтатусыПроцессаАдаптации): СтатусыПроцессаАдаптации_2_0
    выбор Статус
    когда Черновик
        возврат СтатусыПроцессаАдаптации_2_0.draft
    когда Выполняется
        возврат СтатусыПроцессаАдаптации_2_0.inProgress
    когда Завершен
        возврат СтатусыПроцессаАдаптации_2_0.completed
    когда Отменен
        возврат СтатусыПроцессаАдаптации_2_0.cancelled
    иначе
        выбросить новый ИсключениеВыполнения("Неизвестный статус: %Статус")
    ;
;

метод ПолучитьЗаписиСтатусов(ПроцессыАдаптации: ЧитаемаяКоллекция<ПроцессыАдаптации.Ссылка>): Соответствие<ПроцессыАдаптации.Ссылка, СтатусыПроцессовАдаптации.Запись>
    знч Записи: Соответствие<ПроцессыАдаптации.Ссылка, СтатусыПроцессовАдаптации.Запись>
    если ПроцессыАдаптации.Пусто()
        возврат Записи
    ;
    знч Запрос = Запрос{
        Выбрать
            ПроцессАдаптации Как ПроцессАдаптации,
            Статус Как Статус,
            Дата Как Дата
        Из
            СтатусыПроцессовАдаптации
        Где
            ПроцессАдаптации В (%ПроцессыАдаптации)
    }
    знч РезультатЗапроса = Запрос.Выполнить()
    для СтрокаРезультата из РезультатЗапроса
        Записи.Вставить(СтрокаРезультата.ПроцессАдаптации,
            новый СтатусыПроцессовАдаптации.Запись(
                ПроцессАдаптации = СтрокаРезультата.ПроцессАдаптации,
                Статус = СтрокаРезультата.Статус,
                Дата = СтрокаРезультата.Дата
            )
        )
    ;
    возврат Записи
;

@ВПодсистеме
метод ЗагрузитьОбъектИзJson(ТипДанных: Тип, ДанныеJson: Объект?, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    выбор ТипДанных
    когда Тип<ПроцессАдаптации_2_0>
        ЗагрузитьПроцессАдаптации(ДанныеJson как ПроцессАдаптации_2_0, Сервисы)
    ;
;

метод ЗагрузитьПроцессАдаптации(ДанныеJson: ПроцессАдаптации_2_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    исп Транзакции.Начать()

    знч ПроцессАдаптации = Сервисы.ПрочитатьОбъект(ДанныеJson.Ид, &НовыйПроцессАдаптации, Тип<ПроцессыАдаптации.Ссылка>) как ПроцессыАдаптации.Объект
    ПроцессАдаптации.Сотрудник = Сервисы.ПолучитьСсылку(ФизическиеЛица.ВнешняяСсылка(ДанныеJson.Сотрудник)) как ФизическиеЛица.Ссылка
    ПроцессАдаптации.Руководитель = Сервисы.ПолучитьСсылку(ФизическиеЛица.ВнешняяСсылка(ДанныеJson.Руководитель)) как ФизическиеЛица.Ссылка
    ПроцессАдаптации.HrМенеджер = ДанныеJson.HrМенеджер != Неопределено ? Сервисы.ПолучитьСсылку(ФизическиеЛица.ВнешняяСсылка(ДанныеJson.HrМенеджер!)) как ФизическиеЛица.Ссылка : Неопределено
    ПроцессАдаптации.Подразделение = Сервисы.ПолучитьСсылку(СтруктураПредприятия.ВнешняяСсылка(ДанныеJson.Подразделение)) как СтруктураПредприятия.Ссылка
    ПроцессАдаптации.Должность = Сервисы.ПолучитьСсылку(Должности.ВнешняяСсылка(ДанныеJson.Должность)) как Должности.Ссылка
    ПроцессАдаптации.ДатаСобытия = ДанныеJson.ДатаСобытия
    ПроцессАдаптации.ПлановаяДатаЗавершения = ДанныеJson.ПлановаяДатаЗавершения
    Сервисы.ЗаписатьОбъект(новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(ПроцессАдаптации, ДанныеJson.Ид), Сервисы.ИнструментыМенеджераОбъекта)

    ЗагрузитьСтатусПроцессаАдаптации(ПроцессАдаптации.Ссылка, ДанныеJson.Статус, ДанныеJson.ДатаСтатуса)
;

метод ЗагрузитьСтатусПроцессаАдаптации(ПроцессАдаптации: ПроцессыАдаптации.Ссылка, Статус: СтатусыПроцессаАдаптации_2_0, ДатаСтатуса: Дата)
    знч НаборЗаписей = новый СтатусыПроцессовАдаптации.НаборЗаписей()
    НаборЗаписей.Фильтр.ПроцессАдаптации.Установить(ПроцессАдаптации)
    НаборЗаписей.ДобавитьЗапись(
        ПроцессАдаптации = ПроцессАдаптации,
        Статус = ПолучитьСтатусПроцессаАдаптации(Статус),
        Дата = ДатаСтатуса
    )
    НаборЗаписей.Записать()
;

метод ПолучитьСтатусПроцессаАдаптации(Статус: СтатусыПроцессаАдаптации_2_0): СтатусыПроцессаАдаптации
    выбор Статус
    когда draft
        возврат СтатусыПроцессаАдаптации.Черновик
    когда inProgress
        возврат СтатусыПроцессаАдаптации.Выполняется
    когда completed
        возврат СтатусыПроцессаАдаптации.Завершен
    когда cancelled
        возврат СтатусыПроцессаАдаптации.Отменен
    ;
;

метод НовыйПроцессАдаптации(Ууид: Ууид): ПроцессыАдаптации.Объект
    возврат новый ПроцессыАдаптации.Объект(Ууид)
;

@ВПодсистеме
метод ВнешняяСсылка(Идентификатор: Строка): ВебApiСервер.ВнешняяСсылка
    возврат новый ВебApiСервер.ВнешняяСсылка(Идентификатор, (Ууид) -> ПроцессыАдаптации.ПолучитьСсылку(Ууид))
;