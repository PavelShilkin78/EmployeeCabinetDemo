импорт СтандартноеПриложение
импорт ИнтерфейсныеКомпонентыСтандартные
импорт ОбщиеСтандартные
импорт Компания

@ВПроекте
@Реализация
метод Обновить()
    ОбновитьДанные()
;

@Обработчик
метод ПослеСоздания()
    УстановитьПериодПоУмолчанию()
    НастроитьДиаграмму()
    ОбновитьДанные()
    ЗагрузкаЗавершена()
;

метод ПерейтиКСпискуОбработчик(Команда: ОбычнаяКоманда)
    ОткрытьПроцессыАдаптации()
;

метод ОткрытьПроцессыАдаптации()
    если ФормаВладелец != Неопределено
        ИнтерфейсныеКомпоненты.ОткрытьЗамещающуюФорму(ФормаВладелец, новый ПроцессыАдаптацииФорма())
    иначе
        (новый ПроцессыАдаптацииФорма()).ОткрытьВМодальномОкне()
    ;
;

метод ЗагрузкаЗавершена()
    ЗагрузкаЗавершена = Истина
;

метод ОткрытьНастройкиОбработчик(Команда: ОбычнаяКоманда)
    ОткрытьНастройки()
;

метод ФильтрПредставлениеПриНажатии(Источник: Компонент, Событие: СобытиеКомпонента)
    ОткрытьНастройки()
;

метод ФильтрПредставление(): Строка
    если Период == Неопределено
        возврат ""
    ;
    знч ЭлементыФильтра: Массив<Строка>
    ЭлементыФильтра.Добавить(МенеджерДат.ПредставлениеПериода(Период!))
    если не Подразделения.Пусто()
        ЭлементыФильтра.Добавить("${Подразделения.Первый()}")
        если Подразделения.Размер() > 1
            ЭлементыФильтра[ЭлементыФильтра.Граница()] += " и еще %{Подразделения.Размер() - 1}"
        ;
    ;
    возврат ЭлементыФильтра.Соединить(", ")
;

метод ОткрытьНастройки()
    УстановитьДоступныеПодразделения()
    Настройки.ОткрытьВоВсплывающемОкне(Компоненты.ОткрытьНастройки)    
;

метод УстановитьДоступныеПодразделения()
    знч НастройкиПоТипу = Компоненты.Подразделения.НастройкиВводаСсылок.НастройкиПоТипу
    если НастройкиПоТипу.СодержитКлюч(Тип<СтруктураПредприятия.Ссылка>)
        возврат
    ;
    СтруктураПредприятия.ДобавитьНастройкуВводаОграниченныйСписок(
        Настройки = Компоненты.Подразделения.НастройкиВводаСсылок, 
        Список = ДоступныеПодразделения()
    )
;

@НаСервере @ДоступноСКлиента
статический метод ДоступныеПодразделения(): ЧитаемоеМножество<СтруктураПредприятия.Ссылка>  
    возврат АдаптацияПерсонала.ДоступныеПодразделения()
;

метод СтандартныйПериодПриНажатии(Источник: КомпонентВыбора, Событие: СобытиеПриНажатии)
    Период = (Источник.ДополнительныеДанные как СтандартныйПериод).Период
    ОбновитьДанные()
;

метод ПериодПриИзменении(Источник: ПолеВвода<ЗакрытыйДиапазон<Дата>?>, Событие: СобытиеПриИзменении<ЗакрытыйДиапазон<Дата>?>)
    если Период == Неопределено
        УстановитьПериодПоУмолчанию()
    иначе
        Период = новый ЗакрытыйДиапазон(Период!.От.НачалоМесяца(), Период!.До.КонецМесяца())
    ;
    ОбновитьДанные()
;

метод ПодразделенияВидОтображенияКнопкиОчистить(): ВидОтображения
    возврат Подразделения.Пусто() ? ВидОтображения.НеОтображать : ВидОтображения.Всегда
;

метод ПодразделенияПриИзменении(Источник: Компонент, Событие: СобытиеКомпонента)
    ОбновитьДанные()
;

метод ЗаглушкаВидимость(): Булево
    возврат не ДиаграммаВидимость()
;

метод ЗаглушкаТекст(): Строка
    возврат ЗагрузкаЗавершена ? "Нет данных для отображения" : ""
;

метод ДиаграммаВидимость(): Булево
    возврат ЕстьДанные()    
;

метод УстановитьПериодПоУмолчанию()
    знч НачалоМесяцаНачала = Дата.Сейчас().ДобавитьМесяцы(-(КоличествоМесяцев-1)).НачалоМесяца()
    знч КонецМесяцаОкончания = Дата.Сейчас().КонецМесяца()
    Период = новый ЗакрытыйДиапазон(НачалоМесяцаНачала, КонецМесяцаОкончания)
;

метод ОбновитьДанные()
    знч Данные = ПолучитьДанные(Период!, Подразделения)
    ОбновитьДанныеДиаграммы(Данные)
    ОбновитьИндикаторПрироста(Данные)
;

метод ОбновитьДанныеДиаграммы(Данные: Данные)
    знч ДанныеЗаПериод = Данные.УказанныйПериод
    знч ДанныеДиаграммы = ПолучитьДанныеДиаграммы(ДанныеЗаПериод)
    Компоненты.Диаграмма.Источник.Данные = ДанныеДиаграммы
;

метод ОбновитьИндикаторПрироста(Данные: Данные)
    если Данные.ПриростЗавершенныхЗаПрошлыйСтандартныйПериод != Неопределено
        Компоненты.ПриростЗавершенных.Видимость = Истина
        знч ПрошлыйПериод = Данные.ПрошлыйСтандартныйПериод!.Период!
        знч ПрошлыйПериодПредставление = МенеджерДат.ПредставлениеПериода(ПрошлыйПериод)
        если Данные.ПриростЗавершенныхЗаПрошлыйСтандартныйПериод! > 0
            Компоненты.ПриростЗавершенных.Пояснение = "Прирост завершенных в сравнении с прошлым периодом (%ПрошлыйПериодПредставление)"
            Компоненты.ПриростЗавершенных.Количество = Данные.ПриростЗавершенныхЗаПрошлыйСтандартныйПериод!
            Компоненты.ПриростЗавершенных.Коннотация = ОценкаИнформации.Положительная
        иначе если Данные.ПриростЗавершенныхЗаПрошлыйСтандартныйПериод! < 0
            Компоненты.ПриростЗавершенных.Пояснение = "Спад завершенных в сравнении с прошлым периодом (%ПрошлыйПериодПредставление)"
            Компоненты.ПриростЗавершенных.Количество = -Данные.ПриростЗавершенныхЗаПрошлыйСтандартныйПериод!
            Компоненты.ПриростЗавершенных.Коннотация = ОценкаИнформации.Отрицательная
        иначе
            Компоненты.ПриростЗавершенных.Пояснение = "Без изменения завершенных в сравнении с прошлым периодом (%ПрошлыйПериодПредставление)"
            Компоненты.ПриростЗавершенных.Количество = Данные.ПриростЗавершенныхЗаПрошлыйСтандартныйПериод!
            Компоненты.ПриростЗавершенных.Коннотация = ОценкаИнформации.Обычная
        ;
    иначе
        Компоненты.ПриростЗавершенных.Видимость = Ложь
    ;
;

метод ЕстьДанные(): Булево
    возврат не Компоненты.Диаграмма.Источник.Данные.Пусто()
;

метод НастроитьДиаграмму()
    знч Диаграмма = Компоненты.Диаграмма

    знч ОсьY = новый ЧисловаяОсьДиаграммы()
    ОсьY.Минимум = 0
    ОсьY.Целочисленная = Истина
    Диаграмма.ОсиY.Добавить(ОсьY)

    знч ОсьX = новый КатегориальнаяОсьДиаграммы()
    ОсьX.ПолеДанных.ПолеЗначения = "Месяц"
    ОсьX.ПолеДанных.ОтображаемоеЗначение = "МесяцПредставление"
    Диаграмма.ОсиX.Добавить(ОсьX)

    знч СерияВыполняется = новый СтолбчатаяСерияДиаграммы()
    СерияВыполняется.Имя = "Выполняется"
    СерияВыполняется.Ось = ОсьY
    СерияВыполняется.ПоляДанных.Ключ.ПолеЗначения = "Месяц"
    СерияВыполняется.ПоляДанных.Ключ.ОтображаемоеЗначение = "МесяцПредставление"
    СерияВыполняется.ПоляДанных.Значение.ПолеЗначения = "Выполняется"
    СерияВыполняется.ПоляДанных.Значение.ОтображаемоеЗначение = "ВыполняетсяПредставление"
    СерияВыполняется.ПоляДанных.Маркер = "ВыполняетсяПредставление"
    СерияВыполняется.ПоляДанных.Цвет = "ВыполняетсяЦвет"
    СерияВыполняется.Стековая = Истина
    Диаграмма.Серии.Добавить(СерияВыполняется)

    знч СерияЗавершено = новый СтолбчатаяСерияДиаграммы()
    СерияЗавершено.Имя = "Завершено"
    СерияЗавершено.Ось = ОсьY
    СерияЗавершено.ПоляДанных.Ключ.ПолеЗначения = "Месяц"
    СерияЗавершено.ПоляДанных.Ключ.ОтображаемоеЗначение = "МесяцПредставление"
    СерияЗавершено.ПоляДанных.Значение.ПолеЗначения = "Завершено"
    СерияЗавершено.ПоляДанных.Значение.ОтображаемоеЗначение = "ЗавершеноПредставление"
    СерияЗавершено.ПоляДанных.Маркер = "ЗавершеноПредставление"
    СерияЗавершено.ПоляДанных.Цвет = "ЗавершеноЦвет"
    СерияЗавершено.Стековая = Истина
    Диаграмма.Серии.Добавить(СерияЗавершено)

    Диаграмма.Легенда = новый ЛегендаДиаграммы()
    Диаграмма.Легенда.Расположение = КлиентскоеУстройство.ВидИнтерфейса == ВидИнтерфейса.Телефон ? РасположениеЛегендыДиаграммы.Снизу : РасположениеЛегендыДиаграммы.Конец
;

@НаСервере @НаКлиенте
структура Данные
    обз знч УказанныйПериод: ДанныеЗаПериод
    обз знч ПрошлыйСтандартныйПериод: СтандартныйПериод?
    обз знч ПриростЗавершенныхЗаПрошлыйСтандартныйПериод: Число?
;

@НаСервере @НаКлиенте
структура ДанныеЗаПериод
    обз знч ИтогоЗавершено: Число
    обз знч ПоМесяцам: Соответствие<Дата, ДанныеМесяца>
;

@НаСервере @НаКлиенте
структура ДанныеМесяца
    обз пер Выполняется: Число
    обз пер Завершено: Число
;

@ВПодсистеме
@НаСервере @НаКлиенте
структура ДанныеДиаграммы
    обз знч Месяц: Дата
    обз знч МесяцПредставление: Строка
    обз знч Выполняется: Число
    обз знч ВыполняетсяПредставление: Строка
    обз знч ВыполняетсяЦвет: Цвет
    обз знч Завершено: Число
    обз знч ЗавершеноПредставление: Строка
    обз знч ЗавершеноЦвет: Цвет
;

@НаСервере @ДоступноСКлиента
статический метод ПолучитьДанные(Период: ЗакрытыйДиапазон<Дата>, Подразделения: Обходимое<СтруктураПредприятия.Ссылка>): Данные
    знч ДанныеЗаУказанныйПериод = ПолучитьДанныеЗаПериод(Период, Подразделения)
    пер ПрошлыйСтандартныйПериод: СтандартныйПериод?
    пер ПриростЗавершенных: Число?
    если СтандартныйПериод.ЭтоСтандартныйПериод(Период) и ЕстьДанные(ДанныеЗаУказанныйПериод.ПоМесяцам)
        ПрошлыйСтандартныйПериод = СтандартныйПериод.Создать(Период).Прошлый()
        знч ПрошлыйПериод = ПрошлыйСтандартныйПериод.Период
        знч ДанныеЗаПрошлыйПериод = ПолучитьДанныеЗаПериод(ПрошлыйПериод, Подразделения)
        ПриростЗавершенных = ДанныеЗаУказанныйПериод.ИтогоЗавершено - ДанныеЗаПрошлыйПериод.ИтогоЗавершено
    ;
    возврат новый Данные(
        УказанныйПериод = ДанныеЗаУказанныйПериод,
        ПрошлыйСтандартныйПериод = ПрошлыйСтандартныйПериод,
        ПриростЗавершенныхЗаПрошлыйСтандартныйПериод = ПриростЗавершенных
    )
;

@НаСервере
статический метод ПолучитьДанныеЗаПериод(Период: ЗакрытыйДиапазон<Дата>, Подразделения: Обходимое<СтруктураПредприятия.Ссылка>): ДанныеЗаПериод
    знч МесяцНачала = Период.От.НачалоМесяца()
    знч МесяцОкончания = Период.До.НачалоМесяца()
    знч ОтбиратьПоПодразделениям = не Подразделения.Пусто()
    знч Запрос = Запрос{
        Выбрать
            Процессы.ПроцессАдаптации,
            Процессы.Статус == СтатусыПроцессаАдаптации.Завершен
                И Процессы.МесяцУстановкиСтатуса <= %МесяцОкончания Как Завершен,
            Процессы.МесяцПервогоМероприятия Как МесяцНачала,
            Процессы.МесяцУстановкиСтатуса Как МесяцУстановкиСтатуса
        Из
            (Выбрать
                ПроцессыАдаптации.Ссылка Как ПроцессАдаптации,
                СтатусыПроцессовАдаптации.Статус Как Статус,
                Минимум(Мероприятия.ПровестиНеРанее.НачалоМесяца()) Как МесяцПервогоМероприятия,
                Максимум(СтатусыПроцессовАдаптации.Дата.НачалоМесяца()) Как МесяцУстановкиСтатуса
            Из
                ПроцессыАдаптации Как ПроцессыАдаптации
                Соединение СтатусыПроцессовАдаптации Как СтатусыПроцессовАдаптации
                    По ПроцессыАдаптации.Ссылка == СтатусыПроцессовАдаптации.ПроцессАдаптации
                Соединение Мероприятия Как Мероприятия
                    По ПроцессыАдаптации.Ссылка == Мероприятия.ПроцессАдаптации
                Соединение СтатусыМероприятий.СрезПоследних Как СтатусыМероприятий
                    По Мероприятия.Ссылка == СтатусыМероприятий.Мероприятие
            Где
                (НЕ %ОтбиратьПоПодразделениям ИЛИ ПроцессыАдаптации.Подразделение В(%Подразделения))
                И СтатусыПроцессовАдаптации.Статус В (СтатусыПроцессаАдаптации.Выполняется, СтатусыПроцессаАдаптации.Завершен)
                И СтатусыМероприятий.Статус != СтатусыМероприятия.Черновик
            Сгруппировать По
                ПроцессыАдаптации.Ссылка,
                СтатусыПроцессовАдаптации.Статус
            Имеющие
                Минимум(Мероприятия.ПровестиНеРанее.НачалоМесяца()) <= %МесяцОкончания
            ) Как Процессы
    }
    знч ДанныеПоМесяцам = ИнициализироватьДанныеПоМесяцам(МесяцНачала, МесяцОкончания)
    исп РезультатЗапроса = Запрос.Выполнить()
    для СтрокаРезультата из РезультатЗапроса
        знч МесяцНачалаВыполнения = Макс(СтрокаРезультата.МесяцНачала, МесяцНачала)
        знч МесяцОкончанияВыполнения = СтрокаРезультата.Завершен ? Мин(СтрокаРезультата.МесяцУстановкиСтатуса, МесяцОкончания) : МесяцОкончания
        пер ТекущийМесяцВыполнения = МесяцНачалаВыполнения
        пока ТекущийМесяцВыполнения <= МесяцОкончанияВыполнения
            если ТекущийМесяцВыполнения == МесяцОкончанияВыполнения и СтрокаРезультата.Завершен
                ДанныеПоМесяцам[ТекущийМесяцВыполнения].Завершено += 1
            иначе
                ДанныеПоМесяцам[ТекущийМесяцВыполнения].Выполняется += 1
            ;
            ТекущийМесяцВыполнения = ТекущийМесяцВыполнения.ДобавитьМесяцы(1)
        ;
    ;
    возврат новый ДанныеЗаПериод(
        ИтогоЗавершено = ДанныеПоМесяцам.Преобразовать(Д -> Д.Значение.Завершено).Свернуть(0, (З1, З2) -> З1 + З2),
        ПоМесяцам = ДанныеПоМесяцам
    )
;

@НаСервере
статический метод ИнициализироватьДанныеПоМесяцам(МесяцНачала: Дата, МесяцОкончания: Дата): Соответствие<Дата, ДанныеМесяца>
    знч ДанныеПоМесяцам: Соответствие<Дата, ДанныеМесяца>
    пер ТекущийМесяц = МесяцНачала
    пока ТекущийМесяц <= МесяцОкончания
        ДанныеПоМесяцам.Вставить(ТекущийМесяц, новый ДанныеМесяца(0, 0))
        ТекущийМесяц = ТекущийМесяц.ДобавитьМесяцы(1)
    ;
    возврат ДанныеПоМесяцам
;

@НаСервере @НаКлиенте
статический метод ЕстьДанные(ДанныеПоМесяцам: Соответствие<Дата, ДанныеМесяца>): Булево
    возврат ДанныеПоМесяцам.ЕстьСоответствия((КЗ) -> ЕстьДанные(КЗ.Значение))
;

@НаСервере @НаКлиенте
статический метод ЕстьДанные(ДанныеМесяца: ДанныеМесяца): Булево
    возврат ДанныеМесяца.Выполняется != 0 или ДанныеМесяца.Завершено != 0
;

статический метод ПолучитьДанныеДиаграммы(ДанныеЗаПериод: ДанныеЗаПериод): Массив<ДанныеДиаграммы>
    знч Данные: Массив<ДанныеДиаграммы>
    знч ОранжевыйЦвет = БиблиотекаЦветов.Цвет(БиблиотекаЦветов.ВидыЦвета.Оранжевый)
    знч ЗеленыйЦвет = БиблиотекаЦветов.Цвет(БиблиотекаЦветов.ВидыЦвета.Зеленый)
    если ЕстьДанные(ДанныеЗаПериод.ПоМесяцам)
        для КлючЗначение из ДанныеЗаПериод.ПоМесяцам
            знч Месяц = КлючЗначение.Ключ
            знч ДанныеМесяца = КлючЗначение.Значение
            Данные.Добавить(новый ДанныеДиаграммы(
                Месяц = Месяц,
                МесяцПредставление = "${Месяц|МММ гг}",
                Выполняется = ДанныеМесяца.Выполняется,
                ВыполняетсяПредставление = "${ДанныеМесяца.Выполняется}",
                ВыполняетсяЦвет = ОранжевыйЦвет,
                Завершено = ДанныеМесяца.Завершено,
                ЗавершеноПредставление = "${ДанныеМесяца.Завершено}",
                ЗавершеноЦвет = ЗеленыйЦвет
            ))
        ;
    ;
    возврат Данные
;