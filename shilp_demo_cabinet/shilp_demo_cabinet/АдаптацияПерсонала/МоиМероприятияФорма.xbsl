импорт КонтрольДоступа
импорт ОбщиеСтандартные
импорт ФизическиеЛица
импорт Компания

@Обработчик
метод ПослеСоздания()
    ДобавитьПоляДляПредставленияИмениОтветственного()
    ДобавитьПоляДляПредставленияИмениАдаптируемогоСотрудника()
    МероприятиеПослеЗаписи.ПодключитьОбработчик(&МероприятиеПослеЗаписи)
    МероприятиеПослеУдаления.ПодключитьОбработчик(&МероприятиеПослеЗаписи)
    СтатусМероприятияПослеЗаписи.ПодключитьОбработчик(&МероприятиеПослеЗаписи)
    ПослеИзмененияФильтраОтложенно()
;

метод ДобавитьПоляДляПредставленияИмениОтветственного()
    ФизЛица.ДобавитьПоляДляПредставленияИмени(
        Компоненты.УчастникиМероприятий.Источник,
        "УчастникиМероприятий.Мероприятие.Ответственный",
        "Ответственный")
;

метод ДобавитьПоляДляПредставленияИмениАдаптируемогоСотрудника()
    ФизЛица.ДобавитьПоляДляПредставленияИмени(
        Компоненты.УчастникиМероприятий.Источник,
        "УчастникиМероприятий.Мероприятие.ПроцессАдаптации.Сотрудник",
        "АдаптируемыйСотрудник")
;

метод ПослеИзмененияФильтраОтложенно()
    ПодключитьОбработчикТаймера(&ПослеИзмененияФильтра, 1мс, Истина)
;

метод МероприятиеПослеЗаписи(Мероприятие: Мероприятия.Ссылка)
    Компоненты.УчастникиМероприятий.Обновить()
    ВыделитьМероприятиеПослеЗаписиМероприятия(Мероприятие)
;

метод Мероприятие(ДанныеСтроки: Объект): Мероприятия.Ссылка
    возврат ((ДанныеСтроки как СтрокаДинамическогоСписка).Ключ как УчастникиМероприятий.КлючЗаписи).Мероприятие
;

метод ЗначениеКолонкиМероприятие(ДанныеСтроки: Объект): МероприятиеКолонка.Значение
    знч Данные = (ДанныеСтроки как СтрокаДинамическогоСписка).Данные
    возврат новый МероприятиеКолонка.Значение(
        Мероприятие = Мероприятие(ДанныеСтроки),
        Наименование = Данные["Наименование"] как Строка,
        АдаптируемыйСотрудник = ФизЛица.ФИОПоПолям(ДанныеСтроки как СтрокаДинамическогоСписка, "АдаптируемыйСотрудник"),
        Ответственный = ФизЛица.ФИОПоПолям(ДанныеСтроки как СтрокаДинамическогоСписка, "Ответственный"),
        КоличествоУчастников = Данные["КоличествоУчастников"] как Число,
        ПровестиНеРанее = Данные["ПровестиНеРанее"] как Дата,
        ПровестиНеПозднее = Данные["ПровестиНеПозднее"] как Дата,
        Статус = Данные["Статус"] как СтатусыМероприятия
    )
;

метод ПризнакиДоступаКСтатусамМероприятий(ДанныеСтроки: Объект): АдаптацияПерсонала.ПризнакиДоступаКСтатусамМероприятий
    знч Данные = (ДанныеСтроки как СтрокаДинамическогоСписка).Данные
    возврат новый АдаптацияПерсонала.ПризнакиДоступаКСтатусамМероприятий(
        ОтветственныйЗаМероприятие = Данные["Ответственный"] как ФизическиеЛица.Ссылка?,
        РуководительПроцессаАдаптации = Данные["Руководитель"] как ФизическиеЛица.Ссылка?,
        ПодразделениеПроцессаАдаптации = Данные["Подразделение"] как СтруктураПредприятия.Ссылка?,
        СтатусМероприятия = Данные["Статус"] как СтатусыМероприятия,
        СтатусПроцессаАдаптации = Данные["СтатусПроцессаАдаптации"] как СтатусыПроцессаАдаптации
    )    
;

метод ЭлементФильтраУчастник(): ЭлементФильтра
    возврат новый ЭлементФильтра(
        Поле = "Участник",
        Значение = КонтрольДоступа.ПараметрыСеанса().ФизлицоТекущегоПользователя
    )
;

метод ЭлементФильтраСтатусЧерновик(): ЭлементФильтра
    возврат новый ЭлементФильтра(
        Поле = "СтатусыМероприятийСрезПоследних.Статус",
        ВидСравнения = ВидСравнения.НеРавно,
        Значение = СтатусыМероприятия.Черновик
    )
;

метод ФильтрМероприятийПоСрокамПроведенияПриИзменении(Источник: ФильтрМероприятийПоСрокамПроведения, Событие: СобытиеКомпонента)
    ПослеИзмененияФильтра()
;

метод ЗаглушкаВидимость(): Булево
    возврат не МероприятияСДеталямиВидимость()   
;

метод МероприятияСДеталямиВидимость(): Булево
    возврат ЕстьМероприятия    
;

метод ФильтрМероприятийПоРолиУчастникаПриИзменении(Источник: ФильтрМероприятийПоРолиУчастника, Событие: СобытиеКомпонента)
    ПослеИзмененияФильтра()
;

метод ФильтрМероприятийПоСтатусуПриИзменении(Источник: ФильтрМероприятийПоСтатусу, Событие: СобытиеКомпонента)
    ПослеИзмененияФильтра()
;

метод ПослеИзмененияФильтра()
    знч РезультатФильтра = ПолучитьРезультатФильтра(Фильтр(), ВыделенноеМероприятие())
    ЕстьМероприятия = РезультатФильтра.ЕстьМероприятия
    ВыделитьМероприятиеВСоответствииСФильтром(РезультатФильтра)
;

@НаКлиенте
метод ВыделенноеМероприятие(): Мероприятия.Ссылка?
    возврат (Компоненты.УчастникиМероприятий.ВыделеннаяСтрока как УчастникиМероприятий.КлючЗаписи?)?.Мероприятие ?? Неопределено
;

@НаКлиенте
метод Фильтр(): ГруппаЭлементовФильтра
    возврат Компоненты.УчастникиМероприятий.Источник.Фильтр
;

@НаКлиенте
метод ВыделитьМероприятиеПослеЗаписиМероприятия(ЗаписанноеМероприятие: Мероприятия.Ссылка)
    знч ВыделенноеМероприятие = ВыделенноеМероприятие()
    если ВыделенноеМероприятие == Неопределено или ВыделенноеМероприятие == ЗаписанноеМероприятие
        знч РезультатФильтра = ПолучитьРезультатФильтра(Фильтр(), ВыделенноеМероприятие)
        ЕстьМероприятия = РезультатФильтра.ЕстьМероприятия
        ВыделитьМероприятиеВСоответствииСФильтром(РезультатФильтра)
    ;
;

@НаКлиенте
метод ВыделитьМероприятиеВСоответствииСФильтром(РезультатФильтра: РезультатФильтра)
    если КлиентскоеУстройство.ВидИнтерфейса == ВидИнтерфейса.Телефон
        возврат
    ;
    знч НужноВыделить = ((РезультатФильтра.ВыделенноеМероприятие != Неопределено и не РезультатФильтра.ВыделенноеМероприятиеПодпадаетПодФильтр)
                        или РезультатФильтра.ВыделенноеМероприятие == Неопределено) и РезультатФильтра.ПервоеМероприятие != Неопределено
    если НужноВыделить
        Компоненты.УчастникиМероприятий.ВыделитьСтроку(РезультатФильтра.ПервоеМероприятие!)
    ;
;

@НаСервере @НаКлиенте
структура РезультатФильтра
    пер ЕстьМероприятия: Булево
    пер ПервоеМероприятие: УчастникиМероприятий.КлючЗаписи?
    пер ВыделенноеМероприятие: Мероприятия.Ссылка?
    пер ВыделенноеМероприятиеПодпадаетПодФильтр: Булево?
;

@НаСервере @ДоступноСКлиента
статический метод ПолучитьРезультатФильтра(Фильтр: ГруппаЭлементовФильтра, ВыделенноеМероприятие: Мероприятия.Ссылка? = Неопределено): РезультатФильтра
    знч РезультатФильтра = новый РезультатФильтра()
    РезультатФильтра.ПервоеМероприятие = ПервоеМероприятиеПодпадающееПодФильтр(Фильтр)
    РезультатФильтра.ЕстьМероприятия = (РезультатФильтра.ПервоеМероприятие != Неопределено)
    РезультатФильтра.ВыделенноеМероприятие = ВыделенноеМероприятие
    если ВыделенноеМероприятие != Неопределено
        РезультатФильтра.ВыделенноеМероприятиеПодпадаетПодФильтр = МероприятиеПодпадаетПодФильтр(ВыделенноеМероприятие!, Фильтр)
    ;
    возврат РезультатФильтра
;

@НаСервере
статический метод ПервоеМероприятиеПодпадающееПодФильтр(Фильтр: ГруппаЭлементовФильтра): УчастникиМероприятий.КлючЗаписи?
    знч Запрос = новый ПроизвольныйЗапрос(
    "Выбрать Первые 1
        УчастникиМероприятий.Мероприятие как Мероприятие,
        УчастникиМероприятий.Участник Как Участник
    Из
        УчастникиМероприятий как УчастникиМероприятий
        Соединение СтатусыМероприятий.СрезПоследних как СтатусыМероприятийСрезПоследних
        По УчастникиМероприятий.Мероприятие == СтатусыМероприятийСрезПоследних.Мероприятие
    Где
        Истина
    ")
    МенеджерЗапросов.ДополнитьЗапросФильтрами(Запрос, Фильтр)
    Запрос.Текст += "\н Упорядочить По УчастникиМероприятий.ПровестиНеРанее Возр, УчастникиМероприятий.ПровестиНеПозднее Возр"
    исп РезультатЗапроса = Запрос.Выполнить()
    знч ПерваяСтрока = РезультатЗапроса.ПервыйИлиУмолчание()
    если ПерваяСтрока != Неопределено
        возврат новый УчастникиМероприятий.КлючЗаписи(
            Мероприятие = ПерваяСтрока.Мероприятие,
            Участник = ПерваяСтрока.Участник)
    иначе
        возврат Неопределено
    ;
;

@НаСервере
статический метод ЕстьМероприятияПодпадающиеПодФильтр(Фильтр: ГруппаЭлементовФильтра): Булево
    возврат ПервоеМероприятиеПодпадающееПодФильтр(Фильтр) != Неопределено
;

@НаСервере
статический метод МероприятиеПодпадаетПодФильтр(Мероприятие: Мероприятия.Ссылка, Фильтр: ГруппаЭлементовФильтра): Булево
    Фильтр.Элементы.Добавить(новый ЭлементФильтра(
        Поле = "УчастникиМероприятий.Мероприятие",
        Значение = Мероприятие
    ))
    возврат ЕстьМероприятияПодпадающиеПодФильтр(Фильтр)
;