импорт КонтрольДоступа
импорт СтандартноеПриложение
импорт ИнтерфейсныеКомпонентыСтандартные
импорт ОбщиеСтандартные
импорт ФизическиеЛица


@ВПодсистеме
@НаСервере @НаКлиенте
структура ИндикаторВиджета
    обз знч Описание: Строка
    обз знч Значение: Число
    знч Коннотация: ОценкаИнформации = ОценкаИнформации.Обычная
    обз знч Действие: ДействиеНаКлиенте
;

@Обработчик
метод ПослеСоздания()
    ЗагрузитьИндикаторы()
;

метод Индикаторы(): Массив<Компонент>
    знч ИндикаторыКомпоненты: Массив<Компонент>
    для Индикатор из Индикаторы
        знч Действие = Индикатор.Действие
        ИндикаторыКомпоненты.Добавить(новый Индикатор(
            Пояснение = Индикатор.Описание,
            Количество = Индикатор.Значение,
            Коннотация = Индикатор.Коннотация,
            ВысотаИндикатора = ОсновнойИнтерфейс.РАЗМЕР_ИНДИКАТОРА_ДЛЯ_ВИДЖЕТА,
            ПриНажатии = &Действие.Выполнить
        ))
    ;
    возврат ИндикаторыКомпоненты
;

метод ЗагрузитьИндикаторы()
    Индикаторы = ПолучитьИндикаторы(АдаптацияПерсонала.ПараметрыСеанса())
    ЗагрузкаЗавершена = Истина
;

@НаСервере @ДоступноСКлиента
статический метод ПолучитьИндикаторы(ПараметрыСеанса: АдаптацияПерсонала.ПараметрыСеанса): Массив<ИндикаторВиджета>
    знч ТекущееФизическоеЛицо = ПользователиСистемы.ТекущееФизическоеЛицо()
    знч Индикаторы: Массив<ИндикаторВиджета>
    если ПараметрыСеанса.ЭтоОтветственныйЗаАдаптацию
        ДобавитьИндикатор(Индикаторы, ТекущееФизическоеЛицо, &ИндикаторПроцессыАдаптацииКЗапуску)
    ;
    ДобавитьИндикатор(Индикаторы, ТекущееФизическоеЛицо, &ИндикаторПросроченныеМероприятияОтветственного)
    ДобавитьИндикатор(Индикаторы, ТекущееФизическоеЛицо, &ИндикаторАктивныеМероприятияОтветственного)
    если ПараметрыСеанса.ЭтоКонтролирующийАдаптацию
        ДобавитьИндикатор(Индикаторы, ТекущееФизическоеЛицо, &ИндикаторАдаптируемыеСотрудникиСАктивнымиМероприятиями)
        ДобавитьИндикатор(Индикаторы, ТекущееФизическоеЛицо, &ИндикаторАдаптируемыеСотрудники)
    ;
    ДобавитьИндикатор(Индикаторы, ТекущееФизическоеЛицо, &ИндикаторАктивныеМероприятияУчастника)
    возврат Индикаторы
;

@НаСервере
статический метод ДобавитьИндикатор(Индикаторы: Массив<ИндикаторВиджета>, ФизическоеЛицо: ФизическиеЛица.Ссылка?, ПолучитьИндикатор: (ФизическиеЛица.Ссылка?)->ИндикаторВиджета?)
    знч МаксимальноеКоличествоИндикаторов = 2
    если Индикаторы.Размер() >= МаксимальноеКоличествоИндикаторов
        возврат
    ;
    знч Индикатор = ПолучитьИндикатор(ФизическоеЛицо)
    если Индикатор != Неопределено
        Индикаторы.Добавить(Индикатор!)
    ;
;

@НаСервере
статический метод ИндикаторПроцессыАдаптацииКЗапуску(ФизическоеЛицо: ФизическиеЛица.Ссылка?): ИндикаторВиджета?
    если ФизическоеЛицо == Неопределено
        возврат Неопределено
    ;
    знч Значение = ПроцессыАдаптацииКЗапуску(ФизическоеЛицо!)
    если Значение > 0
        возврат новый ИндикаторВиджета(
            МенеджерСтрок.ФормаПредметаИсчисления(Значение,
                Форма1 = "процесс адаптации требуется запустить",
                Форма2 = "процесса адаптации требуется запустить",
                Форма5 = "процессов адаптации требуется запустить"
            ),
            Значение,
            ОценкаИнформации.Отрицательная,
            Действие = ДействиеОткрытьПроцессыАдаптации.ТолькоЧерновики()
        )
    ;
    возврат Неопределено
;

@НаСервере
статический метод ИндикаторПросроченныеМероприятияОтветственного(ФизическоеЛицо: ФизическиеЛица.Ссылка?): ИндикаторВиджета?
    если ФизическоеЛицо == Неопределено
        возврат Неопределено
    ;
    знч Значение = ПросроченныеМероприятияТекущегоПользователя(ФизическоеЛицо!)
    если Значение > 0
        возврат новый ИндикаторВиджета(
            МенеджерСтрок.ФормаПредметаИсчисления(Значение,
                Форма1 = "просроченное мероприятие за проведение которого вы отвечаете",
                Форма2 = "просроченных мероприятия за проведение которых вы отвечаете",
                Форма5 = "просроченных мероприятий за проведение которых вы отвечаете",
                Форма21 = "просроченное мероприятие за проведение которых вы отвечаете"
            ),
            Значение,
            ОценкаИнформации.Отрицательная,
            Действие = ДействиеОткрытьМоиМероприятия.СФильтром(
                СрокПроведения = ФильтрМероприятийПоСрокамПроведения.ВариантыФильтра.Прошедшие,
                РольУчастника = РолиУчастниковМероприятия.Ответственный,
                Статус = СтатусыМероприятия.Запланировано)
        )
    ;
    возврат Неопределено
;

@НаСервере
статический метод ИндикаторАктивныеМероприятияОтветственного(ФизическоеЛицо: ФизическиеЛица.Ссылка?): ИндикаторВиджета?
    если ФизическоеЛицо == Неопределено
        возврат Неопределено
    ;
    знч Значение = АктивныеМероприятияТекущегоПользователя(ФизическоеЛицо!, РолиУчастниковМероприятия.Ответственный)
    если Значение > 0
        возврат новый ИндикаторВиджета(
            МенеджерСтрок.ФормаПредметаИсчисления(Значение,
                Форма1 = "активное мероприятие за проведение которого вы отвечаете",
                Форма2 = "активных мероприятия за проведение которых вы отвечаете",
                Форма5 = "активных мероприятий за проведение которых вы отвечаете",
                Форма21 = "активное мероприятие за проведение которых вы отвечаете"),
            Значение,
            ОценкаИнформации.Положительная,
            Действие = ДействиеОткрытьМоиМероприятия.СФильтром(
                СрокПроведения = ФильтрМероприятийПоСрокамПроведения.ВариантыФильтра.Сегодня,
                РольУчастника = РолиУчастниковМероприятия.Ответственный,
                Статус = СтатусыМероприятия.Запланировано)
        )
    ;
    возврат Неопределено
;

@НаСервере
статический метод ИндикаторАктивныеМероприятияУчастника(ФизическоеЛицо: ФизическиеЛица.Ссылка?): ИндикаторВиджета?
    если ФизическоеЛицо == Неопределено
        возврат Неопределено
    ;
    знч Значение = АктивныеМероприятияТекущегоПользователя(ФизическоеЛицо!, РолиУчастниковМероприятия.Участник)
    если Значение > 0
        возврат новый ИндикаторВиджета(
            МенеджерСтрок.ФормаПредметаИсчисления(Значение,
                Форма1 = "активное мероприятие в котором вы участвуете",
                Форма2 = "активных мероприятия в которых вы участвуете",
                Форма5 = "активных мероприятий в которых вы участвуете",
                Форма21 = "активное мероприятие в которых вы участвуете"),
            Значение,
            Действие = ДействиеОткрытьМоиМероприятия.СФильтром(
                СрокПроведения = ФильтрМероприятийПоСрокамПроведения.ВариантыФильтра.Сегодня,
                РольУчастника = РолиУчастниковМероприятия.Участник,
                Статус = СтатусыМероприятия.Запланировано)
        )
    ;
    возврат Неопределено
;

@НаСервере
статический метод ИндикаторАдаптируемыеСотрудникиСАктивнымиМероприятиями(ФизическоеЛицо: ФизическиеЛица.Ссылка?): ИндикаторВиджета?
    знч Значение = АдаптируемыеСотрудникиСАктивнымиМероприятиями()
    если Значение > 0
        возврат новый ИндикаторВиджета(
            МенеджерСтрок.ФормаПредметаИсчисления(Значение,
                Форма1 = "адаптируемый сотрудник с активными мероприятиями",
                Форма2 = "адаптируемых сотрудника с активными мероприятиями",
                Форма5 = "адаптируемых сотрудников с активными мероприятиями"
            ),
            Значение,
            Действие = ДействиеОткрытьПроцессыАдаптации.ТолькоВыполняющиеся()
        )
    ;
    возврат Неопределено
;

@НаСервере
статический метод ИндикаторАдаптируемыеСотрудники(ФизическоеЛицо: ФизическиеЛица.Ссылка?): ИндикаторВиджета?
    знч Значение = АдаптируемыеСотрудники()
    если Значение > 0
        возврат новый ИндикаторВиджета(
            МенеджерСтрок.ФормаПредметаИсчисления(Значение,
                Форма1 = "адаптируемый сотрудник",
                Форма2 = "адаптируемых сотрудника",
                Форма5 = "адаптируемых сотрудников"
            ),
            Значение,
            Действие = ДействиеОткрытьПроцессыАдаптации.ТолькоВыполняющиеся()
        )
    ;
    возврат Неопределено
;

@НаСервере
статический метод ПроцессыАдаптацииКЗапуску(ФизическоеЛицо: ФизическиеЛица.Ссылка): Число
    возврат Запрос{
        Выбрать
            Сумма(1).ЗаменитьNull(0) Как Количество
        Из
            ПроцессыАдаптации Как ПроцессыАдаптации
            Соединение СтатусыПроцессовАдаптации Как СтатусыПроцессовАдаптации
                По ПроцессыАдаптации.Ссылка == СтатусыПроцессовАдаптации.ПроцессАдаптации
        Где
            ПроцессыАдаптации.HrМенеджер В (%ФизическоеЛицо, Неопределено)
            И СтатусыПроцессовАдаптации.Статус == СтатусыПроцессаАдаптации.Черновик
    }.Выполнить().Единственный().Количество
;

@НаСервере
статический метод ПросроченныеМероприятияТекущегоПользователя(ФизическоеЛицо: ФизическиеЛица.Ссылка): Число
    знч Запрос = Запрос{
        Выбрать
            Сумма(1).ЗаменитьNull(0) Как Количество
        Из
            УчастникиМероприятий Как УчастникиМероприятий
            Соединение СтатусыМероприятий.СрезПоследних Как СтатусыМероприятий
                По УчастникиМероприятий.Мероприятие == СтатусыМероприятий.Мероприятие
        Где
            УчастникиМероприятий.Участник == %ФизическоеЛицо
            И УчастникиМероприятий.Роль == %{РолиУчастниковМероприятия.Ответственный}
            И СтатусыМероприятий.Статус == СтатусыМероприятия.Запланировано
            И УчастникиМероприятий.ПровестиНеПозднее < %{Дата.Сейчас()}
    }
    возврат Запрос.Выполнить().Единственный().Количество
;

@НаСервере
статический метод АктивныеМероприятияТекущегоПользователя(ФизическоеЛицо: ФизическиеЛица.Ссылка, Роль: РолиУчастниковМероприятия): Число
    знч Запрос = Запрос{
        Выбрать
            Сумма(1).ЗаменитьNull(0) Как Количество
        Из
            УчастникиМероприятий Как УчастникиМероприятий
            Соединение СтатусыМероприятий.СрезПоследних Как СтатусыМероприятий
                По УчастникиМероприятий.Мероприятие == СтатусыМероприятий.Мероприятие
        Где
            УчастникиМероприятий.Участник == %ФизическоеЛицо
            И УчастникиМероприятий.Роль == %Роль
            И СтатусыМероприятий.Статус == СтатусыМероприятия.Запланировано
            И УчастникиМероприятий.ПровестиНеРанее <= %{Дата.Сейчас()}
            И УчастникиМероприятий.ПровестиНеПозднее >= %{Дата.Сейчас()}
    }
    возврат Запрос.Выполнить().Единственный().Количество
;

@НаСервере
статический метод АдаптируемыеСотрудникиСАктивнымиМероприятиями(): Число
    знч Запрос = Запрос{
        Выбрать
            Количество(Различные ПроцессыАдаптации.Сотрудник).ЗаменитьNull(0) Как КоличествоСотрудников
        Из
            ПроцессыАдаптации Как ПроцессыАдаптации
            Соединение Мероприятия Как Мероприятия
                По ПроцессыАдаптации.Ссылка == Мероприятия.ПроцессАдаптации
            Соединение СтатусыМероприятий.СрезПоследних Как СтатусыМероприятий
                По Мероприятия.Ссылка == СтатусыМероприятий.Мероприятие
        Где
            Мероприятия.ПровестиНеРанее <= %{Дата.Сейчас()}
            И Мероприятия.ПровестиНеПозднее >= %{Дата.Сейчас()}
            И СтатусыМероприятий.Статус == СтатусыМероприятия.Запланировано
    }
    возврат Запрос.Выполнить().Единственный().КоличествоСотрудников
;

@НаСервере
статический метод АдаптируемыеСотрудники(): Число
    знч Запрос = Запрос{
        Выбрать
            Количество(Различные ПроцессыАдаптации.Сотрудник).ЗаменитьNull(0) Как КоличествоСотрудников
        Из
            ПроцессыАдаптации Как ПроцессыАдаптации
            Соединение СтатусыПроцессовАдаптации Как СтатусыПроцессовАдаптации
                По ПроцессыАдаптации.Ссылка == СтатусыПроцессовАдаптации.ПроцессАдаптации
        Где
            СтатусыПроцессовАдаптации.Статус == СтатусыПроцессаАдаптации.Выполняется
    }
    возврат Запрос.Выполнить().Единственный().КоличествоСотрудников
;