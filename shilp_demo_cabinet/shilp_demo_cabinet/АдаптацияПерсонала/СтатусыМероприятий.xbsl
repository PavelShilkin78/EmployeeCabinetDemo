импорт КонтрольДоступа

//КонтрольДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): ЧитаемаяКоллекция<РазрешениеДоступа>
    возврат [КонтрольДоступа.ЧтениеАутентифицированным(этот),
            КонтрольДоступа.ПолныйДоступИнформационнойСистеме(этот)] 
;

//КонтрольДоступа

@ВПроекте
@НаСервере @ДоступноСКлиента
метод Записать(Мероприятие: Мероприятия.Ссылка, Статус: СтатусыМероприятия)
    знч Запись = новый СтатусыМероприятий.Запись()
    Запись.Период = ДатаВремя.Сейчас()
    Запись.Мероприятие = Мероприятие
    Запись.Статус = Статус
    Запись.Автор = ПользователиСистемы.ТекущееФизическоеЛицо()
    Записать(Запись)
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод Записать(Мероприятия: Обходимое<Мероприятия.Ссылка>, Статус: СтатусыМероприятия)
    для Мероприятие из Мероприятия
        Записать(Мероприятие, Статус)
    ;
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод Прочитать(Мероприятие: Мероприятия.Ссылка): СтатусыМероприятия
    знч Запрос = Запрос{
        Выбрать
            Статус
        Из
            СтатусыМероприятий.СрезПоследних
        Где
            Мероприятие == %Мероприятие
    }
    возврат Запрос.Выполнить().Единственный().Статус
;

@ВПроекте
@НаКлиенте
метод Установить(Мероприятие: Мероприятия.Ссылка, Статус: СтатусыМероприятия)
    знч Предупреждение = ПроверитьВозможностьИзмененияСтатуса(Мероприятие)
    если Предупреждение != Неопределено
        Предупреждение.Показать()
        возврат
    ;
    ЗаписатьСКонтролем(Мероприятие, Статус)
    СтатусМероприятияПослеЗаписи.Оповестить(Мероприятие)
;

@ВПроекте
@НаКлиенте
метод Установить(Мероприятия: ЧитаемаяКоллекция<Мероприятия.Ссылка>, Статус: СтатусыМероприятия)
    ЗаписатьСКонтролем(Мероприятия, Статус)
    для Мероприятие из Мероприятия
        СтатусМероприятияПослеЗаписи.Оповестить(Мероприятие)
    ;
;

@НаСервере @ДоступноСКлиента
метод ЗаписатьСКонтролем(Мероприятие: Мероприятия.Ссылка, Статус: СтатусыМероприятия)
    ПроверитьВозможностьИзмененияСтатусаКонтрольно(Мероприятие)
    исп КонтекстДоступа.Привилегированный()
    Записать(Мероприятие, Статус)
;

@НаСервере @ДоступноСКлиента
метод ЗаписатьСКонтролем(Мероприятия: Обходимое<Мероприятия.Ссылка>, Статус: СтатусыМероприятия)
    для Мероприятие из Мероприятия
        ПроверитьВозможностьИзмененияСтатусаКонтрольно(Мероприятие)
    ;
    исп КонтекстДоступа.Привилегированный()
    Записать(Мероприятия, Статус)
;

@НаСервере @ДоступноСКлиента
метод ПроверитьВозможностьИзмененияСтатуса(Мероприятие: Мероприятия.Ссылка): ПредупреждениеПользователя?
    если не АдаптацияПерсонала.МожноРедактироватьСтатусМероприятия(Мероприятие)
        возврат ПредупреждениеПользователя.НедопустимоеСостояние(
            "В текущем состоянии процесса адаптации нельзя изменить статус мероприятия")
    ;
    если не АдаптацияПерсонала.ЕстьПравоРедактироватьСтатусМероприятия(Мероприятие)
        возврат ПредупреждениеПользователя.ОтсутствиеПрав(
            "Отсутствуют необходимые права доступа для изменения статуса мероприятия")
    ;
    возврат Неопределено
;

@НаСервере
метод ПроверитьВозможностьИзмененияСтатусаКонтрольно(Мероприятие: Мероприятия.Ссылка)
    если не АдаптацияПерсонала.МожноРедактироватьСтатусМероприятия(Мероприятие)
        выбросить новый ИсключениеНедопустимоеСостояние("Невозможно редактировать статус мероприятия")
    ;
    если не АдаптацияПерсонала.ЕстьПравоРедактироватьСтатусМероприятия(Мероприятие)
        выбросить новый ИсключениеВыполнения("Нет права на редактирования статуса мероприятия")
    ;
;