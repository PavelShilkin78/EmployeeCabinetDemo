импорт ВебApi
импорт ФизическиеЛица
импорт ОбщиеСтандартные
импорт УниверсальныеМеханизмы

@ВПроекте
структура Мероприятие_2_0
    @JsonСвойство("ID")
    обз знч Ид: Строка
    @JsonСвойство("name")
    обз знч Наименование: Строка
    @JsonСвойство("adaptationProcessID")
    обз знч ПроцессАдаптации: Строка
    @JsonСвойство("startDate")
    обз знч ПровестиНеРанее: Дата
    @JsonСвойство("endDate")
    обз знч ПровестиНеПозднее: Дата
    @JsonСвойство("responsibleID")
    обз знч Ответственный: Строка
    @JsonСвойство("participants")
    обз знч Участники: Массив<Строка>
    @JsonСвойство("unplanned")
    обз знч Внеплановое: Булево
    @JsonСвойство("statusHistory")
    обз знч ИсторияСтатусов: Массив<ЗаписьСтатусМероприятия_2_0>
    @JsonСвойство("attachments")
    обз знч Вложения: Массив<МенеджерФайлов.ДанныеФайлаJson>
;

перечисление СтатусыМероприятия_2_0
    draft,
    planned,
    finished,
    cancelled
;

структура ЗаписьСтатусМероприятия_2_0
    @JsonСвойство("date")
    обз знч Период: ДатаВремя
    @JsonСвойство("status")
    обз знч Статус: СтатусыМероприятия_2_0
    @JsonСвойство("authorID")
    обз знч Автор: Строка?
;

@ВПодсистеме
метод ТипОбъектаJson(): Строка
    возврат "adaptationEvents"
;

@ВПодсистеме
метод ТипДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    если ВерсияФорматаОбмена == Неопределено или ВерсияФорматаОбмена < Версия{2.0}
        выбросить новый ИсключениеВыполнения("Неверный формат")
    ;
    возврат Тип<Мероприятие_2_0>
;

@ВПодсистеме
метод ТипКоллекцииДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    если ВерсияФорматаОбмена == Неопределено или ВерсияФорматаОбмена < Версия{2.0}
        выбросить новый ИсключениеВыполнения("Неверный формат")
    ;
    возврат Тип<Массив<Мероприятие_2_0>>
;

@ВПодсистеме
метод ГруппаИзмененийВJson(Ссылки: ЧитаемаяКоллекция<Мероприятия.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?): ЧитаемоеСоответствие<Строка, Массив<Объект?>>
    если ВерсияФорматаОбмена == Неопределено или ВерсияФорматаОбмена < Версия{2.0}
        выбросить новый ИсключениеВыполнения("Неверный формат")
    ;
    возврат {"adaptationEvents": ПолучитьМероприятия_2_0(Ссылки, Сервисы)}
;

@ВПодсистеме
метод ПолучитьДанныеJson(Ссылка: Мероприятия.Ссылка, Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?): Объект
    если ВерсияФорматаОбмена == Неопределено или ВерсияФорматаОбмена < Версия{2.0}
        выбросить новый ИсключениеВыполнения("Неверный формат")
    ;
    возврат ПолучитьМероприятие_2_0(Ссылка, Сервисы)
;

метод ПолучитьМероприятие_2_0(Ссылка: Мероприятия.Ссылка, Сервисы: ВебApiСервер.СервисыУпаковкиJson): Мероприятие_2_0
    возврат ПолучитьМероприятия_2_0([Ссылка], Сервисы).Первый()! как Мероприятие_2_0
;

метод ПолучитьМероприятия_2_0(Ссылки: ЧитаемаяКоллекция<Мероприятия.Ссылка>, Сервисы: ВебApiСервер.СервисыУпаковкиJson): Массив<Объект?>
    знч Данные: Массив<Объект?>
    если Ссылки.Пусто()
        возврат Данные
    ;
    знч ДанныеМероприятий = Мероприятия.Прочитать(Ссылки)
    для КлючЗначение из ДанныеМероприятий
        знч Мероприятие = КлючЗначение.Ключ
        знч ДанныеМероприятия = КлючЗначение.Значение
        знч Участники: Массив<Строка>
        для УчастникМероприятия из ДанныеМероприятия.Участники
            Участники.Добавить(Сервисы.ПолучитьИдентификатор(УчастникМероприятия.Участник))
        ;
        Данные.Добавить(новый Мероприятие_2_0(
            Ид = Сервисы.ПолучитьИдентификатор(Мероприятие),
            Наименование = ДанныеМероприятия.Наименование,
            ПроцессАдаптации = Сервисы.ПолучитьИдентификатор(ДанныеМероприятия.ПроцессАдаптации),
            ПровестиНеРанее = ДанныеМероприятия.ПровестиНеРанее,
            ПровестиНеПозднее = ДанныеМероприятия.ПровестиНеПозднее,
            Ответственный = Сервисы.ПолучитьИдентификатор(ДанныеМероприятия.Ответственный),
            Участники = Участники,
            Внеплановое = ДанныеМероприятия.Внеплановое,
            ИсторияСтатусов = ПолучитьЗаписиСтатусаМероприятия_2_0(Мероприятие, Сервисы),
            Вложения = ВложенияВJson(Мероприятие, Сервисы)
        ))
    ;
    возврат Данные
;

метод ВложенияВJson(ВладелецФайлов: Мероприятия.Ссылка, Сервисы: ВебApiСервер.СервисыУпаковкиJson): Массив<МенеджерФайлов.ДанныеФайлаJson>
    возврат Файлы.ПолучитьДанныеФайловJson(ВладелецФайлов, Ложь, Сервисы).Вложения ?? []
;

метод ПолучитьСтатусМероприятия_2_0(Статус: СтатусыМероприятия): СтатусыМероприятия_2_0
    выбор Статус
    когда Черновик
        возврат СтатусыМероприятия_2_0.draft
    когда Запланировано
        возврат СтатусыМероприятия_2_0.planned
    когда Проведено
        возврат СтатусыМероприятия_2_0.finished
    когда Отменено
        возврат СтатусыМероприятия_2_0.cancelled
    иначе
        выбросить новый ИсключениеВыполнения("Неизвестный статус: %Статус")
    ;
;

метод ПолучитьЗаписиСтатусаМероприятия_2_0(Мероприятие: Мероприятия.Ссылка, Сервисы: ВебApiСервер.СервисыУпаковкиJson): Массив<ЗаписьСтатусМероприятия_2_0>
    знч Запрос = Запрос{
        Выбрать
            Период,
            Статус,
            Автор
        Из
            СтатусыМероприятий
        Где
            Мероприятие == %Мероприятие
        Упорядочить По
            Период Возр
    }
    исп РезультатЗапроса = Запрос.Выполнить()
    знч Записи: Массив<ЗаписьСтатусМероприятия_2_0>
    для СтрокаРезультата из РезультатЗапроса
        Записи.Добавить(новый ЗаписьСтатусМероприятия_2_0(
            Период = СтрокаРезультата.Период,
            Статус = ПолучитьСтатусМероприятия_2_0(СтрокаРезультата.Статус),
            Автор = СтрокаРезультата.Автор == Неопределено ? Неопределено : Сервисы.ПолучитьИдентификатор(СтрокаРезультата.Автор!)
        ))
    ;
    возврат Записи
;

@ВПодсистеме
метод ЗагрузитьОбъектИзJson(ТипДанных: Тип, ДанныеJson: Объект?, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    выбор ТипДанных
    когда Тип<Мероприятие_2_0>
        ЗагрузитьМероприятие(ДанныеJson как Мероприятие_2_0, Сервисы)
    ;
;

метод ЗагрузитьМероприятие(ДанныеМероприятия: Мероприятие_2_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    исп Транзакции.Начать()

    знч Мероприятие = Сервисы.ПрочитатьОбъект(ДанныеМероприятия.Ид, &НовоеМероприятие, Тип<Мероприятия.Ссылка>) как Мероприятия.Объект
    Мероприятие.Наименование = ДанныеМероприятия.Наименование
    Мероприятие.ПроцессАдаптации = Сервисы.ПолучитьСсылку(ПроцессыАдаптацииDto.ВнешняяСсылка(ДанныеМероприятия.ПроцессАдаптации)) как ПроцессыАдаптации.Ссылка
    Мероприятие.ПровестиНеРанее = ДанныеМероприятия.ПровестиНеРанее
    Мероприятие.ПровестиНеПозднее = ДанныеМероприятия.ПровестиНеПозднее
    Мероприятие.Ответственный = Сервисы.ПолучитьСсылку(ФизическиеЛица.ВнешняяСсылка(ДанныеМероприятия.Ответственный)) как ФизическиеЛица.Ссылка
    Мероприятие.Внеплановое = ДанныеМероприятия.Внеплановое
    ЗагрузитьУчастниковМероприятия(Мероприятие, ДанныеМероприятия, Сервисы)
    Сервисы.ЗаписатьОбъект(новый ВебApiСервер.ПараметрыЗаписиВходящихДанных(Мероприятие, ДанныеМероприятия.Ид), Сервисы.ИнструментыМенеджераОбъекта)

    ЗагрузитьЗаписиСтатусМероприятия(Мероприятие.Ссылка, ДанныеМероприятия.ИсторияСтатусов, Сервисы)
    ЗагрузитьВложения(Мероприятие.Ссылка, ДанныеМероприятия.Вложения, Сервисы)
;

метод ЗагрузитьВложения(Мероприятие: Мероприятия.Ссылка, attachments: Массив<МенеджерФайлов.ДанныеФайлаJson>, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    знч Вложения = Файлы.ВложенияИзJson(attachments, Сервисы, Мероприятие)
    Файлы.ЗаписатьФайлыПоВладельцу(Вложения, Мероприятие)
;

метод ЗагрузитьУчастниковМероприятия(Мероприятие: Мероприятия.Объект, ДанныеМероприятия: Мероприятие_2_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    Мероприятие.Участники.Очистить()
    для УчастникИд из ДанныеМероприятия.Участники
        Мероприятие.Участники.Добавить(новый УчастникМероприятия(
            Участник = Сервисы.ПолучитьСсылку(ФизическиеЛица.ВнешняяСсылка(УчастникИд)) как ФизическиеЛица.Ссылка
        ))
    ;
;

метод ЗагрузитьЗаписиСтатусМероприятия(Мероприятие: Мероприятия.Ссылка, Записи: Массив<ЗаписьСтатусМероприятия_2_0>, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    знч НаборЗаписей = новый СтатусыМероприятий.НаборЗаписей()
    НаборЗаписей.Фильтр.Мероприятие.Установить(Мероприятие)
    для Запись из Записи
        НаборЗаписей.ДобавитьЗапись(
            Мероприятие = Мероприятие,
            Период = Запись.Период,
            Статус = ПолучитьСтатусМероприятия(Запись.Статус),
            Автор = Запись.Автор == Неопределено ? Неопределено : Сервисы.ПолучитьСсылку(ФизическиеЛица.ВнешняяСсылка(Запись.Автор!)) как ФизическиеЛица.Ссылка
        )
    ;
    НаборЗаписей.Записать()
;

метод ПолучитьСтатусМероприятия(Статус: СтатусыМероприятия_2_0): СтатусыМероприятия
    выбор Статус
    когда draft
        возврат СтатусыМероприятия.Черновик
    когда planned
        возврат СтатусыМероприятия.Запланировано
    когда finished
        возврат СтатусыМероприятия.Проведено
    когда cancelled
        возврат СтатусыМероприятия.Отменено
    ;
;

метод НовоеМероприятие(Ууид: Ууид): Мероприятия.Объект
    возврат новый Мероприятия.Объект(Ууид)
;

@ВПодсистеме
метод ВнешняяСсылка(Идентификатор: Строка): ВебApiСервер.ВнешняяСсылка
    возврат новый ВебApiСервер.ВнешняяСсылка(Идентификатор, (Ууид) -> Мероприятия.ПолучитьСсылку(Ууид))
;