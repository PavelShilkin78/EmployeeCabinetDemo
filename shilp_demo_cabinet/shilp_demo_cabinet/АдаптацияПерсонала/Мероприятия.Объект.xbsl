импорт УниверсальныеМеханизмы
импорт ФизическиеЛица
импорт ОбщиеСтандартные

@ВПроекте
метод ДобавитьУчастника(Участник: ФизическиеЛица.Ссылка)
    этот.Участники.Добавить(новый УчастникМероприятия(Участник))
;

@Обработчик
@ВыполнятьПриЗагрузкеДанных
метод ПередЗаписью(До: Мероприятия.Данные, ПараметрыЗаписи: Мероприятия.ПараметрыЗаписи)
    УдалитьПовторяющихсяУчастников()
    ЗаполнитьКоличествоУчастников()
    УстановитьСтатусПоУмолчаниюДляНового(ПараметрыЗаписи)
    ОбновитьУчастникиХеш()
;

@Обработчик
@ВыполнятьПриЗагрузкеДанных
метод ПослеЗаписи(До: Мероприятия.Данные, ПараметрыЗаписи: Мероприятия.ПараметрыЗаписи)
    исп КонтекстДоступа.Привилегированный()
    ЗаписатьСтатус(ПараметрыЗаписи)
    ЗаписатьПрисоединенныеФайлы(ПараметрыЗаписи)
;

метод УдалитьПовторяющихсяУчастников()
    знч УчастникиБезПовторений = новый Множество(Участники)
    УчастникиБезПовторений.Удалить(новый УчастникМероприятия(Ответственный))
    Участники.Очистить()
    Участники.ДобавитьВсе(УчастникиБезПовторений)
;

метод ЗаполнитьКоличествоУчастников()
    КоличествоУчастников = Участники.Размер() + 1
;

метод УстановитьСтатусПоУмолчаниюДляНового(ПараметрыЗаписи: Мероприятия.ПараметрыЗаписи)
    если не ПараметрыЗаписи.РежимЗагрузкиДанных и ЭтоНовый() и ПараметрыЗаписи.Статус == Неопределено
        знч СтатусПоУмолчанию: СтатусыМероприятия
        ПараметрыЗаписи.Статус = СтатусПоУмолчанию
    ;
;

метод ОбновитьУчастникиХеш()
    УчастникиХеш = Хеширование.РассчитатьХешСтрокуРеквизитаКоллекции(Участники)    
;

метод ЗаписатьСтатус(ПараметрыЗаписи: Мероприятия.ПараметрыЗаписи)
    если ПараметрыЗаписи.Статус != Неопределено
        СтатусыМероприятий.Записать(Ссылка, ПараметрыЗаписи.Статус!)
    ;
;

метод ЗаписатьПрисоединенныеФайлы(ПараметрыЗаписи: Мероприятия.ПараметрыЗаписи)
    если ПараметрыЗаписи.ПрисоединенныеФайлы != Неопределено
        ПараметрыЗаписи.ПрисоединенныеФайлы.Владелец = Ссылка
        ПрисоединенныеФайлыМенеджер.Записать(ПараметрыЗаписи.ПрисоединенныеФайлы!)
    ;
;