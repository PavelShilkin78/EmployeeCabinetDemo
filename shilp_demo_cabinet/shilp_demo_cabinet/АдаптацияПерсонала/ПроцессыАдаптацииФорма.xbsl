импорт АдаптацияПерсонала
импорт СтандартноеПриложение
импорт ФизическиеЛица
импорт ИнтерфейсныеКомпонентыСтандартные

@ВПроекте
@Реализация
метод Заголовок(): Строка
    возврат "Процессы адаптации"
;

@ВПроекте
@Реализация
метод КомандыСоздания(): Команда|ГруппаКомандногоИнтерфейса<Команда>|Неопределено
    возврат КомандыСозданияФормы
;

@ВПроекте
@Реализация
метод ДополнительныеКоманды(): ФрагментКомандногоИнтерфейса<Команда>?
    возврат Неопределено
;

@ВПроекте
@Реализация
метод ОсновнаяКоманда(): Команда?
    возврат Неопределено
;

@ВПроекте
@Реализация
метод ОбычныеКоманды(): ФрагментКомандногоИнтерфейса<Команда>?
    возврат Неопределено
;

@Обработчик
метод ПослеСоздания()
    ПослеСозданияВидимостьЗаглушки()
    СтатусПроцессаАдаптацииПослеЗаписи.ПодключитьОбработчик(&СтатусПроцессаАдаптацииПослеЗаписи)
    УстановитьДопустимыйФильтрПоСтатусу()
    УстановитьПоУмолчаниюФильтрПоСтатусу()
;

метод ПослеСозданияВидимостьЗаглушки()
    ЕстьЗаписи = ПроцессыАдаптации.ЕстьЗаписи()
    если не ЕстьЗаписи
        ПроцессАдаптацииПослеЗаписи.ПодключитьОбработчик(метод(ПроцессАдаптации) ->
            ЕстьЗаписи = ПроцессыАдаптации.ЕстьЗаписи()
        ;)
    ;
;

метод СтатусПроцессаАдаптацииПослеЗаписи(ПроцессАдаптации: ПроцессыАдаптации.Ссылка)
    Компоненты.ПроцессыАдаптации.Обновить()
;

метод СоздатьПроцессАдаптацииВидимость(): Булево
    возврат АдаптацияПерсонала.МожноСоздатьПроцессАдаптации()
        и АдаптацияПерсонала.ЕстьПравоСоздатьПроцессАдаптации()    
;

метод СоздатьПроцессАдаптацииОбработчик(Команда: ОбычнаяКоманда)
    знч Карточка = ПроцессыАдаптации.СоздатьКарточкуНового()
    ОткрытьКарточку(Карточка)
;

метод ЗаглушкаВидимость(): Булево
    возврат не ПроцессыАдаптацииВидимость()    
;

метод ПроцессыАдаптацииВидимость(): Булево
    возврат ЕстьЗаписи    
;

метод ПроцессыАдаптацииПриНажатииСтроки(Источник: Список<ДинамическийСписок>, Событие: СобытиеСДанными<СтрокаСписка<СтрокаДинамическогоСписка>>)
    знч ПроцессАдаптации = Событие.Данные.ДанныеСтроки.Ключ как ПроцессыАдаптации.Ссылка
    знч Карточка = ПроцессыАдаптации.СоздатьКарточку(ПроцессАдаптации)
    ОткрытьКарточку(Карточка)
;

метод ОткрытьКарточку(Карточка: ПроцессАдаптацииКарточка)
    ИнтерфейсныеКомпоненты.ОткрытьЗамещающуюФорму(этот, Карточка)
;

метод УстановитьДопустимыйФильтрПоСтатусу()
    если РасширениеПерсонал.Доступно()
        Компоненты.ФильтрПоСтатусу.ДопустимыеЗначения = {СтатусыПроцессаАдаптации.Черновик, СтатусыПроцессаАдаптации.Выполняется,
                                                        СтатусыПроцессаАдаптации.Завершен, СтатусыПроцессаАдаптации.Отменен}
    ;
;

метод УстановитьПоУмолчаниюФильтрПоСтатусу()
    выбор
    когда ФильтрПоСтатусу != Неопределено
        Компоненты.ФильтрПоСтатусу.Значения = ФильтрПоСтатусу!.ВоМножество()  
    когда РасширениеПерсонал.Доступно()
        Компоненты.ФильтрПоСтатусу.Значения = {СтатусыПроцессаАдаптации.Черновик, СтатусыПроцессаАдаптации.Выполняется}
    ;
;

метод ИспользоватьАдаптивнуюКолонку(): Булево
    возврат КлиентскоеУстройство.ВидИнтерфейса != ВидИнтерфейса.Компьютер
;

метод МиниатюраИзображение(ДанныеСтроки: СтрокаДинамическогоСписка): ДвоичныйОбъект.Ссылка?
    знч Миниатюра = ДанныеСтроки.Данные["Миниатюра"]
    если Миниатюра это ДвоичныйОбъект.Ссылка
        возврат Миниатюра как ДвоичныйОбъект.Ссылка
    ;
    возврат СтандартноеПриложение.ПараметрыСеанса().АватарПоУмолчанию
;

метод Сотрудник(ДанныеСтроки: СтрокаДинамическогоСписка): ФизическиеЛица.Ссылка
    возврат ДанныеСтроки.Данные["Сотрудник"] как ФизическиеЛица.Ссылка
;

метод Статус(ДанныеСтроки: СтрокаДинамическогоСписка): СтатусыПроцессаАдаптации
    возврат ДанныеСтроки.Данные["Статус"] как СтатусыПроцессаАдаптации
;