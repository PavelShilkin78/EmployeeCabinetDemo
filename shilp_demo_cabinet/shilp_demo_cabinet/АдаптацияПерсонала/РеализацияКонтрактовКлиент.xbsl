импорт СтандартноеПриложение
импорт ИнтерфейсныеКомпонентыСтандартные
импорт Отчеты

// Контракт ОсновнойИнтерфейсПоставщик
@ВПроекте
@Реализация
метод РазделыПриложения(): ЧитаемаяКоллекция<ОсновнойИнтерфейс.ОписаниеРаздела>
    если ИспользованиеРаздела()
        возврат [ОписаниеРаздела()]
    иначе
        возврат []
    ;
;

@ВПроекте
@Реализация
метод КомандыВсеФункции(): ЧитаемаяКоллекция<ОсновнойИнтерфейс.ОписательКомандыВсеФункции>
    знч Группа = новый ОсновнойИнтерфейс.ОписательГруппыКомандВсеФункции(АдаптацияПерсонала.ИМЯ_РАЗДЕЛА_АДАПТАЦИЯ_ПЕРСОНАЛА, 16)
    возврат [
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа,
            Представление = "Процессы адаптации",
            СоздательФормыСписка = метод()-> возврат новый ПроцессыАдаптации.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый ПроцессыАдаптации.АвтоматическаяФормаОбъекта();
        ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа,
            Представление = "Статусы процессов адаптации",
            СоздательФормыСписка = метод()-> возврат новый СтатусыПроцессовАдаптации.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый СтатусыПроцессовАдаптации.АвтоматическаяФормаОбъекта();
        ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа,
            Представление = "Мероприятия",
            СоздательФормыСписка = метод()-> возврат новый Мероприятия.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый Мероприятия.АвтоматическаяФормаОбъекта();
        ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа,
            Представление = "Статусы мероприятий",
            СоздательФормыСписка = метод()-> возврат новый СтатусыМероприятий.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый СтатусыМероприятий.АвтоматическаяФормаОбъекта();
        ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа,
            Представление = "Участники мероприятий",
            СоздательФормыСписка = метод()-> возврат новый УчастникиМероприятий.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый УчастникиМероприятий.АвтоматическаяФормаОбъекта();
        ),
        новый ОсновнойИнтерфейс.ОписательКомандыВсеФункции(
            Группа = Группа,
            Представление = "Используемая функциональность (Адаптация)",
            СоздательФормыСписка = метод()-> возврат новый ИспользуемаяФункциональность.АвтоматическаяФормаСписка();,
            СоздательФормыОбъекта = метод()-> возврат новый ИспользуемаяФункциональность.АвтоматическаяФормаОбъекта();
        )
    ]
;

@ВПроекте
@Реализация
метод Виджеты(): ЧитаемаяКоллекция<ОсновнойИнтерфейс.ОписаниеВиджета>
    если ИспользованиеРаздела()
        возврат [ОписаниеВиджета()]
    иначе
        возврат []
    ;
;

@ВПроекте
@Реализация
метод ДополнительныеКоманды(): ЧитаемыйМассив<Команда>
    возврат []
;

@ВПроекте
@Реализация
метод КомандыПанелиДействий(): ЧитаемыйМассив<Команда>
    возврат []
;

@ВПроекте
@Реализация
метод ДополнительныеКомандыПанелиГлавное(): ЧитаемыйМассив<Команда>
    возврат []
;

// Конец ОсновнойИнтерфейсПоставщик

// Контракт ОтчетыПоставщик

@ВПроекте
@Реализация
метод ОписаниеРазделаОтчетов(): ОтчетыПоставщик.РазделСОтчетами?
    если не ИспользованиеРаздела()
        возврат Неопределено
    ;
    возврат новый ОтчетыПоставщик.РазделСОтчетами(
        НаименованиеРаздела = АдаптацияПерсонала.ИМЯ_РАЗДЕЛА_АДАПТАЦИЯ_ПЕРСОНАЛА,
        Иконка = Ресурс{ФайлКонтур.svg}.Ссылка,
        Отчеты = [
                    новый ОтчетыПоставщик.ОписательОтчета(
                        Наименование = "Процесс адаптации",
                        СоздательФормы = () -> новый ФормаСтатистикаАдаптацииПерсонала(),
                        ДоступностьОтчета = () -> АдаптацияПерсонала.ПараметрыСеанса().ДоступКОтчетам или АдаптацияПерсонала.ПараметрыСеанса().ЭтоКонтролирующийАдаптацию
                    )
                ]
        )
;

// Контракт ОтчетыПоставщик

метод ИспользованиеРаздела(): Булево
    возврат АдаптацияПерсонала.ПараметрыСеанса().ПоказыватьРаздел
;

метод ОписаниеРаздела(): ОсновнойИнтерфейс.ОписаниеРаздела
    возврат новый ОсновнойИнтерфейс.ОписаниеРаздела(
        Ид = АдаптацияПерсонала.ИД_РАЗДЕЛА_АДАПТАЦИЯ_ПЕРСОНАЛА,
        Имя = АдаптацияПерсонала.ИМЯ_РАЗДЕЛА_АДАПТАЦИЯ_ПЕРСОНАЛА,
        НавигационнаяКомандаРаздела = НавигацияАдаптацияПерсонала,
        Пиктограмма = НавигацияАдаптацияПерсонала.Изображение,
        ЦветПиктограммы = БиблиотекаЦветов.ВидыЦвета.Оранжевый,
        ШиринаДляПанелиНавигации = 100
    )
;

метод ОписаниеВиджета(): ОсновнойИнтерфейс.ОписаниеВиджета
    возврат новый ОсновнойИнтерфейс.ОписаниеВиджета(
        Ид = АдаптацияПерсонала.ИД_РАЗДЕЛА_АДАПТАЦИЯ_ПЕРСОНАЛА,
        ИдРаздела = АдаптацияПерсонала.ИД_РАЗДЕЛА_АДАПТАЦИЯ_ПЕРСОНАЛА,
        Имя = "Адаптация персонала",
        Компонент = новый АдаптацияПерсоналаВиджетСодержимое()
    )
;