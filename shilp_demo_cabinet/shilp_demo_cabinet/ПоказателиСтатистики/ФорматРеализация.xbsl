импорт ВебApi
импорт УниверсальныеМеханизмы

конст ОБЯЗАТЕЛЬНЫЙ: Булево = Истина
конст НЕОБЯЗАТЕЛЬНЫЙ: Булево = Ложь

конст СТРОКА_ПО_СОСТОЯНИЕ_КАБИНЕТА: ЧитаемоеСоответствие<СостоянияКабинетов, Строка> = {
    СостоянияКабинетов.Новый: "new",
    СостоянияКабинетов.ОтправленоПриглашение: "invitationSent",
    СостоянияКабинетов.Активирован: "activated",
    СостоянияКабинетов.ВременноОтключен: "temporarilyDisabled"}

конст СТРОКА_ПО_РАЗМЕР_ВЛОЖЕНИЯ: ЧитаемоеСоответствие<РазмерВложения, Строка> = {
    РазмерВложения.Крошечный: "tiny", 
    РазмерВложения.Маленький: "small", 
    РазмерВложения.Средний: "medium", 
    РазмерВложения.Большой: "large", 
    РазмерВложения.Огромный: "huge"}

структура СтатистикиКабинета
    обз пер status: Строка
    обз пер count: Число
;

структура СтатистикиСправочника
    обз пер referenceType: Строка
    обз пер referenceName: Строка
    обз пер count: Число
;

структура СтатистикиДокумента
    обз пер documentType: Строка
    обз пер documentName: Строка
    обз пер status: Строка
    обз пер period: Дата
    обз пер count: Число
;

структура СтатистикиРасчетногоЛистка
    обз пер period: Дата
    обз пер isFirstHalf: Булево
    обз пер signed: Булево
    обз пер count: Число
;

структура СтатистикиВложения
    обз пер size: Строка
    обз пер ownerType: Строка
    обз пер ownerName: Строка
    обз пер volume: Число
    обз пер count: Число
;

структура ОшибкаПриложения
    обз пер period: Момент
    обз пер representation: Строка
    обз пер properties: ЧитаемоеСоответствие<Строка, Объект?>
;

@ВПодсистеме
метод СтатистикаЛичныхКабинетовВФормат(Статистика: ЧитаемыйМассив<ПоказателиСтатистики.ЛичныеКабинеты>): Строка
    пер СвойстваСтатистикиКабинетов: Массив<СтатистикиКабинета>
    для ЭлементСтатистики из Статистика
        СвойстваСтатистикиКабинетов.Добавить(новый СтатистикиКабинета(
            СостояниeЛичногоКабинетаВФормат(ЭлементСтатистики.Состояние),
            ЭлементСтатистики.Количество
            )
        )
    ;
    возврат СервисыHttp.ДанныеJsonВСтроку(СвойстваСтатистикиКабинетов)
;

@ВПодсистеме
метод СтатистикаЛичныхКабинетовJson(Статистика: ЧитаемыйМассив<ПоказателиСтатистики.ЛичныеКабинеты>): Массив<ПоказателиСтатистики.СтатистикаЛичныхКабинетовJson>
    пер ДанныеJson: Массив<ПоказателиСтатистики.СтатистикаЛичныхКабинетовJson>
    для ЭлементСтатистики из Статистика  
        ДанныеJson.Добавить(новый ПоказателиСтатистики.СтатистикаЛичныхКабинетовJson(
            СостояниeЛичногоКабинетаВJson(ЭлементСтатистики.Состояние),
            ЭлементСтатистики.Количество))
    ;   
    возврат ДанныеJson
;

метод СостояниeЛичногоКабинетаВJson(Состояние: СостоянияКабинетов): ПоказателиСтатистики.СостоянияКабинетовJson?
    пер СостояниеJson: ПоказателиСтатистики.СостоянияКабинетовJson?
    выбор Состояние
    когда Активирован
        СостояниеJson = ПоказателиСтатистики.СостоянияКабинетовJson.activated
    когда ВременноОтключен
        СостояниеJson = ПоказателиСтатистики.СостоянияКабинетовJson.temporarilyDisabled
    когда Новый
        СостояниеJson = ПоказателиСтатистики.СостоянияКабинетовJson._new
    когда ОтправленоПриглашение
        СостояниеJson = ПоказателиСтатистики.СостоянияКабинетовJson.invitationSent
    ;
    возврат СостояниеJson
;

@ВПодсистеме
метод СтатистикаСправочниковВФормат(Статистика: ЧитаемыйМассив<СтатистикаДанных.Справочник>): Строка
    пер СвойстваСтатистики: Массив<СтатистикиСправочника>
    для ЭлементСтатистики из Статистика
        СвойстваСтатистики.Добавить(новый СтатистикиСправочника(
            ЭлементСтатистики.ТипСправочника,
            ЭлементСтатистики.ИмяСправочника,
            ЭлементСтатистики.Количество
            )
        )
    ;
    возврат СервисыHttp.ДанныеJsonВСтроку(СвойстваСтатистики)
;

@ВПодсистеме
метод СтатистикаСправочниковJson(Статистика: ЧитаемыйМассив<СтатистикаДанных.Справочник>): Массив<ПоказателиСтатистики.СтатистикаСправочниковJson>
    пер ДанныеJson: Массив<ПоказателиСтатистики.СтатистикаСправочниковJson>
    для ЭлементСтатистики из Статистика  
        ДанныеJson.Добавить(новый ПоказателиСтатистики.СтатистикаСправочниковJson(
            ЭлементСтатистики.ТипСправочника,
            ЭлементСтатистики.ИмяСправочника,
            ЭлементСтатистики.Количество))
    ;   
    возврат ДанныеJson
;

@ВПодсистеме
метод СтатистикаДокументовВФормат(Статистика: ЧитаемыйМассив<СтатистикаДанных.Документ>): Строка
    пер СвойстваСтатистики: Массив<СтатистикиДокумента>
    для ЭлементСтатистики из Статистика
        СвойстваСтатистики.Добавить(новый СтатистикиДокумента(
            ЭлементСтатистики.ТипДокумента,
            ЭлементСтатистики.ИмяДокумента,
            СостояниеДокументов.СостояниеДокументаВJson(ЭлементСтатистики.Статус),
            ЭлементСтатистики.Дата,
            ЭлементСтатистики.Количество
            )
        )
    ;
    возврат СервисыHttp.ДанныеJsonВСтроку(СвойстваСтатистики)
;

@ВПодсистеме
метод СтатистикаДокументовJson(Статистика: ЧитаемыйМассив<СтатистикаДанных.Документ>): Массив<ПоказателиСтатистики.СтатистикаДокументовJson>
    пер ДанныеJson: Массив<ПоказателиСтатистики.СтатистикаДокументовJson>
    для ЭлементСтатистики из Статистика  
        ДанныеJson.Добавить(новый ПоказателиСтатистики.СтатистикаДокументовJson(
            ЭлементСтатистики.ТипДокумента,
            ЭлементСтатистики.ИмяДокумента,
            СостояниеДокументаВJson(ЭлементСтатистики.Статус),
            ЭлементСтатистики.Дата,
            ЭлементСтатистики.Количество))
    ;   
    возврат ДанныеJson
;

метод СостояниеДокументаВJson(Состояние: СостоянияДокумента): ПоказателиСтатистики.СостоянияДокументаJson?
    пер СостояниеJson: ПоказателиСтатистики.СостоянияДокументаJson?
    выбор Состояние
    когда Выполнен
        СостояниеJson = ПоказателиСтатистики.СостоянияДокументаJson.completed
    когда Подготовлен
        СостояниеJson = ПоказателиСтатистики.СостоянияДокументаJson.prepared
    когда ПолученОтказ
        СостояниеJson = ПоказателиСтатистики.СостоянияДокументаJson.rejected
    когда Черновик
        СостояниеJson = ПоказателиСтатистики.СостоянияДокументаJson.draft
    когда Аннулирован
        СостояниеJson = ПоказателиСтатистики.СостоянияДокументаJson.canceled
    ;
    возврат СостояниеJson
;

@ВПодсистеме
метод СтатистикаРасчетныхЛистковВФормат(Статистика: ЧитаемыйМассив<ПоказателиСтатистики.РасчетныеЛистки>): Строка
    пер СвойстваСтатистики: Массив<СтатистикиРасчетногоЛистка>
    для ЭлементСтатистики из Статистика
        СвойстваСтатистики.Добавить(новый СтатистикиРасчетногоЛистка(
            ЭлементСтатистики.Период,
            ЭлементСтатистики.ПерваяПоловинаМесяца,
            ЭлементСтатистики.Подписан,
            ЭлементСтатистики.Количество
            )
        )
    ;
    возврат СервисыHttp.ДанныеJsonВСтроку(СвойстваСтатистики)
;

@ВПодсистеме
метод СтатистикаРасчетныхЛистковJson(Статистика: ЧитаемыйМассив<ПоказателиСтатистики.РасчетныеЛистки>): Массив<ПоказателиСтатистики.СтатистикаРасчетныхЛистковJson>
    пер ДанныеJson: Массив<ПоказателиСтатистики.СтатистикаРасчетныхЛистковJson>
    для ЭлементСтатистики из Статистика  
        ДанныеJson.Добавить(новый ПоказателиСтатистики.СтатистикаРасчетныхЛистковJson(
            ЭлементСтатистики.Период,
            ЭлементСтатистики.ПерваяПоловинаМесяца,
            ЭлементСтатистики.Подписан,
            ЭлементСтатистики.Количество))
    ;   
    возврат ДанныеJson
;

@ВПодсистеме
метод СтатистикаВложенийВФормат(Статистика: ЧитаемыйМассив<ПоказателиСтатистики.Вложения>): Строка
    пер СвойстваСтатистики: Массив<СтатистикиВложения>
    для ЭлементСтатистики из Статистика
        СвойстваСтатистики.Добавить(новый СтатистикиВложения(
            РазмерВложенияВСтроку(ЭлементСтатистики.Размер),
            ЭлементСтатистики.ТипВладельца,
            ЭлементСтатистики.ИмяВладельца,
            ЭлементСтатистики.Объем,
            ЭлементСтатистики.Количество
            )
        )
    ;
    возврат СервисыHttp.ДанныеJsonВСтроку(СвойстваСтатистики)
;

@ВПодсистеме
метод СтатистикаВложенийJson(Статистика: ЧитаемыйМассив<ПоказателиСтатистики.Вложения>): Массив<ПоказателиСтатистики.СтатистикаВложенийJson>
    пер ДанныеJson: Массив<ПоказателиСтатистики.СтатистикаВложенийJson>
    для ЭлементСтатистики из Статистика  
        ДанныеJson.Добавить(новый ПоказателиСтатистики.СтатистикаВложенийJson(
            РазмерВложенияВJson(ЭлементСтатистики.Размер),
            ЭлементСтатистики.ТипВладельца,
            ЭлементСтатистики.ИмяВладельца,
            ЭлементСтатистики.Объем,
            ЭлементСтатистики.Количество))
    ;   
    возврат ДанныеJson
;

метод РазмерВложенияВJson(Размер: РазмерВложения): ПоказателиСтатистики.РазмерыВложенияJson?
    пер РазмерJson: ПоказателиСтатистики.РазмерыВложенияJson?
    выбор Размер
    когда Большой
        РазмерJson = ПоказателиСтатистики.РазмерыВложенияJson.large
    когда Крошечный
        РазмерJson = ПоказателиСтатистики.РазмерыВложенияJson.tiny
    когда Маленький
        РазмерJson = ПоказателиСтатистики.РазмерыВложенияJson.small
    когда Огромный
        РазмерJson = ПоказателиСтатистики.РазмерыВложенияJson.huge
    когда Средний
        РазмерJson = ПоказателиСтатистики.РазмерыВложенияJson.medium
    ;
    возврат РазмерJson
;

@ВПодсистеме
метод ОшибкиПриложенияВФормат(Ошибки: ЧитаемыйМассив<ПоказателиСтатистики.ОшибкаПриложения>): Строка
    пер СвойстваСтатистики: Массив<ОшибкаПриложения>
    для ТекущаяОшибка из Ошибки
        СвойстваСтатистики.Добавить(новый ОшибкаПриложения(
            ТекущаяОшибка.Дата,
            ТекущаяОшибка.Представление,
            ТекущаяОшибка.Свойства
            )
        )
    ;
    возврат СервисыHttp.ДанныеJsonВСтроку(СвойстваСтатистики)
;

метод СостояниeЛичногоКабинетаВФормат(Состояние: СостоянияКабинетов): Строка
    возврат СТРОКА_ПО_СОСТОЯНИЕ_КАБИНЕТА[Состояние]
;

метод РазмерВложенияВСтроку(РазмерВложения: РазмерВложения): Строка
    возврат СТРОКА_ПО_РАЗМЕР_ВЛОЖЕНИЯ[РазмерВложения]
;