импорт ВебApi
импорт КонтрольДоступа
импорт СтандартноеПриложение

// Контракт ПараметрыСеансаПоставщик

@ВПроекте
@Реализация
метод КоллекцияПараметровСеанса(МобильныйИнтерфейс: Булево): Соответствие<Строка, Объект>
    пер ПараметрыСеанса = новый КлиентСервисаПодписания.ПараметрыСеанса()
    ЗаполнитьПараметрыСеанса(ПараметрыСеанса)
    возврат {КлиентСервисаПодписания.КЛЮЧ_ПАРАМЕТРОВ_СЕАНСА: ПараметрыСеанса}
;
// Конец ПараметрыСеансаПоставщик

// Контракт ОбновляемаяПодсистема

@ВПроекте
@Реализация
метод ОбработчикиЗаполнения(): Массив<СтандартноеПриложение.ОписаниеОбработчикаЗаполнения>
    возврат []
;

@ВПроекте
@Реализация
метод ОбработчикиОбновления(): Массив<СтандартноеПриложение.ОписаниеОбработчикаОбновления>
    пер Обработчики: Массив<СтандартноеПриложение.ОписаниеОбработчикаОбновления>
    возврат Обработчики
;

// Конец ОбновляемаяПодсистема   ОбновитьДанныеПодразделений()


//Контракт ДанныеApi

@ВПроекте
@Реализация
метод МассивТипов(Получатель: ВидПриложения?, ВерсияФорматаОбмена: Версия?): Массив<Тип>
    пер Типы: Массив<Тип>
    возврат Типы
;

@ВПроекте
@Реализация
метод ТипДанныхJson(ТипОбъекта: Тип, ВерсияФорматаОбмена: Версия?): Массив<Тип>
    пер Типы: Массив<Тип>
    выбор ТипОбъекта
    когда Тип<НастройкиСервисаПодписания.Ссылка>
        Типы.Добавить(НастройкиСервисаПодписания.ТипДанныхJson(ВерсияФорматаОбмена))
    ;
    возврат Типы
;

@ВПроекте
@Реализация
метод ТипКоллекцииДанныхJson(ТипОбъекта: Тип, ВерсияФорматаОбмена: Версия?): Массив<Тип>
    пер Типы: Массив<Тип>
    выбор ТипОбъекта
    когда Тип<НастройкиСервисаПодписания.Ссылка>
        Типы.Добавить(НастройкиСервисаПодписания.ТипКоллекцииДанныхJson(ВерсияФорматаОбмена))
    ;
    возврат Типы
;

@ВПроекте
@Реализация
метод ИнструментыМенеджераОбъекта(ТипОбъекта: Тип): Массив<ВебApiСервер.ИнструментыМенеджераОбъекта>
    пер НаборИнструментыМенеджераОбъекта: Массив<ВебApiСервер.ИнструментыМенеджераОбъекта>
    пер ИнструментыМенеджераОбъекта: ВебApiСервер.ИнструментыМенеджераОбъекта
    выбор ТипОбъекта
    когда Тип<НастройкиСервисаПодписания.Ссылка>
        ИнструментыМенеджераОбъекта.ЗаписьОбъекта = (Объект: Сущность.Объект) -> (Объект как НастройкиСервисаПодписания.Объект).Записать()
        НаборИнструментыМенеджераОбъекта.Добавить(ИнструментыМенеджераОбъекта)
    ;
    возврат НаборИнструментыМенеджераОбъекта
;

@ВПроекте
@Реализация
метод ПолучитьДанныеJson(ТипОбъекта: Тип, Ссылка: ВходящиеДанные.Ссылка|ИсходящиеДанные.Ссылка, 
    Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?): Массив<Объект?>
    
    пер ДанныеJson: Массив<Объект?>
    возврат ДанныеJson
;

@ВПроекте
@Реализация
метод МассивСсылокПоФильтру(ТипОбъекта: Тип, Фильтр: () -> ЧитаемыйМассив<Справочник.Ссылка>): Массив<ЧитаемыйМассив<Справочник.Ссылка>>
    пер МассивСсылок: Массив<ЧитаемыйМассив<Справочник.Ссылка>>
    возврат МассивСсылок
;

@ВПроекте
@Реализация
метод УдалитьОбъекты(ТипОбъекта: Тип, ПараметрыЗапроса: ЧитаемоеСоответствие<Строка, Число|Булево|Ууид|Строка>, Сервисы: ВебApiСервер.СервисыУдаленияОбъектов)
;

@ВПроекте
@Реализация
метод ТипОбъектаJson(ТипОбъекта: Тип): Массив<Строка>
    пер ТипОбъектаJson: Массив<Строка>
    выбор ТипОбъекта
    когда Тип<НастройкиСервисаПодписания.Ссылка>
        ТипОбъектаJson.Добавить(НастройкиСервисаПодписания.ТипОбъектаJson())
    ;
    возврат ТипОбъектаJson
;

@ВПроекте
@Реализация
метод ЗагрузитьОбъектИзJson(ТипОбъекта: Тип, ТипДанных: Тип, ДанныеJson: Объект?, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    выбор ТипОбъекта
    когда Тип<НастройкиСервисаПодписания.Ссылка>
        выбор ТипДанных
        когда Тип<НастройкиСервисаПодписания.НастройкиСервисаПодписания_3_0>
            НастройкиСервисаПодписания.ЗагрузитьОбъектИзJson(ДанныеJson как НастройкиСервисаПодписания.НастройкиСервисаПодписания_3_0, Сервисы)
        ;
    ;
;

@ВПроекте
@Реализация
метод ПослеЗаписиГруппыОбъектов(ТипОбъекта: Тип, МассивОбъектовОтложенногоОбновления: Массив<ВебApiСервер.ОбъектОтложенногоОбновления>)
;

@ВПроекте
@Реализация
метод ИзменитьОбъектИзJson(ТипОбъекта: Тип, ДанныеJson: Объект, Сервисы: ВебApiСервер.СервисыЗагрузкиJson, ЗаданиеМодификации: ВебApiСервер.ЗаданиеМодификации)
;

@ВПроекте
@Реализация
метод ЗавершитьИзменениеОбъектИзJson(ТипОбъекта: Тип, МассивСсылок: ЧитаемыйМассив<ВходящиеДанные.Ссылка>, ЗаданиеМодификации: ВебApiСервер.ЗаданиеМодификации)
;

@ВПроекте
@Реализация
метод ГруппаИзмененийВJson(ТипОбъекта: Тип, Ссылки: ЧитаемаяКоллекция<ИсходящиеДанные.Ссылка>,
    Сервисы: ВебApiСервер.СервисыУпаковкиJson, ВерсияФорматаОбмена: Версия?): Массив<ЧитаемоеСоответствие<Строка, Массив<Объект?>>>
    
    пер ДанныеJson: Массив<ЧитаемоеСоответствие<Строка, Массив<Объект?>>>
    возврат ДанныеJson
;

//Конец ДанныеApi

метод ЗаполнитьПараметрыСеанса(ПараметрыСеанса: КлиентСервисаПодписания.ПараметрыСеанса)
    если ПользователиСистемы.ТекущееФизическоеЛицо() != Неопределено
        пер ВладелецУнэп = ПользователиСистемы.ТекущееФизическоеЛицо()
        знч НастройкиПодписания = НастройкиПодписанияВладельцевУнэп.НастройкиПодписания(ВладелецУнэп)
        ПараметрыСеанса.ВремяОжиданияДоставкиКода = НастройкиПодписания.ВремяОжиданияДоставкиКода
        ПараметрыСеанса.СпособДоставкиКодаПодтверждения = НастройкиПодписания.СпособДоставкиКодаПодтверждения
    ;
;

@ВыполнятьПриЗагрузкеДанных
@Подписка(Событие{ДокументПодписываемыйВСервисеПодписания.Объект.ПередУдалением})
метод ПередУдалениемДокумента(Документ: ДокументПодписываемыйВСервисеПодписания.Данные, ПараметрыУдаления: ДокументПодписываемыйВСервисеПодписания.ПараметрыУдаления)
    исп КонтекстДоступа.Привилегированный()
    СостоянияЗапросовПодписания.УдалитьЗапросыПодписанияДокумента(Документ.Ссылка)
;
