импорт ВебApi
импорт КонтрольДоступа
импорт Криптография

//Область ДескрипторыДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): Массив<РазрешениеДоступа>
    возврат КонтрольДоступа.РазрешенияДоступаТаблицыКонтентДанныхАбонентаЧтениеВсем()
;

//КонецОбласти

@ВПодсистеме
метод Настройки(): КлиентСервисаПодписания.Настройки
    знч Запрос = Запрос{
        Выбрать Первые 1
            АдресСервиса,
            ВерсияApi,
            ИдКлиента,
            СекретКлиента,
            ИспользоватьГосключ,
            ИспользоватьУнэпАстралПлатформа,
            ЛогированиеЗапросов,
            ПодписыватьХэшДанныхДокументов,
            ПериодОпросаСостоянийЗапросовВыпускаСертификата,
            ПериодОпросаСостоянийЗапросовПодписания
        из
            НастройкиСервисаПодписания}
    исп Результат = Запрос.Выполнить()
    знч РезультатСтроки = новый ЧитаемыйМассив(Результат)
    если (не РезультатСтроки.Пусто())
        возврат новый КлиентСервисаПодписания.Настройки(
            РезультатСтроки[0].АдресСервиса,
            РезультатСтроки[0].ВерсияApi,
            РезультатСтроки[0].ИдКлиента,
            РезультатСтроки[0].СекретКлиента,
            РезультатСтроки[0].ИспользоватьГосключ,
            РезультатСтроки[0].ИспользоватьУнэпАстралПлатформа,
            РезультатСтроки[0].ЛогированиеЗапросов,
            РезультатСтроки[0].ПодписыватьХэшДанныхДокументов,
            РезультатСтроки[0].ПериодОпросаСостоянийЗапросовВыпускаСертификата,
            РезультатСтроки[0].ПериодОпросаСостоянийЗапросовПодписания)
    иначе
        знч НовыеНастройки = новый НастройкиСервисаПодписания.Объект()
        возврат новый КлиентСервисаПодписания.Настройки(
            НовыеНастройки.АдресСервиса,
            НовыеНастройки.ВерсияApi,
            НовыеНастройки.ИдКлиента,
            НовыеНастройки.СекретКлиента,
            НовыеНастройки.ИспользоватьГосключ,
            НовыеНастройки.ИспользоватьУнэпАстралПлатформа,
            НовыеНастройки.ЛогированиеЗапросов,
            НовыеНастройки.ПодписыватьХэшДанныхДокументов,
            НовыеНастройки.ПериодОпросаСостоянийЗапросовВыпускаСертификата,
            НовыеНастройки.ПериодОпросаСостоянийЗапросовПодписания)
    ;
;

@ВПодсистеме
метод Сохранить(Настройки: КлиентСервисаПодписания.Настройки)
    знч Запрос = Запрос{
        Выбрать Первые 1
            Ссылка
        из
            НастройкиСервисаПодписания}
    исп Результат = Запрос.Выполнить()
    пер ОбъектНастроек: НастройкиСервисаПодписания.Объект?
    знч РезультатСтроки = новый ЧитаемыйМассив(Результат)
    если (не РезультатСтроки.Пусто())
        ОбъектНастроек = РезультатСтроки[0].Ссылка.ЗагрузитьОбъект()
    иначе
        ОбъектНастроек = новый НастройкиСервисаПодписания.Объект()
    ;
    ОбъектНастроек.АдресСервиса = Настройки.АдресСервиса
    ОбъектНастроек.ВерсияApi = Настройки.ВерсияApi
    ОбъектНастроек.ИдКлиента = Настройки.ИдКлиента
    ОбъектНастроек.СекретКлиента = Настройки.СекретКлиента
    ОбъектНастроек.ИспользоватьГосключ = Настройки.ИспользоватьГосключ
    ОбъектНастроек.ИспользоватьУнэпАстралПлатформа = Настройки.ИспользоватьУнэпАстралПлатформа
    ОбъектНастроек.ЛогированиеЗапросов = Настройки.ЛогированиеЗапросов
    ОбъектНастроек.ПодписыватьХэшДанныхДокументов = Настройки.ПодписыватьХэшДанныхДокументов
    ОбъектНастроек.ПериодОпросаСостоянийЗапросовВыпускаСертификата = Настройки.ПериодОпросаСостоянийЗапросовВыпускаСертификата
    ОбъектНастроек.ПериодОпросаСостоянийЗапросовПодписания = Настройки.ПериодОпросаСостоянийЗапросовПодписания
    ОбъектНастроек.Записать()
;

//Область СлужебныйПрограммныйИнтерфейс

@ВПроекте
структура НастройкиСервисаПодписания_3_0
    @JsonСвойство(Имя = "tiketIts")
    обз знч ТикетИтс: Строка?
    @JsonСвойство(Имя = "useUnepInfoSystem")
    обз знч ИспользоватьУНЭПИнформационнойСистемы: Булево
    @JsonСвойство(Имя = "useGoskey")
    обз знч ИспользоватьГосключ: Булево
    @JsonСвойство(Имя = "useAstralUnep")
    обз знч ИспользоватьУнэпАстралПлатформа: Булево
;

@ВПодсистеме
метод ТипДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    если ВерсияФорматаОбмена == Неопределено
        возврат Тип<НастройкиСервисаПодписания_3_0>
    иначе если ВерсияФорматаОбмена >= Версия{3.0}
        возврат Тип<НастройкиСервисаПодписания_3_0>
    ;
;

@ВПодсистеме
метод ТипКоллекцииДанныхJson(ВерсияФорматаОбмена: Версия?): Тип
    если ВерсияФорматаОбмена == Неопределено
        возврат Тип<Массив<НастройкиСервисаПодписания_3_0>>
    иначе если ВерсияФорматаОбмена >= Версия{3.0}
        возврат Тип<Массив<НастройкиСервисаПодписания_3_0>>
    ;
;

@ВПодсистеме
метод ТипОбъектаJson(): Строка
    возврат "xsignSettings"
;

@ВПодсистеме
метод ЗагрузитьОбъектИзJson(НастройкиСервиса: НастройкиСервисаПодписания_3_0, Сервисы: ВебApiСервер.СервисыЗагрузкиJson)
    исп Транзакции.Начать()
    знч Запрос = Запрос{
        Выбрать 
            Ссылка
        Из 
            НастройкиСервисаПодписания}
        
    исп РезультатЗапроса = Запрос.Выполнить() 
    пер ОбъектНастройки: НастройкиСервисаПодписания.Объект?
    знч РезультатЗапросаСтроки = новый ЧитаемыйМассив(РезультатЗапроса)
    если (не РезультатЗапросаСтроки.Пусто())
        ОбъектНастройки = РезультатЗапросаСтроки[0].Ссылка.ЗагрузитьОбъект(Истина)
    иначе
        ОбъектНастройки = новый НастройкиСервисаПодписания.Объект()
    ;
    
    если НастройкиСервиса.ТикетИтс != Неопределено
        и не НастройкиСервиса.ТикетИтс.Пусто()
        
        если не ОбъектНастройки.АдресСервиса.Пусто()
            и (ОбъектНастройки.ИдКлиента.Пусто()
                или ОбъектНастройки.СекретКлиента.Пусто())
            
            знч ДанныеДоступа = ОбменССервисомПодписания.ПолучитьДанныеДоступа(
                ОбъектНастройки.АдресСервиса,
                ОбъектНастройки.ВерсияApi,
                НастройкиСервиса.ТикетИтс)
            если ДанныеДоступа == Неопределено
                выбросить новый ИсключениеВыполнения("Не удалось авторизоваться на сервере подписания")
            ;
            ОбъектНастройки.ИдКлиента = ДанныеДоступа.ИдКлиента
            ОбъектНастройки.СекретКлиента = ДанныеДоступа.СекретКлиента
        ;
    ;
    
    ОбъектНастройки.ИспользоватьГосключ = НастройкиСервиса.ИспользоватьГосключ
    ОбъектНастройки.ИспользоватьУнэпАстралПлатформа = НастройкиСервиса.ИспользоватьУнэпАстралПлатформа
    ОбъектНастройки.Записать()
    
    Криптография.УстановитьИспользованиеУнэпИнформационнойСистемы(НастройкиСервиса.ИспользоватьУНЭПИнформационнойСистемы)
    
;

//КонецОбласти
