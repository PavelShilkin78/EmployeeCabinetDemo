импорт ОбщиеСтандартные
импорт ВзаимодействиеССервисомПодписания
импорт КонтрольДоступа

//КонтрольДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): ЧитаемаяКоллекция<РазрешениеДоступа>
    возврат [КонтрольДоступа.ПолныйДоступАутентифицированным(этот)]
;

@Обработчик
метод ВычислитьРазрешенияДоступаДляОбъектов(Записи: ЧитаемыйМассив<СостоянияЗапросовВыпускаСертификатаПодписи.ДанныеРасчетаРазрешений>): ЧитаемоеСоответствие<СостоянияЗапросовВыпускаСертификатаПодписи.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    возврат КлиентСервисаПодписанияКонтрольДоступаПоставщик.ПолучитьСервис()
        .ВычислитьРазрешенияДоступаДляСостоянийЗапросовВыпускаСертификата(Записи)
;

//КонтрольДоступа

@ВПодсистеме
метод ЗарегистрироватьЗапрос(ЗапросВыпускаСертификата: ЗапросыВыпускаСертификатаПодписи.Ссылка, ИдентификаторЗапроса: Строка)
    пер НаборЗаписей = новый СостоянияЗапросовВыпускаСертификатаПодписи.НаборЗаписей()
    НаборЗаписей.Фильтр.ЗапросВыпускаСертификата.Установить(ЗапросВыпускаСертификата)
    НаборЗаписей.Прочитать()
    НаборЗаписей.ДобавитьЗапись(
        ЗапросВыпускаСертификата = ЗапросВыпускаСертификата,
        ИдентификаторЗапроса = ИдентификаторЗапроса,
        СостояниеЗапроса = СостоянияЗапросаВыпускаСертификата.Обрабатывается
    )
    НаборЗаписей.Записать()
;

@ВПодсистеме
метод УстановитьСостояниеЗапроса(ЗапросВыпускаСертификата: ЗапросыВыпускаСертификатаПодписи.Ссылка, СостояниеЗапроса: СостоянияЗапросаВыпускаСертификата,
    Информация: Строка)
    
    пер НаборЗаписей = новый СостоянияЗапросовВыпускаСертификатаПодписи.НаборЗаписей()
    НаборЗаписей.Фильтр.ЗапросВыпускаСертификата.Установить(ЗапросВыпускаСертификата)
    НаборЗаписей.Прочитать()
    если не НаборЗаписей.Пусто()
        если НаборЗаписей[0].СостояниеЗапроса != СостояниеЗапроса
            или НаборЗаписей[0].Информация != Информация
            
            НаборЗаписей[0].СостояниеЗапроса = СостояниеЗапроса
            НаборЗаписей[0].ВремяРегистрации = МенеджерДат.ТекущаяДатаВремя()
            НаборЗаписей[0].Информация = Информация
            НаборЗаписей.Записать()
        ;
    ;
;

@ВПодсистеме
метод СостояниеЗапроса(ЗапросВыпускаСертификата: ЗапросыВыпускаСертификатаПодписи.Ссылка): КлиентСервисаПодписания.СостояниеЗапросаВыпускаСертификата?
    возврат СостояниеЗапросов([ЗапросВыпускаСертификата]).ПолучитьИлиУмолчание(ЗапросВыпускаСертификата)
;

@ВПодсистеме
метод СостояниеЗапросов(ЗапросыВыпускаСертификата: Массив<ЗапросыВыпускаСертификатаПодписи.Ссылка>, ОтборСостояний: Массив<СостоянияЗапросаВыпускаСертификата>? = Неопределено):
    Соответствие<ЗапросыВыпускаСертификатаПодписи.Ссылка, КлиентСервисаПодписания.СостояниеЗапросаВыпускаСертификата>
    
    знч ДанныеСостояний = новый Соответствие<ЗапросыВыпускаСертификатаПодписи.Ссылка, КлиентСервисаПодписания.СостояниеЗапросаВыпускаСертификата>()
    знч ПрименяетсяОтборСостояний = ОтборСостояний != Неопределено
    знч Запрос = Запрос{
        Выбрать
            СостоянияЗапросов.ЗапросВыпускаСертификата Как ЗапросВыпускаСертификата,
            СостоянияЗапросов.ИдентификаторЗапроса Как ИдентификаторЗапроса,
            СостоянияЗапросов.СостояниеЗапроса Как СостояниеЗапроса,
            СостоянияЗапросов.ВремяРегистрации Как ВремяРегистрации,
            СостоянияЗапросов.Информация Как Информация
        Из
            СостоянияЗапросовВыпускаСертификатаПодписи Как СостоянияЗапросов
        Где
            СостоянияЗапросов.ЗапросВыпускаСертификата В (%ЗапросыВыпускаСертификата)
            И (Не %ПрименяетсяОтборСостояний
                Или СостоянияЗапросов.СостояниеЗапроса В (%ОтборСостояний))}
    исп Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        ДанныеСостояний.Вставить(СтрокаРезультата.ЗапросВыпускаСертификата,
            новый КлиентСервисаПодписания.СостояниеЗапросаВыпускаСертификата(
                ИдентификаторЗапроса = СтрокаРезультата.ИдентификаторЗапроса,
                СостояниеЗапроса = СтрокаРезультата.СостояниеЗапроса,
                ВремяРегистрации = СтрокаРезультата.ВремяРегистрации,
                Информация = СтрокаРезультата.Информация
            )
        )
    ;
    возврат ДанныеСостояний
;

@ВПодсистеме
метод СостояниеАктивныхЗапросов(ОтборСостояний: Массив<СостоянияЗапросаВыпускаСертификата>? = Неопределено):
    Соответствие<ЗапросыВыпускаСертификатаПодписи.Ссылка, КлиентСервисаПодписания.СостояниеЗапросаВыпускаСертификата>
    
    знч ДанныеСостояний = новый Соответствие<ЗапросыВыпускаСертификатаПодписи.Ссылка, КлиентСервисаПодписания.СостояниеЗапросаВыпускаСертификата>()
    знч ПрименяетсяОтборСостояний = ОтборСостояний != Неопределено
    знч Запрос = Запрос{
        Выбрать
            СостоянияЗапросов.ЗапросВыпускаСертификата Как ЗапросВыпускаСертификата,
            СостоянияЗапросов.ЗапросВыпускаСертификата.СервисПодписания.ЗаменитьNull(Неопределено) Как СервисПодписания,
            СостоянияЗапросов.ИдентификаторЗапроса Как ИдентификаторЗапроса,
            СостоянияЗапросов.СостояниеЗапроса Как СостояниеЗапроса,
            СостоянияЗапросов.ВремяРегистрации Как ВремяРегистрации,
            СостоянияЗапросов.Информация Как Информация
        Из
            СостоянияЗапросовВыпускаСертификатаПодписи Как СостоянияЗапросов
        Где
            (Не %ПрименяетсяОтборСостояний
                Или СостоянияЗапросов.СостояниеЗапроса В (%ОтборСостояний))}
    исп Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        ДанныеСостояний.Вставить(СтрокаРезультата.ЗапросВыпускаСертификата,
            новый КлиентСервисаПодписания.СостояниеЗапросаВыпускаСертификата(
                ИдентификаторЗапроса = СтрокаРезультата.ИдентификаторЗапроса,
                СервисПодписания = СтрокаРезультата.СервисПодписания ?? СервисыПодписания.АстралПлатформаУнэп,
                СостояниеЗапроса = СтрокаРезультата.СостояниеЗапроса,
                ВремяРегистрации = СтрокаРезультата.ВремяРегистрации,
                Информация = СтрокаРезультата.Информация
            )
        )
    ;
    возврат ДанныеСостояний
;