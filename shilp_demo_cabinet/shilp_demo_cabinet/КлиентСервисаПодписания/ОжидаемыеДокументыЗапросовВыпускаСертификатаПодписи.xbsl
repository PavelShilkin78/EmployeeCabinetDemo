импорт ВзаимодействиеССервисомПодписания
импорт ОбщиеСтандартные
импорт УниверсальныеМеханизмы
импорт КонтрольДоступа

//КонтрольДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): ЧитаемаяКоллекция<РазрешениеДоступа>
    возврат [КонтрольДоступа.ПолныйДоступАутентифицированным(этот)]
;

@Обработчик
метод ВычислитьРазрешенияДоступаДляОбъектов(Записи: ЧитаемыйМассив<ОжидаемыеДокументыЗапросовВыпускаСертификатаПодписи.ДанныеРасчетаРазрешений>): ЧитаемоеСоответствие<ОжидаемыеДокументыЗапросовВыпускаСертификатаПодписи.ДанныеРасчетаРазрешений, ЧитаемаяКоллекция<РазрешениеДоступа>>
    возврат КлиентСервисаПодписанияКонтрольДоступаПоставщик.ПолучитьСервис()
        .ВычислитьРазрешенияДоступаДляОжидаемыхДокументовЗапросовВыпускаСертификата(Записи)
;

//КонтрольДоступа

@ВПодсистеме
метод ЗарегистрироватьВидДокумента(ЗапросВыпускаСертификата: ЗапросыВыпускаСертификатаПодписи.Ссылка, ВидДокумента: ВидыЗапрашиваемыхКопийДокументов)
    пер НаборЗаписей = новый ОжидаемыеДокументыЗапросовВыпускаСертификатаПодписи.НаборЗаписей()
    НаборЗаписей.Фильтр.ЗапросВыпускаСертификата.Установить(ЗапросВыпускаСертификата)
    НаборЗаписей.Прочитать()
    пер ВидДокументаДобавлен = Ложь
    для ДокументНабора из НаборЗаписей
        если ДокументНабора.ВидДокумента == ВидДокумента
            ВидДокументаДобавлен = Истина
            прервать
        ;
    ;
    если не ВидДокументаДобавлен
        НаборЗаписей.ДобавитьЗапись(
            ЗапросВыпускаСертификата = ЗапросВыпускаСертификата,
            ВидДокумента = ВидДокумента
        )
        НаборЗаписей.Записать()
    ;
;

@ВПодсистеме
метод ЗарегистрироватьФайлОжидаемогоДокумента(ЗапросВыпускаСертификата: ЗапросыВыпускаСертификатаПодписи.Ссылка, ВидДокумента: ВидыЗапрашиваемыхКопийДокументов,
    Файл: ФайлСервисаПодписания.Ссылка)
    
    пер НаборЗаписей = новый ОжидаемыеДокументыЗапросовВыпускаСертификатаПодписи.НаборЗаписей()
    НаборЗаписей.Фильтр.ЗапросВыпускаСертификата.Установить(ЗапросВыпускаСертификата)
    НаборЗаписей.Фильтр.ВидДокумента.Установить(ВидДокумента)
    НаборЗаписей.Прочитать()
    если НаборЗаписей.Пусто()
        НаборЗаписей.ДобавитьЗапись(
            ЗапросВыпускаСертификата = ЗапросВыпускаСертификата,
            ВидДокумента = ВидДокумента,
            Файл = Файл
        )
    иначе
        НаборЗаписей[0].Файл = Файл
    ;
    НаборЗаписей.Записать()
;

@ВПодсистеме
метод ОжидаемыеДокументыВладельца(ЗапросВыпускаСертификата: ЗапросыВыпускаСертификатаПодписи.Ссылка): ОжидаемыеДокументы
    
    пер ОжидаемыеДокументы = новый ОжидаемыеДокументы(ЗапросВыпускаСертификата = ЗапросВыпускаСертификата)
    пер ПрисоединенныеФайлы = ПрисоединенныеФайлыМенеджер.ПрисоединенныеФайлы(ЗапросВыпускаСертификата)
    знч Запрос = Запрос{
        Выбрать
            ОжидаемыеДокументы.ЗапросВыпускаСертификата Как ЗапросВыпускаСертификата,
            ОжидаемыеДокументы.ВидДокумента Как ВидДокумента,
            ОжидаемыеДокументы.Файл Как Файл,
            ОжидаемыеДокументы.ВремяРегистрации Как ВремяРегистрации,
            ИдентификаторыФайлов.Идентификатор.ЗаменитьNull("") Как Идентификатор
        Из
            ОжидаемыеДокументыЗапросовВыпускаСертификатаПодписи как ОжидаемыеДокументы
            Левое Соединение ИдентификаторыФайлов Как ИдентификаторыФайлов
            По ОжидаемыеДокументы.Файл == ИдентификаторыФайлов.Файл
        Где
            ОжидаемыеДокументы.ЗапросВыпускаСертификата == %ЗапросВыпускаСертификата
        Упорядочить По
            ОжидаемыеДокументы.ВремяРегистрации Убыв}
    исп Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        пер ДанныеФайла: ПрисоединенныйФайл?
        пер ВремяРегистрации: Момент?
        пер Идентификатор: Строка
        для ПрисоединенныйФайл из ПрисоединенныеФайлы.Файлы
            если СтрокаРезультата.Файл == ПрисоединенныйФайл.Ссылка
                ДанныеФайла = ПрисоединенныйФайл
                прервать
            ;
        ;
        если ДанныеФайла != Неопределено
            ВремяРегистрации = СтрокаРезультата.ВремяРегистрации
            Идентификатор = СтрокаРезультата.Идентификатор
             
        ;
        ОжидаемыеДокументы.Документы.Добавить(
            новый ОжидаемыйДокумент(
                ВидДокумента = СтрокаРезультата.ВидДокумента,
                Файл = ДанныеФайла,
                ВремяРегистрации = ВремяРегистрации,
                Идентификатор = Идентификатор
            )
        )
    ;
    возврат ОжидаемыеДокументы
;

@ВПодсистеме
метод ОжидаемыеВидыДокументов(ЗапросыВыпускаСертификата: ЧитаемоеМножество<ЗапросыВыпускаСертификатаПодписи.Ссылка>): Соответствие<ЗапросыВыпускаСертификатаПодписи.Ссылка, Массив<ВидыЗапрашиваемыхКопийДокументов>>
    знч ОжидаемыеДокументы = новый Соответствие<ЗапросыВыпускаСертификатаПодписи.Ссылка, Массив<ВидыЗапрашиваемыхКопийДокументов>>()
    знч Запрос = Запрос{
        Выбрать
            ЗапросВыпускаСертификата,
            ВидДокумента
        Из
            ОжидаемыеДокументыЗапросовВыпускаСертификатаПодписи
        Где
            ЗапросВыпускаСертификата В (%ЗапросыВыпускаСертификата)
        Упорядочить По
            ЗапросВыпускаСертификата}
    исп Результат = Запрос.Выполнить()
    для СтрокаРезультата из Результат
        пер КоллекцияВидов = ОжидаемыеДокументы.ПолучитьИлиУмолчание(СтрокаРезультата.ЗапросВыпускаСертификата)
        если КоллекцияВидов == Неопределено
            КоллекцияВидов = новый Массив<ВидыЗапрашиваемыхКопийДокументов>()
            ОжидаемыеДокументы.Вставить(СтрокаРезультата.ЗапросВыпускаСертификата, КоллекцияВидов)
        ;
        КоллекцияВидов.Добавить(СтрокаРезультата.ВидДокумента)
    ;
    возврат ОжидаемыеДокументы
;

@ВПодсистеме
метод УдалитьОжидаемыйВидДокумента(ЗапросВыпускаСертификата: ЗапросыВыпускаСертификатаПодписи.Ссылка, ВидДокумента: ВидыЗапрашиваемыхКопийДокументов)
    знч НаборЗаписей = новый ОжидаемыеДокументыЗапросовВыпускаСертификатаПодписи.НаборЗаписей()
    НаборЗаписей.Фильтр.ЗапросВыпускаСертификата.Установить(ЗапросВыпускаСертификата)
    НаборЗаписей.Фильтр.ВидДокумента.Установить(ВидДокумента)
    НаборЗаписей.Записать()
;

@ВПодсистеме
метод ЗарегистрироватьВремяРегистрации(ЗапросВыпускаСертификата: ЗапросыВыпускаСертификатаПодписи.Ссылка, ВидДокумента: ВидыЗапрашиваемыхКопийДокументов)
    знч НаборЗаписей = новый ОжидаемыеДокументыЗапросовВыпускаСертификатаПодписи.НаборЗаписей()
    НаборЗаписей.Фильтр.ЗапросВыпускаСертификата.Установить(ЗапросВыпускаСертификата)
    НаборЗаписей.Фильтр.ВидДокумента.Установить(ВидДокумента)
    НаборЗаписей.Прочитать()
    если не НаборЗаписей.Пусто()
        НаборЗаписей[0].ВремяРегистрации = МенеджерДат.ТекущаяДатаВремя()
        НаборЗаписей.Записать()
    ;
;