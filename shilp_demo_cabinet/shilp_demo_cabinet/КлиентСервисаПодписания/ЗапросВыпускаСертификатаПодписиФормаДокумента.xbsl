импорт ИнтерфейсныеКомпонентыСтандартные
импорт Классификаторы
импорт ОбщиеСтандартные
импорт УниверсальныеМеханизмы
импорт ФизическиеЛица
импорт ВзаимодействиеССервисомПодписания

метод Содержимое(): ЗапросВыпускаСертификатаПодписиКомпонент
    возврат Компоненты.Содержимое
;

@Обработчик
метод ПослеЧтения()
    Содержимое().ПрочитатьДанныеДокумента()
    Компоненты.ГлавнаяГруппа.ЧтениеДанныхЗавершено = Истина
;

метод ЗаголовокКнопкиЗаписатьИЗакрыть(): Строка
    если Содержимое().ВозможноРедактирование()
        возврат "Отправить запрос"
    иначе если Содержимое().СостояниеЗапроса == СостоянияЗапросаВыпускаСертификата.ТребуетсяДополнительнаяИнформация
        возврат "Отправить"
    иначе
        возврат "Закрыть"
    ;
;

метод ПанельОсновнаяЗаписатьИЗакрыть(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    ЗаписатьИЗакрыть(Истина)
;

метод ЗаголовокКнопкиСохранитьЧерновик(): Строка
    возврат "Заполню позже"
;

метод ПанельОсновнаяСохранитьЧерновик(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    ЗаписатьИЗакрыть(Ложь)
;

метод ПанельОсновнаяУдалить(Источник: КоманднаяПанельФорм, Событие: СобытиеКомпонента)
    СобственнаяМодифицированность = Ложь
    УдалитьДокумент(Объект.Ссылка)
    Закрыть(СтандартныеФормы.ДействиеВФорме.Удален)
;

метод ИспользованиеКнопкиУдалить(): Булево
    возврат не ЭтоНовый() и Содержимое().СостояниеЗапроса == Неопределено
;

метод ИспользованиеКнопкиСохранитьЧерновик(): Булево
    возврат Содержимое().СостояниеЗапроса == Неопределено
;

метод ОшибкаПриВыполненииКоманды(Источник: КоманднаяПанельФорм, Событие: СобытиеСДанными<Исключение>)
    Компоненты.ГлавнаяГруппа.ПоказатьОшибку(Событие.Данные.Описание)
;

метод СодержимоеИзменениеСостоянияЗагрузкиФайлов(Источник: ЗапросВыпускаСертификатаПодписиКомпонент, Событие: СобытиеСДанными<Булево>)
    УстановитьДоступностьКоманд(не Событие.Данные)
;

метод УстановитьДоступностьКоманд(Доступность: Булево)
    пер ГлавнаяГруппа: КорневойКомпонентМодальнойФормы = Компоненты.ГлавнаяГруппа
    для КоманднаяПанель из ГлавнаяГруппа.КомандныеПанели
        КоманднаяПанель.Доступность = Доступность
    ;
;

метод ЗаписатьИЗакрыть(ВыполнитьСледующийШаг: Булево)
    если не ВыполнитьСледующийШаг и не Содержимое().ВозможноРедактирование()
        Закрыть()
        возврат
    ;
    
    если ВыполнитьСледующийШаг
        и не Содержимое().ПроверитьЗаполнение()
        
        возврат
    ;
    пер ОповеститьОЗаписи = Ложь
    пер ТекущиеДанные = ТекущиеДанныеДокумента()
    если ЭтоНовый() или РассчитаннаяМодифицированность
        ЗаписатьДокумент(ЭтоНовый(), ТекущиеДанные)
        СобственнаяМодифицированность = Ложь
        Содержимое().СобственнаяМодифицированность = Ложь
        ОповеститьОЗаписи = Истина
    ;
    
    если ВыполнитьСледующийШаг
        ОтправитьПриложенныеФайлы(Объект.Ссылка, Содержимое().ДокументыПоЗапросуНаПолучение)
        ОповеститьОЗаписи = Истина
        попытка
            если Содержимое().СостояниеЗапроса == Неопределено
                ОтправитьЗапросВыпускаСертификата(Объект.Ссылка, Объект.СервисПодписания)
                КлиентСервисаПодписания.ПараметрыСеанса().СпособДоставкиКодаПодтверждения = Объект.СпособДоставкиКода
            ;
        поймать Ошибка: Исключение
            Содержимое().ОшибкиРегистрации = Ошибка.Описание
            возврат
        ;
    иначе
        СохранитьПрисоединенныеФайлы(Объект.Ссылка, Содержимое().ДокументыПоЗапросуНаПолучение)
    ;
    если ОповеститьОЗаписи
        МенеджерГлобальныхКлиентскихСобытий.Оповестить(КлиентСервисаПодписания.ИЗМЕНЕН_ЗАПРОС_ВЫПУСКА_СЕРТИФИКАТА)
    ;
    Закрыть()
;

@НаСервере @НаКлиенте
структура ДанныеДокумента
    пер Ссылка: ЗапросыВыпускаСертификатаПодписи.Ссылка?
    пер Дата: Дата?
    пер ВладелецУнэп: ВладелецСертификатовСервисаПодписания.Ссылка?
    пер ЕстьУчетнаяЗаписьНаПорталеГосулуг: Булево
    пер ИдентификаторСертификата: Строка
    пер Телефон: Строка
    пер Почта: Строка
    пер Фамилия: Строка
    пер Имя: Строка
    пер Отчество: Строка
    пер Снилс: Строка
    пер Инн: Строка    
    пер Пол: ПолФизическогоЛица    
    пер Гражданство: СтраныМира.Ссылка?    
    пер ДокументВид: ДокументыУдостоверяющиеЛичность
    пер ДокументСерия: Строка
    пер ДокументНомер: Строка
    пер ДокументКодПодразделения: Строка
    пер ДокументДатаВыдачи: Дата?
    пер ДокументКемВыдан: Строка
    пер ДокументДатаРождения: Дата?
    пер ДокументМестоРождения: Строка
    пер ИдТелеграмЧата: Число
    пер СпособДоставкиКода: СпособыДоставкиКодаПодтверждения?
    пер СервисПодписания: СервисыПодписания
;

метод ТекущиеДанныеДокумента(): ДанныеДокумента
    пер ТекущиеДанные = новый ДанныеДокумента()
    ТекущиеДанные.Ссылка                            = Объект.Ссылка
    ТекущиеДанные.Дата                              = Объект.Дата
    ТекущиеДанные.ВладелецУнэп                      = Объект.ВладелецУнэп
    ТекущиеДанные.ЕстьУчетнаяЗаписьНаПорталеГосулуг = Объект.ЕстьУчетнаяЗаписьНаПорталеГосулуг
    ТекущиеДанные.Телефон                           = Объект.Телефон
    ТекущиеДанные.Почта                             = Объект.Почта
    ТекущиеДанные.Фамилия                           = Объект.Фамилия
    ТекущиеДанные.Имя                               = Объект.Имя
    ТекущиеДанные.Отчество                          = Объект.Отчество
    ТекущиеДанные.Снилс                             = Объект.Снилс
    ТекущиеДанные.Инн                               = Объект.Инн
    ТекущиеДанные.Пол                               = Объект.Пол
    ТекущиеДанные.Гражданство                       = Объект.Гражданство
    ТекущиеДанные.ДокументВид                       = Объект.ДокументВид
    ТекущиеДанные.ДокументСерия                     = Объект.ДокументСерия
    ТекущиеДанные.ДокументНомер                     = Объект.ДокументНомер
    ТекущиеДанные.ДокументКодПодразделения          = Объект.ДокументКодПодразделения
    ТекущиеДанные.ДокументДатаВыдачи                = Объект.ДокументДатаВыдачи
    ТекущиеДанные.ДокументКемВыдан                  = Объект.ДокументКемВыдан
    ТекущиеДанные.ДокументДатаРождения              = Объект.ДокументДатаРождения
    ТекущиеДанные.ДокументМестоРождения             = Объект.ДокументМестоРождения
    ТекущиеДанные.ИдТелеграмЧата                    = Объект.ИдТелеграмЧата
    ТекущиеДанные.СпособДоставкиКода                = Объект.СпособДоставкиКода
    ТекущиеДанные.СервисПодписания                  = Объект.СервисПодписания
    возврат ТекущиеДанные
;

@НаСервере @ДоступноСКлиента
статический метод ЗаписатьДокумент(ЭтоНовый: Булево, ТекущиеДанные: ДанныеДокумента)
    
    пер ДокументПолучения: ЗапросыВыпускаСертификатаПодписи.Объект?
    пер ДокументПолученияСсылка: ЗапросыВыпускаСертификатаПодписи.Ссылка? = ТекущиеДанные.Ссылка
    
    если ЭтоНовый
        ДокументПолучения = новый ЗапросыВыпускаСертификатаПодписи.Объект(ДокументПолученияСсылка.Ид)
    иначе
        ДокументПолучения = ДокументПолученияСсылка.ЗагрузитьОбъект()
    ;
    
    ДокументПолучения!.Дата                              = ТекущиеДанные.Дата
    ДокументПолучения!.ВладелецУнэп                      = ТекущиеДанные.ВладелецУнэп
    ДокументПолучения!.ЕстьУчетнаяЗаписьНаПорталеГосулуг = ТекущиеДанные.ЕстьУчетнаяЗаписьНаПорталеГосулуг
    ДокументПолучения!.Телефон                           = ТекущиеДанные.Телефон
    ДокументПолучения!.Почта                             = ТекущиеДанные.Почта
    ДокументПолучения!.Фамилия                           = ТекущиеДанные.Фамилия
    ДокументПолучения!.Имя                               = ТекущиеДанные.Имя
    ДокументПолучения!.Отчество                          = ТекущиеДанные.Отчество
    ДокументПолучения!.Снилс                             = ТекущиеДанные.Снилс
    ДокументПолучения!.Инн                               = ТекущиеДанные.Инн
    ДокументПолучения!.Пол                               = ТекущиеДанные.Пол
    ДокументПолучения!.Гражданство                       = ТекущиеДанные.Гражданство
    ДокументПолучения!.ДокументВид                       = ТекущиеДанные.ДокументВид
    ДокументПолучения!.ДокументСерия                     = ТекущиеДанные.ДокументСерия
    ДокументПолучения!.ДокументНомер                     = ТекущиеДанные.ДокументНомер
    ДокументПолучения!.ДокументКодПодразделения          = ТекущиеДанные.ДокументКодПодразделения
    ДокументПолучения!.ДокументДатаВыдачи                = ТекущиеДанные.ДокументДатаВыдачи
    ДокументПолучения!.ДокументКемВыдан                  = ТекущиеДанные.ДокументКемВыдан
    ДокументПолучения!.ДокументДатаРождения              = ТекущиеДанные.ДокументДатаРождения
    ДокументПолучения!.ДокументМестоРождения             = ТекущиеДанные.ДокументМестоРождения
    ДокументПолучения!.ИдТелеграмЧата                    = ТекущиеДанные.ИдТелеграмЧата
    ДокументПолучения!.СпособДоставкиКода                = ТекущиеДанные.СпособДоставкиКода
    ДокументПолучения!.СервисПодписания                  = ТекущиеДанные.СервисПодписания
    
    исп Транзакции.Начать()
    ДокументПолучения.Записать()
    
;

@НаСервере @ДоступноСКлиента
статический метод ОтправитьЗапросВыпускаСертификата(ЗапросВыпускаСертификата: ЗапросыВыпускаСертификатаПодписи.Ссылка,
    СервисПодписания: СервисыПодписания)
    
    ОбменССервисомПодписания.ОтправитьЗапросВыпускаСертификата(ЗапросВыпускаСертификата, СервисПодписания)
;

@НаСервере @ДоступноСКлиента
статический метод СохранитьПрисоединенныеФайлы(ЗапросВыпускаСертификата: ЗапросыВыпускаСертификатаПодписи.Ссылка, ДокументыЗапроса: ОжидаемыеДокументы)
    если ДокументыЗапроса.Документы.Пусто()
        возврат
    ;
    для ОжидаемыйДокумент из ДокументыЗапроса.Документы
        если ОжидаемыйДокумент.Файл != Неопределено
            и ОжидаемыйДокумент.Файл.Ссылка == Неопределено
            
            ОжидаемыйДокумент.Файл.Ссылка = ПрисоединенныеФайлыМенеджер.Записать(ОжидаемыйДокумент.Файл, ЗапросВыпускаСертификата)
            ОжидаемыеДокументыЗапросовВыпускаСертификатаПодписи.ЗарегистрироватьФайлОжидаемогоДокумента(
                ЗапросВыпускаСертификата, ОжидаемыйДокумент.ВидДокумента, ОжидаемыйДокумент.Файл.Ссылка)
        ;
    ;
;

@НаСервере @ДоступноСКлиента
статический метод ОтправитьПриложенныеФайлы(ЗапросВыпускаСертификата: ЗапросыВыпускаСертификатаПодписи.Ссылка, ДокументыЗапроса: ОжидаемыеДокументы)
    если ДокументыЗапроса.Документы.Пусто()
        возврат
    ;
    СохранитьПрисоединенныеФайлы(ЗапросВыпускаСертификата, ДокументыЗапроса)
    для ОжидаемыйДокумент из ДокументыЗапроса.Документы
        если ОжидаемыйДокумент.Файл != Неопределено
            и ОжидаемыйДокумент.Файл.Ссылка != Неопределено
            и ОжидаемыйДокумент.ВремяРегистрации == Неопределено
            
            знч ДанныеПереданногоФайла = ОбменССервисомПодписания.ОтправитьФайл(
                ОжидаемыйДокумент.Файл.Наименование,
                ОжидаемыйДокумент.Файл.Размер,
                ОжидаемыйДокумент.Файл.Расширение,
                ОжидаемыйДокумент.Файл.Хранилище)
            ОжидаемыйДокумент.Идентификатор = ДанныеПереданногоФайла.Идентификатор
            ИдентификаторыФайлов.ЗарегистрироватьИдентификаторыФайла(
                ОжидаемыйДокумент.Файл.Ссылка,
                ДанныеПереданногоФайла.Идентификатор,
                ДанныеПереданногоФайла.СрокХранения)
            ОжидаемыеДокументыЗапросовВыпускаСертификатаПодписи.ЗарегистрироватьВремяРегистрации(ЗапросВыпускаСертификата, ОжидаемыйДокумент.ВидДокумента)
            если ОжидаемыйДокумент.ВидДокумента == ВидыЗапрашиваемыхКопийДокументов.СертификатПодписанный
                ОбменССервисомПодписания.ОтправитьСертификатПодписанный(ЗапросВыпускаСертификата, ОжидаемыйДокумент.Идентификатор)
            ;
        ;
    ;
;

@НаСервере @ДоступноСКлиента
статический метод УдалитьДокумент(ЗапросВыпускаСертификата: ЗапросыВыпускаСертификатаПодписи.Ссылка)
    исп Транзакции.Начать()
    ЗапросВыпускаСертификата.ЗагрузитьОбъект(Истина).Удалить()
;